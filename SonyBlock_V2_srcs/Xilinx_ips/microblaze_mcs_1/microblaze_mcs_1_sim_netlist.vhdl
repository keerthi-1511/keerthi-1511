-- Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
-- --------------------------------------------------------------------------------
-- Tool Version: Vivado v.2018.2 (win64) Build 2258646 Thu Jun 14 20:03:12 MDT 2018
-- Date        : Tue Oct 17 14:01:35 2023
-- Host        : Analinear-PC20 running 64-bit major release  (build 9200)
-- Command     : write_vhdl -force -mode funcsim -rename_top microblaze_mcs_1 -prefix
--               microblaze_mcs_1_ microblaze_mcs_1_sim_netlist.vhdl
-- Design      : microblaze_mcs_1
-- Purpose     : This VHDL netlist is a functional simulation representation of the design and should not be modified or
--               synthesized. This netlist cannot be used for SDF annotated simulation.
-- Device      : xc7s15csga225-2
-- --------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_GPI_Module is
  port (
    GPI1_Interrupt : out STD_LOGIC;
    Sl_DBus : out STD_LOGIC_VECTOR ( 4 downto 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 2 downto 0 );
    Rst : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 4 downto 0 );
    lmb_reg_read : in STD_LOGIC;
    \UART_Status_reg[6]\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \TMR_No.RX_Data_reg[7]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    io_bus_read_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    GPI1 : in STD_LOGIC_VECTOR ( 7 downto 0 )
  );
end microblaze_mcs_1_GPI_Module;

architecture STRUCTURE of microblaze_mcs_1_GPI_Module is
  signal GPI_In : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal GPI_Sampled : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \Using_GPI.GPI_In[7]_i_1_n_0\ : STD_LOGIC;
  signal \Using_GPI.Use_GPI_Interrupt.GPI_Interrupt_i_1_n_0\ : STD_LOGIC;
  signal \Using_GPI.Use_GPI_Interrupt.GPI_Interrupt_i_2_n_0\ : STD_LOGIC;
  signal \Using_GPI.Use_GPI_Interrupt.GPI_Interrupt_i_3_n_0\ : STD_LOGIC;
begin
\Sl_DBus[24]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => GPI_In(7),
      I1 => \TMR_No.RX_Data_reg[7]\(4),
      I2 => io_bus_read_data(4),
      O => Sl_DBus(4)
    );
\Sl_DBus[25]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => GPI_In(6),
      I1 => \UART_Status_reg[6]\(2),
      I2 => \TMR_No.RX_Data_reg[7]\(3),
      I3 => io_bus_read_data(3),
      O => Sl_DBus(3)
    );
\Sl_DBus[26]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => GPI_In(5),
      I1 => \UART_Status_reg[6]\(1),
      I2 => \TMR_No.RX_Data_reg[7]\(2),
      I3 => io_bus_read_data(2),
      O => Sl_DBus(2)
    );
\Sl_DBus[27]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => GPI_In(4),
      I1 => \TMR_No.RX_Data_reg[7]\(1),
      I2 => io_bus_read_data(1),
      O => Sl_DBus(1)
    );
\Sl_DBus[28]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => GPI_In(3),
      I1 => \UART_Status_reg[6]\(0),
      I2 => \TMR_No.RX_Data_reg[7]\(0),
      I3 => io_bus_read_data(0),
      O => Sl_DBus(0)
    );
\Using_GPI.GPI_In[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFF7"
    )
        port map (
      I0 => Q(3),
      I1 => lmb_reg_read,
      I2 => Q(0),
      I3 => Q(4),
      I4 => Q(1),
      I5 => Q(2),
      O => \Using_GPI.GPI_In[7]_i_1_n_0\
    );
\Using_GPI.GPI_In_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => GPI1(0),
      Q => \Using_FPGA.Native\(0),
      R => \Using_GPI.GPI_In[7]_i_1_n_0\
    );
\Using_GPI.GPI_In_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => GPI1(1),
      Q => \Using_FPGA.Native\(1),
      R => \Using_GPI.GPI_In[7]_i_1_n_0\
    );
\Using_GPI.GPI_In_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => GPI1(2),
      Q => \Using_FPGA.Native\(2),
      R => \Using_GPI.GPI_In[7]_i_1_n_0\
    );
\Using_GPI.GPI_In_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => GPI1(3),
      Q => GPI_In(3),
      R => \Using_GPI.GPI_In[7]_i_1_n_0\
    );
\Using_GPI.GPI_In_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => GPI1(4),
      Q => GPI_In(4),
      R => \Using_GPI.GPI_In[7]_i_1_n_0\
    );
\Using_GPI.GPI_In_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => GPI1(5),
      Q => GPI_In(5),
      R => \Using_GPI.GPI_In[7]_i_1_n_0\
    );
\Using_GPI.GPI_In_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => GPI1(6),
      Q => GPI_In(6),
      R => \Using_GPI.GPI_In[7]_i_1_n_0\
    );
\Using_GPI.GPI_In_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => GPI1(7),
      Q => GPI_In(7),
      R => \Using_GPI.GPI_In[7]_i_1_n_0\
    );
\Using_GPI.GPI_Sampled_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => GPI1(0),
      Q => GPI_Sampled(0),
      R => '0'
    );
\Using_GPI.GPI_Sampled_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => GPI1(1),
      Q => GPI_Sampled(1),
      R => '0'
    );
\Using_GPI.GPI_Sampled_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => GPI1(2),
      Q => GPI_Sampled(2),
      R => '0'
    );
\Using_GPI.GPI_Sampled_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => GPI1(3),
      Q => GPI_Sampled(3),
      R => '0'
    );
\Using_GPI.GPI_Sampled_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => GPI1(4),
      Q => GPI_Sampled(4),
      R => '0'
    );
\Using_GPI.GPI_Sampled_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => GPI1(5),
      Q => GPI_Sampled(5),
      R => '0'
    );
\Using_GPI.GPI_Sampled_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => GPI1(6),
      Q => GPI_Sampled(6),
      R => '0'
    );
\Using_GPI.GPI_Sampled_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => GPI1(7),
      Q => GPI_Sampled(7),
      R => '0'
    );
\Using_GPI.Use_GPI_Interrupt.GPI_Interrupt_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFF22F2"
    )
        port map (
      I0 => GPI1(1),
      I1 => GPI_Sampled(1),
      I2 => GPI1(0),
      I3 => GPI_Sampled(0),
      I4 => \Using_GPI.Use_GPI_Interrupt.GPI_Interrupt_i_2_n_0\,
      I5 => \Using_GPI.Use_GPI_Interrupt.GPI_Interrupt_i_3_n_0\,
      O => \Using_GPI.Use_GPI_Interrupt.GPI_Interrupt_i_1_n_0\
    );
\Using_GPI.Use_GPI_Interrupt.GPI_Interrupt_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"22F2FFFF22F222F2"
    )
        port map (
      I0 => GPI1(7),
      I1 => GPI_Sampled(7),
      I2 => GPI1(6),
      I3 => GPI_Sampled(6),
      I4 => GPI_Sampled(5),
      I5 => GPI1(5),
      O => \Using_GPI.Use_GPI_Interrupt.GPI_Interrupt_i_2_n_0\
    );
\Using_GPI.Use_GPI_Interrupt.GPI_Interrupt_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"22F2FFFF22F222F2"
    )
        port map (
      I0 => GPI1(4),
      I1 => GPI_Sampled(4),
      I2 => GPI1(3),
      I3 => GPI_Sampled(3),
      I4 => GPI_Sampled(2),
      I5 => GPI1(2),
      O => \Using_GPI.Use_GPI_Interrupt.GPI_Interrupt_i_3_n_0\
    );
\Using_GPI.Use_GPI_Interrupt.GPI_Interrupt_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_GPI.Use_GPI_Interrupt.GPI_Interrupt_i_1_n_0\,
      Q => GPI1_Interrupt,
      R => Rst
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_GPO_Module is
  port (
    GPO1 : out STD_LOGIC_VECTOR ( 7 downto 0 );
    lmb_reg_write : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 5 downto 0 );
    Rst : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 7 downto 0 );
    Clk : in STD_LOGIC
  );
end microblaze_mcs_1_GPO_Module;

architecture STRUCTURE of microblaze_mcs_1_GPO_Module is
  signal \TMR_No.gpo_io_i[7]_i_2_n_0\ : STD_LOGIC;
  signal gpo1_write : STD_LOGIC;
begin
\TMR_No.gpo_io_i[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000040000"
    )
        port map (
      I0 => \TMR_No.gpo_io_i[7]_i_2_n_0\,
      I1 => lmb_reg_write,
      I2 => Q(5),
      I3 => Q(0),
      I4 => Q(2),
      I5 => Q(3),
      O => gpo1_write
    );
\TMR_No.gpo_io_i[7]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => Q(1),
      I1 => Q(4),
      O => \TMR_No.gpo_io_i[7]_i_2_n_0\
    );
\TMR_No.gpo_io_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => gpo1_write,
      D => \out\(0),
      Q => GPO1(0),
      R => Rst
    );
\TMR_No.gpo_io_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => gpo1_write,
      D => \out\(1),
      Q => GPO1(1),
      R => Rst
    );
\TMR_No.gpo_io_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => gpo1_write,
      D => \out\(2),
      Q => GPO1(2),
      R => Rst
    );
\TMR_No.gpo_io_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => gpo1_write,
      D => \out\(3),
      Q => GPO1(3),
      R => Rst
    );
\TMR_No.gpo_io_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => gpo1_write,
      D => \out\(4),
      Q => GPO1(4),
      R => Rst
    );
\TMR_No.gpo_io_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => gpo1_write,
      D => \out\(5),
      Q => GPO1(5),
      R => Rst
    );
\TMR_No.gpo_io_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => gpo1_write,
      D => \out\(6),
      Q => GPO1(6),
      R => Rst
    );
\TMR_No.gpo_io_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => gpo1_write,
      D => \out\(7),
      Q => GPO1(7),
      R => Rst
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_MUXF5 is
  port (
    mux_0123 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \TMR_No.fifo_DOut_reg[0]\ : in STD_LOGIC_VECTOR ( 3 downto 0 )
  );
end microblaze_mcs_1_MB_MUXF5;

architecture STRUCTURE of microblaze_mcs_1_MB_MUXF5 is
  signal I0 : STD_LOGIC;
  signal I1 : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "MUXF5";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native\ : label is "S:I2";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__4\ : label is "soft_lutpair7";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__0\ : label is "soft_lutpair7";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"CA"
    )
        port map (
      I0 => I0,
      I1 => I1,
      I2 => Q(1),
      O => mux_0123
    );
\Using_FPGA.Native_i_1__4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \TMR_No.fifo_DOut_reg[0]\(2),
      I1 => Q(0),
      I2 => \TMR_No.fifo_DOut_reg[0]\(3),
      O => I0
    );
\Using_FPGA.Native_i_2__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \TMR_No.fifo_DOut_reg[0]\(0),
      I1 => Q(0),
      I2 => \TMR_No.fifo_DOut_reg[0]\(1),
      O => I1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_MUXF5_773 is
  port (
    mux_4567 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \TMR_No.fifo_DOut_reg[4]\ : in STD_LOGIC_VECTOR ( 3 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_MUXF5_773 : entity is "MB_MUXF5";
end microblaze_mcs_1_MB_MUXF5_773;

architecture STRUCTURE of microblaze_mcs_1_MB_MUXF5_773 is
  signal \Using_FPGA.Native_i_1__5_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_2__1_n_0\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "MUXF5";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native\ : label is "S:I2";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__5\ : label is "soft_lutpair8";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__1\ : label is "soft_lutpair8";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"CA"
    )
        port map (
      I0 => \Using_FPGA.Native_i_1__5_n_0\,
      I1 => \Using_FPGA.Native_i_2__1_n_0\,
      I2 => Q(1),
      O => mux_4567
    );
\Using_FPGA.Native_i_1__5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \TMR_No.fifo_DOut_reg[4]\(2),
      I1 => Q(0),
      I2 => \TMR_No.fifo_DOut_reg[4]\(3),
      O => \Using_FPGA.Native_i_1__5_n_0\
    );
\Using_FPGA.Native_i_2__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \TMR_No.fifo_DOut_reg[4]\(0),
      I1 => Q(0),
      I2 => \TMR_No.fifo_DOut_reg[4]\(1),
      O => \Using_FPGA.Native_i_2__1_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_MUXF6 is
  port (
    mux_Out : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    mux_0123 : in STD_LOGIC;
    mux_4567 : in STD_LOGIC
  );
end microblaze_mcs_1_MB_MUXF6;

architecture STRUCTURE of microblaze_mcs_1_MB_MUXF6 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "MUXF6";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native\ : label is "S:I2";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"CA"
    )
        port map (
      I0 => mux_0123,
      I1 => mux_4567,
      I2 => Q(0),
      O => mux_Out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Uart_Control_Status is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    UART_Status_Read : out STD_LOGIC;
    \All_INTR_Bits[0].Using_Intr.CISR_CIER_TMR_No.cisr_reg[0]\ : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    Rst : in STD_LOGIC;
    \TMR_No.rx_data_exists_i_reg\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \TMR_No.frame_error_reg_0\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 4 downto 0 );
    lmb_reg_read : in STD_LOGIC;
    \out\ : in STD_LOGIC;
    rx_data_exists : in STD_LOGIC;
    \TMR_No.new_rx_data_write_reg\ : in STD_LOGIC;
    \TMR_No.tx_buffer_empty_i_reg\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
end microblaze_mcs_1_Uart_Control_Status;

architecture STRUCTURE of microblaze_mcs_1_Uart_Control_Status is
  signal \^d\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \TMR_No.error_interrupt_i_1_n_0\ : STD_LOGIC;
  signal \UART_Status[6]_i_1_n_0\ : STD_LOGIC;
begin
  D(1 downto 0) <= \^d\(1 downto 0);
\TMR_No.error_interrupt_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => \out\,
      I1 => rx_data_exists,
      I2 => \TMR_No.new_rx_data_write_reg\,
      O => \TMR_No.error_interrupt_i_1_n_0\
    );
\TMR_No.error_interrupt_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \TMR_No.error_interrupt_i_1_n_0\,
      Q => \All_INTR_Bits[0].Using_Intr.CISR_CIER_TMR_No.cisr_reg[0]\,
      R => Rst
    );
\TMR_No.frame_error_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \TMR_No.frame_error_reg_0\,
      Q => \^d\(1),
      R => Rst
    );
\TMR_No.overrun_error_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000400000000"
    )
        port map (
      I0 => Q(0),
      I1 => lmb_reg_read,
      I2 => Q(2),
      I3 => Q(3),
      I4 => Q(4),
      I5 => Q(1),
      O => UART_Status_Read
    );
\TMR_No.overrun_error_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \TMR_No.rx_data_exists_i_reg\,
      Q => \^d\(0),
      R => Rst
    );
\UART_Status[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFDFFFF"
    )
        port map (
      I0 => Q(1),
      I1 => Q(4),
      I2 => Q(3),
      I3 => Q(2),
      I4 => lmb_reg_read,
      I5 => Q(0),
      O => \UART_Status[6]_i_1_n_0\
    );
\UART_Status_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => rx_data_exists,
      Q => \Using_FPGA.Native\(0),
      R => \UART_Status[6]_i_1_n_0\
    );
\UART_Status_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \TMR_No.tx_buffer_empty_i_reg\(0),
      Q => \Using_FPGA.Native\(1),
      R => \UART_Status[6]_i_1_n_0\
    );
\UART_Status_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(0),
      Q => \Using_FPGA.Native\(2),
      R => \UART_Status[6]_i_1_n_0\
    );
\UART_Status_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(1),
      Q => \Using_FPGA.Native\(3),
      R => \UART_Status[6]_i_1_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_XIL_SRL16E is
  port (
    div16 : out STD_LOGIC;
    en_16x_baud : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
end microblaze_mcs_1_XIL_SRL16E;

architecture STRUCTURE of microblaze_mcs_1_XIL_SRL16E is
  signal \^div16\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.XIL_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.XIL_SRL16E_I1\ : label is "inst/iomodule_0/U0/\IOModule_Core_I1/Using_UART_TX.UART_TX_I1/TMR_No.DIV16_SRL16E/Use_unisim.XIL_SRL16E_I1 ";
begin
  div16 <= \^div16\;
\Use_unisim.XIL_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0001",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => '1',
      A1 => '1',
      A2 => '1',
      A3 => '1',
      CE => en_16x_baud,
      CLK => Clk,
      D => \^div16\,
      Q => \^div16\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_XIL_SRL16E_782 is
  port (
    loop_Bit : out STD_LOGIC;
    Clk_En_I_1 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_XIL_SRL16E_782 : entity is "XIL_SRL16E";
end microblaze_mcs_1_XIL_SRL16E_782;

architecture STRUCTURE of microblaze_mcs_1_XIL_SRL16E_782 is
  signal \^loop_bit\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.XIL_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.XIL_SRL16E_I1\ : label is "inst/iomodule_0/U0/\IOModule_Core_I1/Using_UART.No_Dynamic_BaudRate.UART_FIT_I/Implement_FIT.Using_SRL16s.SRL16s ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.XIL_SRL16E_I1\ : label is "inst/iomodule_0/U0/\IOModule_Core_I1/Using_UART.No_Dynamic_BaudRate.UART_FIT_I/Implement_FIT.Using_SRL16s.SRL16s[2].Divide_I/One_SRL16.SRL16E_I/Use_unisim.XIL_SRL16E_I1 ";
begin
  loop_Bit <= \^loop_bit\;
\Use_unisim.XIL_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0001",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => '1',
      A1 => '0',
      A2 => '1',
      A3 => '0',
      CE => Clk_En_I_1,
      CLK => Clk,
      D => \^loop_bit\,
      Q => \^loop_bit\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_XIL_SRL16E_783 is
  port (
    Clk_En_I_1 : out STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_XIL_SRL16E_783 : entity is "XIL_SRL16E";
end microblaze_mcs_1_XIL_SRL16E_783;

architecture STRUCTURE of microblaze_mcs_1_XIL_SRL16E_783 is
  signal \^clk_en_i_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.XIL_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.XIL_SRL16E_I1\ : label is "inst/iomodule_0/U0/\IOModule_Core_I1/Using_UART.No_Dynamic_BaudRate.UART_FIT_I/Implement_FIT.Using_SRL16s.SRL16s ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.XIL_SRL16E_I1\ : label is "inst/iomodule_0/U0/\IOModule_Core_I1/Using_UART.No_Dynamic_BaudRate.UART_FIT_I/Implement_FIT.Using_SRL16s.SRL16s[1].Divide_I/One_SRL16.SRL16E_I/Use_unisim.XIL_SRL16E_I1 ";
begin
  Clk_En_I_1 <= \^clk_en_i_1\;
\Use_unisim.XIL_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0001",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => '0',
      A1 => '0',
      A2 => '0',
      A3 => '1',
      CE => '1',
      CLK => Clk,
      D => \^clk_en_i_1\,
      Q => \^clk_en_i_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_XIL_SRL16E__parameterized1\ is
  port (
    sample_Point : out STD_LOGIC;
    \TMR_No.stop_Bit_Position_reg\ : out STD_LOGIC;
    \TMR_No.running_reg\ : out STD_LOGIC;
    \TMR_No.Convert_Serial_To_Parallel[8].serial_to_parallel_reg\ : out STD_LOGIC;
    \TMR_No.Convert_Serial_To_Parallel[7].serial_to_parallel_reg\ : out STD_LOGIC;
    \TMR_No.Convert_Serial_To_Parallel[6].serial_to_parallel_reg\ : out STD_LOGIC;
    \TMR_No.Convert_Serial_To_Parallel[5].serial_to_parallel_reg\ : out STD_LOGIC;
    \TMR_No.Convert_Serial_To_Parallel[4].serial_to_parallel_reg\ : out STD_LOGIC;
    \TMR_No.Convert_Serial_To_Parallel[3].serial_to_parallel_reg\ : out STD_LOGIC;
    \TMR_No.Convert_Serial_To_Parallel[2].serial_to_parallel_reg\ : out STD_LOGIC;
    D_0 : out STD_LOGIC;
    en_16x_baud : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 8 downto 0 );
    \TMR_No.stop_Bit_Position_reg_0\ : in STD_LOGIC;
    \TMR_No.start_Edge_Detected_reg\ : in STD_LOGIC;
    \TMR_No.running_reg_0\ : in STD_LOGIC;
    mid_Start_Bit : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_XIL_SRL16E__parameterized1\ : entity is "XIL_SRL16E";
end \microblaze_mcs_1_XIL_SRL16E__parameterized1\;

architecture STRUCTURE of \microblaze_mcs_1_XIL_SRL16E__parameterized1\ is
  signal \Use_unisim.XIL_SRL16E_I1_i_1_n_0\ : STD_LOGIC;
  signal \^sample_point\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \TMR_No.stop_Bit_Position_i_1\ : label is "soft_lutpair0";
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.XIL_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.XIL_SRL16E_I1\ : label is "inst/iomodule_0/U0/\IOModule_Core_I1/Using_UART_RX.UART_RX_I1/TMR_No.Delay_16/Use_unisim.XIL_SRL16E_I1 ";
  attribute SOFT_HLUTNM of \Use_unisim.XIL_SRL16E_I1_i_1\ : label is "soft_lutpair4";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__10\ : label is "soft_lutpair1";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__11\ : label is "soft_lutpair2";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__12\ : label is "soft_lutpair2";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__13\ : label is "soft_lutpair3";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__14\ : label is "soft_lutpair3";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__15\ : label is "soft_lutpair4";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__8\ : label is "soft_lutpair0";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__9\ : label is "soft_lutpair1";
begin
  sample_Point <= \^sample_point\;
\TMR_No.running_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F7FFF000"
    )
        port map (
      I0 => \^sample_point\,
      I1 => \TMR_No.stop_Bit_Position_reg_0\,
      I2 => \TMR_No.start_Edge_Detected_reg\,
      I3 => en_16x_baud,
      I4 => \TMR_No.running_reg_0\,
      O => \TMR_No.running_reg\
    );
\TMR_No.stop_Bit_Position_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2CCC"
    )
        port map (
      I0 => \out\(0),
      I1 => \TMR_No.stop_Bit_Position_reg_0\,
      I2 => \^sample_point\,
      I3 => en_16x_baud,
      O => \TMR_No.stop_Bit_Position_reg\
    );
\Use_unisim.XIL_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => '1',
      A1 => '1',
      A2 => '1',
      A3 => '1',
      CE => en_16x_baud,
      CLK => Clk,
      D => \Use_unisim.XIL_SRL16E_I1_i_1_n_0\,
      Q => \^sample_point\
    );
\Use_unisim.XIL_SRL16E_I1_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"0E"
    )
        port map (
      I0 => \^sample_point\,
      I1 => mid_Start_Bit,
      I2 => \TMR_No.stop_Bit_Position_reg_0\,
      O => \Use_unisim.XIL_SRL16E_I1_i_1_n_0\
    );
\Using_FPGA.Native_i_1__10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA8A"
    )
        port map (
      I0 => \out\(2),
      I1 => \TMR_No.stop_Bit_Position_reg_0\,
      I2 => \^sample_point\,
      I3 => \out\(3),
      O => \TMR_No.Convert_Serial_To_Parallel[6].serial_to_parallel_reg\
    );
\Using_FPGA.Native_i_1__11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA8A"
    )
        port map (
      I0 => \out\(3),
      I1 => \TMR_No.stop_Bit_Position_reg_0\,
      I2 => \^sample_point\,
      I3 => \out\(4),
      O => \TMR_No.Convert_Serial_To_Parallel[5].serial_to_parallel_reg\
    );
\Using_FPGA.Native_i_1__12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA8A"
    )
        port map (
      I0 => \out\(4),
      I1 => \TMR_No.stop_Bit_Position_reg_0\,
      I2 => \^sample_point\,
      I3 => \out\(5),
      O => \TMR_No.Convert_Serial_To_Parallel[4].serial_to_parallel_reg\
    );
\Using_FPGA.Native_i_1__13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA8A"
    )
        port map (
      I0 => \out\(5),
      I1 => \TMR_No.stop_Bit_Position_reg_0\,
      I2 => \^sample_point\,
      I3 => \out\(6),
      O => \TMR_No.Convert_Serial_To_Parallel[3].serial_to_parallel_reg\
    );
\Using_FPGA.Native_i_1__14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA8A"
    )
        port map (
      I0 => \out\(6),
      I1 => \TMR_No.stop_Bit_Position_reg_0\,
      I2 => \^sample_point\,
      I3 => \out\(7),
      O => \TMR_No.Convert_Serial_To_Parallel[2].serial_to_parallel_reg\
    );
\Using_FPGA.Native_i_1__15\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA8A"
    )
        port map (
      I0 => \out\(7),
      I1 => \TMR_No.stop_Bit_Position_reg_0\,
      I2 => \^sample_point\,
      I3 => \out\(8),
      O => D_0
    );
\Using_FPGA.Native_i_1__8\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA8A"
    )
        port map (
      I0 => \out\(0),
      I1 => \TMR_No.stop_Bit_Position_reg_0\,
      I2 => \^sample_point\,
      I3 => \out\(1),
      O => \TMR_No.Convert_Serial_To_Parallel[8].serial_to_parallel_reg\
    );
\Using_FPGA.Native_i_1__9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA8A"
    )
        port map (
      I0 => \out\(1),
      I1 => \TMR_No.stop_Bit_Position_reg_0\,
      I2 => \^sample_point\,
      I3 => \out\(2),
      O => \TMR_No.Convert_Serial_To_Parallel[7].serial_to_parallel_reg\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_XIL_SRL16E__parameterized1_781\ is
  port (
    mid_Start_Bit : out STD_LOGIC;
    en_16x_baud : in STD_LOGIC;
    \TMR_No.start_Edge_Detected_reg\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_XIL_SRL16E__parameterized1_781\ : entity is "XIL_SRL16E";
end \microblaze_mcs_1_XIL_SRL16E__parameterized1_781\;

architecture STRUCTURE of \microblaze_mcs_1_XIL_SRL16E__parameterized1_781\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.XIL_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.XIL_SRL16E_I1\ : label is "inst/iomodule_0/U0/\IOModule_Core_I1/Using_UART_RX.UART_RX_I1/TMR_No.Mid_Start_Bit_SRL16/Use_unisim.XIL_SRL16E_I1 ";
begin
\Use_unisim.XIL_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => '0',
      A1 => '1',
      A2 => '1',
      A3 => '0',
      CE => en_16x_baud,
      CLK => Clk,
      D => \TMR_No.start_Edge_Detected_reg\,
      Q => mid_Start_Bit
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_cdc_sync is
  port (
    lpf_exr_reg : out STD_LOGIC;
    scndry_out : out STD_LOGIC;
    lpf_exr : in STD_LOGIC;
    p_3_out : in STD_LOGIC_VECTOR ( 2 downto 0 );
    ext_reset_in : in STD_LOGIC;
    mb_debug_sys_rst : in STD_LOGIC;
    slowest_sync_clk : in STD_LOGIC
  );
end microblaze_mcs_1_cdc_sync;

architecture STRUCTURE of microblaze_mcs_1_cdc_sync is
  signal exr_d1 : STD_LOGIC;
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  signal s_level_out_d2 : STD_LOGIC;
  signal s_level_out_d3 : STD_LOGIC;
  signal \^scndry_out\ : STD_LOGIC;
  attribute ASYNC_REG : boolean;
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is std.standard.true;
  attribute BOX_TYPE of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "FDR";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is std.standard.true;
  attribute BOX_TYPE of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "FDR";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is std.standard.true;
  attribute BOX_TYPE of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "FDR";
begin
  scndry_out <= \^scndry_out\;
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => exr_d1,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => ext_reset_in,
      I1 => mb_debug_sys_rst,
      O => exr_d1
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => s_level_out_d3,
      Q => \^scndry_out\,
      R => '0'
    );
lpf_exr_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"EAAAAAA8"
    )
        port map (
      I0 => lpf_exr,
      I1 => p_3_out(1),
      I2 => p_3_out(2),
      I3 => \^scndry_out\,
      I4 => p_3_out(0),
      O => lpf_exr_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_cdc_sync_0 is
  port (
    lpf_asr_reg : out STD_LOGIC;
    scndry_out : out STD_LOGIC;
    lpf_asr : in STD_LOGIC;
    p_1_in : in STD_LOGIC;
    p_2_in : in STD_LOGIC;
    asr_lpf : in STD_LOGIC_VECTOR ( 0 to 0 );
    aux_reset_in : in STD_LOGIC;
    slowest_sync_clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_cdc_sync_0 : entity is "cdc_sync";
end microblaze_mcs_1_cdc_sync_0;

architecture STRUCTURE of microblaze_mcs_1_cdc_sync_0 is
  signal asr_d1 : STD_LOGIC;
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  signal s_level_out_d2 : STD_LOGIC;
  signal s_level_out_d3 : STD_LOGIC;
  signal \^scndry_out\ : STD_LOGIC;
  attribute ASYNC_REG : boolean;
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is std.standard.true;
  attribute BOX_TYPE of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "FDR";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is std.standard.true;
  attribute BOX_TYPE of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "FDR";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is std.standard.true;
  attribute BOX_TYPE of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "FDR";
begin
  scndry_out <= \^scndry_out\;
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => asr_d1,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to_i_1__0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => aux_reset_in,
      O => asr_d1
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => s_level_out_d3,
      Q => \^scndry_out\,
      R => '0'
    );
lpf_asr_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"EAAAAAA8"
    )
        port map (
      I0 => lpf_asr,
      I1 => p_1_in,
      I2 => p_2_in,
      I3 => \^scndry_out\,
      I4 => asr_lpf(0),
      O => lpf_asr_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_iomodule_v3_1_3_MB_FDR is
  port (
    Sl_DBus : out STD_LOGIC_VECTOR ( 0 to 0 );
    lmb_reg_read_reg : in STD_LOGIC;
    Clk : in STD_LOGIC;
    cisr : in STD_LOGIC_VECTOR ( 0 to 0 );
    cier : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \UART_Status_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_GPI.GPI_In_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \TMR_No.RX_Data_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    io_bus_read_data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
end microblaze_mcs_1_iomodule_v3_1_3_MB_FDR;

architecture STRUCTURE of microblaze_mcs_1_iomodule_v3_1_3_MB_FDR is
  signal D : STD_LOGIC;
  signal INTC_CIPR : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
begin
\Sl_DBus[31]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFFE"
    )
        port map (
      I0 => Q(0),
      I1 => INTC_CIPR(0),
      I2 => \UART_Status_reg[0]\(0),
      I3 => \Using_GPI.GPI_In_reg[0]\(0),
      I4 => \TMR_No.RX_Data_reg[0]\(0),
      I5 => io_bus_read_data(0),
      O => Sl_DBus(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => D,
      Q => INTC_CIPR(0),
      R => lmb_reg_read_reg
    );
\Using_FPGA.Native_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => cisr(0),
      I1 => cier(0),
      O => D
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE is
  port (
    tx_Data_Enable : out STD_LOGIC;
    p_3_out : out STD_LOGIC;
    p_7_out : out STD_LOGIC;
    p_11_out : out STD_LOGIC;
    en_16x_baud : in STD_LOGIC;
    div16 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 2 downto 0 );
    tx_Start : in STD_LOGIC;
    tx_data_transmitted : in STD_LOGIC;
    tx_DataBits : in STD_LOGIC;
    \out\ : in STD_LOGIC
  );
end microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE;

architecture STRUCTURE of microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE is
  signal \^tx_data_enable\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \TMR_No.tx_DataBits_i_1\ : label is "soft_lutpair6";
  attribute SOFT_HLUTNM of \TMR_No.tx_Start_i_1\ : label is "soft_lutpair6";
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  tx_Data_Enable <= \^tx_data_enable\;
\TMR_No.data_is_sent_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0100"
    )
        port map (
      I0 => Q(1),
      I1 => Q(0),
      I2 => Q(2),
      I3 => \^tx_data_enable\,
      O => p_3_out
    );
\TMR_No.tx_DataBits_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0F08"
    )
        port map (
      I0 => tx_Start,
      I1 => \^tx_data_enable\,
      I2 => tx_data_transmitted,
      I3 => tx_DataBits,
      O => p_7_out
    );
\TMR_No.tx_Start_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0F02"
    )
        port map (
      I0 => \^tx_data_enable\,
      I1 => \out\,
      I2 => tx_DataBits,
      I3 => tx_Start,
      O => p_11_out
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => en_16x_baud,
      D => div16,
      Q => \^tx_data_enable\,
      R => \^tx_data_enable\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_774 is
  port (
    in0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    mid_Start_Bit : in STD_LOGIC;
    en_16x_baud : in STD_LOGIC;
    \TMR_No.Convert_Serial_To_Parallel[2].serial_to_parallel_reg\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_774 : entity is "iomodule_v3_1_3_MB_FDRE";
end microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_774;

architecture STRUCTURE of microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_774 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => en_16x_baud,
      D => \TMR_No.Convert_Serial_To_Parallel[2].serial_to_parallel_reg\,
      Q => in0(0),
      R => mid_Start_Bit
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_775 is
  port (
    in0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    mid_Start_Bit : in STD_LOGIC;
    en_16x_baud : in STD_LOGIC;
    \TMR_No.Convert_Serial_To_Parallel[3].serial_to_parallel_reg\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_775 : entity is "iomodule_v3_1_3_MB_FDRE";
end microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_775;

architecture STRUCTURE of microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_775 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => en_16x_baud,
      D => \TMR_No.Convert_Serial_To_Parallel[3].serial_to_parallel_reg\,
      Q => in0(0),
      R => mid_Start_Bit
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_776 is
  port (
    in0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    mid_Start_Bit : in STD_LOGIC;
    en_16x_baud : in STD_LOGIC;
    \TMR_No.Convert_Serial_To_Parallel[4].serial_to_parallel_reg\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_776 : entity is "iomodule_v3_1_3_MB_FDRE";
end microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_776;

architecture STRUCTURE of microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_776 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => en_16x_baud,
      D => \TMR_No.Convert_Serial_To_Parallel[4].serial_to_parallel_reg\,
      Q => in0(0),
      R => mid_Start_Bit
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_777 is
  port (
    in0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    mid_Start_Bit : in STD_LOGIC;
    en_16x_baud : in STD_LOGIC;
    \TMR_No.Convert_Serial_To_Parallel[5].serial_to_parallel_reg\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_777 : entity is "iomodule_v3_1_3_MB_FDRE";
end microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_777;

architecture STRUCTURE of microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_777 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => en_16x_baud,
      D => \TMR_No.Convert_Serial_To_Parallel[5].serial_to_parallel_reg\,
      Q => in0(0),
      R => mid_Start_Bit
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_778 is
  port (
    in0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    mid_Start_Bit : in STD_LOGIC;
    en_16x_baud : in STD_LOGIC;
    \TMR_No.Convert_Serial_To_Parallel[6].serial_to_parallel_reg\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_778 : entity is "iomodule_v3_1_3_MB_FDRE";
end microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_778;

architecture STRUCTURE of microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_778 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => en_16x_baud,
      D => \TMR_No.Convert_Serial_To_Parallel[6].serial_to_parallel_reg\,
      Q => in0(0),
      R => mid_Start_Bit
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_779 is
  port (
    in0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    mid_Start_Bit : in STD_LOGIC;
    en_16x_baud : in STD_LOGIC;
    \TMR_No.Convert_Serial_To_Parallel[7].serial_to_parallel_reg\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_779 : entity is "iomodule_v3_1_3_MB_FDRE";
end microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_779;

architecture STRUCTURE of microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_779 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => en_16x_baud,
      D => \TMR_No.Convert_Serial_To_Parallel[7].serial_to_parallel_reg\,
      Q => in0(0),
      R => mid_Start_Bit
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_780 is
  port (
    in0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    mid_Start_Bit : in STD_LOGIC;
    en_16x_baud : in STD_LOGIC;
    \TMR_No.Convert_Serial_To_Parallel[8].serial_to_parallel_reg\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_780 : entity is "iomodule_v3_1_3_MB_FDRE";
end microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_780;

architecture STRUCTURE of microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_780 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => en_16x_baud,
      D => \TMR_No.Convert_Serial_To_Parallel[8].serial_to_parallel_reg\,
      Q => in0(0),
      R => mid_Start_Bit
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_iomodule_v3_1_3_MB_FDR_767 is
  port (
    D20_out : out STD_LOGIC;
    Sl_DBus : out STD_LOGIC_VECTOR ( 0 to 0 );
    lmb_reg_read_reg : in STD_LOGIC;
    Clk : in STD_LOGIC;
    cisr : in STD_LOGIC_VECTOR ( 0 to 0 );
    cier : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    io_bus_read_data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_iomodule_v3_1_3_MB_FDR_767 : entity is "iomodule_v3_1_3_MB_FDR";
end microblaze_mcs_1_iomodule_v3_1_3_MB_FDR_767;

architecture STRUCTURE of microblaze_mcs_1_iomodule_v3_1_3_MB_FDR_767 is
  signal \^d20_out\ : STD_LOGIC;
  signal INTC_CIPR : STD_LOGIC_VECTOR ( 11 to 11 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
begin
  D20_out <= \^d20_out\;
\Sl_DBus[20]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => Q(0),
      I1 => INTC_CIPR(11),
      I2 => io_bus_read_data(0),
      O => Sl_DBus(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \^d20_out\,
      Q => INTC_CIPR(11),
      R => lmb_reg_read_reg
    );
\Using_FPGA.Native_i_1__1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => cisr(0),
      I1 => cier(0),
      O => \^d20_out\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_iomodule_v3_1_3_MB_FDR_768 is
  port (
    D14_out : out STD_LOGIC;
    Sl_DBus : out STD_LOGIC_VECTOR ( 0 to 0 );
    lmb_reg_read_reg : in STD_LOGIC;
    Clk : in STD_LOGIC;
    cisr : in STD_LOGIC_VECTOR ( 0 to 0 );
    cier : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_GPI.GPI_In_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \TMR_No.RX_Data_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    io_bus_read_data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_iomodule_v3_1_3_MB_FDR_768 : entity is "iomodule_v3_1_3_MB_FDR";
end microblaze_mcs_1_iomodule_v3_1_3_MB_FDR_768;

architecture STRUCTURE of microblaze_mcs_1_iomodule_v3_1_3_MB_FDR_768 is
  signal \^d14_out\ : STD_LOGIC;
  signal INTC_CIPR : STD_LOGIC_VECTOR ( 1 to 1 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
begin
  D14_out <= \^d14_out\;
\Sl_DBus[30]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => Q(0),
      I1 => INTC_CIPR(1),
      I2 => \Using_GPI.GPI_In_reg[1]\(0),
      I3 => \TMR_No.RX_Data_reg[1]\(0),
      I4 => io_bus_read_data(0),
      O => Sl_DBus(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \^d14_out\,
      Q => INTC_CIPR(1),
      R => lmb_reg_read_reg
    );
\Using_FPGA.Native_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => cisr(0),
      I1 => cier(0),
      O => \^d14_out\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_iomodule_v3_1_3_MB_FDR_769 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    D17_out : out STD_LOGIC;
    Sl_DBus : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    cisr : in STD_LOGIC_VECTOR ( 0 to 0 );
    cier : in STD_LOGIC_VECTOR ( 0 to 0 );
    lmb_reg_read : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \INTC_CISR_reg[2]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_GPI.GPI_In_reg[2]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \TMR_No.RX_Data_reg[2]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    io_bus_read_data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_iomodule_v3_1_3_MB_FDR_769 : entity is "iomodule_v3_1_3_MB_FDR";
end microblaze_mcs_1_iomodule_v3_1_3_MB_FDR_769;

architecture STRUCTURE of microblaze_mcs_1_iomodule_v3_1_3_MB_FDR_769 is
  signal \^d17_out\ : STD_LOGIC;
  signal INTC_CIPR : STD_LOGIC_VECTOR ( 2 to 2 );
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
begin
  D17_out <= \^d17_out\;
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Sl_DBus[29]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => \INTC_CISR_reg[2]\(0),
      I1 => INTC_CIPR(2),
      I2 => \Using_GPI.GPI_In_reg[2]\(0),
      I3 => \TMR_No.RX_Data_reg[2]\(0),
      I4 => io_bus_read_data(0),
      O => Sl_DBus(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \^d17_out\,
      Q => INTC_CIPR(2),
      R => \^using_fpga.native_0\
    );
\Using_FPGA.Native_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => cisr(0),
      I1 => cier(0),
      O => \^d17_out\
    );
\Using_FPGA.Native_i_1__6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFF7FFF"
    )
        port map (
      I0 => lmb_reg_read,
      I1 => Q(2),
      I2 => Q(3),
      I3 => Q(0),
      I4 => Q(1),
      I5 => Q(4),
      O => \^using_fpga.native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_iomodule_v3_1_3_MB_FDSE is
  port (
    in0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    mid_Start_Bit : in STD_LOGIC;
    en_16x_baud : in STD_LOGIC;
    D_0 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
end microblaze_mcs_1_iomodule_v3_1_3_MB_FDSE;

architecture STRUCTURE of microblaze_mcs_1_iomodule_v3_1_3_MB_FDSE is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => en_16x_baud,
      D => D_0,
      Q => in0(0),
      S => mid_Start_Bit
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_iomodule_v3_1_3_MB_MUXCY is
  port (
    cnt_cy_2 : out STD_LOGIC;
    LI : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    cnt_cy_1 : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
end microblaze_mcs_1_iomodule_v3_1_3_MB_MUXCY;

architecture STRUCTURE of microblaze_mcs_1_iomodule_v3_1_3_MB_MUXCY is
  signal \^cnt_cy_2\ : STD_LOGIC;
begin
  \^cnt_cy_2\ <= lopt;
  cnt_cy_2 <= \^cnt_cy_2\;
\Using_FPGA.Native_i_1__2\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => Q(0),
      O => LI
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_iomodule_v3_1_3_MB_MUXCY_771 is
  port (
    cnt_cy_1 : out STD_LOGIC;
    \TMR_No.Counter[2].h_Cnt_reg\ : out STD_LOGIC;
    CI : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    tx_DataBits : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_iomodule_v3_1_3_MB_MUXCY_771 : entity is "iomodule_v3_1_3_MB_MUXCY";
end microblaze_mcs_1_iomodule_v3_1_3_MB_MUXCY_771;

architecture STRUCTURE of microblaze_mcs_1_iomodule_v3_1_3_MB_MUXCY_771 is
  signal \^ci\ : STD_LOGIC;
  signal \^tmr_no.counter[2].h_cnt_reg\ : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 2 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 2 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
begin
  CI <= \^ci\;
  \TMR_No.Counter[2].h_Cnt_reg\ <= \^tmr_no.counter[2].h_cnt_reg\;
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_5 <= lopt_4;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3 downto 2) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3 downto 2),
      CO(1) => \^lopt_1\,
      CO(0) => cnt_cy_1,
      CYINIT => \^ci\,
      DI(3 downto 2) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3 downto 2),
      DI(1) => \^lopt_2\,
      DI(0) => Q(0),
      O(3) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3),
      O(2) => \^lopt_4\,
      O(1 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(1 downto 0),
      S(3) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3),
      S(2) => lopt_5,
      S(1) => \^lopt_3\,
      S(0) => \^tmr_no.counter[2].h_cnt_reg\
    );
\Using_FPGA.Native_i_1__7\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => Q(0),
      O => \^tmr_no.counter[2].h_cnt_reg\
    );
\Using_FPGA.Native_i_2__2\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => tx_DataBits,
      O => \^ci\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_iomodule_v3_1_3_MB_XORCY is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    cnt_cy_2 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
end microblaze_mcs_1_iomodule_v3_1_3_MB_XORCY;

architecture STRUCTURE of microblaze_mcs_1_iomodule_v3_1_3_MB_XORCY is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \TMR_No.Counter[0].h_Cnt_reg\ : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  \^d\(0) <= lopt;
  lopt_1 <= \TMR_No.Counter[0].h_Cnt_reg\;
\Using_FPGA.Native_i_1__3\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => Q(0),
      O => \TMR_No.Counter[0].h_Cnt_reg\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_iomodule_v3_1_3_MB_XORCY_770 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    LI : in STD_LOGIC;
    cnt_cy_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_iomodule_v3_1_3_MB_XORCY_770 : entity is "iomodule_v3_1_3_MB_XORCY";
end microblaze_mcs_1_iomodule_v3_1_3_MB_XORCY_770;

architecture STRUCTURE of microblaze_mcs_1_iomodule_v3_1_3_MB_XORCY_770 is
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
begin
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3 downto 0),
      CYINIT => cnt_cy_1,
      DI(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3 downto 0),
      O(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 1),
      O(0) => D(0),
      S(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3 downto 1),
      S(0) => LI
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_iomodule_v3_1_3_MB_XORCY_772 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \TMR_No.Counter[2].h_Cnt_reg\ : in STD_LOGIC;
    CI : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_iomodule_v3_1_3_MB_XORCY_772 : entity is "iomodule_v3_1_3_MB_XORCY";
end microblaze_mcs_1_iomodule_v3_1_3_MB_XORCY_772;

architecture STRUCTURE of microblaze_mcs_1_iomodule_v3_1_3_MB_XORCY_772 is
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
begin
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3 downto 0),
      CYINIT => CI,
      DI(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3 downto 0),
      O(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 1),
      O(0) => D(0),
      S(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3 downto 1),
      S(0) => \TMR_No.Counter[2].h_Cnt_reg\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_lmb_bram_if_cntlr is
  port (
    BRAM_WEN_A : out STD_LOGIC_VECTOR ( 0 to 3 );
    Sl_Ready : out STD_LOGIC;
    LMB_Rst : in STD_LOGIC;
    LMB_AddrStrobe : in STD_LOGIC;
    LMB_Clk : in STD_LOGIC;
    LMB_ABus : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LMB_WriteStrobe : in STD_LOGIC;
    LMB_BE : in STD_LOGIC_VECTOR ( 0 to 3 )
  );
end microblaze_mcs_1_lmb_bram_if_cntlr;

architecture STRUCTURE of microblaze_mcs_1_lmb_bram_if_cntlr is
  signal Sl_Rdy : STD_LOGIC;
  signal lmb_as : STD_LOGIC;
  signal lmb_select : STD_LOGIC;
begin
\BRAM_WEN_A[0]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0200"
    )
        port map (
      I0 => LMB_BE(0),
      I1 => LMB_ABus(0),
      I2 => LMB_ABus(1),
      I3 => LMB_WriteStrobe,
      O => BRAM_WEN_A(0)
    );
\BRAM_WEN_A[1]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"1000"
    )
        port map (
      I0 => LMB_ABus(0),
      I1 => LMB_ABus(1),
      I2 => LMB_WriteStrobe,
      I3 => LMB_BE(1),
      O => BRAM_WEN_A(1)
    );
\BRAM_WEN_A[2]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"1000"
    )
        port map (
      I0 => LMB_ABus(0),
      I1 => LMB_ABus(1),
      I2 => LMB_WriteStrobe,
      I3 => LMB_BE(2),
      O => BRAM_WEN_A(2)
    );
\BRAM_WEN_A[3]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"1000"
    )
        port map (
      I0 => LMB_ABus(0),
      I1 => LMB_ABus(1),
      I2 => LMB_WriteStrobe,
      I3 => LMB_BE(3),
      O => BRAM_WEN_A(3)
    );
\No_ECC.Sl_Rdy_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => LMB_ABus(0),
      I1 => LMB_ABus(1),
      O => lmb_select
    );
\No_ECC.Sl_Rdy_reg\: unisim.vcomponents.FDRE
     port map (
      C => LMB_Clk,
      CE => '1',
      D => lmb_select,
      Q => Sl_Rdy,
      R => LMB_Rst
    );
\No_ECC.lmb_as_reg\: unisim.vcomponents.FDRE
     port map (
      C => LMB_Clk,
      CE => '1',
      D => LMB_AddrStrobe,
      Q => lmb_as,
      R => LMB_Rst
    );
Sl_Ready_INST_0: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => Sl_Rdy,
      I1 => lmb_as,
      O => Sl_Ready
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_lmb_bram_if_cntlr__parameterized1\ is
  port (
    BRAM_WEN_A : out STD_LOGIC_VECTOR ( 0 to 3 );
    Sl_Ready : out STD_LOGIC;
    LMB_Rst : in STD_LOGIC;
    LMB_AddrStrobe : in STD_LOGIC;
    LMB_Clk : in STD_LOGIC;
    LMB_ABus : in STD_LOGIC_VECTOR ( 0 to 0 );
    LMB_WriteStrobe : in STD_LOGIC;
    LMB_BE : in STD_LOGIC_VECTOR ( 0 to 3 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_lmb_bram_if_cntlr__parameterized1\ : entity is "lmb_bram_if_cntlr";
end \microblaze_mcs_1_lmb_bram_if_cntlr__parameterized1\;

architecture STRUCTURE of \microblaze_mcs_1_lmb_bram_if_cntlr__parameterized1\ is
  signal Sl_Rdy : STD_LOGIC;
  signal lmb_as : STD_LOGIC;
  signal lmb_select : STD_LOGIC;
begin
\BRAM_WEN_A[0]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"20"
    )
        port map (
      I0 => LMB_BE(0),
      I1 => LMB_ABus(0),
      I2 => LMB_WriteStrobe,
      O => BRAM_WEN_A(0)
    );
\BRAM_WEN_A[1]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"40"
    )
        port map (
      I0 => LMB_ABus(0),
      I1 => LMB_WriteStrobe,
      I2 => LMB_BE(1),
      O => BRAM_WEN_A(1)
    );
\BRAM_WEN_A[2]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"40"
    )
        port map (
      I0 => LMB_ABus(0),
      I1 => LMB_WriteStrobe,
      I2 => LMB_BE(2),
      O => BRAM_WEN_A(2)
    );
\BRAM_WEN_A[3]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"40"
    )
        port map (
      I0 => LMB_ABus(0),
      I1 => LMB_WriteStrobe,
      I2 => LMB_BE(3),
      O => BRAM_WEN_A(3)
    );
\No_ECC.Sl_Rdy_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => LMB_ABus(0),
      O => lmb_select
    );
\No_ECC.Sl_Rdy_reg\: unisim.vcomponents.FDRE
     port map (
      C => LMB_Clk,
      CE => '1',
      D => lmb_select,
      Q => Sl_Rdy,
      R => LMB_Rst
    );
\No_ECC.lmb_as_reg\: unisim.vcomponents.FDRE
     port map (
      C => LMB_Clk,
      CE => '1',
      D => LMB_AddrStrobe,
      Q => lmb_as,
      R => LMB_Rst
    );
Sl_Ready_INST_0: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => Sl_Rdy,
      I1 => lmb_as,
      O => Sl_Ready
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_lmb_v10 is
  port (
    LMB_Clk : in STD_LOGIC;
    SYS_Rst : in STD_LOGIC;
    LMB_Rst : out STD_LOGIC;
    M_ABus : in STD_LOGIC_VECTOR ( 0 to 31 );
    M_ReadStrobe : in STD_LOGIC;
    M_WriteStrobe : in STD_LOGIC;
    M_AddrStrobe : in STD_LOGIC;
    M_DBus : in STD_LOGIC_VECTOR ( 0 to 31 );
    M_BE : in STD_LOGIC_VECTOR ( 0 to 3 );
    Sl_DBus : in STD_LOGIC_VECTOR ( 0 to 63 );
    Sl_Ready : in STD_LOGIC_VECTOR ( 0 to 1 );
    Sl_Wait : in STD_LOGIC_VECTOR ( 0 to 1 );
    Sl_UE : in STD_LOGIC_VECTOR ( 0 to 1 );
    Sl_CE : in STD_LOGIC_VECTOR ( 0 to 1 );
    LMB_ABus : out STD_LOGIC_VECTOR ( 0 to 31 );
    LMB_ReadStrobe : out STD_LOGIC;
    LMB_WriteStrobe : out STD_LOGIC;
    LMB_AddrStrobe : out STD_LOGIC;
    LMB_ReadDBus : out STD_LOGIC_VECTOR ( 0 to 31 );
    LMB_WriteDBus : out STD_LOGIC_VECTOR ( 0 to 31 );
    LMB_Ready : out STD_LOGIC;
    LMB_Wait : out STD_LOGIC;
    LMB_UE : out STD_LOGIC;
    LMB_CE : out STD_LOGIC;
    LMB_BE : out STD_LOGIC_VECTOR ( 0 to 3 )
  );
  attribute C_EXT_RESET_HIGH : integer;
  attribute C_EXT_RESET_HIGH of microblaze_mcs_1_lmb_v10 : entity is 1;
  attribute C_LMB_AWIDTH : integer;
  attribute C_LMB_AWIDTH of microblaze_mcs_1_lmb_v10 : entity is 32;
  attribute C_LMB_DWIDTH : integer;
  attribute C_LMB_DWIDTH of microblaze_mcs_1_lmb_v10 : entity is 32;
  attribute C_LMB_NUM_SLAVES : integer;
  attribute C_LMB_NUM_SLAVES of microblaze_mcs_1_lmb_v10 : entity is 2;
end microblaze_mcs_1_lmb_v10;

architecture STRUCTURE of microblaze_mcs_1_lmb_v10 is
  signal \^m_abus\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^m_addrstrobe\ : STD_LOGIC;
  signal \^m_be\ : STD_LOGIC_VECTOR ( 0 to 3 );
  signal \^m_dbus\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^m_readstrobe\ : STD_LOGIC;
  signal \^m_writestrobe\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of POR_FF_I : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of POR_FF_I : label is "FDS";
begin
  LMB_ABus(0 to 31) <= \^m_abus\(0 to 31);
  LMB_AddrStrobe <= \^m_addrstrobe\;
  LMB_BE(0 to 3) <= \^m_be\(0 to 3);
  LMB_ReadStrobe <= \^m_readstrobe\;
  LMB_WriteDBus(0 to 31) <= \^m_dbus\(0 to 31);
  LMB_WriteStrobe <= \^m_writestrobe\;
  \^m_abus\(0 to 31) <= M_ABus(0 to 31);
  \^m_addrstrobe\ <= M_AddrStrobe;
  \^m_be\(0 to 3) <= M_BE(0 to 3);
  \^m_dbus\(0 to 31) <= M_DBus(0 to 31);
  \^m_readstrobe\ <= M_ReadStrobe;
  \^m_writestrobe\ <= M_WriteStrobe;
LMB_CE_INST_0: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => Sl_CE(0),
      I1 => Sl_CE(1),
      O => LMB_CE
    );
\LMB_ReadDBus[0]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Sl_DBus(0),
      I1 => Sl_Ready(0),
      I2 => Sl_DBus(32),
      I3 => Sl_Ready(1),
      O => LMB_ReadDBus(0)
    );
\LMB_ReadDBus[10]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Sl_DBus(10),
      I1 => Sl_Ready(0),
      I2 => Sl_DBus(42),
      I3 => Sl_Ready(1),
      O => LMB_ReadDBus(10)
    );
\LMB_ReadDBus[11]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Sl_DBus(11),
      I1 => Sl_Ready(0),
      I2 => Sl_DBus(43),
      I3 => Sl_Ready(1),
      O => LMB_ReadDBus(11)
    );
\LMB_ReadDBus[12]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Sl_DBus(12),
      I1 => Sl_Ready(0),
      I2 => Sl_DBus(44),
      I3 => Sl_Ready(1),
      O => LMB_ReadDBus(12)
    );
\LMB_ReadDBus[13]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Sl_DBus(13),
      I1 => Sl_Ready(0),
      I2 => Sl_DBus(45),
      I3 => Sl_Ready(1),
      O => LMB_ReadDBus(13)
    );
\LMB_ReadDBus[14]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Sl_DBus(14),
      I1 => Sl_Ready(0),
      I2 => Sl_DBus(46),
      I3 => Sl_Ready(1),
      O => LMB_ReadDBus(14)
    );
\LMB_ReadDBus[15]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Sl_DBus(15),
      I1 => Sl_Ready(0),
      I2 => Sl_DBus(47),
      I3 => Sl_Ready(1),
      O => LMB_ReadDBus(15)
    );
\LMB_ReadDBus[16]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Sl_DBus(16),
      I1 => Sl_Ready(0),
      I2 => Sl_DBus(48),
      I3 => Sl_Ready(1),
      O => LMB_ReadDBus(16)
    );
\LMB_ReadDBus[17]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Sl_DBus(17),
      I1 => Sl_Ready(0),
      I2 => Sl_DBus(49),
      I3 => Sl_Ready(1),
      O => LMB_ReadDBus(17)
    );
\LMB_ReadDBus[18]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Sl_DBus(18),
      I1 => Sl_Ready(0),
      I2 => Sl_DBus(50),
      I3 => Sl_Ready(1),
      O => LMB_ReadDBus(18)
    );
\LMB_ReadDBus[19]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Sl_DBus(19),
      I1 => Sl_Ready(0),
      I2 => Sl_DBus(51),
      I3 => Sl_Ready(1),
      O => LMB_ReadDBus(19)
    );
\LMB_ReadDBus[1]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Sl_DBus(1),
      I1 => Sl_Ready(0),
      I2 => Sl_DBus(33),
      I3 => Sl_Ready(1),
      O => LMB_ReadDBus(1)
    );
\LMB_ReadDBus[20]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Sl_DBus(20),
      I1 => Sl_Ready(0),
      I2 => Sl_DBus(52),
      I3 => Sl_Ready(1),
      O => LMB_ReadDBus(20)
    );
\LMB_ReadDBus[21]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Sl_DBus(21),
      I1 => Sl_Ready(0),
      I2 => Sl_DBus(53),
      I3 => Sl_Ready(1),
      O => LMB_ReadDBus(21)
    );
\LMB_ReadDBus[22]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Sl_DBus(22),
      I1 => Sl_Ready(0),
      I2 => Sl_DBus(54),
      I3 => Sl_Ready(1),
      O => LMB_ReadDBus(22)
    );
\LMB_ReadDBus[23]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Sl_DBus(23),
      I1 => Sl_Ready(0),
      I2 => Sl_DBus(55),
      I3 => Sl_Ready(1),
      O => LMB_ReadDBus(23)
    );
\LMB_ReadDBus[24]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Sl_DBus(24),
      I1 => Sl_Ready(0),
      I2 => Sl_DBus(56),
      I3 => Sl_Ready(1),
      O => LMB_ReadDBus(24)
    );
\LMB_ReadDBus[25]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Sl_DBus(25),
      I1 => Sl_Ready(0),
      I2 => Sl_DBus(57),
      I3 => Sl_Ready(1),
      O => LMB_ReadDBus(25)
    );
\LMB_ReadDBus[26]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Sl_DBus(26),
      I1 => Sl_Ready(0),
      I2 => Sl_DBus(58),
      I3 => Sl_Ready(1),
      O => LMB_ReadDBus(26)
    );
\LMB_ReadDBus[27]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Sl_DBus(27),
      I1 => Sl_Ready(0),
      I2 => Sl_DBus(59),
      I3 => Sl_Ready(1),
      O => LMB_ReadDBus(27)
    );
\LMB_ReadDBus[28]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Sl_DBus(28),
      I1 => Sl_Ready(0),
      I2 => Sl_DBus(60),
      I3 => Sl_Ready(1),
      O => LMB_ReadDBus(28)
    );
\LMB_ReadDBus[29]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Sl_DBus(29),
      I1 => Sl_Ready(0),
      I2 => Sl_DBus(61),
      I3 => Sl_Ready(1),
      O => LMB_ReadDBus(29)
    );
\LMB_ReadDBus[2]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Sl_DBus(2),
      I1 => Sl_Ready(0),
      I2 => Sl_DBus(34),
      I3 => Sl_Ready(1),
      O => LMB_ReadDBus(2)
    );
\LMB_ReadDBus[30]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Sl_DBus(30),
      I1 => Sl_Ready(0),
      I2 => Sl_DBus(62),
      I3 => Sl_Ready(1),
      O => LMB_ReadDBus(30)
    );
\LMB_ReadDBus[31]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Sl_DBus(31),
      I1 => Sl_Ready(0),
      I2 => Sl_DBus(63),
      I3 => Sl_Ready(1),
      O => LMB_ReadDBus(31)
    );
\LMB_ReadDBus[3]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Sl_DBus(3),
      I1 => Sl_Ready(0),
      I2 => Sl_DBus(35),
      I3 => Sl_Ready(1),
      O => LMB_ReadDBus(3)
    );
\LMB_ReadDBus[4]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Sl_DBus(4),
      I1 => Sl_Ready(0),
      I2 => Sl_DBus(36),
      I3 => Sl_Ready(1),
      O => LMB_ReadDBus(4)
    );
\LMB_ReadDBus[5]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Sl_DBus(5),
      I1 => Sl_Ready(0),
      I2 => Sl_DBus(37),
      I3 => Sl_Ready(1),
      O => LMB_ReadDBus(5)
    );
\LMB_ReadDBus[6]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Sl_DBus(6),
      I1 => Sl_Ready(0),
      I2 => Sl_DBus(38),
      I3 => Sl_Ready(1),
      O => LMB_ReadDBus(6)
    );
\LMB_ReadDBus[7]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Sl_DBus(7),
      I1 => Sl_Ready(0),
      I2 => Sl_DBus(39),
      I3 => Sl_Ready(1),
      O => LMB_ReadDBus(7)
    );
\LMB_ReadDBus[8]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Sl_DBus(8),
      I1 => Sl_Ready(0),
      I2 => Sl_DBus(40),
      I3 => Sl_Ready(1),
      O => LMB_ReadDBus(8)
    );
\LMB_ReadDBus[9]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Sl_DBus(9),
      I1 => Sl_Ready(0),
      I2 => Sl_DBus(41),
      I3 => Sl_Ready(1),
      O => LMB_ReadDBus(9)
    );
LMB_Ready_INST_0: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => Sl_Ready(0),
      I1 => Sl_Ready(1),
      O => LMB_Ready
    );
LMB_UE_INST_0: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => Sl_UE(0),
      I1 => Sl_UE(1),
      O => LMB_UE
    );
LMB_Wait_INST_0: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => Sl_Wait(0),
      I1 => Sl_Wait(1),
      O => LMB_Wait
    );
POR_FF_I: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => LMB_Clk,
      CE => '1',
      D => '0',
      Q => LMB_Rst,
      S => SYS_Rst
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_lmb_v10__parameterized1\ is
  port (
    LMB_Clk : in STD_LOGIC;
    SYS_Rst : in STD_LOGIC;
    LMB_Rst : out STD_LOGIC;
    M_ABus : in STD_LOGIC_VECTOR ( 0 to 31 );
    M_ReadStrobe : in STD_LOGIC;
    M_WriteStrobe : in STD_LOGIC;
    M_AddrStrobe : in STD_LOGIC;
    M_DBus : in STD_LOGIC_VECTOR ( 0 to 31 );
    M_BE : in STD_LOGIC_VECTOR ( 0 to 3 );
    Sl_DBus : in STD_LOGIC_VECTOR ( 0 to 31 );
    Sl_Ready : in STD_LOGIC_VECTOR ( 0 to 0 );
    Sl_Wait : in STD_LOGIC_VECTOR ( 0 to 0 );
    Sl_UE : in STD_LOGIC_VECTOR ( 0 to 0 );
    Sl_CE : in STD_LOGIC_VECTOR ( 0 to 0 );
    LMB_ABus : out STD_LOGIC_VECTOR ( 0 to 31 );
    LMB_ReadStrobe : out STD_LOGIC;
    LMB_WriteStrobe : out STD_LOGIC;
    LMB_AddrStrobe : out STD_LOGIC;
    LMB_ReadDBus : out STD_LOGIC_VECTOR ( 0 to 31 );
    LMB_WriteDBus : out STD_LOGIC_VECTOR ( 0 to 31 );
    LMB_Ready : out STD_LOGIC;
    LMB_Wait : out STD_LOGIC;
    LMB_UE : out STD_LOGIC;
    LMB_CE : out STD_LOGIC;
    LMB_BE : out STD_LOGIC_VECTOR ( 0 to 3 )
  );
  attribute C_EXT_RESET_HIGH : integer;
  attribute C_EXT_RESET_HIGH of \microblaze_mcs_1_lmb_v10__parameterized1\ : entity is 1;
  attribute C_LMB_AWIDTH : integer;
  attribute C_LMB_AWIDTH of \microblaze_mcs_1_lmb_v10__parameterized1\ : entity is 32;
  attribute C_LMB_DWIDTH : integer;
  attribute C_LMB_DWIDTH of \microblaze_mcs_1_lmb_v10__parameterized1\ : entity is 32;
  attribute C_LMB_NUM_SLAVES : integer;
  attribute C_LMB_NUM_SLAVES of \microblaze_mcs_1_lmb_v10__parameterized1\ : entity is 1;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_lmb_v10__parameterized1\ : entity is "lmb_v10";
end \microblaze_mcs_1_lmb_v10__parameterized1\;

architecture STRUCTURE of \microblaze_mcs_1_lmb_v10__parameterized1\ is
  signal \^m_abus\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^m_addrstrobe\ : STD_LOGIC;
  signal \^m_be\ : STD_LOGIC_VECTOR ( 0 to 3 );
  signal \^m_dbus\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^m_readstrobe\ : STD_LOGIC;
  signal \^m_writestrobe\ : STD_LOGIC;
  signal \^sl_ce\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^sl_dbus\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^sl_ready\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^sl_ue\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^sl_wait\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of POR_FF_I : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of POR_FF_I : label is "FDS";
begin
  LMB_ABus(0 to 31) <= \^m_abus\(0 to 31);
  LMB_AddrStrobe <= \^m_addrstrobe\;
  LMB_BE(0 to 3) <= \^m_be\(0 to 3);
  LMB_CE <= \^sl_ce\(0);
  LMB_ReadDBus(0 to 31) <= \^sl_dbus\(0 to 31);
  LMB_ReadStrobe <= \^m_readstrobe\;
  LMB_Ready <= \^sl_ready\(0);
  LMB_UE <= \^sl_ue\(0);
  LMB_Wait <= \^sl_wait\(0);
  LMB_WriteDBus(0 to 31) <= \^m_dbus\(0 to 31);
  LMB_WriteStrobe <= \^m_writestrobe\;
  \^m_abus\(0 to 31) <= M_ABus(0 to 31);
  \^m_addrstrobe\ <= M_AddrStrobe;
  \^m_be\(0 to 3) <= M_BE(0 to 3);
  \^m_dbus\(0 to 31) <= M_DBus(0 to 31);
  \^m_readstrobe\ <= M_ReadStrobe;
  \^m_writestrobe\ <= M_WriteStrobe;
  \^sl_ce\(0) <= Sl_CE(0);
  \^sl_dbus\(0 to 31) <= Sl_DBus(0 to 31);
  \^sl_ready\(0) <= Sl_Ready(0);
  \^sl_ue\(0) <= Sl_UE(0);
  \^sl_wait\(0) <= Sl_Wait(0);
POR_FF_I: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => LMB_Clk,
      CE => '1',
      D => '0',
      Q => LMB_Rst,
      S => SYS_Rst
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_upcnt_n is
  port (
    Q : out STD_LOGIC_VECTOR ( 5 downto 0 );
    seq_clr : in STD_LOGIC;
    seq_cnt_en : in STD_LOGIC;
    slowest_sync_clk : in STD_LOGIC
  );
end microblaze_mcs_1_upcnt_n;

architecture STRUCTURE of microblaze_mcs_1_upcnt_n is
  signal \^q\ : STD_LOGIC_VECTOR ( 5 downto 0 );
  signal clear : STD_LOGIC;
  signal q_int0 : STD_LOGIC_VECTOR ( 5 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \q_int[1]_i_1\ : label is "soft_lutpair44";
  attribute SOFT_HLUTNM of \q_int[2]_i_1\ : label is "soft_lutpair44";
  attribute SOFT_HLUTNM of \q_int[3]_i_1\ : label is "soft_lutpair43";
  attribute SOFT_HLUTNM of \q_int[4]_i_1\ : label is "soft_lutpair43";
begin
  Q(5 downto 0) <= \^q\(5 downto 0);
\q_int[0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^q\(0),
      O => q_int0(0)
    );
\q_int[1]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^q\(1),
      O => q_int0(1)
    );
\q_int[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"78"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^q\(1),
      I2 => \^q\(2),
      O => q_int0(2)
    );
\q_int[3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F80"
    )
        port map (
      I0 => \^q\(1),
      I1 => \^q\(0),
      I2 => \^q\(2),
      I3 => \^q\(3),
      O => q_int0(3)
    );
\q_int[4]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"7FFF8000"
    )
        port map (
      I0 => \^q\(2),
      I1 => \^q\(0),
      I2 => \^q\(1),
      I3 => \^q\(3),
      I4 => \^q\(4),
      O => q_int0(4)
    );
\q_int[5]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => seq_clr,
      O => clear
    );
\q_int[5]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7FFFFFFF80000000"
    )
        port map (
      I0 => \^q\(3),
      I1 => \^q\(1),
      I2 => \^q\(0),
      I3 => \^q\(2),
      I4 => \^q\(4),
      I5 => \^q\(5),
      O => q_int0(5)
    );
\q_int_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => slowest_sync_clk,
      CE => seq_cnt_en,
      D => q_int0(0),
      Q => \^q\(0),
      R => clear
    );
\q_int_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => slowest_sync_clk,
      CE => seq_cnt_en,
      D => q_int0(1),
      Q => \^q\(1),
      R => clear
    );
\q_int_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => slowest_sync_clk,
      CE => seq_cnt_en,
      D => q_int0(2),
      Q => \^q\(2),
      R => clear
    );
\q_int_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => slowest_sync_clk,
      CE => seq_cnt_en,
      D => q_int0(3),
      Q => \^q\(3),
      R => clear
    );
\q_int_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => slowest_sync_clk,
      CE => seq_cnt_en,
      D => q_int0(4),
      Q => \^q\(4),
      R => clear
    );
\q_int_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => slowest_sync_clk,
      CE => seq_cnt_en,
      D => q_int0(5),
      Q => \^q\(5),
      R => clear
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FD is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
end microblaze_mcs_1_MB_FD;

architecture STRUCTURE of microblaze_mcs_1_MB_FD is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_Result(0),
      Q => D(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE is
  port (
    \trace_pc_i_reg[29]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    OF_PipeRun : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
end microblaze_mcs_1_MB_FDE;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => OF_PipeRun,
      D => \Using_FPGA.Native_0\,
      Q => \trace_pc_i_reg[29]\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_434 is
  port (
    \trace_pc_i_reg[28]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    OF_PipeRun : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_434 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_434;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_434 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => OF_PipeRun,
      D => \Using_FPGA.Native_0\,
      Q => \trace_pc_i_reg[28]\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_440 is
  port (
    \trace_pc_i_reg[27]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    OF_PipeRun : in STD_LOGIC;
    PC_OF : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_440 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_440;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_440 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => OF_PipeRun,
      D => PC_OF,
      Q => \trace_pc_i_reg[27]\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_446 is
  port (
    \trace_pc_i_reg[26]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    OF_PipeRun : in STD_LOGIC;
    PC_OF : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_446 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_446;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_446 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => OF_PipeRun,
      D => PC_OF,
      Q => \trace_pc_i_reg[26]\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_452 is
  port (
    \trace_pc_i_reg[25]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    OF_PipeRun : in STD_LOGIC;
    PC_OF : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_452 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_452;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_452 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => OF_PipeRun,
      D => PC_OF,
      Q => \trace_pc_i_reg[25]\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_458 is
  port (
    \trace_pc_i_reg[24]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    OF_PipeRun : in STD_LOGIC;
    PC_OF : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_458 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_458;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_458 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => OF_PipeRun,
      D => PC_OF,
      Q => \trace_pc_i_reg[24]\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_464 is
  port (
    \trace_pc_i_reg[23]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    OF_PipeRun : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_464 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_464;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_464 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => OF_PipeRun,
      D => \Using_FPGA.Native_0\,
      Q => \trace_pc_i_reg[23]\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_470 is
  port (
    \trace_pc_i_reg[22]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    OF_PipeRun : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_470 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_470;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_470 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => OF_PipeRun,
      D => \Using_FPGA.Native_0\,
      Q => \trace_pc_i_reg[22]\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_476 is
  port (
    \trace_pc_i_reg[21]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    OF_PipeRun : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_476 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_476;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_476 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => OF_PipeRun,
      D => \Using_FPGA.Native_0\,
      Q => \trace_pc_i_reg[21]\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_482 is
  port (
    \trace_pc_i_reg[20]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    OF_PipeRun : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_482 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_482;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_482 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => OF_PipeRun,
      D => \Using_FPGA.Native_0\,
      Q => \trace_pc_i_reg[20]\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_488 is
  port (
    \trace_pc_i_reg[19]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    OF_PipeRun : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_488 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_488;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_488 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => OF_PipeRun,
      D => \Using_FPGA.Native_0\,
      Q => \trace_pc_i_reg[19]\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_494 is
  port (
    \trace_pc_i_reg[18]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    OF_PipeRun : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_494 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_494;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_494 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => OF_PipeRun,
      D => \Using_FPGA.Native_0\,
      Q => \trace_pc_i_reg[18]\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_500 is
  port (
    \trace_pc_i_reg[17]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    OF_PipeRun : in STD_LOGIC;
    PC_OF : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_500 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_500;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_500 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => OF_PipeRun,
      D => PC_OF,
      Q => \trace_pc_i_reg[17]\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_531 is
  port (
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_22 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_531 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_531;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_531 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_22,
      Q => op2_C(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_535 is
  port (
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_23 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_535 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_535;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_535 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_23,
      Q => op2_C(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_539 is
  port (
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_24 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_539 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_539;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_539 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_24,
      Q => op2_C(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_543 is
  port (
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_25 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_543 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_543;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_543 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_25,
      Q => op2_C(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_547 is
  port (
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_26 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_547 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_547;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_547 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_26,
      Q => op2_C(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_551 is
  port (
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_27 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_551 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_551;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_551 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_27,
      Q => op2_C(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_555 is
  port (
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_28 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_555 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_555;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_555 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_28,
      Q => op2_C(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_559 is
  port (
    EX_Op2 : out STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    D_0 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_559 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_559;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_559 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_0,
      Q => EX_Op2,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_563 is
  port (
    \trace_data_address_i_reg[31]\ : out STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    D_1 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_563 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_563;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_563 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_1,
      Q => \trace_data_address_i_reg[31]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_567 is
  port (
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_29 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_567 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_567;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_567 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_29,
      Q => op2_C(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_571 is
  port (
    Op2 : out STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    D_2 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_571 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_571;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_571 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_2,
      Q => Op2,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_575 is
  port (
    \trace_data_address_i_reg[28]\ : out STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    D_3 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_575 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_575;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_575 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_3,
      Q => \trace_data_address_i_reg[28]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_579 is
  port (
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_4 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_579 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_579;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_579 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_4,
      Q => op2_C(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_583 is
  port (
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_5 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_583 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_583;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_583 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_5,
      Q => op2_C(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_587 is
  port (
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_6 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_587 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_587;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_587 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_6,
      Q => op2_C(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_591 is
  port (
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_7 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_591 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_591;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_591 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_7,
      Q => op2_C(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_595 is
  port (
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_8 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_595 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_595;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_595 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_8,
      Q => op2_C(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_599 is
  port (
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_9 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_599 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_599;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_599 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_9,
      Q => op2_C(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_603 is
  port (
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_10 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_603 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_603;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_603 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_10,
      Q => op2_C(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_607 is
  port (
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_11 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_607 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_607;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_607 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_11,
      Q => op2_C(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_611 is
  port (
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_30 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_611 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_611;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_611 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_30,
      Q => op2_C(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_615 is
  port (
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_12 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_615 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_615;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_615 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_12,
      Q => op2_C(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_619 is
  port (
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_13 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_619 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_619;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_619 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_13,
      Q => op2_C(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_623 is
  port (
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_14 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_623 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_623;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_623 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_14,
      Q => op2_C(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_627 is
  port (
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_15 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_627 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_627;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_627 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_15,
      Q => op2_C(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_631 is
  port (
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_16 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_631 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_631;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_631 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_16,
      Q => op2_C(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_635 is
  port (
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_17 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_635 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_635;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_635 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_17,
      Q => op2_C(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_639 is
  port (
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_18 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_639 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_639;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_639 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_18,
      Q => op2_C(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_643 is
  port (
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_19 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_643 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_643;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_643 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_19,
      Q => op2_C(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_647 is
  port (
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_20 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_647 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_647;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_647 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_20,
      Q => op2_C(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_651 is
  port (
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_21 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_651 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_651;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_651 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_21,
      Q => op2_C(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDE_655 is
  port (
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_31 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDE_655 : entity is "MB_FDE";
end microblaze_mcs_1_MB_FDE_655;

architecture STRUCTURE of microblaze_mcs_1_MB_FDE_655 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_31,
      Q => op2_C(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDRSE is
  port (
    force_Val2_N : out STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
end microblaze_mcs_1_MB_FDRSE;

architecture STRUCTURE of microblaze_mcs_1_MB_FDRSE is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute IS_CE_INVERTED : string;
  attribute IS_CE_INVERTED of \Using_FPGA.Native\ : label is "1'b0";
  attribute IS_S_INVERTED : string;
  attribute IS_S_INVERTED of \Using_FPGA.Native\ : label is "1'b0";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => force_Val2_N,
      R => \Using_FPGA.take_Intr_2nd_Phase_reg\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDRSE_658 is
  port (
    MSR : out STD_LOGIC_VECTOR ( 0 to 0 );
    I3_0 : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : in STD_LOGIC;
    \Using_FPGA.enable_Interrupts_I_reg\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDRSE_658 : entity is "MB_FDRSE";
end microblaze_mcs_1_MB_FDRSE_658;

architecture STRUCTURE of microblaze_mcs_1_MB_FDRSE_658 is
  signal \^msr\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute IS_CE_INVERTED : string;
  attribute IS_CE_INVERTED of \Using_FPGA.Native\ : label is "1'b0";
  attribute IS_S_INVERTED : string;
  attribute IS_S_INVERTED of \Using_FPGA.Native\ : label is "1'b0";
begin
  MSR(0) <= \^msr\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.enable_Interrupts_I_reg\,
      Q => \^msr\(0),
      R => \Use_Async_Reset.sync_reset_reg\
    );
\Using_FPGA.Native_i_1__6__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^msr\(0),
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      O => I3_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDRSE_659 is
  port (
    MSR : out STD_LOGIC_VECTOR ( 0 to 0 );
    I3 : out STD_LOGIC;
    I3_2 : out STD_LOGIC;
    write_Carry_I_reg : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDRSE_659 : entity is "MB_FDRSE";
end microblaze_mcs_1_MB_FDRSE_659;

architecture STRUCTURE of microblaze_mcs_1_MB_FDRSE_659 is
  signal \^msr\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute IS_CE_INVERTED : string;
  attribute IS_CE_INVERTED of \Using_FPGA.Native\ : label is "1'b0";
  attribute IS_S_INVERTED : string;
  attribute IS_S_INVERTED of \Using_FPGA.Native\ : label is "1'b0";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__12__0\ : label is "soft_lutpair13";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__5__0\ : label is "soft_lutpair13";
begin
  MSR(0) <= \^msr\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => \^msr\(0),
      R => write_Carry_I_reg
    );
\Using_FPGA.Native_i_1__12__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^msr\(0),
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I2 => \Using_FPGA.Native_1\,
      O => I3_2
    );
\Using_FPGA.Native_i_1__5__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^msr\(0),
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      O => I3
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDRSE_660 is
  port (
    MSR : out STD_LOGIC_VECTOR ( 0 to 0 );
    I3_1 : out STD_LOGIC;
    MSR_Rst : in STD_LOGIC;
    \Using_FPGA.set_BIP_I_reg\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    PC_OF : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDRSE_660 : entity is "MB_FDRSE";
end microblaze_mcs_1_MB_FDRSE_660;

architecture STRUCTURE of microblaze_mcs_1_MB_FDRSE_660 is
  signal \^msr\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute IS_CE_INVERTED : string;
  attribute IS_CE_INVERTED of \Using_FPGA.Native\ : label is "1'b0";
  attribute IS_S_INVERTED : string;
  attribute IS_S_INVERTED of \Using_FPGA.Native\ : label is "1'b0";
begin
  MSR(0) <= \^msr\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.set_BIP_I_reg\,
      Q => \^msr\(0),
      R => MSR_Rst
    );
\Using_FPGA.Native_i_1__11__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^msr\(0),
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I2 => PC_OF,
      O => I3_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDS is
  port (
    \instr_EX_i_reg[9]\ : out STD_LOGIC;
    S_34 : out STD_LOGIC;
    R : in STD_LOGIC;
    buffer_Addr_S_I_2 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    mul_Executing_reg : in STD_LOGIC
  );
end microblaze_mcs_1_MB_FDS;

architecture STRUCTURE of microblaze_mcs_1_MB_FDS is
  signal \^instr_ex_i_reg[9]\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDS";
begin
  \instr_EX_i_reg[9]\ <= \^instr_ex_i_reg[9]\;
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => Clk,
      CE => '1',
      D => buffer_Addr_S_I_2,
      Q => \^instr_ex_i_reg[9]\,
      S => R
    );
\Using_FPGA.Native_I2_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^instr_ex_i_reg[9]\,
      I1 => mul_Executing_reg,
      O => S_34
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDS_33 is
  port (
    \instr_EX_i_reg[9]\ : out STD_LOGIC;
    S : out STD_LOGIC;
    R : in STD_LOGIC;
    O : in STD_LOGIC;
    Clk : in STD_LOGIC;
    mul_Executing_reg : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDS_33 : entity is "MB_FDS";
end microblaze_mcs_1_MB_FDS_33;

architecture STRUCTURE of microblaze_mcs_1_MB_FDS_33 is
  signal \^instr_ex_i_reg[9]\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDS";
begin
  \instr_EX_i_reg[9]\ <= \^instr_ex_i_reg[9]\;
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => Clk,
      CE => '1',
      D => O,
      Q => \^instr_ex_i_reg[9]\,
      S => R
    );
\Using_FPGA.Native_I1_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^instr_ex_i_reg[9]\,
      I1 => mul_Executing_reg,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FDS_35 is
  port (
    \instr_EX_i_reg[9]\ : out STD_LOGIC;
    R : in STD_LOGIC;
    O : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FDS_35 : entity is "MB_FDS";
end microblaze_mcs_1_MB_FDS_35;

architecture STRUCTURE of microblaze_mcs_1_MB_FDS_35 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDS";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => Clk,
      CE => '1',
      D => O,
      Q => \instr_EX_i_reg[9]\,
      S => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FD_231 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FD_231 : entity is "MB_FD";
end microblaze_mcs_1_MB_FD_231;

architecture STRUCTURE of microblaze_mcs_1_MB_FD_231 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_Result(0),
      Q => D(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FD_234 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FD_234 : entity is "MB_FD";
end microblaze_mcs_1_MB_FD_234;

architecture STRUCTURE of microblaze_mcs_1_MB_FD_234 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_Result(0),
      Q => D(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FD_237 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FD_237 : entity is "MB_FD";
end microblaze_mcs_1_MB_FD_237;

architecture STRUCTURE of microblaze_mcs_1_MB_FD_237 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_Result(0),
      Q => D(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FD_240 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FD_240 : entity is "MB_FD";
end microblaze_mcs_1_MB_FD_240;

architecture STRUCTURE of microblaze_mcs_1_MB_FD_240 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_Result(0),
      Q => D(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FD_243 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FD_243 : entity is "MB_FD";
end microblaze_mcs_1_MB_FD_243;

architecture STRUCTURE of microblaze_mcs_1_MB_FD_243 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_Result(0),
      Q => D(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FD_246 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FD_246 : entity is "MB_FD";
end microblaze_mcs_1_MB_FD_246;

architecture STRUCTURE of microblaze_mcs_1_MB_FD_246 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_Result(0),
      Q => D(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FD_249 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FD_249 : entity is "MB_FD";
end microblaze_mcs_1_MB_FD_249;

architecture STRUCTURE of microblaze_mcs_1_MB_FD_249 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_Result(0),
      Q => D(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FD_252 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FD_252 : entity is "MB_FD";
end microblaze_mcs_1_MB_FD_252;

architecture STRUCTURE of microblaze_mcs_1_MB_FD_252 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_Result(0),
      Q => D(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FD_255 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FD_255 : entity is "MB_FD";
end microblaze_mcs_1_MB_FD_255;

architecture STRUCTURE of microblaze_mcs_1_MB_FD_255 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_Result(0),
      Q => D(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FD_258 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FD_258 : entity is "MB_FD";
end microblaze_mcs_1_MB_FD_258;

architecture STRUCTURE of microblaze_mcs_1_MB_FD_258 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_Result(0),
      Q => D(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FD_261 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FD_261 : entity is "MB_FD";
end microblaze_mcs_1_MB_FD_261;

architecture STRUCTURE of microblaze_mcs_1_MB_FD_261 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_Result(0),
      Q => D(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FD_264 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FD_264 : entity is "MB_FD";
end microblaze_mcs_1_MB_FD_264;

architecture STRUCTURE of microblaze_mcs_1_MB_FD_264 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_Result(0),
      Q => D(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FD_267 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FD_267 : entity is "MB_FD";
end microblaze_mcs_1_MB_FD_267;

architecture STRUCTURE of microblaze_mcs_1_MB_FD_267 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_Result(0),
      Q => D(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FD_270 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FD_270 : entity is "MB_FD";
end microblaze_mcs_1_MB_FD_270;

architecture STRUCTURE of microblaze_mcs_1_MB_FD_270 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_Result(0),
      Q => D(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FD_273 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FD_273 : entity is "MB_FD";
end microblaze_mcs_1_MB_FD_273;

architecture STRUCTURE of microblaze_mcs_1_MB_FD_273 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_Result(0),
      Q => D(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FD_276 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FD_276 : entity is "MB_FD";
end microblaze_mcs_1_MB_FD_276;

architecture STRUCTURE of microblaze_mcs_1_MB_FD_276 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_Result(0),
      Q => D(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FD_279 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FD_279 : entity is "MB_FD";
end microblaze_mcs_1_MB_FD_279;

architecture STRUCTURE of microblaze_mcs_1_MB_FD_279 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_Result(0),
      Q => D(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FD_282 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FD_282 : entity is "MB_FD";
end microblaze_mcs_1_MB_FD_282;

architecture STRUCTURE of microblaze_mcs_1_MB_FD_282 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_Result(0),
      Q => D(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FD_285 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FD_285 : entity is "MB_FD";
end microblaze_mcs_1_MB_FD_285;

architecture STRUCTURE of microblaze_mcs_1_MB_FD_285 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_Result(0),
      Q => D(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FD_288 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FD_288 : entity is "MB_FD";
end microblaze_mcs_1_MB_FD_288;

architecture STRUCTURE of microblaze_mcs_1_MB_FD_288 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_Result(0),
      Q => D(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FD_291 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FD_291 : entity is "MB_FD";
end microblaze_mcs_1_MB_FD_291;

architecture STRUCTURE of microblaze_mcs_1_MB_FD_291 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_Result(0),
      Q => D(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FD_294 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FD_294 : entity is "MB_FD";
end microblaze_mcs_1_MB_FD_294;

architecture STRUCTURE of microblaze_mcs_1_MB_FD_294 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_Result(0),
      Q => D(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FD_297 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FD_297 : entity is "MB_FD";
end microblaze_mcs_1_MB_FD_297;

architecture STRUCTURE of microblaze_mcs_1_MB_FD_297 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_Result(0),
      Q => D(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FD_300 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FD_300 : entity is "MB_FD";
end microblaze_mcs_1_MB_FD_300;

architecture STRUCTURE of microblaze_mcs_1_MB_FD_300 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_Result(0),
      Q => D(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FD_303 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FD_303 : entity is "MB_FD";
end microblaze_mcs_1_MB_FD_303;

architecture STRUCTURE of microblaze_mcs_1_MB_FD_303 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_Result(0),
      Q => D(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FD_306 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FD_306 : entity is "MB_FD";
end microblaze_mcs_1_MB_FD_306;

architecture STRUCTURE of microblaze_mcs_1_MB_FD_306 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_Result(0),
      Q => D(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FD_309 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FD_309 : entity is "MB_FD";
end microblaze_mcs_1_MB_FD_309;

architecture STRUCTURE of microblaze_mcs_1_MB_FD_309 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_Result(0),
      Q => D(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FD_312 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FD_312 : entity is "MB_FD";
end microblaze_mcs_1_MB_FD_312;

architecture STRUCTURE of microblaze_mcs_1_MB_FD_312 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_Result(0),
      Q => D(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FD_315 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FD_315 : entity is "MB_FD";
end microblaze_mcs_1_MB_FD_315;

architecture STRUCTURE of microblaze_mcs_1_MB_FD_315 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_Result(0),
      Q => D(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FD_318 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FD_318 : entity is "MB_FD";
end microblaze_mcs_1_MB_FD_318;

architecture STRUCTURE of microblaze_mcs_1_MB_FD_318 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_Result(0),
      Q => D(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_FD_321 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_FD_321 : entity is "MB_FD";
end microblaze_mcs_1_MB_FD_321;

architecture STRUCTURE of microblaze_mcs_1_MB_FD_321 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_Result(0),
      Q => D(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT2 is
  port (
    sel_LSB : out STD_LOGIC_VECTOR ( 0 to 0 );
    byte_selects_0 : in STD_LOGIC;
    isbyte : in STD_LOGIC
  );
end microblaze_mcs_1_MB_LUT2;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT2 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => byte_selects_0,
      I1 => isbyte,
      O => sel_LSB(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT4 is
  port (
    write_Reg_I_S : out STD_LOGIC;
    DReady : in STD_LOGIC;
    write_Reg_reg : in STD_LOGIC;
    \write_Addr_I_reg[2]\ : in STD_LOGIC;
    writing_reg : in STD_LOGIC
  );
end microblaze_mcs_1_MB_LUT4;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT4 is
  signal I183_in : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F800"
    )
        port map (
      I0 => DReady,
      I1 => I183_in,
      I2 => write_Reg_reg,
      I3 => \write_Addr_I_reg[2]\,
      O => write_Reg_I_S
    );
\Using_FPGA.Native_i_1__56\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => writing_reg,
      O => I183_in
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized1\ is
  port (
    opsel1_SPR_Select_1 : out STD_LOGIC;
    instr_OF : in STD_LOGIC_VECTOR ( 3 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized1\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized1\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized1\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2000"
    )
        port map (
      I0 => instr_OF(3),
      I1 => instr_OF(2),
      I2 => instr_OF(1),
      I3 => instr_OF(0),
      O => opsel1_SPR_Select_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized11\ is
  port (
    force_DI2 : out STD_LOGIC;
    force_Val2_N : in STD_LOGIC;
    ex_Valid : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized11\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized11\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized11\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AABA"
    )
        port map (
      I0 => '0',
      I1 => force_Val2_N,
      I2 => ex_Valid,
      I3 => '0',
      O => force_DI2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized13\ is
  port (
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 0 );
    Compare_Instr_reg : in STD_LOGIC;
    alu_AddSub_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized13\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized13\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized13\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FA0A"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => Compare_Instr_reg,
      I3 => alu_AddSub_1,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized15\ is
  port (
    logic_Res_i : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized15\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized15\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized15\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => op2_C(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => Logic_Oper(1),
      I3 => Logic_Oper(0),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized15_106\ is
  port (
    logic_Res_i : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized15_106\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized15_106\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized15_106\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => op2_C(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => Logic_Oper(1),
      I3 => Logic_Oper(0),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized15_109\ is
  port (
    logic_Res_i : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized15_109\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized15_109\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized15_109\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => op2_C(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => Logic_Oper(1),
      I3 => Logic_Oper(0),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized15_112\ is
  port (
    logic_Res_i : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized15_112\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized15_112\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized15_112\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => op2_C(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => Logic_Oper(1),
      I3 => Logic_Oper(0),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized15_115\ is
  port (
    logic_Res_i : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized15_115\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized15_115\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized15_115\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => op2_C(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => Logic_Oper(1),
      I3 => Logic_Oper(0),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized15_118\ is
  port (
    logic_Res_i : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized15_118\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized15_118\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized15_118\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => op2_C(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => Logic_Oper(1),
      I3 => Logic_Oper(0),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized15_121\ is
  port (
    logic_Res_i : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized15_121\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized15_121\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized15_121\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => op2_C(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => Logic_Oper(1),
      I3 => Logic_Oper(0),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized15_124\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC;
    Op1_Logic : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized15_124\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized15_124\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized15_124\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2,
      I1 => Op1_Logic,
      I2 => Logic_Oper(1),
      I3 => Logic_Oper(0),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized15_127\ is
  port (
    logic_Res_i : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized15_127\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized15_127\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized15_127\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => Logic_Oper(1),
      I3 => Logic_Oper(0),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized15_130\ is
  port (
    logic_Res_i : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized15_130\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized15_130\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized15_130\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => op2_C(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => Logic_Oper(1),
      I3 => Logic_Oper(0),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized15_133\ is
  port (
    logic_Res_i : out STD_LOGIC;
    Op2 : in STD_LOGIC;
    Shifted : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized15_133\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized15_133\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized15_133\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => Op2,
      I1 => Shifted,
      I2 => Logic_Oper(1),
      I3 => Logic_Oper(0),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized15_136\ is
  port (
    logic_Res_i : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Op1_Shift : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized15_136\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized15_136\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized15_136\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => Op1_Shift,
      I2 => Logic_Oper(1),
      I3 => Logic_Oper(0),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized15_139\ is
  port (
    logic_Res_i : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized15_139\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized15_139\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized15_139\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => op2_C(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => Logic_Oper(1),
      I3 => Logic_Oper(0),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized15_142\ is
  port (
    logic_Res_i : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized15_142\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized15_142\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized15_142\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => op2_C(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => Logic_Oper(1),
      I3 => Logic_Oper(0),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized15_145\ is
  port (
    logic_Res_i : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized15_145\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized15_145\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized15_145\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => op2_C(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => Logic_Oper(1),
      I3 => Logic_Oper(0),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized15_148\ is
  port (
    logic_Res_i : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized15_148\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized15_148\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized15_148\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => op2_C(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => Logic_Oper(1),
      I3 => Logic_Oper(0),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized15_151\ is
  port (
    logic_Res_i : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized15_151\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized15_151\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized15_151\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => op2_C(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => Logic_Oper(1),
      I3 => Logic_Oper(0),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized15_154\ is
  port (
    logic_Res_i : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized15_154\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized15_154\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized15_154\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => op2_C(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => Logic_Oper(1),
      I3 => Logic_Oper(0),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized15_157\ is
  port (
    logic_Res_i : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized15_157\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized15_157\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized15_157\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => op2_C(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => Logic_Oper(1),
      I3 => Logic_Oper(0),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized15_160\ is
  port (
    logic_Res_i : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized15_160\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized15_160\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized15_160\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => op2_C(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => Logic_Oper(1),
      I3 => Logic_Oper(0),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized15_163\ is
  port (
    logic_Res_i : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized15_163\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized15_163\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized15_163\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => op2_C(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => Logic_Oper(1),
      I3 => Logic_Oper(0),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized15_166\ is
  port (
    logic_Res_i : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized15_166\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized15_166\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized15_166\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => op2_C(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => Logic_Oper(1),
      I3 => Logic_Oper(0),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized15_169\ is
  port (
    logic_Res_i : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized15_169\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized15_169\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized15_169\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => op2_C(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => Logic_Oper(1),
      I3 => Logic_Oper(0),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized15_172\ is
  port (
    logic_Res_i : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized15_172\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized15_172\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized15_172\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => op2_C(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => Logic_Oper(1),
      I3 => Logic_Oper(0),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized15_175\ is
  port (
    logic_Res_i : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized15_175\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized15_175\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized15_175\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => op2_C(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => Logic_Oper(1),
      I3 => Logic_Oper(0),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized15_178\ is
  port (
    logic_Res_i : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized15_178\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized15_178\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized15_178\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => op2_C(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => Logic_Oper(1),
      I3 => Logic_Oper(0),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized15_181\ is
  port (
    logic_Res_i : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized15_181\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized15_181\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized15_181\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => op2_C(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => Logic_Oper(1),
      I3 => Logic_Oper(0),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized15_184\ is
  port (
    logic_Res_i : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized15_184\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized15_184\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized15_184\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => op2_C(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => Logic_Oper(1),
      I3 => Logic_Oper(0),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized15_187\ is
  port (
    logic_Res_i : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized15_187\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized15_187\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized15_187\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => op2_C(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => Logic_Oper(1),
      I3 => Logic_Oper(0),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized15_190\ is
  port (
    logic_Res_i : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized15_190\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized15_190\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized15_190\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => op2_C(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => Logic_Oper(1),
      I3 => Logic_Oper(0),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized15_193\ is
  port (
    logic_Res_i : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized15_193\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized15_193\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized15_193\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => op2_C(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => Logic_Oper(1),
      I3 => Logic_Oper(0),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized15_196\ is
  port (
    logic_Res_i : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized15_196\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized15_196\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized15_196\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => op2_C(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => Logic_Oper(1),
      I3 => Logic_Oper(0),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized17\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized17\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized17\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized17\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => Sext,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized17_107\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized17_107\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized17_107\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized17_107\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => Sext,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized17_110\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized17_110\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized17_110\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized17_110\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => Sext,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized17_113\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized17_113\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized17_113\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized17_113\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => Sext,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized17_116\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized17_116\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized17_116\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized17_116\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => Sext,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized17_119\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized17_119\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized17_119\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized17_119\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => Sext,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized17_122\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized17_122\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized17_122\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized17_122\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => Sext,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized17_125\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Op1_Logic : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized17_125\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized17_125\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized17_125\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => Op1_Logic,
      I2 => '0',
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized17_128\ is
  port (
    shift_Res : out STD_LOGIC;
    Shifted : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized17_128\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized17_128\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized17_128\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => Shifted,
      I1 => \Using_FPGA.Native_0\,
      I2 => '0',
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized17_131\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized17_131\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized17_131\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized17_131\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => Sext,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized17_134\ is
  port (
    shift_Res : out STD_LOGIC;
    Op1_Shift : in STD_LOGIC;
    Shifted : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized17_134\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized17_134\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized17_134\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => Op1_Shift,
      I1 => Shifted,
      I2 => '0',
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized17_137\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Op1_Shift : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized17_137\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized17_137\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized17_137\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => Op1_Shift,
      I2 => '0',
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized17_140\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized17_140\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized17_140\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized17_140\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => '0',
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized17_143\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized17_143\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized17_143\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized17_143\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => '0',
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized17_146\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized17_146\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized17_146\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized17_146\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => '0',
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized17_149\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized17_149\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized17_149\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized17_149\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => '0',
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized17_152\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized17_152\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized17_152\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized17_152\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => Sext,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized17_155\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized17_155\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized17_155\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized17_155\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => Sext,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized17_158\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized17_158\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized17_158\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized17_158\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => Sext,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized17_161\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized17_161\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized17_161\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized17_161\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => Sext,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized17_164\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized17_164\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized17_164\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized17_164\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => Sext,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized17_167\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized17_167\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized17_167\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized17_167\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => Sext,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized17_170\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized17_170\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized17_170\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized17_170\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => Sext,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized17_173\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized17_173\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized17_173\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized17_173\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => Sext,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized17_176\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized17_176\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized17_176\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized17_176\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => Sext,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized17_179\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized17_179\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized17_179\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized17_179\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => Sext,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized17_182\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized17_182\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized17_182\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized17_182\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => Sext,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized17_185\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized17_185\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized17_185\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized17_185\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => Sext,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized17_188\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized17_188\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized17_188\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized17_188\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => Sext,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized17_191\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized17_191\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized17_191\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized17_191\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => Sext,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized17_194\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized17_194\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized17_194\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized17_194\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => Sext,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized17_197\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized17_197\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized17_197\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized17_197\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => Sext,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized19\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized19\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized19\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized19\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized19_232\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized19_232\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized19_232\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized19_232\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized19_235\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized19_235\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized19_235\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized19_235\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized19_238\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized19_238\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized19_238\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized19_238\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized19_241\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized19_241\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized19_241\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized19_241\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized19_244\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized19_244\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized19_244\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized19_244\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized19_247\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized19_247\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized19_247\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized19_247\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized19_250\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    ALU_Result : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized19_250\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized19_250\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized19_250\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => Q(0),
      I3 => ALU_Result,
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized19_253\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized19_253\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized19_253\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized19_253\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\,
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized19_256\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized19_256\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized19_256\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized19_256\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized19_259\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized19_259\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized19_259\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized19_259\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized19_262\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized19_262\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized19_262\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized19_262\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized19_265\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized19_265\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized19_265\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized19_265\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized19_268\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized19_268\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized19_268\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized19_268\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized19_271\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized19_271\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized19_271\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized19_271\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized19_274\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized19_274\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized19_274\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized19_274\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized19_277\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized19_277\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized19_277\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized19_277\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized19_280\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized19_280\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized19_280\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized19_280\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized19_283\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized19_283\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized19_283\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized19_283\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized19_286\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized19_286\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized19_286\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized19_286\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized19_289\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized19_289\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized19_289\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized19_289\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized19_292\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized19_292\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized19_292\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized19_292\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized19_295\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized19_295\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized19_295\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized19_295\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized19_298\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized19_298\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized19_298\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized19_298\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized19_301\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized19_301\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized19_301\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized19_301\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized19_304\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized19_304\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized19_304\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized19_304\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized19_307\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized19_307\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized19_307\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized19_307\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized19_310\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized19_310\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized19_310\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized19_310\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized19_313\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized19_313\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized19_313\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized19_313\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized19_316\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized19_316\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized19_316\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized19_316\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized19_319\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized19_319\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized19_319\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized19_319\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized19_322\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized19_322\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized19_322\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized19_322\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized21\ is
  port (
    S : out STD_LOGIC;
    Increment : in STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized21\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized21\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized21\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => Increment,
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized21_436\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized21_436\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized21_436\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized21_436\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized21_442\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized21_442\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized21_442\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized21_442\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized21_448\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized21_448\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized21_448\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized21_448\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized21_454\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized21_454\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized21_454\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized21_454\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized21_460\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized21_460\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized21_460\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized21_460\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized21_466\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized21_466\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized21_466\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized21_466\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized21_472\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized21_472\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized21_472\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized21_472\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized21_478\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized21_478\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized21_478\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized21_478\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized21_484\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized21_484\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized21_484\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized21_484\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized21_490\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized21_490\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized21_490\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized21_490\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized21_496\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized21_496\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized21_496\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized21_496\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized21_502\ is
  port (
    xor_Sum : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized21_502\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized21_502\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized21_502\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => xor_Sum
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized23\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized23\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized23\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized23\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \Using_FPGA.Native_0\(0),
      I2 => jump,
      I3 => '0',
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized23_433\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized23_433\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized23_433\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized23_433\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \Using_FPGA.Native_0\(0),
      I2 => jump,
      I3 => '0',
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized23_439\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized23_439\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized23_439\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized23_439\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \Using_FPGA.Native_0\(0),
      I2 => jump,
      I3 => '0',
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized23_445\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized23_445\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized23_445\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized23_445\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \Using_FPGA.Native_0\(0),
      I2 => jump,
      I3 => '0',
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized23_451\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized23_451\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized23_451\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized23_451\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \Using_FPGA.Native_0\(0),
      I2 => jump,
      I3 => '0',
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized23_457\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized23_457\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized23_457\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized23_457\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \Using_FPGA.Native_0\(0),
      I2 => jump,
      I3 => '0',
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized23_463\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized23_463\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized23_463\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized23_463\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \Using_FPGA.Native_0\(0),
      I2 => jump,
      I3 => '0',
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized23_469\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized23_469\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized23_469\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized23_469\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \Using_FPGA.Native_0\(0),
      I2 => jump,
      I3 => '0',
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized23_475\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized23_475\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized23_475\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized23_475\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \Using_FPGA.Native_0\(0),
      I2 => jump,
      I3 => '0',
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized23_481\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized23_481\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized23_481\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized23_481\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \Using_FPGA.Native_0\(0),
      I2 => jump,
      I3 => '0',
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized23_487\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized23_487\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized23_487\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized23_487\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \Using_FPGA.Native_0\(0),
      I2 => jump,
      I3 => '0',
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized23_493\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized23_493\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized23_493\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized23_493\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \Using_FPGA.Native_0\(0),
      I2 => jump,
      I3 => '0',
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized23_499\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    pc_Sum : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized23_499\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized23_499\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized23_499\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => pc_Sum,
      I1 => \Using_FPGA.Native_0\(0),
      I2 => jump,
      I3 => '0',
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized3\ is
  port (
    opsel1_SPR_Select_2_1 : out STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 3 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized3\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized3\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized3\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0200"
    )
        port map (
      I0 => D(3),
      I1 => D(2),
      I2 => D(1),
      I3 => D(0),
      O => opsel1_SPR_Select_2_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized3_28\ is
  port (
    force_jump2 : out STD_LOGIC;
    ex_Valid : in STD_LOGIC;
    force2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized3_28\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized3_28\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized3_28\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0200"
    )
        port map (
      I0 => ex_Valid,
      I1 => '0',
      I2 => '0',
      I3 => force2,
      O => force_jump2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized5\ is
  port (
    res_forward1_1 : out STD_LOGIC;
    reg1_Addr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized5\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized5\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized5\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8421"
    )
        port map (
      I0 => reg1_Addr(1),
      I1 => reg1_Addr(0),
      I2 => Q(1),
      I3 => Q(0),
      O => res_forward1_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized5_15\ is
  port (
    res_forward1_2 : out STD_LOGIC;
    reg1_Addr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \write_Addr_I_reg[3]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized5_15\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized5_15\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized5_15\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8421"
    )
        port map (
      I0 => reg1_Addr(1),
      I1 => reg1_Addr(0),
      I2 => Q(0),
      I3 => \write_Addr_I_reg[3]\,
      O => res_forward1_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized5_16\ is
  port (
    res_forward2_1 : out STD_LOGIC;
    imm_Value : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized5_16\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized5_16\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized5_16\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8421"
    )
        port map (
      I0 => imm_Value(1),
      I1 => imm_Value(0),
      I2 => Q(1),
      I3 => Q(0),
      O => res_forward2_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized5_17\ is
  port (
    res_forward2_2 : out STD_LOGIC;
    imm_Value : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \write_Addr_I_reg[3]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized5_17\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized5_17\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized5_17\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8421"
    )
        port map (
      I0 => imm_Value(1),
      I1 => imm_Value(0),
      I2 => Q(0),
      I3 => \write_Addr_I_reg[3]\,
      O => res_forward2_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized7\ is
  port (
    res_Forward1 : out STD_LOGIC;
    res_forward1_1 : in STD_LOGIC;
    res_forward1_2 : in STD_LOGIC;
    res_forward1_3 : in STD_LOGIC;
    write_Reg_I_S : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized7\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized7\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized7\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8000"
    )
        port map (
      I0 => res_forward1_1,
      I1 => res_forward1_2,
      I2 => res_forward1_3,
      I3 => write_Reg_I_S,
      O => res_Forward1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized7_19\ is
  port (
    res_Forward2 : out STD_LOGIC;
    res_forward2_1 : in STD_LOGIC;
    res_forward2_2 : in STD_LOGIC;
    res_forward2_3 : in STD_LOGIC;
    write_Reg_I_S : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized7_19\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized7_19\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized7_19\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8000"
    )
        port map (
      I0 => res_forward2_1,
      I1 => res_forward2_2,
      I2 => res_forward2_3,
      I3 => write_Reg_I_S,
      O => res_Forward2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT4__parameterized9\ is
  port (
    correct_Carry_Select : out STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT4__parameterized9\ : entity is "MB_LUT4";
end \microblaze_mcs_1_MB_LUT4__parameterized9\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT4__parameterized9\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00F0"
    )
        port map (
      I0 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\,
      I2 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\,
      I3 => '0',
      O => correct_Carry_Select
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT5 is
  port (
    of_PipeRun_Select : out STD_LOGIC;
    mul_Executing : in STD_LOGIC;
    of_Valid_Raw : in STD_LOGIC;
    load_Store_i : in STD_LOGIC;
    of_Pause : in STD_LOGIC
  );
end microblaze_mcs_1_MB_LUT5;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT5 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000040"
    )
        port map (
      I0 => mul_Executing,
      I1 => of_Valid_Raw,
      I2 => load_Store_i,
      I3 => '0',
      I4 => of_Pause,
      O => of_PipeRun_Select
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT5__parameterized1\ is
  port (
    of_PipeRun_without_dready : out STD_LOGIC;
    mul_Executing : in STD_LOGIC;
    of_Valid_Raw : in STD_LOGIC;
    load_Store_i : in STD_LOGIC;
    of_Pause : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT5__parameterized1\ : entity is "MB_LUT5";
end \microblaze_mcs_1_MB_LUT5__parameterized1\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT5__parameterized1\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000004"
    )
        port map (
      I0 => mul_Executing,
      I1 => of_Valid_Raw,
      I2 => load_Store_i,
      I3 => '0',
      I4 => of_Pause,
      O => of_PipeRun_without_dready
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT6_2 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
end microblaze_mcs_1_MB_LUT6_2;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT6_2 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => ex_Result(0),
      I2 => res_Forward1,
      I3 => '0',
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT6_2_532 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_LUT6_2_532 : entity is "MB_LUT6_2";
end microblaze_mcs_1_MB_LUT6_2_532;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT6_2_532 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => ex_Result(0),
      I2 => res_Forward1,
      I3 => '0',
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT6_2_536 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_LUT6_2_536 : entity is "MB_LUT6_2";
end microblaze_mcs_1_MB_LUT6_2_536;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT6_2_536 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => ex_Result(0),
      I2 => res_Forward1,
      I3 => '0',
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT6_2_540 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_LUT6_2_540 : entity is "MB_LUT6_2";
end microblaze_mcs_1_MB_LUT6_2_540;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT6_2_540 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => ex_Result(0),
      I2 => res_Forward1,
      I3 => '0',
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT6_2_544 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_LUT6_2_544 : entity is "MB_LUT6_2";
end microblaze_mcs_1_MB_LUT6_2_544;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT6_2_544 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => ex_Result(0),
      I2 => res_Forward1,
      I3 => '0',
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT6_2_548 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_LUT6_2_548 : entity is "MB_LUT6_2";
end microblaze_mcs_1_MB_LUT6_2_548;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT6_2_548 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => ex_Result(0),
      I2 => res_Forward1,
      I3 => '0',
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT6_2_552 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_LUT6_2_552 : entity is "MB_LUT6_2";
end microblaze_mcs_1_MB_LUT6_2_552;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT6_2_552 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => ex_Result(0),
      I2 => res_Forward1,
      I3 => '0',
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT6_2_556 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_LUT6_2_556 : entity is "MB_LUT6_2";
end microblaze_mcs_1_MB_LUT6_2_556;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT6_2_556 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => ex_Result(0),
      I2 => res_Forward1,
      I3 => '0',
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT6_2_560 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_LUT6_2_560 : entity is "MB_LUT6_2";
end microblaze_mcs_1_MB_LUT6_2_560;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT6_2_560 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => ex_Result(0),
      I2 => res_Forward1,
      I3 => I3,
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT6_2_564 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_LUT6_2_564 : entity is "MB_LUT6_2";
end microblaze_mcs_1_MB_LUT6_2_564;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT6_2_564 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => ex_Result(0),
      I2 => res_Forward1,
      I3 => '0',
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT6_2_568 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3_0 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_LUT6_2_568 : entity is "MB_LUT6_2";
end microblaze_mcs_1_MB_LUT6_2_568;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT6_2_568 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => ex_Result(0),
      I2 => res_Forward1,
      I3 => I3_0,
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT6_2_572 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3_1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_LUT6_2_572 : entity is "MB_LUT6_2";
end microblaze_mcs_1_MB_LUT6_2_572;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT6_2_572 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => ex_Result(0),
      I2 => res_Forward1,
      I3 => I3_1,
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT6_2_576 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3_2 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_LUT6_2_576 : entity is "MB_LUT6_2";
end microblaze_mcs_1_MB_LUT6_2_576;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT6_2_576 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => ex_Result(0),
      I2 => res_Forward1,
      I3 => I3_2,
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT6_2_580 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3_3 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_LUT6_2_580 : entity is "MB_LUT6_2";
end microblaze_mcs_1_MB_LUT6_2_580;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT6_2_580 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => ex_Result(0),
      I2 => res_Forward1,
      I3 => I3_3,
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT6_2_584 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3_4 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_LUT6_2_584 : entity is "MB_LUT6_2";
end microblaze_mcs_1_MB_LUT6_2_584;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT6_2_584 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => ex_Result(0),
      I2 => res_Forward1,
      I3 => I3_4,
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT6_2_588 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3_5 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_LUT6_2_588 : entity is "MB_LUT6_2";
end microblaze_mcs_1_MB_LUT6_2_588;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT6_2_588 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => ex_Result(0),
      I2 => res_Forward1,
      I3 => I3_5,
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT6_2_592 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    PC_OF : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_LUT6_2_592 : entity is "MB_LUT6_2";
end microblaze_mcs_1_MB_LUT6_2_592;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT6_2_592 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => ex_Result(0),
      I2 => res_Forward1,
      I3 => PC_OF,
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT6_2_596 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_LUT6_2_596 : entity is "MB_LUT6_2";
end microblaze_mcs_1_MB_LUT6_2_596;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT6_2_596 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => ex_Result(0),
      I2 => res_Forward1,
      I3 => \Using_FPGA.Native_0\,
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT6_2_600 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_LUT6_2_600 : entity is "MB_LUT6_2";
end microblaze_mcs_1_MB_LUT6_2_600;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT6_2_600 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => ex_Result(0),
      I2 => res_Forward1,
      I3 => \Using_FPGA.Native_0\,
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT6_2_604 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_LUT6_2_604 : entity is "MB_LUT6_2";
end microblaze_mcs_1_MB_LUT6_2_604;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT6_2_604 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => ex_Result(0),
      I2 => res_Forward1,
      I3 => \Using_FPGA.Native_0\,
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT6_2_608 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_LUT6_2_608 : entity is "MB_LUT6_2";
end microblaze_mcs_1_MB_LUT6_2_608;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT6_2_608 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => ex_Result(0),
      I2 => res_Forward1,
      I3 => '0',
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT6_2_612 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_LUT6_2_612 : entity is "MB_LUT6_2";
end microblaze_mcs_1_MB_LUT6_2_612;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT6_2_612 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => ex_Result(0),
      I2 => res_Forward1,
      I3 => \Using_FPGA.Native_0\,
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT6_2_616 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_LUT6_2_616 : entity is "MB_LUT6_2";
end microblaze_mcs_1_MB_LUT6_2_616;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT6_2_616 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => ex_Result(0),
      I2 => res_Forward1,
      I3 => \Using_FPGA.Native_0\,
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT6_2_620 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_LUT6_2_620 : entity is "MB_LUT6_2";
end microblaze_mcs_1_MB_LUT6_2_620;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT6_2_620 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => ex_Result(0),
      I2 => res_Forward1,
      I3 => \Using_FPGA.Native_0\,
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT6_2_624 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_LUT6_2_624 : entity is "MB_LUT6_2";
end microblaze_mcs_1_MB_LUT6_2_624;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT6_2_624 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => ex_Result(0),
      I2 => res_Forward1,
      I3 => '0',
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT6_2_628 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_LUT6_2_628 : entity is "MB_LUT6_2";
end microblaze_mcs_1_MB_LUT6_2_628;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT6_2_628 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => ex_Result(0),
      I2 => res_Forward1,
      I3 => '0',
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT6_2_632 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_LUT6_2_632 : entity is "MB_LUT6_2";
end microblaze_mcs_1_MB_LUT6_2_632;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT6_2_632 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => ex_Result(0),
      I2 => res_Forward1,
      I3 => '0',
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT6_2_636 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_LUT6_2_636 : entity is "MB_LUT6_2";
end microblaze_mcs_1_MB_LUT6_2_636;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT6_2_636 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => ex_Result(0),
      I2 => res_Forward1,
      I3 => '0',
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT6_2_640 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_LUT6_2_640 : entity is "MB_LUT6_2";
end microblaze_mcs_1_MB_LUT6_2_640;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT6_2_640 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => ex_Result(0),
      I2 => res_Forward1,
      I3 => '0',
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT6_2_644 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_LUT6_2_644 : entity is "MB_LUT6_2";
end microblaze_mcs_1_MB_LUT6_2_644;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT6_2_644 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => ex_Result(0),
      I2 => res_Forward1,
      I3 => '0',
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT6_2_648 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_LUT6_2_648 : entity is "MB_LUT6_2";
end microblaze_mcs_1_MB_LUT6_2_648;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT6_2_648 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => ex_Result(0),
      I2 => res_Forward1,
      I3 => '0',
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_LUT6_2_652 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3_6 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_LUT6_2_652 : entity is "MB_LUT6_2";
end microblaze_mcs_1_MB_LUT6_2_652;

architecture STRUCTURE of microblaze_mcs_1_MB_LUT6_2_652 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => ex_Result(0),
      I2 => res_Forward1,
      I3 => I3_6,
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized10\ is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    byte_selects_1 : in STD_LOGIC;
    byte_selects_0 : in STD_LOGIC;
    isbyte : in STD_LOGIC;
    isdoublet : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized10\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized10\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized10\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"151F151F454F454F"
    )
        port map (
      I0 => byte_selects_1,
      I1 => byte_selects_0,
      I2 => isbyte,
      I3 => isdoublet,
      I4 => '0',
      I5 => '1',
      O5 => D(0),
      O6 => D(1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized12\ is
  port (
    sel_Write_Mux_MSB : out STD_LOGIC_VECTOR ( 1 downto 0 );
    isbyte : in STD_LOGIC;
    isdoublet : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized12\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized12\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized12\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"1111111155555555"
    )
        port map (
      I0 => isbyte,
      I1 => isdoublet,
      I2 => '0',
      I3 => '0',
      I4 => '0',
      I5 => '1',
      O5 => sel_Write_Mux_MSB(0),
      O6 => sel_Write_Mux_MSB(1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized14\ is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    isbyte : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized14\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized14\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized14\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \write_Addr_I_reg[0]\(3),
      I1 => \write_Addr_I_reg[0]\(1),
      I2 => \write_Addr_I_reg[0]\(2),
      I3 => \write_Addr_I_reg[0]\(0),
      I4 => isbyte,
      I5 => '1',
      O5 => D(1),
      O6 => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized14_756\ is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    isbyte : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized14_756\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized14_756\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized14_756\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \write_Addr_I_reg[0]\(3),
      I1 => \write_Addr_I_reg[0]\(1),
      I2 => \write_Addr_I_reg[0]\(2),
      I3 => \write_Addr_I_reg[0]\(0),
      I4 => isbyte,
      I5 => '1',
      O5 => D(1),
      O6 => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized14_757\ is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    isbyte : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized14_757\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized14_757\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized14_757\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \write_Addr_I_reg[0]\(3),
      I1 => \write_Addr_I_reg[0]\(1),
      I2 => \write_Addr_I_reg[0]\(2),
      I3 => \write_Addr_I_reg[0]\(0),
      I4 => isbyte,
      I5 => '1',
      O5 => D(1),
      O6 => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized14_758\ is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    isbyte : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized14_758\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized14_758\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized14_758\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \write_Addr_I_reg[0]\(3),
      I1 => \write_Addr_I_reg[0]\(1),
      I2 => \write_Addr_I_reg[0]\(2),
      I3 => \write_Addr_I_reg[0]\(0),
      I4 => isbyte,
      I5 => '1',
      O5 => D(1),
      O6 => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized14_759\ is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    sel_Write_Mux_MSB : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized14_759\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized14_759\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized14_759\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \write_Addr_I_reg[0]\(0),
      I1 => \write_Addr_I_reg[0]\(2),
      I2 => \write_Addr_I_reg[0]\(1),
      I3 => \write_Addr_I_reg[0]\(3),
      I4 => sel_Write_Mux_MSB(1),
      I5 => sel_Write_Mux_MSB(0),
      O5 => D(0),
      O6 => D(1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized14_760\ is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    sel_Write_Mux_MSB : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized14_760\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized14_760\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized14_760\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \write_Addr_I_reg[0]\(0),
      I1 => \write_Addr_I_reg[0]\(2),
      I2 => \write_Addr_I_reg[0]\(1),
      I3 => \write_Addr_I_reg[0]\(3),
      I4 => sel_Write_Mux_MSB(1),
      I5 => sel_Write_Mux_MSB(0),
      O5 => D(0),
      O6 => D(1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized14_761\ is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    sel_Write_Mux_MSB : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized14_761\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized14_761\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized14_761\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \write_Addr_I_reg[0]\(0),
      I1 => \write_Addr_I_reg[0]\(2),
      I2 => \write_Addr_I_reg[0]\(1),
      I3 => \write_Addr_I_reg[0]\(3),
      I4 => sel_Write_Mux_MSB(1),
      I5 => sel_Write_Mux_MSB(0),
      O5 => D(0),
      O6 => D(1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized14_762\ is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    sel_Write_Mux_MSB : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized14_762\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized14_762\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized14_762\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \write_Addr_I_reg[0]\(0),
      I1 => \write_Addr_I_reg[0]\(2),
      I2 => \write_Addr_I_reg[0]\(1),
      I3 => \write_Addr_I_reg[0]\(3),
      I4 => sel_Write_Mux_MSB(1),
      I5 => sel_Write_Mux_MSB(0),
      O5 => D(0),
      O6 => D(1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized14_763\ is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    sel_Write_Mux_MSB : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized14_763\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized14_763\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized14_763\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \write_Addr_I_reg[0]\(0),
      I1 => \write_Addr_I_reg[0]\(2),
      I2 => \write_Addr_I_reg[0]\(1),
      I3 => \write_Addr_I_reg[0]\(3),
      I4 => sel_Write_Mux_MSB(1),
      I5 => sel_Write_Mux_MSB(0),
      O5 => D(0),
      O6 => D(1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized14_764\ is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    sel_Write_Mux_MSB : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized14_764\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized14_764\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized14_764\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \write_Addr_I_reg[0]\(0),
      I1 => \write_Addr_I_reg[0]\(2),
      I2 => \write_Addr_I_reg[0]\(1),
      I3 => \write_Addr_I_reg[0]\(3),
      I4 => sel_Write_Mux_MSB(1),
      I5 => sel_Write_Mux_MSB(0),
      O5 => D(0),
      O6 => D(1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized14_765\ is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    sel_Write_Mux_MSB : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized14_765\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized14_765\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized14_765\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \write_Addr_I_reg[0]\(0),
      I1 => \write_Addr_I_reg[0]\(2),
      I2 => \write_Addr_I_reg[0]\(1),
      I3 => \write_Addr_I_reg[0]\(3),
      I4 => sel_Write_Mux_MSB(1),
      I5 => sel_Write_Mux_MSB(0),
      O5 => D(0),
      O6 => D(1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized14_766\ is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    sel_Write_Mux_MSB : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized14_766\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized14_766\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized14_766\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \write_Addr_I_reg[0]\(0),
      I1 => \write_Addr_I_reg[0]\(2),
      I2 => \write_Addr_I_reg[0]\(1),
      I3 => \write_Addr_I_reg[0]\(3),
      I4 => sel_Write_Mux_MSB(1),
      I5 => sel_Write_Mux_MSB(0),
      O5 => D(0),
      O6 => D(1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized16\ is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    low_addr_i_0 : in STD_LOGIC;
    low_addr_i_1 : in STD_LOGIC;
    isbyte : in STD_LOGIC;
    isdoublet : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized16\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized16\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized16\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"0CC00CC000A000A0"
    )
        port map (
      I0 => low_addr_i_0,
      I1 => low_addr_i_1,
      I2 => isbyte,
      I3 => isdoublet,
      I4 => '0',
      I5 => '1',
      O5 => D(0),
      O6 => D(1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized2\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized2\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized2\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized2\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized2_693\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized2_693\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized2_693\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized2_693\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized2_695\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized2_695\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized2_695\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized2_695\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized2_697\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized2_697\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized2_697\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized2_697\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized2_699\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized2_699\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized2_699\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized2_699\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized2_701\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized2_701\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized2_701\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized2_701\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized2_703\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized2_703\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized2_703\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized2_703\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized2_705\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC;
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    EX_Op1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized2_705\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized2_705\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized2_705\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => EX_Op2,
      I1 => alu_Op(0),
      I2 => EX_Op1,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized2_707\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized2_707\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized2_707\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized2_707\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => alu_Op(0),
      I2 => \Using_FPGA.Native_1\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized2_709\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized2_709\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized2_709\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized2_709\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized2_711\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized2_711\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized2_711\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized2_711\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => alu_Op(0),
      I2 => \Using_FPGA.Native_1\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized2_713\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    Op1_Shift : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized2_713\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized2_713\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized2_713\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => alu_Op(0),
      I2 => Op1_Shift,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized2_715\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized2_715\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized2_715\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized2_715\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized2_717\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized2_717\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized2_717\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized2_717\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized2_719\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized2_719\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized2_719\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized2_719\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized2_721\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized2_721\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized2_721\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized2_721\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized2_723\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized2_723\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized2_723\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized2_723\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized2_725\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized2_725\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized2_725\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized2_725\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized2_727\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized2_727\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized2_727\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized2_727\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized2_729\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized2_729\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized2_729\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized2_729\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized2_731\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized2_731\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized2_731\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized2_731\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized2_733\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized2_733\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized2_733\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized2_733\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized2_735\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized2_735\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized2_735\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized2_735\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized2_737\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized2_737\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized2_737\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized2_737\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized2_739\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized2_739\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized2_739\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized2_739\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized2_741\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized2_741\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized2_741\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized2_741\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized2_743\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized2_743\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized2_743\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized2_743\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized2_745\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized2_745\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized2_745\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized2_745\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized2_747\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized2_747\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized2_747\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized2_747\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized2_749\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized2_749\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized2_749\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized2_749\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized2_751\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized2_751\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized2_751\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized2_751\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized4\ is
  port (
    low_addr_i_0 : out STD_LOGIC;
    low_addr_i_1 : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC;
    Op1_Low : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized4\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized4\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized4\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"8778877866666666"
    )
        port map (
      I0 => EX_Op2,
      I1 => Op1_Low(1),
      I2 => \Using_FPGA.Native_0\,
      I3 => Op1_Low(0),
      I4 => '0',
      I5 => '1',
      O5 => low_addr_i_0,
      O6 => low_addr_i_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized6\ is
  port (
    byte_selects_0 : out STD_LOGIC;
    byte_selects_1 : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC;
    Op1_Low : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized6\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized6\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized6\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"7887877899996666"
    )
        port map (
      I0 => EX_Op2,
      I1 => Op1_Low(1),
      I2 => \Using_FPGA.Native_0\,
      I3 => Op1_Low(0),
      I4 => '1',
      I5 => '1',
      O5 => byte_selects_0,
      O6 => byte_selects_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_MB_LUT6_2__parameterized8\ is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    byte_selects_1 : in STD_LOGIC;
    byte_selects_0 : in STD_LOGIC;
    isbyte : in STD_LOGIC;
    isdoublet : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_MB_LUT6_2__parameterized8\ : entity is "MB_LUT6_2";
end \microblaze_mcs_1_MB_LUT6_2__parameterized8\;

architecture STRUCTURE of \microblaze_mcs_1_MB_LUT6_2__parameterized8\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"2A2F2A2F8A8F8A8F"
    )
        port map (
      I0 => byte_selects_1,
      I1 => byte_selects_0,
      I2 => isbyte,
      I3 => isdoublet,
      I4 => '0',
      I5 => '1',
      O5 => D(0),
      O6 => D(1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
end microblaze_mcs_1_MB_RAM32X1D;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_354 is
  port (
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_354 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_354;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_354 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_355 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_355 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_355;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_355 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_356 is
  port (
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_356 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_356;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_356 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_357 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_357 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_357;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_357 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_358 is
  port (
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_358 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_358;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_358 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_359 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_359 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_359;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_359 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_360 is
  port (
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_360 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_360;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_360 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_361 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_361 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_361;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_361 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_362 is
  port (
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_362 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_362;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_362 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_363 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_363 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_363;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_363 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_364 is
  port (
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_364 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_364;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_364 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_365 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_365 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_365;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_365 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_366 is
  port (
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_366 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_366;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_366 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_367 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_367 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_367;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_367 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => D(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_368 is
  port (
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_368 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_368;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_368 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_369 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_369 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_369;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_369 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => D(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_370 is
  port (
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_370 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_370;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_370 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_371 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_371 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_371;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_371 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_372 is
  port (
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_372 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_372;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_372 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_373 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_373 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_373;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_373 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => D(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_374 is
  port (
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_374 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_374;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_374 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_375 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_375 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_375;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_375 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => D(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_376 is
  port (
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_376 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_376;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_376 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_377 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_377 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_377;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_377 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => D(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_378 is
  port (
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_378 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_378;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_378 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_379 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_379 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_379;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_379 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => D(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_380 is
  port (
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_380 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_380;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_380 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_381 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_381 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_381;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_381 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => D(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_382 is
  port (
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_382 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_382;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_382 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_383 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_383 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_383;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_383 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => D(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_384 is
  port (
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_384 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_384;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_384 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_385 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_385 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_385;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_385 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_386 is
  port (
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_386 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_386;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_386 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_387 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_387 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_387;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_387 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_388 is
  port (
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_388 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_388;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_388 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_389 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_389 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_389;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_389 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_390 is
  port (
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_390 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_390;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_390 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_391 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_391 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_391;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_391 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_392 is
  port (
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_392 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_392;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_392 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_393 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_393 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_393;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_393 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_394 is
  port (
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_394 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_394;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_394 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_395 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_395 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_395;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_395 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_396 is
  port (
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_396 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_396;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_396 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_397 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_397 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_397;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_397 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_398 is
  port (
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_398 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_398;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_398 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_399 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_399 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_399;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_399 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_400 is
  port (
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_400 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_400;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_400 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_401 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_401 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_401;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_401 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_402 is
  port (
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_402 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_402;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_402 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_403 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_403 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_403;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_403 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_404 is
  port (
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_404 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_404;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_404 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_405 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_405 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_405;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_405 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_406 is
  port (
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_406 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_406;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_406 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_407 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_407 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_407;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_407 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_408 is
  port (
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_408 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_408;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_408 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_409 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_409 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_409;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_409 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_410 is
  port (
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_410 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_410;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_410 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_411 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_411 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_411;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_411 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_412 is
  port (
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_412 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_412;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_412 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_413 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_413 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_413;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_413 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_414 is
  port (
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_414 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_414;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_414 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_415 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_415 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_415;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_415 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_RAM32X1D_416 is
  port (
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_RAM32X1D_416 : entity is "MB_RAM32X1D";
end microblaze_mcs_1_MB_RAM32X1D_416;

architecture STRUCTURE of microblaze_mcs_1_MB_RAM32X1D_416 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[0]\(4),
      A1 => \write_Addr_I_reg[0]\(3),
      A2 => \write_Addr_I_reg[0]\(2),
      A3 => \write_Addr_I_reg[0]\(1),
      A4 => \write_Addr_I_reg[0]\(0),
      D => ex_Result(0),
      DPO => reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E is
  port (
    \Result_Sel_reg[0]\ : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    inHibit_EX_reg : out STD_LOGIC;
    select_ALU_Carry_reg : out STD_LOGIC;
    d_AS_I15_out : out STD_LOGIC;
    byte_i12_out : out STD_LOGIC;
    writing : out STD_LOGIC;
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    take_Intr_Now_III : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\ : in STD_LOGIC;
    of_Pause_reg : in STD_LOGIC;
    inHibit_EX : in STD_LOGIC;
    mul_Executing_reg : in STD_LOGIC
  );
end microblaze_mcs_1_MB_SRL16E;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E is
  signal \^result_sel_reg[0]\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[0].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of doublet_Read_i_i_2 : label is "soft_lutpair15";
  attribute SOFT_HLUTNM of inHibit_EX_i_4 : label is "soft_lutpair16";
  attribute SOFT_HLUTNM of select_ALU_Carry_i_1 : label is "soft_lutpair16";
  attribute SOFT_HLUTNM of writing_i_1 : label is "soft_lutpair15";
begin
  \Result_Sel_reg[0]\ <= \^result_sel_reg[0]\;
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \Using_FPGA.Native_0\,
      A1 => \Using_FPGA.Native_1\,
      A2 => \Using_FPGA.Native_2\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => Instr(0),
      Q => \^result_sel_reg[0]\
    );
\Using_FPGA.Native_i_1__51\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF01005555"
    )
        port map (
      I0 => take_Intr_Now_III,
      I1 => \^result_sel_reg[0]\,
      I2 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\,
      I4 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\,
      I5 => \Using_FPGA.take_Intr_2nd_Phase_reg\,
      O => \Using_FPGA.Native\
    );
d_AS_I_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0070000000000000"
    )
        port map (
      I0 => of_Pause_reg,
      I1 => inHibit_EX,
      I2 => mul_Executing_reg,
      I3 => take_Intr_Now_III,
      I4 => \^result_sel_reg[0]\,
      I5 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      O => d_AS_I15_out
    );
doublet_Read_i_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8AAA"
    )
        port map (
      I0 => mul_Executing_reg,
      I1 => take_Intr_Now_III,
      I2 => \^result_sel_reg[0]\,
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      O => byte_i12_out
    );
inHibit_EX_i_4: unisim.vcomponents.LUT3
    generic map(
      INIT => X"DF"
    )
        port map (
      I0 => \^result_sel_reg[0]\,
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I2 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\,
      O => inHibit_EX_reg
    );
select_ALU_Carry_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^result_sel_reg[0]\,
      O => select_ALU_Carry_reg
    );
writing_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4000"
    )
        port map (
      I0 => take_Intr_Now_III,
      I1 => \^result_sel_reg[0]\,
      I2 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\,
      O => writing
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_37 is
  port (
    \instr_EX_i_reg[10]\ : out STD_LOGIC;
    enable_Interrupts_I : out STD_LOGIC;
    Reg_Test_Equal_i : out STD_LOGIC;
    \write_Addr_I_reg[4]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    take_Intr_Now_III : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_37 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_37;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_37 is
  signal \^instr_ex_i_reg[10]\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[10].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.enable_Interrupts_I_i_1\ : label is "soft_lutpair17";
  attribute SOFT_HLUTNM of \write_Addr_I[4]_i_1\ : label is "soft_lutpair17";
begin
  \instr_EX_i_reg[10]\ <= \^instr_ex_i_reg[10]\;
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \Using_FPGA.Native\,
      A1 => \Using_FPGA.Native_0\,
      A2 => \Using_FPGA.Native_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => Instr(0),
      Q => \^instr_ex_i_reg[10]\
    );
\Using_FPGA.Native_i_1__13__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFF9"
    )
        port map (
      I0 => \^instr_ex_i_reg[10]\,
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\,
      I2 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\,
      I3 => take_Intr_Now_III,
      I4 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\,
      O => Reg_Test_Equal_i
    );
\Using_FPGA.enable_Interrupts_I_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => take_Intr_Now_III,
      I1 => \^instr_ex_i_reg[10]\,
      I2 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      O => enable_Interrupts_I
    );
\write_Addr_I[4]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => \^instr_ex_i_reg[10]\,
      I1 => take_Intr_Now_III,
      I2 => sync_reset,
      O => \write_Addr_I_reg[4]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_38 is
  port (
    \instr_EX_i_reg[11]\ : out STD_LOGIC;
    jump2_I_reg : out STD_LOGIC;
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    S92_out : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_38 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_38;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_38 is
  signal \^instr_ex_i_reg[11]\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[11].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  \instr_EX_i_reg[11]\ <= \^instr_ex_i_reg[11]\;
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \Using_FPGA.Native\,
      A1 => \Using_FPGA.Native_0\,
      A2 => \Using_FPGA.Native_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => Instr(0),
      Q => \^instr_ex_i_reg[11]\
    );
jump2_I_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFABFFFFFFFFFF"
    )
        port map (
      I0 => S92_out,
      I1 => \^instr_ex_i_reg[11]\,
      I2 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\,
      I4 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\,
      I5 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\,
      O => jump2_I_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_39 is
  port (
    \instr_EX_i_reg[12]\ : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_39 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_39;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_39 is
  signal \^instr_ex_i_reg[12]\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[12].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  \instr_EX_i_reg[12]\ <= \^instr_ex_i_reg[12]\;
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \Using_FPGA.Native_0\,
      A1 => \Using_FPGA.Native_1\,
      A2 => \Using_FPGA.Native_2\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => Instr(0),
      Q => \^instr_ex_i_reg[12]\
    );
\Using_FPGA.Native_i_2__2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \^instr_ex_i_reg[12]\,
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      O => \Using_FPGA.Native\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_40 is
  port (
    \instr_EX_i_reg[13]\ : out STD_LOGIC;
    \Using_FPGA.set_BIP_I_reg\ : out STD_LOGIC;
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    mul_Executing_reg : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : in STD_LOGIC;
    \Using_FPGA.set_BIP_I_reg_0\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_40 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_40;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_40 is
  signal \Using_FPGA.set_BIP_I_i_2_n_0\ : STD_LOGIC;
  signal \^instr_ex_i_reg[13]\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[13].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  \instr_EX_i_reg[13]\ <= \^instr_ex_i_reg[13]\;
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \Using_FPGA.Native\,
      A1 => \Using_FPGA.Native_0\,
      A2 => \Using_FPGA.Native_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => Instr(0),
      Q => \^instr_ex_i_reg[13]\
    );
\Using_FPGA.set_BIP_I_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0F01"
    )
        port map (
      I0 => sync_reset,
      I1 => mul_Executing_reg,
      I2 => \Using_FPGA.set_BIP_I_i_2_n_0\,
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      O => \Using_FPGA.set_BIP_I_reg\
    );
\Using_FPGA.set_BIP_I_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FBFBFBFBABFBFBFB"
    )
        port map (
      I0 => \Use_Async_Reset.sync_reset_reg\,
      I1 => \Using_FPGA.set_BIP_I_reg_0\,
      I2 => mul_Executing_reg,
      I3 => \^instr_ex_i_reg[13]\,
      I4 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\,
      I5 => D(0),
      O => \Using_FPGA.set_BIP_I_i_2_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_41 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    mbar_hold_I_reg : out STD_LOGIC;
    of_mbar_decode : out STD_LOGIC;
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    mbar_hold_I_reg_0 : in STD_LOGIC;
    mul_Executing_reg : in STD_LOGIC;
    mul_Executing_reg_0 : in STD_LOGIC;
    take_Intr_Now_III : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_41 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_41;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_41 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^of_mbar_decode\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[14].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  D(0) <= \^d\(0);
  of_mbar_decode <= \^of_mbar_decode\;
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \Using_FPGA.Native\,
      A1 => \Using_FPGA.Native_0\,
      A2 => \Using_FPGA.Native_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => Instr(0),
      Q => \^d\(0)
    );
mbar_decode_I_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => take_Intr_Now_III,
      I1 => \^d\(0),
      I2 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      O => \^of_mbar_decode\
    );
mbar_hold_I_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"44440050"
    )
        port map (
      I0 => sync_reset,
      I1 => \^of_mbar_decode\,
      I2 => mbar_hold_I_reg_0,
      I3 => mul_Executing_reg,
      I4 => mul_Executing_reg_0,
      O => mbar_hold_I_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_42 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_42 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_42;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_42 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[15].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \Using_FPGA.Native\,
      A1 => \Using_FPGA.Native_0\,
      A2 => \Using_FPGA.Native_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => Instr(0),
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_43 is
  port (
    \instr_EX_i_reg[16]\ : out STD_LOGIC;
    D_0 : out STD_LOGIC;
    D_1 : out STD_LOGIC;
    D_2 : out STD_LOGIC;
    D_3 : out STD_LOGIC;
    D_4 : out STD_LOGIC;
    D_5 : out STD_LOGIC;
    D_6 : out STD_LOGIC;
    D_7 : out STD_LOGIC;
    D_8 : out STD_LOGIC;
    D_9 : out STD_LOGIC;
    D_10 : out STD_LOGIC;
    D_11 : out STD_LOGIC;
    D_12 : out STD_LOGIC;
    D_13 : out STD_LOGIC;
    D_14 : out STD_LOGIC;
    D_15 : out STD_LOGIC;
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg\ : in STD_LOGIC;
    \Size_17to32.imm_Reg_reg[0]\ : in STD_LOGIC_VECTOR ( 15 downto 0 );
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    use_Imm_Reg : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_0\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_1\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_2\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_3\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_4\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_5\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_6\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_7\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_8\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_9\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_10\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_11\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_12\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_13\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_14\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_43 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_43;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_43 is
  signal \^instr_ex_i_reg[16]\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[16].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  \instr_EX_i_reg[16]\ <= \^instr_ex_i_reg[16]\;
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \Using_FPGA.Native\,
      A1 => \Using_FPGA.Native_0\,
      A2 => \Using_FPGA.Native_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => Instr(0),
      Q => \^instr_ex_i_reg[16]\
    );
\Using_FPGA.Native_i_1__19\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0CCAACC"
    )
        port map (
      I0 => \^instr_ex_i_reg[16]\,
      I1 => \Using_FPGA.take_Intr_2nd_Phase_reg\,
      I2 => \Size_17to32.imm_Reg_reg[0]\(15),
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I4 => use_Imm_Reg,
      O => D_0
    );
\Using_FPGA.Native_i_1__20\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0CCAACC"
    )
        port map (
      I0 => \^instr_ex_i_reg[16]\,
      I1 => \Using_FPGA.take_Intr_2nd_Phase_reg_0\,
      I2 => \Size_17to32.imm_Reg_reg[0]\(14),
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I4 => use_Imm_Reg,
      O => D_1
    );
\Using_FPGA.Native_i_1__21\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0CCAACC"
    )
        port map (
      I0 => \^instr_ex_i_reg[16]\,
      I1 => \Using_FPGA.take_Intr_2nd_Phase_reg_1\,
      I2 => \Size_17to32.imm_Reg_reg[0]\(13),
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I4 => use_Imm_Reg,
      O => D_2
    );
\Using_FPGA.Native_i_1__22\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0CCAACC"
    )
        port map (
      I0 => \^instr_ex_i_reg[16]\,
      I1 => \Using_FPGA.take_Intr_2nd_Phase_reg_2\,
      I2 => \Size_17to32.imm_Reg_reg[0]\(12),
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I4 => use_Imm_Reg,
      O => D_3
    );
\Using_FPGA.Native_i_1__23\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0CCAACC"
    )
        port map (
      I0 => \^instr_ex_i_reg[16]\,
      I1 => \Using_FPGA.take_Intr_2nd_Phase_reg_3\,
      I2 => \Size_17to32.imm_Reg_reg[0]\(11),
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I4 => use_Imm_Reg,
      O => D_4
    );
\Using_FPGA.Native_i_1__24\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0CCAACC"
    )
        port map (
      I0 => \^instr_ex_i_reg[16]\,
      I1 => \Using_FPGA.take_Intr_2nd_Phase_reg_4\,
      I2 => \Size_17to32.imm_Reg_reg[0]\(10),
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I4 => use_Imm_Reg,
      O => D_5
    );
\Using_FPGA.Native_i_1__25\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0CCAACC"
    )
        port map (
      I0 => \^instr_ex_i_reg[16]\,
      I1 => \Using_FPGA.take_Intr_2nd_Phase_reg_5\,
      I2 => \Size_17to32.imm_Reg_reg[0]\(9),
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I4 => use_Imm_Reg,
      O => D_6
    );
\Using_FPGA.Native_i_1__26\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0CCAACC"
    )
        port map (
      I0 => \^instr_ex_i_reg[16]\,
      I1 => \Using_FPGA.take_Intr_2nd_Phase_reg_6\,
      I2 => \Size_17to32.imm_Reg_reg[0]\(8),
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I4 => use_Imm_Reg,
      O => D_7
    );
\Using_FPGA.Native_i_1__27\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0CCAACC"
    )
        port map (
      I0 => \^instr_ex_i_reg[16]\,
      I1 => \Using_FPGA.take_Intr_2nd_Phase_reg_7\,
      I2 => \Size_17to32.imm_Reg_reg[0]\(7),
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I4 => use_Imm_Reg,
      O => D_8
    );
\Using_FPGA.Native_i_1__28\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0CCAACC"
    )
        port map (
      I0 => \^instr_ex_i_reg[16]\,
      I1 => \Using_FPGA.take_Intr_2nd_Phase_reg_8\,
      I2 => \Size_17to32.imm_Reg_reg[0]\(6),
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I4 => use_Imm_Reg,
      O => D_9
    );
\Using_FPGA.Native_i_1__29\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0CCAACC"
    )
        port map (
      I0 => \^instr_ex_i_reg[16]\,
      I1 => \Using_FPGA.take_Intr_2nd_Phase_reg_9\,
      I2 => \Size_17to32.imm_Reg_reg[0]\(5),
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I4 => use_Imm_Reg,
      O => D_10
    );
\Using_FPGA.Native_i_1__30\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0CCAACC"
    )
        port map (
      I0 => \^instr_ex_i_reg[16]\,
      I1 => \Using_FPGA.take_Intr_2nd_Phase_reg_10\,
      I2 => \Size_17to32.imm_Reg_reg[0]\(4),
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I4 => use_Imm_Reg,
      O => D_11
    );
\Using_FPGA.Native_i_1__31\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0CCAACC"
    )
        port map (
      I0 => \^instr_ex_i_reg[16]\,
      I1 => \Using_FPGA.take_Intr_2nd_Phase_reg_11\,
      I2 => \Size_17to32.imm_Reg_reg[0]\(3),
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I4 => use_Imm_Reg,
      O => D_12
    );
\Using_FPGA.Native_i_1__32\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0CCAACC"
    )
        port map (
      I0 => \^instr_ex_i_reg[16]\,
      I1 => \Using_FPGA.take_Intr_2nd_Phase_reg_12\,
      I2 => \Size_17to32.imm_Reg_reg[0]\(2),
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I4 => use_Imm_Reg,
      O => D_13
    );
\Using_FPGA.Native_i_1__33\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0CCAACC"
    )
        port map (
      I0 => \^instr_ex_i_reg[16]\,
      I1 => \Using_FPGA.take_Intr_2nd_Phase_reg_13\,
      I2 => \Size_17to32.imm_Reg_reg[0]\(1),
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I4 => use_Imm_Reg,
      O => D_14
    );
\Using_FPGA.Native_i_1__34\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0CCAACC"
    )
        port map (
      I0 => \^instr_ex_i_reg[16]\,
      I1 => \Using_FPGA.take_Intr_2nd_Phase_reg_14\,
      I2 => \Size_17to32.imm_Reg_reg[0]\(0),
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I4 => use_Imm_Reg,
      O => D_15
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_430 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_430 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_430;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_430 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.Using_FPGA.PC_GEN[29].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => \Using_FPGA.Native\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_435 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_435 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_435;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_435 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.Using_FPGA.PC_GEN[28].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => \Using_FPGA.Native\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_44 is
  port (
    \instr_EX_i_reg[17]\ : out STD_LOGIC;
    mtsmsr_write_i_reg : out STD_LOGIC;
    D_17 : out STD_LOGIC;
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    mtsmsr_write_i_reg_0 : in STD_LOGIC;
    mul_Executing_reg : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[12]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_44 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_44;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_44 is
  signal \^instr_ex_i_reg[17]\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[17].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  \instr_EX_i_reg[17]\ <= \^instr_ex_i_reg[17]\;
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \Using_FPGA.Native\,
      A1 => \Using_FPGA.Native_0\,
      A2 => \Using_FPGA.Native_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => Instr(0),
      Q => \^instr_ex_i_reg[17]\
    );
\Using_FPGA.Native_i_1__36\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^instr_ex_i_reg[17]\,
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\,
      I2 => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[12]\,
      O => D_17
    );
mtsmsr_write_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A2222222"
    )
        port map (
      I0 => mtsmsr_write_i_reg_0,
      I1 => mul_Executing_reg,
      I2 => \^instr_ex_i_reg[17]\,
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I4 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\,
      O => mtsmsr_write_i_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_441 is
  port (
    PC_OF : out STD_LOGIC;
    I3_2 : out STD_LOGIC;
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_441 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_441;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_441 is
  signal \^pc_of\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.Using_FPGA.PC_GEN[27].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
  PC_OF <= \^pc_of\;
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => \^pc_of\
    );
\Using_FPGA.Native_i_1__10__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^pc_of\,
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      O => I3_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_447 is
  port (
    PC_OF : out STD_LOGIC;
    I3_1 : out STD_LOGIC;
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_447 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_447;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_447 is
  signal \^pc_of\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.Using_FPGA.PC_GEN[26].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
  PC_OF <= \^pc_of\;
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => \^pc_of\
    );
\Using_FPGA.Native_i_1__9__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^pc_of\,
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      O => I3_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_45 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    D_18 : out STD_LOGIC;
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[11]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_45 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_45;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_45 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[18].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  D(0) <= \^d\(0);
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \Using_FPGA.Native\,
      A1 => \Using_FPGA.Native_0\,
      A2 => \Using_FPGA.Native_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => Instr(0),
      Q => \^d\(0)
    );
\Using_FPGA.Native_i_1__37\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I2 => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[11]\,
      O => D_18
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_453 is
  port (
    PC_OF : out STD_LOGIC;
    I3_0 : out STD_LOGIC;
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_453 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_453;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_453 is
  signal \^pc_of\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.Using_FPGA.PC_GEN[25].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
  PC_OF <= \^pc_of\;
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => \^pc_of\
    );
\Using_FPGA.Native_i_1__8__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^pc_of\,
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      O => I3_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_459 is
  port (
    PC_OF : out STD_LOGIC;
    I3 : out STD_LOGIC;
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_459 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_459;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_459 is
  signal \^pc_of\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.Using_FPGA.PC_GEN[24].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
  PC_OF <= \^pc_of\;
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => \^pc_of\
    );
\Using_FPGA.Native_i_1__7__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^pc_of\,
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      O => I3
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_46 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    D_19 : out STD_LOGIC;
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[10]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_46 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_46;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_46 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[19].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  D(0) <= \^d\(0);
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \Using_FPGA.Native\,
      A1 => \Using_FPGA.Native_0\,
      A2 => \Using_FPGA.Native_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => Instr(0),
      Q => \^d\(0)
    );
\Using_FPGA.Native_i_1__38\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I2 => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[10]\,
      O => D_19
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_465 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_465 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_465;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_465 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.Using_FPGA.PC_GEN[23].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => \Using_FPGA.Native\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_47 is
  port (
    \Result_Sel_reg[1]\ : out STD_LOGIC;
    load_Store_i_reg : out STD_LOGIC;
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    take_Intr_Now_III : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_47 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_47;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_47 is
  signal \^result_sel_reg[1]\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[1].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  \Result_Sel_reg[1]\ <= \^result_sel_reg[1]\;
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \Using_FPGA.Native\,
      A1 => \Using_FPGA.Native_0\,
      A2 => \Using_FPGA.Native_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => Instr(0),
      Q => \^result_sel_reg[1]\
    );
load_Store_i_i_2: unisim.vcomponents.LUT3
    generic map(
      INIT => X"08"
    )
        port map (
      I0 => \^result_sel_reg[1]\,
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I2 => take_Intr_Now_III,
      O => load_Store_i_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_471 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_471 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_471;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_471 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.Using_FPGA.PC_GEN[22].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => \Using_FPGA.Native\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_477 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_477 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_477;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_477 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.Using_FPGA.PC_GEN[21].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => \Using_FPGA.Native\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_48 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    D_20 : out STD_LOGIC;
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[9]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_48 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_48;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_48 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[20].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  D(0) <= \^d\(0);
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \Using_FPGA.Native\,
      A1 => \Using_FPGA.Native_0\,
      A2 => \Using_FPGA.Native_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => Instr(0),
      Q => \^d\(0)
    );
\Using_FPGA.Native_i_1__39\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I2 => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[9]\,
      O => D_20
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_483 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_483 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_483;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_483 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.Using_FPGA.PC_GEN[20].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => \Using_FPGA.Native\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_489 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_489 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_489;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_489 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.Using_FPGA.PC_GEN[19].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => \Using_FPGA.Native\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_49 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    D_21 : out STD_LOGIC;
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[8]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_49 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_49;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_49 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[21].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  D(0) <= \^d\(0);
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \Using_FPGA.Native\,
      A1 => \Using_FPGA.Native_0\,
      A2 => \Using_FPGA.Native_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => Instr(0),
      Q => \^d\(0)
    );
\Using_FPGA.Native_i_1__40\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I2 => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[8]\,
      O => D_21
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_495 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_495 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_495;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_495 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.Using_FPGA.PC_GEN[18].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => \Using_FPGA.Native\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_50 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    D_22 : out STD_LOGIC;
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[7]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_50 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_50;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_50 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[22].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  D(0) <= \^d\(0);
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \Using_FPGA.Native\,
      A1 => \Using_FPGA.Native_0\,
      A2 => \Using_FPGA.Native_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => Instr(0),
      Q => \^d\(0)
    );
\Using_FPGA.Native_i_1__41\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I2 => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[7]\,
      O => D_22
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_501 is
  port (
    PC_OF : out STD_LOGIC;
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_501 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_501;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_501 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.Using_FPGA.PC_GEN[17].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => PC_OF
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_51 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    D_23 : out STD_LOGIC;
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[6]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_51 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_51;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_51 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[23].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  D(0) <= \^d\(0);
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \Using_FPGA.Native\,
      A1 => \Using_FPGA.Native_0\,
      A2 => \Using_FPGA.Native_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => Instr(0),
      Q => \^d\(0)
    );
\Using_FPGA.Native_i_1__42\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I2 => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[6]\,
      O => D_23
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_52 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    D_24 : out STD_LOGIC;
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[5]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_52 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_52;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_52 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[24].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  D(0) <= \^d\(0);
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \Using_FPGA.Native\,
      A1 => \Using_FPGA.Native_0\,
      A2 => \Using_FPGA.Native_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => Instr(0),
      Q => \^d\(0)
    );
\Using_FPGA.Native_i_1__43\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I2 => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[5]\,
      O => D_24
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_53 is
  port (
    \instr_EX_i_reg[25]\ : out STD_LOGIC;
    D_25 : out STD_LOGIC;
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[4]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_53 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_53;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_53 is
  signal \^instr_ex_i_reg[25]\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[25].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  \instr_EX_i_reg[25]\ <= \^instr_ex_i_reg[25]\;
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \Using_FPGA.Native\,
      A1 => \Using_FPGA.Native_0\,
      A2 => \Using_FPGA.Native_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => Instr(0),
      Q => \^instr_ex_i_reg[25]\
    );
\Using_FPGA.Native_i_1__44\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^instr_ex_i_reg[25]\,
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I2 => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[4]\,
      O => D_25
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_54 is
  port (
    \instr_EX_i_reg[26]\ : out STD_LOGIC;
    Sext16_reg : out STD_LOGIC;
    write_Carry_I_reg : out STD_LOGIC;
    D_26 : out STD_LOGIC;
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Sext16 : in STD_LOGIC;
    mul_Executing_reg : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ : in STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_3\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_4\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_5\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[3]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_54 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_54;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_54 is
  signal \^instr_ex_i_reg[26]\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[26].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  \instr_EX_i_reg[26]\ <= \^instr_ex_i_reg[26]\;
Sext16_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000E2222222"
    )
        port map (
      I0 => Sext16,
      I1 => mul_Executing_reg,
      I2 => \^instr_ex_i_reg[26]\,
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I4 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\,
      I5 => \Use_Async_Reset.sync_reset_reg\,
      O => Sext16_reg
    );
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \Using_FPGA.Native\,
      A1 => \Using_FPGA.Native_0\,
      A2 => \Using_FPGA.Native_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => Instr(0),
      Q => \^instr_ex_i_reg[26]\
    );
\Using_FPGA.Native_i_1__45\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^instr_ex_i_reg[26]\,
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_5\,
      I2 => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[3]\,
      O => D_26
    );
write_Carry_I_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"70707070707070FF"
    )
        port map (
      I0 => \^instr_ex_i_reg[26]\,
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I2 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\,
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\,
      I4 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_3\,
      I5 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_4\,
      O => write_Carry_I_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_55 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    D_27 : out STD_LOGIC;
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[2]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_55 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_55;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_55 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[27].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  D(0) <= \^d\(0);
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \Using_FPGA.Native\,
      A1 => \Using_FPGA.Native_0\,
      A2 => \Using_FPGA.Native_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => Instr(0),
      Q => \^d\(0)
    );
\Using_FPGA.Native_i_1__46\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I2 => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[2]\,
      O => D_27
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_56 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    D_28 : out STD_LOGIC;
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[1]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_56 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_56;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_56 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[28].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  D(0) <= \^d\(0);
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \Using_FPGA.Native\,
      A1 => \Using_FPGA.Native_0\,
      A2 => \Using_FPGA.Native_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => Instr(0),
      Q => \^d\(0)
    );
\Using_FPGA.Native_i_1__47\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I2 => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[1]\,
      O => D_28
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_57 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    write_Reg_reg : out STD_LOGIC;
    D_29 : out STD_LOGIC;
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_3\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[0]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_57 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_57;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_57 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal write_Reg_i_4_n_0 : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[29].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__48\ : label is "soft_lutpair18";
  attribute SOFT_HLUTNM of write_Reg_i_4 : label is "soft_lutpair18";
begin
  D(0) <= \^d\(0);
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \Using_FPGA.Native\,
      A1 => \Using_FPGA.Native_0\,
      A2 => \Using_FPGA.Native_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => Instr(0),
      Q => \^d\(0)
    );
\Using_FPGA.Native_i_1__48\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_3\,
      I2 => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[0]\,
      O => D_29
    );
write_Reg_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"80808A808A808A80"
    )
        port map (
      I0 => write_Reg_i_4_n_0,
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\(2),
      I2 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\,
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\,
      I4 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\(1),
      I5 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\,
      O => write_Reg_reg
    );
write_Reg_i_4: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^d\(0),
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\(0),
      O => write_Reg_i_4_n_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_58 is
  port (
    \instr_EX_i_reg[2]\ : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    write_Reg_reg : out STD_LOGIC;
    D_16 : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    Compare_Instr_reg : out STD_LOGIC;
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    S92_out : in STD_LOGIC;
    force_Val2_N : in STD_LOGIC;
    mul_Executing_reg : in STD_LOGIC;
    take_Intr_Now_III : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_3\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_4\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 1 downto 0 );
    take_Intr_Now_II : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_5\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_58 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_58;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_58 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^using_fpga.native_1\ : STD_LOGIC;
  signal \^instr_ex_i_reg[2]\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[2].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \Using_FPGA.Native_1\ <= \^using_fpga.native_1\;
  \instr_EX_i_reg[2]\ <= \^instr_ex_i_reg[2]\;
Compare_Instr_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0004"
    )
        port map (
      I0 => \^instr_ex_i_reg[2]\,
      I1 => D(0),
      I2 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\,
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_3\,
      O => Compare_Instr_reg
    );
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \Using_FPGA.Native_2\,
      A1 => \Using_FPGA.Native_3\,
      A2 => \Using_FPGA.Native_4\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => Instr(0),
      Q => \^instr_ex_i_reg[2]\
    );
\Using_FPGA.Native_i_1__35\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"E2"
    )
        port map (
      I0 => \Using_FPGA.take_Intr_2nd_Phase_reg\,
      I1 => \^using_fpga.native_1\,
      I2 => D(1),
      O => D_16
    );
\Using_FPGA.Native_i_1__67\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEAEFEAEFEFEFEAE"
    )
        port map (
      I0 => S92_out,
      I1 => force_Val2_N,
      I2 => mul_Executing_reg,
      I3 => take_Intr_Now_III,
      I4 => \^using_fpga.native_0\,
      I5 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      O => \Using_FPGA.Native\
    );
\Using_FPGA.Native_i_2__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"32"
    )
        port map (
      I0 => \^instr_ex_i_reg[2]\,
      I1 => take_Intr_Now_II,
      I2 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_5\,
      O => \^using_fpga.native_1\
    );
\Using_FPGA.enable_Interrupts_I_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFDFFFFFFFFFFF"
    )
        port map (
      I0 => \^instr_ex_i_reg[2]\,
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\,
      I2 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_4\,
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_3\,
      I4 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\,
      I5 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\,
      O => \^using_fpga.native_0\
    );
write_Reg_i_5: unisim.vcomponents.LUT6
    generic map(
      INIT => X"001FFFFF00DFFFFF"
    )
        port map (
      I0 => \^instr_ex_i_reg[2]\,
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\,
      I2 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\,
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\,
      I4 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_3\,
      I5 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_4\,
      O => write_Reg_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_59 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    D_30 : out STD_LOGIC;
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_59 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_59;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_59 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[30].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  D(0) <= \^d\(0);
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \Using_FPGA.Native\,
      A1 => \Using_FPGA.Native_0\,
      A2 => \Using_FPGA.Native_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => Instr(0),
      Q => \^d\(0)
    );
\Using_FPGA.Native_i_1__49\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I2 => \Using_FPGA.take_Intr_2nd_Phase_reg\,
      O => D_30
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_60 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Sext8_reg : out STD_LOGIC;
    D_31 : out STD_LOGIC;
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    sext8 : in STD_LOGIC;
    mul_Executing_reg : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ : in STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_60 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_60;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_60 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[31].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  D(0) <= \^d\(0);
Sext8_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000002E222222"
    )
        port map (
      I0 => sext8,
      I1 => mul_Executing_reg,
      I2 => \^d\(0),
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I4 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\,
      I5 => \Use_Async_Reset.sync_reset_reg\,
      O => Sext8_reg
    );
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \Using_FPGA.Native\,
      A1 => \Using_FPGA.Native_0\,
      A2 => \Using_FPGA.Native_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => Instr(0),
      Q => \^d\(0)
    );
\Using_FPGA.Native_i_1__50\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\,
      I2 => \Using_FPGA.take_Intr_2nd_Phase_reg\,
      O => D_31
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_61 is
  port (
    \instr_EX_i_reg[3]\ : out STD_LOGIC;
    \Size_17to32.imm_Reg_reg[15]\ : out STD_LOGIC;
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_3\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_61 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_61;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_61 is
  signal \^instr_ex_i_reg[3]\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[3].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  \instr_EX_i_reg[3]\ <= \^instr_ex_i_reg[3]\;
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \Using_FPGA.Native\,
      A1 => \Using_FPGA.Native_0\,
      A2 => \Using_FPGA.Native_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => Instr(0),
      Q => \^instr_ex_i_reg[3]\
    );
using_Imm_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFDFFFFFFFFFF"
    )
        port map (
      I0 => \^instr_ex_i_reg[3]\,
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I2 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\,
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\,
      I4 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\,
      I5 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_3\,
      O => \Size_17to32.imm_Reg_reg[15]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_62 is
  port (
    \instr_EX_i_reg[4]\ : out STD_LOGIC;
    doublet_i_reg : out STD_LOGIC;
    byte_i_reg : out STD_LOGIC;
    write_Reg_reg : out STD_LOGIC;
    mtsmsr_write_i_reg : out STD_LOGIC;
    write_Carry_I_reg : out STD_LOGIC;
    use_Reg_Neg_DI_i26_out : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    force_Val1_i27_out : out STD_LOGIC;
    use_Reg_Neg_S_i28_out : out STD_LOGIC;
    mbar_first : out STD_LOGIC;
    mul_Executing_reg : out STD_LOGIC;
    is_swx_I_reg : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    isdoublet : in STD_LOGIC;
    mul_Executing_reg_0 : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    byte_i12_out : in STD_LOGIC;
    isbyte : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_3\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_4\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_5\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_6\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_7\ : in STD_LOGIC;
    take_Intr_Now_III : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_8\ : in STD_LOGIC;
    S92_out : in STD_LOGIC;
    mbar_first_reg : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_62 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_62;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_62 is
  signal \^using_fpga.native\ : STD_LOGIC;
  signal \^instr_ex_i_reg[4]\ : STD_LOGIC;
  signal \^mtsmsr_write_i_reg\ : STD_LOGIC;
  signal \^mul_executing_reg\ : STD_LOGIC;
  signal \^write_carry_i_reg\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[4].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__15\ : label is "soft_lutpair19";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__17\ : label is "soft_lutpair19";
begin
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \instr_EX_i_reg[4]\ <= \^instr_ex_i_reg[4]\;
  mtsmsr_write_i_reg <= \^mtsmsr_write_i_reg\;
  mul_Executing_reg <= \^mul_executing_reg\;
  write_Carry_I_reg <= \^write_carry_i_reg\;
Sign_Extend_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000010000000000"
    )
        port map (
      I0 => \^instr_ex_i_reg[4]\,
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I2 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_8\,
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_7\,
      I4 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_6\,
      I5 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_5\,
      O => \^write_carry_i_reg\
    );
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \Using_FPGA.Native_1\,
      A1 => \Using_FPGA.Native_2\,
      A2 => \Using_FPGA.Native_3\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => Instr(0),
      Q => \^instr_ex_i_reg[4]\
    );
\Using_FPGA.Native_i_1__15\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2008"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\,
      I2 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_3\,
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_4\,
      O => use_Reg_Neg_DI_i26_out
    );
\Using_FPGA.Native_i_1__16\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"08"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\,
      I2 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_3\,
      O => force_Val1_i27_out
    );
\Using_FPGA.Native_i_1__17\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0820"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\,
      I2 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_3\,
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_4\,
      O => use_Reg_Neg_S_i28_out
    );
\Using_FPGA.Native_i_1__18\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000008000000"
    )
        port map (
      I0 => \^instr_ex_i_reg[4]\,
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_5\,
      I2 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_6\,
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_7\,
      I4 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I5 => take_Intr_Now_III,
      O => \^using_fpga.native\
    );
\Using_FPGA.Native_i_3__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => \^instr_ex_i_reg[4]\,
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_6\,
      I2 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_7\,
      O => \Using_FPGA.Native_0\
    );
byte_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000000222E"
    )
        port map (
      I0 => isbyte,
      I1 => mul_Executing_reg_0,
      I2 => \^instr_ex_i_reg[4]\,
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I4 => sync_reset,
      I5 => byte_i12_out,
      O => byte_i_reg
    );
doublet_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000002E22"
    )
        port map (
      I0 => isdoublet,
      I1 => mul_Executing_reg_0,
      I2 => \^instr_ex_i_reg[4]\,
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I4 => sync_reset,
      I5 => byte_i12_out,
      O => doublet_i_reg
    );
is_lwx_I_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFDFFFFFFF"
    )
        port map (
      I0 => \^instr_ex_i_reg[4]\,
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I2 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_7\,
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_6\,
      I4 => D(0),
      I5 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_8\,
      O => is_swx_I_reg
    );
mbar_decode_I_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF7FFFFFFFFFF"
    )
        port map (
      I0 => \^instr_ex_i_reg[4]\,
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_5\,
      I2 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_6\,
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_7\,
      I4 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I5 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_8\,
      O => \^mul_executing_reg\
    );
mbar_first_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF4FF00000400"
    )
        port map (
      I0 => \^mul_executing_reg\,
      I1 => D(2),
      I2 => take_Intr_Now_III,
      I3 => mul_Executing_reg_0,
      I4 => S92_out,
      I5 => mbar_first_reg,
      O => mbar_first
    );
mtsmsr_write_i_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000040000000000"
    )
        port map (
      I0 => \^instr_ex_i_reg[4]\,
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I2 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_8\,
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_7\,
      I4 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_6\,
      I5 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_5\,
      O => \^mtsmsr_write_i_reg\
    );
write_Reg_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000088B8B8B8"
    )
        port map (
      I0 => D(3),
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\,
      I2 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\,
      I3 => D(1),
      I4 => \^mtsmsr_write_i_reg\,
      I5 => \^write_carry_i_reg\,
      O => write_Reg_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_63 is
  port (
    \instr_EX_i_reg[5]\ : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    Reg_Test_Equal_N_i7_out : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    D_32 : out STD_LOGIC;
    jump2_I_reg : out STD_LOGIC;
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    take_Intr_Now_III : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\ : in STD_LOGIC;
    instr_OF : in STD_LOGIC_VECTOR ( 6 downto 0 );
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_3\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg\ : in STD_LOGIC;
    inHibit_EX_reg : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_63 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_63;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_63 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^using_fpga.native_1\ : STD_LOGIC;
  signal \^instr_ex_i_reg[5]\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[5].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__36\ : label is "soft_lutpair20";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_3\ : label is "soft_lutpair20";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \Using_FPGA.Native_1\ <= \^using_fpga.native_1\;
  \instr_EX_i_reg[5]\ <= \^instr_ex_i_reg[5]\;
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \Using_FPGA.Native_3\,
      A1 => \Using_FPGA.Native_4\,
      A2 => \Using_FPGA.Native_5\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => Instr(0),
      Q => \^instr_ex_i_reg[5]\
    );
\Using_FPGA.Native_i_1__14\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00010100"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => take_Intr_Now_III,
      I2 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\,
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\,
      I4 => instr_OF(0),
      O => Reg_Test_Equal_N_i7_out
    );
\Using_FPGA.Native_i_1__52\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FF101010"
    )
        port map (
      I0 => instr_OF(6),
      I1 => instr_OF(5),
      I2 => \^instr_ex_i_reg[5]\,
      I3 => \^using_fpga.native_1\,
      I4 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_3\,
      O => \Using_FPGA.Native_2\
    );
\Using_FPGA.Native_i_1__53\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0111"
    )
        port map (
      I0 => \Using_FPGA.take_Intr_2nd_Phase_reg\,
      I1 => take_Intr_Now_III,
      I2 => \^using_fpga.native_1\,
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_3\,
      O => D_32
    );
\Using_FPGA.Native_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0404040004040404"
    )
        port map (
      I0 => take_Intr_Now_III,
      I1 => \^using_fpga.native_0\,
      I2 => \^using_fpga.native_1\,
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I4 => D(0),
      I5 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\,
      O => \Using_FPGA.Native\
    );
\Using_FPGA.Native_i_2__36\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"04000000"
    )
        port map (
      I0 => \^instr_ex_i_reg[5]\,
      I1 => instr_OF(6),
      I2 => instr_OF(5),
      I3 => instr_OF(3),
      I4 => instr_OF(2),
      O => \^using_fpga.native_1\
    );
\Using_FPGA.Native_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F7FFFFFF"
    )
        port map (
      I0 => \^instr_ex_i_reg[5]\,
      I1 => instr_OF(6),
      I2 => instr_OF(5),
      I3 => instr_OF(3),
      I4 => instr_OF(2),
      O => \^using_fpga.native_0\
    );
jump2_I_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000F858"
    )
        port map (
      I0 => \^instr_ex_i_reg[5]\,
      I1 => instr_OF(4),
      I2 => instr_OF(2),
      I3 => instr_OF(1),
      I4 => inHibit_EX_reg,
      O => jump2_I_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_64 is
  port (
    instr_OF : out STD_LOGIC_VECTOR ( 0 to 0 );
    mbar_is_sleep0 : out STD_LOGIC;
    inHibit_EX_reg : out STD_LOGIC;
    \write_Addr_I_reg[0]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S92_out : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    take_Intr_Now_III : in STD_LOGIC;
    sync_reset : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_64 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_64;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_64 is
  signal \^instr_of\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[6].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of mbar_is_sleep_i_1 : label is "soft_lutpair21";
  attribute SOFT_HLUTNM of \write_Addr_I[0]_i_2\ : label is "soft_lutpair21";
begin
  instr_OF(0) <= \^instr_of\(0);
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \Using_FPGA.Native\,
      A1 => \Using_FPGA.Native_0\,
      A2 => \Using_FPGA.Native_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => Instr(0),
      Q => \^instr_of\(0)
    );
inHibit_EX_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0010001000000030"
    )
        port map (
      I0 => \^instr_of\(0),
      I1 => S92_out,
      I2 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\(2),
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\,
      I4 => D(0),
      I5 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\(1),
      O => inHibit_EX_reg
    );
mbar_is_sleep_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^instr_of\(0),
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\(0),
      O => mbar_is_sleep0
    );
\write_Addr_I[0]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => \^instr_of\(0),
      I1 => take_Intr_Now_III,
      I2 => sync_reset,
      O => \write_Addr_I_reg[0]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_65 is
  port (
    instr_OF : out STD_LOGIC_VECTOR ( 0 to 0 );
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_65 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_65;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_65 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[7].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \Using_FPGA.Native\,
      A1 => \Using_FPGA.Native_0\,
      A2 => \Using_FPGA.Native_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => Instr(0),
      Q => instr_OF(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_66 is
  port (
    \instr_EX_i_reg[8]\ : out STD_LOGIC;
    force1_i29_out : out STD_LOGIC;
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    take_Intr_Now_III : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_66 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_66;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_66 is
  signal \^instr_ex_i_reg[8]\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[8].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  \instr_EX_i_reg[8]\ <= \^instr_ex_i_reg[8]\;
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \Using_FPGA.Native\,
      A1 => \Using_FPGA.Native_0\,
      A2 => \Using_FPGA.Native_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => Instr(0),
      Q => \^instr_ex_i_reg[8]\
    );
\Using_FPGA.Native_i_2__0__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0001"
    )
        port map (
      I0 => \^instr_ex_i_reg[8]\,
      I1 => take_Intr_Now_III,
      I2 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\,
      O => force1_i29_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MB_SRL16E_67 is
  port (
    \instr_EX_i_reg[9]\ : out STD_LOGIC;
    reset_BIP_I8_out : out STD_LOGIC;
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    take_Intr_Now_III : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MB_SRL16E_67 : entity is "MB_SRL16E";
end microblaze_mcs_1_MB_SRL16E_67;

architecture STRUCTURE of microblaze_mcs_1_MB_SRL16E_67 is
  signal \^instr_ex_i_reg[9]\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "inst/microblaze_I/U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[9].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  \instr_EX_i_reg[9]\ <= \^instr_ex_i_reg[9]\;
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \Using_FPGA.Native\,
      A1 => \Using_FPGA.Native_0\,
      A2 => \Using_FPGA.Native_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => Instr(0),
      Q => \^instr_ex_i_reg[9]\
    );
\Using_FPGA.reset_BIP_I_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => take_Intr_Now_III,
      I1 => \^instr_ex_i_reg[9]\,
      I2 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      O => reset_BIP_I8_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_blk_mem_gen_prim_wrapper is
  port (
    douta : out STD_LOGIC_VECTOR ( 3 downto 0 );
    doutb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    clka : in STD_LOGIC;
    clkb : in STD_LOGIC;
    ENA_I : in STD_LOGIC;
    ENB_I : in STD_LOGIC;
    ram_rstram_a : in STD_LOGIC;
    ram_rstram_b : in STD_LOGIC;
    addra : in STD_LOGIC_VECTOR ( 12 downto 0 );
    addrb : in STD_LOGIC_VECTOR ( 12 downto 0 );
    dina : in STD_LOGIC_VECTOR ( 3 downto 0 );
    dinb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    wea : in STD_LOGIC_VECTOR ( 0 to 0 );
    web : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
end microblaze_mcs_1_blk_mem_gen_prim_wrapper;

architecture STRUCTURE of microblaze_mcs_1_blk_mem_gen_prim_wrapper is
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 31 downto 4 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 31 downto 4 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED\ : STD_LOGIC_VECTOR ( 8 downto 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : label is "PRIMITIVE";
  attribute bmm_info_memory_device : string;
  attribute bmm_info_memory_device of \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : label is "[3:0][0:8191]";
begin
\DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\: unisim.vcomponents.RAMB36E1
    generic map(
      DOA_REG => 0,
      DOB_REG => 0,
      EN_ECC_READ => false,
      EN_ECC_WRITE => false,
      INITP_00 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_01 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_02 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_03 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_04 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_05 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_06 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_07 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_08 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_09 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_00 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_01 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_02 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_03 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_04 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_05 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_06 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_07 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_08 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_09 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_10 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_11 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_12 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_13 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_14 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_15 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_16 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_17 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_18 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_19 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_20 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_21 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_22 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_23 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_24 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_25 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_26 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_27 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_28 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_29 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_30 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_31 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_32 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_33 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_34 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_35 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_36 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_37 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_38 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_39 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_40 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_41 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_42 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_43 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_44 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_45 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_46 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_47 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_48 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_49 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_50 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_51 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_52 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_53 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_54 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_55 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_56 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_57 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_58 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_59 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_60 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_61 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_62 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_63 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_64 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_65 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_66 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_67 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_68 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_69 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_70 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_71 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_72 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_73 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_74 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_75 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_76 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_77 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_78 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_79 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_A => X"000000000",
      INIT_B => X"000000000",
      INIT_FILE => "NONE",
      IS_CLKARDCLK_INVERTED => '0',
      IS_CLKBWRCLK_INVERTED => '0',
      IS_ENARDEN_INVERTED => '0',
      IS_ENBWREN_INVERTED => '0',
      IS_RSTRAMARSTRAM_INVERTED => '0',
      IS_RSTRAMB_INVERTED => '0',
      IS_RSTREGARSTREG_INVERTED => '0',
      IS_RSTREGB_INVERTED => '0',
      RAM_EXTENSION_A => "NONE",
      RAM_EXTENSION_B => "NONE",
      RAM_MODE => "TDP",
      RDADDR_COLLISION_HWCONFIG => "DELAYED_WRITE",
      READ_WIDTH_A => 4,
      READ_WIDTH_B => 4,
      RSTREG_PRIORITY_A => "REGCE",
      RSTREG_PRIORITY_B => "REGCE",
      SIM_COLLISION_CHECK => "ALL",
      SIM_DEVICE => "7SERIES",
      SRVAL_A => X"000000000",
      SRVAL_B => X"000000000",
      WRITE_MODE_A => "WRITE_FIRST",
      WRITE_MODE_B => "WRITE_FIRST",
      WRITE_WIDTH_A => 4,
      WRITE_WIDTH_B => 4
    )
        port map (
      ADDRARDADDR(15) => '1',
      ADDRARDADDR(14 downto 2) => addra(12 downto 0),
      ADDRARDADDR(1 downto 0) => B"11",
      ADDRBWRADDR(15) => '1',
      ADDRBWRADDR(14 downto 2) => addrb(12 downto 0),
      ADDRBWRADDR(1 downto 0) => B"11",
      CASCADEINA => '0',
      CASCADEINB => '0',
      CASCADEOUTA => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED\,
      CASCADEOUTB => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED\,
      CLKARDCLK => clka,
      CLKBWRCLK => clkb,
      DBITERR => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED\,
      DIADI(31 downto 4) => B"0000000000000000000000000000",
      DIADI(3 downto 0) => dina(3 downto 0),
      DIBDI(31 downto 4) => B"0000000000000000000000000000",
      DIBDI(3 downto 0) => dinb(3 downto 0),
      DIPADIP(3 downto 0) => B"0000",
      DIPBDIP(3 downto 0) => B"0000",
      DOADO(31 downto 4) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED\(31 downto 4),
      DOADO(3 downto 0) => douta(3 downto 0),
      DOBDO(31 downto 4) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED\(31 downto 4),
      DOBDO(3 downto 0) => doutb(3 downto 0),
      DOPADOP(3 downto 0) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED\(3 downto 0),
      DOPBDOP(3 downto 0) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED\(3 downto 0),
      ECCPARITY(7 downto 0) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED\(7 downto 0),
      ENARDEN => ENA_I,
      ENBWREN => ENB_I,
      INJECTDBITERR => '0',
      INJECTSBITERR => '0',
      RDADDRECC(8 downto 0) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED\(8 downto 0),
      REGCEAREGCE => '0',
      REGCEB => '0',
      RSTRAMARSTRAM => ram_rstram_a,
      RSTRAMB => ram_rstram_b,
      RSTREGARSTREG => '0',
      RSTREGB => '0',
      SBITERR => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED\,
      WEA(3) => wea(0),
      WEA(2) => wea(0),
      WEA(1) => wea(0),
      WEA(0) => wea(0),
      WEBWE(7 downto 4) => B"0000",
      WEBWE(3) => web(0),
      WEBWE(2) => web(0),
      WEBWE(1) => web(0),
      WEBWE(0) => web(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized0\ is
  port (
    douta : out STD_LOGIC_VECTOR ( 3 downto 0 );
    doutb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    clka : in STD_LOGIC;
    clkb : in STD_LOGIC;
    ENA_I : in STD_LOGIC;
    ENB_I : in STD_LOGIC;
    ram_rstram_a : in STD_LOGIC;
    ram_rstram_b : in STD_LOGIC;
    addra : in STD_LOGIC_VECTOR ( 12 downto 0 );
    addrb : in STD_LOGIC_VECTOR ( 12 downto 0 );
    dina : in STD_LOGIC_VECTOR ( 3 downto 0 );
    dinb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    wea : in STD_LOGIC_VECTOR ( 0 to 0 );
    web : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized0\ : entity is "blk_mem_gen_prim_wrapper";
end \microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized0\;

architecture STRUCTURE of \microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized0\ is
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 31 downto 4 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 31 downto 4 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED\ : STD_LOGIC_VECTOR ( 8 downto 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : label is "PRIMITIVE";
  attribute bmm_info_memory_device : string;
  attribute bmm_info_memory_device of \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : label is "[7:4][0:8191]";
begin
\DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\: unisim.vcomponents.RAMB36E1
    generic map(
      DOA_REG => 0,
      DOB_REG => 0,
      EN_ECC_READ => false,
      EN_ECC_WRITE => false,
      INITP_00 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_01 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_02 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_03 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_04 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_05 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_06 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_07 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_08 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_09 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_00 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_01 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_02 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_03 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_04 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_05 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_06 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_07 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_08 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_09 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_10 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_11 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_12 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_13 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_14 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_15 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_16 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_17 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_18 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_19 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_20 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_21 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_22 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_23 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_24 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_25 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_26 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_27 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_28 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_29 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_30 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_31 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_32 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_33 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_34 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_35 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_36 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_37 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_38 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_39 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_40 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_41 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_42 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_43 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_44 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_45 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_46 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_47 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_48 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_49 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_50 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_51 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_52 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_53 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_54 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_55 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_56 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_57 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_58 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_59 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_60 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_61 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_62 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_63 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_64 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_65 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_66 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_67 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_68 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_69 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_70 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_71 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_72 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_73 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_74 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_75 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_76 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_77 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_78 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_79 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_A => X"000000000",
      INIT_B => X"000000000",
      INIT_FILE => "NONE",
      IS_CLKARDCLK_INVERTED => '0',
      IS_CLKBWRCLK_INVERTED => '0',
      IS_ENARDEN_INVERTED => '0',
      IS_ENBWREN_INVERTED => '0',
      IS_RSTRAMARSTRAM_INVERTED => '0',
      IS_RSTRAMB_INVERTED => '0',
      IS_RSTREGARSTREG_INVERTED => '0',
      IS_RSTREGB_INVERTED => '0',
      RAM_EXTENSION_A => "NONE",
      RAM_EXTENSION_B => "NONE",
      RAM_MODE => "TDP",
      RDADDR_COLLISION_HWCONFIG => "DELAYED_WRITE",
      READ_WIDTH_A => 4,
      READ_WIDTH_B => 4,
      RSTREG_PRIORITY_A => "REGCE",
      RSTREG_PRIORITY_B => "REGCE",
      SIM_COLLISION_CHECK => "ALL",
      SIM_DEVICE => "7SERIES",
      SRVAL_A => X"000000000",
      SRVAL_B => X"000000000",
      WRITE_MODE_A => "WRITE_FIRST",
      WRITE_MODE_B => "WRITE_FIRST",
      WRITE_WIDTH_A => 4,
      WRITE_WIDTH_B => 4
    )
        port map (
      ADDRARDADDR(15) => '1',
      ADDRARDADDR(14 downto 2) => addra(12 downto 0),
      ADDRARDADDR(1 downto 0) => B"11",
      ADDRBWRADDR(15) => '1',
      ADDRBWRADDR(14 downto 2) => addrb(12 downto 0),
      ADDRBWRADDR(1 downto 0) => B"11",
      CASCADEINA => '0',
      CASCADEINB => '0',
      CASCADEOUTA => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED\,
      CASCADEOUTB => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED\,
      CLKARDCLK => clka,
      CLKBWRCLK => clkb,
      DBITERR => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED\,
      DIADI(31 downto 4) => B"0000000000000000000000000000",
      DIADI(3 downto 0) => dina(3 downto 0),
      DIBDI(31 downto 4) => B"0000000000000000000000000000",
      DIBDI(3 downto 0) => dinb(3 downto 0),
      DIPADIP(3 downto 0) => B"0000",
      DIPBDIP(3 downto 0) => B"0000",
      DOADO(31 downto 4) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED\(31 downto 4),
      DOADO(3 downto 0) => douta(3 downto 0),
      DOBDO(31 downto 4) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED\(31 downto 4),
      DOBDO(3 downto 0) => doutb(3 downto 0),
      DOPADOP(3 downto 0) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED\(3 downto 0),
      DOPBDOP(3 downto 0) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED\(3 downto 0),
      ECCPARITY(7 downto 0) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED\(7 downto 0),
      ENARDEN => ENA_I,
      ENBWREN => ENB_I,
      INJECTDBITERR => '0',
      INJECTSBITERR => '0',
      RDADDRECC(8 downto 0) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED\(8 downto 0),
      REGCEAREGCE => '0',
      REGCEB => '0',
      RSTRAMARSTRAM => ram_rstram_a,
      RSTRAMB => ram_rstram_b,
      RSTREGARSTREG => '0',
      RSTREGB => '0',
      SBITERR => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED\,
      WEA(3) => wea(0),
      WEA(2) => wea(0),
      WEA(1) => wea(0),
      WEA(0) => wea(0),
      WEBWE(7 downto 4) => B"0000",
      WEBWE(3) => web(0),
      WEBWE(2) => web(0),
      WEBWE(1) => web(0),
      WEBWE(0) => web(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized1\ is
  port (
    douta : out STD_LOGIC_VECTOR ( 3 downto 0 );
    doutb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    clka : in STD_LOGIC;
    clkb : in STD_LOGIC;
    ENA_I : in STD_LOGIC;
    ENB_I : in STD_LOGIC;
    ram_rstram_a : in STD_LOGIC;
    ram_rstram_b : in STD_LOGIC;
    addra : in STD_LOGIC_VECTOR ( 12 downto 0 );
    addrb : in STD_LOGIC_VECTOR ( 12 downto 0 );
    dina : in STD_LOGIC_VECTOR ( 3 downto 0 );
    dinb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    wea : in STD_LOGIC_VECTOR ( 0 to 0 );
    web : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized1\ : entity is "blk_mem_gen_prim_wrapper";
end \microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized1\;

architecture STRUCTURE of \microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized1\ is
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 31 downto 4 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 31 downto 4 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED\ : STD_LOGIC_VECTOR ( 8 downto 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : label is "PRIMITIVE";
  attribute bmm_info_memory_device : string;
  attribute bmm_info_memory_device of \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : label is "[11:8][0:8191]";
begin
\DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\: unisim.vcomponents.RAMB36E1
    generic map(
      DOA_REG => 0,
      DOB_REG => 0,
      EN_ECC_READ => false,
      EN_ECC_WRITE => false,
      INITP_00 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_01 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_02 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_03 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_04 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_05 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_06 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_07 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_08 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_09 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_00 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_01 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_02 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_03 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_04 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_05 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_06 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_07 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_08 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_09 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_10 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_11 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_12 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_13 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_14 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_15 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_16 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_17 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_18 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_19 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_20 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_21 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_22 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_23 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_24 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_25 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_26 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_27 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_28 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_29 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_30 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_31 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_32 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_33 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_34 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_35 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_36 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_37 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_38 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_39 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_40 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_41 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_42 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_43 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_44 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_45 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_46 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_47 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_48 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_49 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_50 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_51 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_52 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_53 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_54 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_55 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_56 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_57 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_58 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_59 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_60 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_61 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_62 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_63 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_64 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_65 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_66 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_67 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_68 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_69 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_70 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_71 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_72 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_73 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_74 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_75 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_76 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_77 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_78 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_79 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_A => X"000000000",
      INIT_B => X"000000000",
      INIT_FILE => "NONE",
      IS_CLKARDCLK_INVERTED => '0',
      IS_CLKBWRCLK_INVERTED => '0',
      IS_ENARDEN_INVERTED => '0',
      IS_ENBWREN_INVERTED => '0',
      IS_RSTRAMARSTRAM_INVERTED => '0',
      IS_RSTRAMB_INVERTED => '0',
      IS_RSTREGARSTREG_INVERTED => '0',
      IS_RSTREGB_INVERTED => '0',
      RAM_EXTENSION_A => "NONE",
      RAM_EXTENSION_B => "NONE",
      RAM_MODE => "TDP",
      RDADDR_COLLISION_HWCONFIG => "DELAYED_WRITE",
      READ_WIDTH_A => 4,
      READ_WIDTH_B => 4,
      RSTREG_PRIORITY_A => "REGCE",
      RSTREG_PRIORITY_B => "REGCE",
      SIM_COLLISION_CHECK => "ALL",
      SIM_DEVICE => "7SERIES",
      SRVAL_A => X"000000000",
      SRVAL_B => X"000000000",
      WRITE_MODE_A => "WRITE_FIRST",
      WRITE_MODE_B => "WRITE_FIRST",
      WRITE_WIDTH_A => 4,
      WRITE_WIDTH_B => 4
    )
        port map (
      ADDRARDADDR(15) => '1',
      ADDRARDADDR(14 downto 2) => addra(12 downto 0),
      ADDRARDADDR(1 downto 0) => B"11",
      ADDRBWRADDR(15) => '1',
      ADDRBWRADDR(14 downto 2) => addrb(12 downto 0),
      ADDRBWRADDR(1 downto 0) => B"11",
      CASCADEINA => '0',
      CASCADEINB => '0',
      CASCADEOUTA => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED\,
      CASCADEOUTB => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED\,
      CLKARDCLK => clka,
      CLKBWRCLK => clkb,
      DBITERR => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED\,
      DIADI(31 downto 4) => B"0000000000000000000000000000",
      DIADI(3 downto 0) => dina(3 downto 0),
      DIBDI(31 downto 4) => B"0000000000000000000000000000",
      DIBDI(3 downto 0) => dinb(3 downto 0),
      DIPADIP(3 downto 0) => B"0000",
      DIPBDIP(3 downto 0) => B"0000",
      DOADO(31 downto 4) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED\(31 downto 4),
      DOADO(3 downto 0) => douta(3 downto 0),
      DOBDO(31 downto 4) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED\(31 downto 4),
      DOBDO(3 downto 0) => doutb(3 downto 0),
      DOPADOP(3 downto 0) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED\(3 downto 0),
      DOPBDOP(3 downto 0) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED\(3 downto 0),
      ECCPARITY(7 downto 0) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED\(7 downto 0),
      ENARDEN => ENA_I,
      ENBWREN => ENB_I,
      INJECTDBITERR => '0',
      INJECTSBITERR => '0',
      RDADDRECC(8 downto 0) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED\(8 downto 0),
      REGCEAREGCE => '0',
      REGCEB => '0',
      RSTRAMARSTRAM => ram_rstram_a,
      RSTRAMB => ram_rstram_b,
      RSTREGARSTREG => '0',
      RSTREGB => '0',
      SBITERR => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED\,
      WEA(3) => wea(0),
      WEA(2) => wea(0),
      WEA(1) => wea(0),
      WEA(0) => wea(0),
      WEBWE(7 downto 4) => B"0000",
      WEBWE(3) => web(0),
      WEBWE(2) => web(0),
      WEBWE(1) => web(0),
      WEBWE(0) => web(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized2\ is
  port (
    douta : out STD_LOGIC_VECTOR ( 3 downto 0 );
    doutb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    clka : in STD_LOGIC;
    clkb : in STD_LOGIC;
    ENA_I : in STD_LOGIC;
    ENB_I : in STD_LOGIC;
    ram_rstram_a : in STD_LOGIC;
    ram_rstram_b : in STD_LOGIC;
    addra : in STD_LOGIC_VECTOR ( 12 downto 0 );
    addrb : in STD_LOGIC_VECTOR ( 12 downto 0 );
    dina : in STD_LOGIC_VECTOR ( 3 downto 0 );
    dinb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    wea : in STD_LOGIC_VECTOR ( 0 to 0 );
    web : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized2\ : entity is "blk_mem_gen_prim_wrapper";
end \microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized2\;

architecture STRUCTURE of \microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized2\ is
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 31 downto 4 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 31 downto 4 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED\ : STD_LOGIC_VECTOR ( 8 downto 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : label is "PRIMITIVE";
  attribute bmm_info_memory_device : string;
  attribute bmm_info_memory_device of \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : label is "[15:12][0:8191]";
begin
\DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\: unisim.vcomponents.RAMB36E1
    generic map(
      DOA_REG => 0,
      DOB_REG => 0,
      EN_ECC_READ => false,
      EN_ECC_WRITE => false,
      INITP_00 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_01 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_02 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_03 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_04 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_05 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_06 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_07 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_08 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_09 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_00 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_01 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_02 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_03 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_04 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_05 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_06 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_07 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_08 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_09 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_10 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_11 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_12 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_13 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_14 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_15 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_16 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_17 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_18 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_19 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_20 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_21 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_22 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_23 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_24 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_25 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_26 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_27 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_28 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_29 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_30 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_31 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_32 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_33 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_34 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_35 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_36 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_37 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_38 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_39 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_40 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_41 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_42 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_43 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_44 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_45 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_46 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_47 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_48 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_49 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_50 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_51 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_52 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_53 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_54 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_55 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_56 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_57 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_58 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_59 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_60 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_61 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_62 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_63 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_64 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_65 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_66 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_67 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_68 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_69 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_70 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_71 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_72 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_73 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_74 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_75 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_76 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_77 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_78 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_79 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_A => X"000000000",
      INIT_B => X"000000000",
      INIT_FILE => "NONE",
      IS_CLKARDCLK_INVERTED => '0',
      IS_CLKBWRCLK_INVERTED => '0',
      IS_ENARDEN_INVERTED => '0',
      IS_ENBWREN_INVERTED => '0',
      IS_RSTRAMARSTRAM_INVERTED => '0',
      IS_RSTRAMB_INVERTED => '0',
      IS_RSTREGARSTREG_INVERTED => '0',
      IS_RSTREGB_INVERTED => '0',
      RAM_EXTENSION_A => "NONE",
      RAM_EXTENSION_B => "NONE",
      RAM_MODE => "TDP",
      RDADDR_COLLISION_HWCONFIG => "DELAYED_WRITE",
      READ_WIDTH_A => 4,
      READ_WIDTH_B => 4,
      RSTREG_PRIORITY_A => "REGCE",
      RSTREG_PRIORITY_B => "REGCE",
      SIM_COLLISION_CHECK => "ALL",
      SIM_DEVICE => "7SERIES",
      SRVAL_A => X"000000000",
      SRVAL_B => X"000000000",
      WRITE_MODE_A => "WRITE_FIRST",
      WRITE_MODE_B => "WRITE_FIRST",
      WRITE_WIDTH_A => 4,
      WRITE_WIDTH_B => 4
    )
        port map (
      ADDRARDADDR(15) => '1',
      ADDRARDADDR(14 downto 2) => addra(12 downto 0),
      ADDRARDADDR(1 downto 0) => B"11",
      ADDRBWRADDR(15) => '1',
      ADDRBWRADDR(14 downto 2) => addrb(12 downto 0),
      ADDRBWRADDR(1 downto 0) => B"11",
      CASCADEINA => '0',
      CASCADEINB => '0',
      CASCADEOUTA => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED\,
      CASCADEOUTB => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED\,
      CLKARDCLK => clka,
      CLKBWRCLK => clkb,
      DBITERR => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED\,
      DIADI(31 downto 4) => B"0000000000000000000000000000",
      DIADI(3 downto 0) => dina(3 downto 0),
      DIBDI(31 downto 4) => B"0000000000000000000000000000",
      DIBDI(3 downto 0) => dinb(3 downto 0),
      DIPADIP(3 downto 0) => B"0000",
      DIPBDIP(3 downto 0) => B"0000",
      DOADO(31 downto 4) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED\(31 downto 4),
      DOADO(3 downto 0) => douta(3 downto 0),
      DOBDO(31 downto 4) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED\(31 downto 4),
      DOBDO(3 downto 0) => doutb(3 downto 0),
      DOPADOP(3 downto 0) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED\(3 downto 0),
      DOPBDOP(3 downto 0) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED\(3 downto 0),
      ECCPARITY(7 downto 0) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED\(7 downto 0),
      ENARDEN => ENA_I,
      ENBWREN => ENB_I,
      INJECTDBITERR => '0',
      INJECTSBITERR => '0',
      RDADDRECC(8 downto 0) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED\(8 downto 0),
      REGCEAREGCE => '0',
      REGCEB => '0',
      RSTRAMARSTRAM => ram_rstram_a,
      RSTRAMB => ram_rstram_b,
      RSTREGARSTREG => '0',
      RSTREGB => '0',
      SBITERR => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED\,
      WEA(3) => wea(0),
      WEA(2) => wea(0),
      WEA(1) => wea(0),
      WEA(0) => wea(0),
      WEBWE(7 downto 4) => B"0000",
      WEBWE(3) => web(0),
      WEBWE(2) => web(0),
      WEBWE(1) => web(0),
      WEBWE(0) => web(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized3\ is
  port (
    douta : out STD_LOGIC_VECTOR ( 3 downto 0 );
    doutb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    clka : in STD_LOGIC;
    clkb : in STD_LOGIC;
    ENA_I : in STD_LOGIC;
    ENB_I : in STD_LOGIC;
    ram_rstram_a : in STD_LOGIC;
    ram_rstram_b : in STD_LOGIC;
    addra : in STD_LOGIC_VECTOR ( 12 downto 0 );
    addrb : in STD_LOGIC_VECTOR ( 12 downto 0 );
    dina : in STD_LOGIC_VECTOR ( 3 downto 0 );
    dinb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    wea : in STD_LOGIC_VECTOR ( 0 to 0 );
    web : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized3\ : entity is "blk_mem_gen_prim_wrapper";
end \microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized3\;

architecture STRUCTURE of \microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized3\ is
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 31 downto 4 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 31 downto 4 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED\ : STD_LOGIC_VECTOR ( 8 downto 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : label is "PRIMITIVE";
  attribute bmm_info_memory_device : string;
  attribute bmm_info_memory_device of \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : label is "[19:16][0:8191]";
begin
\DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\: unisim.vcomponents.RAMB36E1
    generic map(
      DOA_REG => 0,
      DOB_REG => 0,
      EN_ECC_READ => false,
      EN_ECC_WRITE => false,
      INITP_00 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_01 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_02 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_03 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_04 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_05 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_06 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_07 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_08 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_09 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_00 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_01 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_02 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_03 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_04 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_05 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_06 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_07 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_08 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_09 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_10 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_11 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_12 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_13 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_14 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_15 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_16 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_17 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_18 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_19 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_20 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_21 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_22 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_23 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_24 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_25 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_26 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_27 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_28 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_29 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_30 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_31 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_32 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_33 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_34 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_35 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_36 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_37 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_38 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_39 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_40 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_41 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_42 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_43 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_44 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_45 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_46 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_47 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_48 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_49 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_50 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_51 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_52 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_53 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_54 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_55 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_56 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_57 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_58 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_59 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_60 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_61 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_62 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_63 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_64 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_65 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_66 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_67 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_68 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_69 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_70 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_71 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_72 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_73 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_74 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_75 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_76 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_77 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_78 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_79 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_A => X"000000000",
      INIT_B => X"000000000",
      INIT_FILE => "NONE",
      IS_CLKARDCLK_INVERTED => '0',
      IS_CLKBWRCLK_INVERTED => '0',
      IS_ENARDEN_INVERTED => '0',
      IS_ENBWREN_INVERTED => '0',
      IS_RSTRAMARSTRAM_INVERTED => '0',
      IS_RSTRAMB_INVERTED => '0',
      IS_RSTREGARSTREG_INVERTED => '0',
      IS_RSTREGB_INVERTED => '0',
      RAM_EXTENSION_A => "NONE",
      RAM_EXTENSION_B => "NONE",
      RAM_MODE => "TDP",
      RDADDR_COLLISION_HWCONFIG => "DELAYED_WRITE",
      READ_WIDTH_A => 4,
      READ_WIDTH_B => 4,
      RSTREG_PRIORITY_A => "REGCE",
      RSTREG_PRIORITY_B => "REGCE",
      SIM_COLLISION_CHECK => "ALL",
      SIM_DEVICE => "7SERIES",
      SRVAL_A => X"000000000",
      SRVAL_B => X"000000000",
      WRITE_MODE_A => "WRITE_FIRST",
      WRITE_MODE_B => "WRITE_FIRST",
      WRITE_WIDTH_A => 4,
      WRITE_WIDTH_B => 4
    )
        port map (
      ADDRARDADDR(15) => '1',
      ADDRARDADDR(14 downto 2) => addra(12 downto 0),
      ADDRARDADDR(1 downto 0) => B"11",
      ADDRBWRADDR(15) => '1',
      ADDRBWRADDR(14 downto 2) => addrb(12 downto 0),
      ADDRBWRADDR(1 downto 0) => B"11",
      CASCADEINA => '0',
      CASCADEINB => '0',
      CASCADEOUTA => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED\,
      CASCADEOUTB => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED\,
      CLKARDCLK => clka,
      CLKBWRCLK => clkb,
      DBITERR => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED\,
      DIADI(31 downto 4) => B"0000000000000000000000000000",
      DIADI(3 downto 0) => dina(3 downto 0),
      DIBDI(31 downto 4) => B"0000000000000000000000000000",
      DIBDI(3 downto 0) => dinb(3 downto 0),
      DIPADIP(3 downto 0) => B"0000",
      DIPBDIP(3 downto 0) => B"0000",
      DOADO(31 downto 4) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED\(31 downto 4),
      DOADO(3 downto 0) => douta(3 downto 0),
      DOBDO(31 downto 4) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED\(31 downto 4),
      DOBDO(3 downto 0) => doutb(3 downto 0),
      DOPADOP(3 downto 0) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED\(3 downto 0),
      DOPBDOP(3 downto 0) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED\(3 downto 0),
      ECCPARITY(7 downto 0) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED\(7 downto 0),
      ENARDEN => ENA_I,
      ENBWREN => ENB_I,
      INJECTDBITERR => '0',
      INJECTSBITERR => '0',
      RDADDRECC(8 downto 0) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED\(8 downto 0),
      REGCEAREGCE => '0',
      REGCEB => '0',
      RSTRAMARSTRAM => ram_rstram_a,
      RSTRAMB => ram_rstram_b,
      RSTREGARSTREG => '0',
      RSTREGB => '0',
      SBITERR => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED\,
      WEA(3) => wea(0),
      WEA(2) => wea(0),
      WEA(1) => wea(0),
      WEA(0) => wea(0),
      WEBWE(7 downto 4) => B"0000",
      WEBWE(3) => web(0),
      WEBWE(2) => web(0),
      WEBWE(1) => web(0),
      WEBWE(0) => web(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized4\ is
  port (
    douta : out STD_LOGIC_VECTOR ( 3 downto 0 );
    doutb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    clka : in STD_LOGIC;
    clkb : in STD_LOGIC;
    ENA_I : in STD_LOGIC;
    ENB_I : in STD_LOGIC;
    ram_rstram_a : in STD_LOGIC;
    ram_rstram_b : in STD_LOGIC;
    addra : in STD_LOGIC_VECTOR ( 12 downto 0 );
    addrb : in STD_LOGIC_VECTOR ( 12 downto 0 );
    dina : in STD_LOGIC_VECTOR ( 3 downto 0 );
    dinb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    wea : in STD_LOGIC_VECTOR ( 0 to 0 );
    web : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized4\ : entity is "blk_mem_gen_prim_wrapper";
end \microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized4\;

architecture STRUCTURE of \microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized4\ is
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 31 downto 4 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 31 downto 4 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED\ : STD_LOGIC_VECTOR ( 8 downto 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : label is "PRIMITIVE";
  attribute bmm_info_memory_device : string;
  attribute bmm_info_memory_device of \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : label is "[23:20][0:8191]";
begin
\DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\: unisim.vcomponents.RAMB36E1
    generic map(
      DOA_REG => 0,
      DOB_REG => 0,
      EN_ECC_READ => false,
      EN_ECC_WRITE => false,
      INITP_00 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_01 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_02 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_03 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_04 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_05 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_06 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_07 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_08 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_09 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_00 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_01 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_02 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_03 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_04 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_05 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_06 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_07 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_08 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_09 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_10 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_11 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_12 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_13 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_14 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_15 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_16 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_17 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_18 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_19 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_20 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_21 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_22 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_23 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_24 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_25 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_26 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_27 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_28 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_29 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_30 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_31 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_32 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_33 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_34 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_35 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_36 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_37 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_38 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_39 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_40 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_41 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_42 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_43 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_44 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_45 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_46 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_47 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_48 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_49 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_50 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_51 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_52 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_53 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_54 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_55 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_56 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_57 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_58 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_59 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_60 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_61 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_62 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_63 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_64 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_65 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_66 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_67 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_68 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_69 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_70 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_71 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_72 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_73 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_74 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_75 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_76 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_77 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_78 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_79 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_A => X"000000000",
      INIT_B => X"000000000",
      INIT_FILE => "NONE",
      IS_CLKARDCLK_INVERTED => '0',
      IS_CLKBWRCLK_INVERTED => '0',
      IS_ENARDEN_INVERTED => '0',
      IS_ENBWREN_INVERTED => '0',
      IS_RSTRAMARSTRAM_INVERTED => '0',
      IS_RSTRAMB_INVERTED => '0',
      IS_RSTREGARSTREG_INVERTED => '0',
      IS_RSTREGB_INVERTED => '0',
      RAM_EXTENSION_A => "NONE",
      RAM_EXTENSION_B => "NONE",
      RAM_MODE => "TDP",
      RDADDR_COLLISION_HWCONFIG => "DELAYED_WRITE",
      READ_WIDTH_A => 4,
      READ_WIDTH_B => 4,
      RSTREG_PRIORITY_A => "REGCE",
      RSTREG_PRIORITY_B => "REGCE",
      SIM_COLLISION_CHECK => "ALL",
      SIM_DEVICE => "7SERIES",
      SRVAL_A => X"000000000",
      SRVAL_B => X"000000000",
      WRITE_MODE_A => "WRITE_FIRST",
      WRITE_MODE_B => "WRITE_FIRST",
      WRITE_WIDTH_A => 4,
      WRITE_WIDTH_B => 4
    )
        port map (
      ADDRARDADDR(15) => '1',
      ADDRARDADDR(14 downto 2) => addra(12 downto 0),
      ADDRARDADDR(1 downto 0) => B"11",
      ADDRBWRADDR(15) => '1',
      ADDRBWRADDR(14 downto 2) => addrb(12 downto 0),
      ADDRBWRADDR(1 downto 0) => B"11",
      CASCADEINA => '0',
      CASCADEINB => '0',
      CASCADEOUTA => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED\,
      CASCADEOUTB => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED\,
      CLKARDCLK => clka,
      CLKBWRCLK => clkb,
      DBITERR => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED\,
      DIADI(31 downto 4) => B"0000000000000000000000000000",
      DIADI(3 downto 0) => dina(3 downto 0),
      DIBDI(31 downto 4) => B"0000000000000000000000000000",
      DIBDI(3 downto 0) => dinb(3 downto 0),
      DIPADIP(3 downto 0) => B"0000",
      DIPBDIP(3 downto 0) => B"0000",
      DOADO(31 downto 4) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED\(31 downto 4),
      DOADO(3 downto 0) => douta(3 downto 0),
      DOBDO(31 downto 4) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED\(31 downto 4),
      DOBDO(3 downto 0) => doutb(3 downto 0),
      DOPADOP(3 downto 0) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED\(3 downto 0),
      DOPBDOP(3 downto 0) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED\(3 downto 0),
      ECCPARITY(7 downto 0) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED\(7 downto 0),
      ENARDEN => ENA_I,
      ENBWREN => ENB_I,
      INJECTDBITERR => '0',
      INJECTSBITERR => '0',
      RDADDRECC(8 downto 0) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED\(8 downto 0),
      REGCEAREGCE => '0',
      REGCEB => '0',
      RSTRAMARSTRAM => ram_rstram_a,
      RSTRAMB => ram_rstram_b,
      RSTREGARSTREG => '0',
      RSTREGB => '0',
      SBITERR => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED\,
      WEA(3) => wea(0),
      WEA(2) => wea(0),
      WEA(1) => wea(0),
      WEA(0) => wea(0),
      WEBWE(7 downto 4) => B"0000",
      WEBWE(3) => web(0),
      WEBWE(2) => web(0),
      WEBWE(1) => web(0),
      WEBWE(0) => web(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized5\ is
  port (
    douta : out STD_LOGIC_VECTOR ( 3 downto 0 );
    doutb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    clka : in STD_LOGIC;
    clkb : in STD_LOGIC;
    ENA_I : in STD_LOGIC;
    ENB_I : in STD_LOGIC;
    ram_rstram_a : in STD_LOGIC;
    ram_rstram_b : in STD_LOGIC;
    addra : in STD_LOGIC_VECTOR ( 12 downto 0 );
    addrb : in STD_LOGIC_VECTOR ( 12 downto 0 );
    dina : in STD_LOGIC_VECTOR ( 3 downto 0 );
    dinb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    wea : in STD_LOGIC_VECTOR ( 0 to 0 );
    web : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized5\ : entity is "blk_mem_gen_prim_wrapper";
end \microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized5\;

architecture STRUCTURE of \microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized5\ is
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 31 downto 4 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 31 downto 4 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED\ : STD_LOGIC_VECTOR ( 8 downto 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : label is "PRIMITIVE";
  attribute bmm_info_memory_device : string;
  attribute bmm_info_memory_device of \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : label is "[27:24][0:8191]";
begin
\DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\: unisim.vcomponents.RAMB36E1
    generic map(
      DOA_REG => 0,
      DOB_REG => 0,
      EN_ECC_READ => false,
      EN_ECC_WRITE => false,
      INITP_00 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_01 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_02 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_03 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_04 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_05 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_06 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_07 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_08 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_09 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_00 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_01 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_02 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_03 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_04 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_05 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_06 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_07 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_08 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_09 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_10 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_11 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_12 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_13 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_14 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_15 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_16 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_17 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_18 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_19 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_20 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_21 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_22 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_23 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_24 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_25 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_26 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_27 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_28 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_29 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_30 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_31 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_32 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_33 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_34 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_35 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_36 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_37 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_38 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_39 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_40 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_41 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_42 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_43 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_44 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_45 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_46 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_47 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_48 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_49 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_50 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_51 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_52 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_53 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_54 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_55 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_56 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_57 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_58 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_59 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_60 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_61 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_62 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_63 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_64 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_65 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_66 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_67 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_68 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_69 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_70 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_71 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_72 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_73 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_74 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_75 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_76 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_77 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_78 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_79 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_A => X"000000000",
      INIT_B => X"000000000",
      INIT_FILE => "NONE",
      IS_CLKARDCLK_INVERTED => '0',
      IS_CLKBWRCLK_INVERTED => '0',
      IS_ENARDEN_INVERTED => '0',
      IS_ENBWREN_INVERTED => '0',
      IS_RSTRAMARSTRAM_INVERTED => '0',
      IS_RSTRAMB_INVERTED => '0',
      IS_RSTREGARSTREG_INVERTED => '0',
      IS_RSTREGB_INVERTED => '0',
      RAM_EXTENSION_A => "NONE",
      RAM_EXTENSION_B => "NONE",
      RAM_MODE => "TDP",
      RDADDR_COLLISION_HWCONFIG => "DELAYED_WRITE",
      READ_WIDTH_A => 4,
      READ_WIDTH_B => 4,
      RSTREG_PRIORITY_A => "REGCE",
      RSTREG_PRIORITY_B => "REGCE",
      SIM_COLLISION_CHECK => "ALL",
      SIM_DEVICE => "7SERIES",
      SRVAL_A => X"000000000",
      SRVAL_B => X"000000000",
      WRITE_MODE_A => "WRITE_FIRST",
      WRITE_MODE_B => "WRITE_FIRST",
      WRITE_WIDTH_A => 4,
      WRITE_WIDTH_B => 4
    )
        port map (
      ADDRARDADDR(15) => '1',
      ADDRARDADDR(14 downto 2) => addra(12 downto 0),
      ADDRARDADDR(1 downto 0) => B"11",
      ADDRBWRADDR(15) => '1',
      ADDRBWRADDR(14 downto 2) => addrb(12 downto 0),
      ADDRBWRADDR(1 downto 0) => B"11",
      CASCADEINA => '0',
      CASCADEINB => '0',
      CASCADEOUTA => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED\,
      CASCADEOUTB => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED\,
      CLKARDCLK => clka,
      CLKBWRCLK => clkb,
      DBITERR => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED\,
      DIADI(31 downto 4) => B"0000000000000000000000000000",
      DIADI(3 downto 0) => dina(3 downto 0),
      DIBDI(31 downto 4) => B"0000000000000000000000000000",
      DIBDI(3 downto 0) => dinb(3 downto 0),
      DIPADIP(3 downto 0) => B"0000",
      DIPBDIP(3 downto 0) => B"0000",
      DOADO(31 downto 4) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED\(31 downto 4),
      DOADO(3 downto 0) => douta(3 downto 0),
      DOBDO(31 downto 4) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED\(31 downto 4),
      DOBDO(3 downto 0) => doutb(3 downto 0),
      DOPADOP(3 downto 0) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED\(3 downto 0),
      DOPBDOP(3 downto 0) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED\(3 downto 0),
      ECCPARITY(7 downto 0) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED\(7 downto 0),
      ENARDEN => ENA_I,
      ENBWREN => ENB_I,
      INJECTDBITERR => '0',
      INJECTSBITERR => '0',
      RDADDRECC(8 downto 0) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED\(8 downto 0),
      REGCEAREGCE => '0',
      REGCEB => '0',
      RSTRAMARSTRAM => ram_rstram_a,
      RSTRAMB => ram_rstram_b,
      RSTREGARSTREG => '0',
      RSTREGB => '0',
      SBITERR => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED\,
      WEA(3) => wea(0),
      WEA(2) => wea(0),
      WEA(1) => wea(0),
      WEA(0) => wea(0),
      WEBWE(7 downto 4) => B"0000",
      WEBWE(3) => web(0),
      WEBWE(2) => web(0),
      WEBWE(1) => web(0),
      WEBWE(0) => web(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized6\ is
  port (
    douta : out STD_LOGIC_VECTOR ( 3 downto 0 );
    doutb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    ENA_I : out STD_LOGIC;
    ENB_I : out STD_LOGIC;
    ram_rstram_a : out STD_LOGIC;
    ram_rstram_b : out STD_LOGIC;
    clka : in STD_LOGIC;
    clkb : in STD_LOGIC;
    addra : in STD_LOGIC_VECTOR ( 12 downto 0 );
    addrb : in STD_LOGIC_VECTOR ( 12 downto 0 );
    dina : in STD_LOGIC_VECTOR ( 3 downto 0 );
    dinb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    wea : in STD_LOGIC_VECTOR ( 0 to 0 );
    web : in STD_LOGIC_VECTOR ( 0 to 0 );
    rsta : in STD_LOGIC;
    POR_A : in STD_LOGIC;
    ENA_dly_D : in STD_LOGIC;
    ena : in STD_LOGIC;
    rstb : in STD_LOGIC;
    POR_B : in STD_LOGIC;
    ENB_dly_D : in STD_LOGIC;
    enb : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized6\ : entity is "blk_mem_gen_prim_wrapper";
end \microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized6\;

architecture STRUCTURE of \microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized6\ is
  signal \^ena_i\ : STD_LOGIC;
  signal \^enb_i\ : STD_LOGIC;
  signal \^ram_rstram_a\ : STD_LOGIC;
  signal \^ram_rstram_b\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 31 downto 4 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 31 downto 4 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED\ : STD_LOGIC_VECTOR ( 8 downto 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : label is "PRIMITIVE";
  attribute bmm_info_memory_device : string;
  attribute bmm_info_memory_device of \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : label is "[31:28][0:8191]";
begin
  ENA_I <= \^ena_i\;
  ENB_I <= \^enb_i\;
  ram_rstram_a <= \^ram_rstram_a\;
  ram_rstram_b <= \^ram_rstram_b\;
\DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\: unisim.vcomponents.RAMB36E1
    generic map(
      DOA_REG => 0,
      DOB_REG => 0,
      EN_ECC_READ => false,
      EN_ECC_WRITE => false,
      INITP_00 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_01 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_02 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_03 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_04 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_05 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_06 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_07 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_08 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_09 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_00 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_01 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_02 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_03 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_04 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_05 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_06 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_07 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_08 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_09 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_10 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_11 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_12 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_13 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_14 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_15 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_16 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_17 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_18 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_19 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_20 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_21 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_22 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_23 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_24 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_25 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_26 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_27 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_28 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_29 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_30 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_31 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_32 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_33 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_34 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_35 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_36 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_37 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_38 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_39 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_40 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_41 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_42 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_43 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_44 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_45 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_46 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_47 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_48 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_49 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_50 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_51 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_52 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_53 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_54 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_55 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_56 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_57 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_58 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_59 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_60 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_61 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_62 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_63 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_64 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_65 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_66 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_67 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_68 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_69 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_70 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_71 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_72 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_73 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_74 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_75 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_76 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_77 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_78 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_79 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_A => X"000000000",
      INIT_B => X"000000000",
      INIT_FILE => "NONE",
      IS_CLKARDCLK_INVERTED => '0',
      IS_CLKBWRCLK_INVERTED => '0',
      IS_ENARDEN_INVERTED => '0',
      IS_ENBWREN_INVERTED => '0',
      IS_RSTRAMARSTRAM_INVERTED => '0',
      IS_RSTRAMB_INVERTED => '0',
      IS_RSTREGARSTREG_INVERTED => '0',
      IS_RSTREGB_INVERTED => '0',
      RAM_EXTENSION_A => "NONE",
      RAM_EXTENSION_B => "NONE",
      RAM_MODE => "TDP",
      RDADDR_COLLISION_HWCONFIG => "DELAYED_WRITE",
      READ_WIDTH_A => 4,
      READ_WIDTH_B => 4,
      RSTREG_PRIORITY_A => "REGCE",
      RSTREG_PRIORITY_B => "REGCE",
      SIM_COLLISION_CHECK => "ALL",
      SIM_DEVICE => "7SERIES",
      SRVAL_A => X"000000000",
      SRVAL_B => X"000000000",
      WRITE_MODE_A => "WRITE_FIRST",
      WRITE_MODE_B => "WRITE_FIRST",
      WRITE_WIDTH_A => 4,
      WRITE_WIDTH_B => 4
    )
        port map (
      ADDRARDADDR(15) => '1',
      ADDRARDADDR(14 downto 2) => addra(12 downto 0),
      ADDRARDADDR(1 downto 0) => B"11",
      ADDRBWRADDR(15) => '1',
      ADDRBWRADDR(14 downto 2) => addrb(12 downto 0),
      ADDRBWRADDR(1 downto 0) => B"11",
      CASCADEINA => '0',
      CASCADEINB => '0',
      CASCADEOUTA => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED\,
      CASCADEOUTB => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED\,
      CLKARDCLK => clka,
      CLKBWRCLK => clkb,
      DBITERR => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED\,
      DIADI(31 downto 4) => B"0000000000000000000000000000",
      DIADI(3 downto 0) => dina(3 downto 0),
      DIBDI(31 downto 4) => B"0000000000000000000000000000",
      DIBDI(3 downto 0) => dinb(3 downto 0),
      DIPADIP(3 downto 0) => B"0000",
      DIPBDIP(3 downto 0) => B"0000",
      DOADO(31 downto 4) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED\(31 downto 4),
      DOADO(3 downto 0) => douta(3 downto 0),
      DOBDO(31 downto 4) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED\(31 downto 4),
      DOBDO(3 downto 0) => doutb(3 downto 0),
      DOPADOP(3 downto 0) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED\(3 downto 0),
      DOPBDOP(3 downto 0) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED\(3 downto 0),
      ECCPARITY(7 downto 0) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED\(7 downto 0),
      ENARDEN => \^ena_i\,
      ENBWREN => \^enb_i\,
      INJECTDBITERR => '0',
      INJECTSBITERR => '0',
      RDADDRECC(8 downto 0) => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED\(8 downto 0),
      REGCEAREGCE => '0',
      REGCEB => '0',
      RSTRAMARSTRAM => \^ram_rstram_a\,
      RSTRAMB => \^ram_rstram_b\,
      RSTREGARSTREG => '0',
      RSTREGB => '0',
      SBITERR => \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED\,
      WEA(3) => wea(0),
      WEA(2) => wea(0),
      WEA(1) => wea(0),
      WEA(0) => wea(0),
      WEBWE(7 downto 4) => B"0000",
      WEBWE(3) => web(0),
      WEBWE(2) => web(0),
      WEBWE(1) => web(0),
      WEBWE(0) => web(0)
    );
\DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => ENA_dly_D,
      I1 => ena,
      O => \^ena_i\
    );
\DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => ENB_dly_D,
      I1 => enb,
      O => \^enb_i\
    );
\DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => rsta,
      I1 => POR_A,
      O => \^ram_rstram_a\
    );
\DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => rstb,
      I1 => POR_B,
      O => \^ram_rstram_b\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDR is
  port (
    \Size_17to32.imm_Reg_reg[15]\ : out STD_LOGIC;
    nonvalid_IFetch_n_reg : out STD_LOGIC;
    Increment : out STD_LOGIC;
    buffer_Full : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Valid_reg : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    DI : out STD_LOGIC;
    R : in STD_LOGIC;
    D_33 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    inHibit_EX : in STD_LOGIC;
    \No_ECC.Sl_Rdy_reg\ : in STD_LOGIC;
    mul_Executing_reg : in STD_LOGIC;
    of_Pause_reg : in STD_LOGIC;
    nonvalid_IFetch_n_reg_0 : in STD_LOGIC;
    missed_IFetch : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    ex_Valid : in STD_LOGIC;
    mbar_hold_I_reg : in STD_LOGIC;
    take_Intr_Now_III : in STD_LOGIC;
    of_Pause : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    mul_Executing_reg_0 : in STD_LOGIC;
    mul_Executing : in STD_LOGIC;
    load_Store_i : in STD_LOGIC;
    DReady : in STD_LOGIC;
    jump_Carry2 : in STD_LOGIC;
    jump2_I_reg : in STD_LOGIC
  );
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDR;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDR is
  signal \^size_17to32.imm_reg_reg[15]\ : STD_LOGIC;
  signal ex_Valid_i_2_n_0 : STD_LOGIC;
  signal nonvalid_IFetch_n_i_2_n_0 : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Size_17to32.imm_Reg[0]_i_1\ : label is "soft_lutpair22";
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute SOFT_HLUTNM of nonvalid_IFetch_n_i_2 : label is "soft_lutpair22";
begin
  \Size_17to32.imm_Reg_reg[15]\ <= \^size_17to32.imm_reg_reg[15]\;
\Size_17to32.imm_Reg[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0004"
    )
        port map (
      I0 => take_Intr_Now_III,
      I1 => \^size_17to32.imm_reg_reg[15]\,
      I2 => of_Pause,
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      O => E(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => D_33,
      Q => \^size_17to32.imm_reg_reg[15]\,
      R => R
    );
\Using_FPGA.Native_I1_i_1__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00151515"
    )
        port map (
      I0 => missed_IFetch,
      I1 => \^size_17to32.imm_reg_reg[15]\,
      I2 => \Using_FPGA.Native_0\,
      I3 => ex_Valid,
      I4 => mbar_hold_I_reg,
      O => DI
    );
\Using_FPGA.Native_i_1__0__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00151515"
    )
        port map (
      I0 => missed_IFetch,
      I1 => \^size_17to32.imm_reg_reg[15]\,
      I2 => \Using_FPGA.Native_0\,
      I3 => ex_Valid,
      I4 => mbar_hold_I_reg,
      O => Increment
    );
\Using_FPGA.Native_i_1__1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^size_17to32.imm_reg_reg[15]\,
      I1 => \Using_FPGA.Native_0\,
      O => buffer_Full
    );
\Using_FPGA.Native_i_1__57\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"4F"
    )
        port map (
      I0 => of_Pause,
      I1 => \^size_17to32.imm_reg_reg[15]\,
      I2 => jump2_I_reg,
      O => trace_jump_taken_i_reg
    );
ex_Valid_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"EEEE2EEE"
    )
        port map (
      I0 => ex_Valid_i_2_n_0,
      I1 => mul_Executing_reg_0,
      I2 => inHibit_EX,
      I3 => of_Pause_reg,
      I4 => take_Intr_Now_III,
      O => ex_Valid_reg
    );
ex_Valid_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AEFFAEAEAEAEAEAE"
    )
        port map (
      I0 => mul_Executing,
      I1 => load_Store_i,
      I2 => DReady,
      I3 => nonvalid_IFetch_n_i_2_n_0,
      I4 => jump_Carry2,
      I5 => jump2_I_reg,
      O => ex_Valid_i_2_n_0
    );
nonvalid_IFetch_n_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF11FFFFF0F0F0F0"
    )
        port map (
      I0 => nonvalid_IFetch_n_i_2_n_0,
      I1 => inHibit_EX,
      I2 => \No_ECC.Sl_Rdy_reg\,
      I3 => mul_Executing_reg,
      I4 => of_Pause_reg,
      I5 => nonvalid_IFetch_n_reg_0,
      O => nonvalid_IFetch_n_reg
    );
nonvalid_IFetch_n_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^size_17to32.imm_reg_reg[15]\,
      I1 => of_Pause,
      O => nonvalid_IFetch_n_i_2_n_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE is
  port (
    carry_In : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    mul_Executing_reg : in STD_LOGIC;
    correct_Carry_II : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => mul_Executing_reg,
      D => correct_Carry_II,
      Q => carry_In,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_14 is
  port (
    reg_Test_Equal_N : out STD_LOGIC;
    R : in STD_LOGIC;
    mul_Executing_reg : in STD_LOGIC;
    Reg_Test_Equal_N_i7_out : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_14 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_14;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_14 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => mul_Executing_reg,
      D => Reg_Test_Equal_N_i7_out,
      Q => reg_Test_Equal_N,
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_20 is
  port (
    use_Reg_Neg_DI : out STD_LOGIC;
    R : in STD_LOGIC;
    mul_Executing_reg : in STD_LOGIC;
    use_Reg_Neg_DI_i26_out : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_20 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_20;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_20 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => mul_Executing_reg,
      D => use_Reg_Neg_DI_i26_out,
      Q => use_Reg_Neg_DI,
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_21 is
  port (
    use_Reg_Neg_S : out STD_LOGIC;
    R : in STD_LOGIC;
    mul_Executing_reg : in STD_LOGIC;
    use_Reg_Neg_S_i28_out : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_21 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_21;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_21 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => mul_Executing_reg,
      D => use_Reg_Neg_S_i28_out,
      Q => use_Reg_Neg_S,
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_3 is
  port (
    alu_Op : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    mul_Executing_reg : in STD_LOGIC;
    D_32 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_3 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_3;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_3 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => mul_Executing_reg,
      D => D_32,
      Q => alu_Op(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_4 is
  port (
    alu_Op : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    mul_Executing_reg : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_4 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_4;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_4 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => mul_Executing_reg,
      D => \Using_FPGA.take_Intr_2nd_Phase_reg\,
      Q => alu_Op(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_529 is
  port (
    \trace_data_address_i_reg[9]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_529 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_529;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_529 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \trace_data_address_i_reg[9]\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_530 is
  port (
    trace_jump_taken_i_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_530 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_530;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_530 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => trace_jump_taken_i_reg,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_533 is
  port (
    \trace_data_address_i_reg[8]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_533 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_533;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_533 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \trace_data_address_i_reg[8]\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_534 is
  port (
    trace_jump_taken_i_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_534 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_534;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_534 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => trace_jump_taken_i_reg,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_537 is
  port (
    \trace_data_address_i_reg[7]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_537 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_537;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_537 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \trace_data_address_i_reg[7]\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_538 is
  port (
    trace_jump_taken_i_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_538 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_538;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_538 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => trace_jump_taken_i_reg,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_541 is
  port (
    \trace_data_address_i_reg[6]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_541 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_541;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_541 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \trace_data_address_i_reg[6]\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_542 is
  port (
    trace_jump_taken_i_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_542 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_542;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_542 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => trace_jump_taken_i_reg,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_545 is
  port (
    \trace_data_address_i_reg[5]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_545 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_545;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_545 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \trace_data_address_i_reg[5]\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_546 is
  port (
    trace_jump_taken_i_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_546 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_546;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_546 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => trace_jump_taken_i_reg,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_549 is
  port (
    \trace_data_address_i_reg[4]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_549 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_549;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_549 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \trace_data_address_i_reg[4]\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_550 is
  port (
    trace_jump_taken_i_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_550 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_550;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_550 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => trace_jump_taken_i_reg,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_553 is
  port (
    \trace_data_address_i_reg[3]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_553 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_553;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_553 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \trace_data_address_i_reg[3]\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_554 is
  port (
    trace_jump_taken_i_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_554 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_554;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_554 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => trace_jump_taken_i_reg,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_557 is
  port (
    Op1_Logic : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_557 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_557;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_557 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => Op1_Logic,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_558 is
  port (
    trace_jump_taken_i_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_558 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_558;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_558 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => trace_jump_taken_i_reg,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_561 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_561 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_561;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_561 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_562 is
  port (
    \Zero_Detecting[0].nibble_Zero_reg\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_562 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_562;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_562 is
  signal \Using_FPGA.Native_n_0\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => \Using_FPGA.Native_n_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \Using_FPGA.Native_n_0\,
      I1 => \Using_FPGA.Native_0\,
      O => \Zero_Detecting[0].nibble_Zero_reg\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_565 is
  port (
    \trace_data_address_i_reg[2]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_565 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_565;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_565 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \trace_data_address_i_reg[2]\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_566 is
  port (
    trace_jump_taken_i_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_566 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_566;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_566 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => trace_jump_taken_i_reg,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_569 is
  port (
    Shifted : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_569 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_569;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_569 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => Shifted,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_570 is
  port (
    trace_jump_taken_i_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_570 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_570;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_570 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => trace_jump_taken_i_reg,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_573 is
  port (
    Op1_Shift : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_573 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_573;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_573 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => Op1_Shift,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_574 is
  port (
    trace_jump_taken_i_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_574 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_574;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_574 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => trace_jump_taken_i_reg,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_577 is
  port (
    \trace_data_address_i_reg[27]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_577 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_577;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_577 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \trace_data_address_i_reg[27]\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_578 is
  port (
    trace_jump_taken_i_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_578 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_578;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_578 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => trace_jump_taken_i_reg,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_581 is
  port (
    \trace_data_address_i_reg[26]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_581 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_581;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_581 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \trace_data_address_i_reg[26]\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_582 is
  port (
    trace_jump_taken_i_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_582 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_582;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_582 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => trace_jump_taken_i_reg,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_585 is
  port (
    \trace_data_address_i_reg[25]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_585 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_585;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_585 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \trace_data_address_i_reg[25]\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_586 is
  port (
    trace_jump_taken_i_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_586 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_586;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_586 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => trace_jump_taken_i_reg,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_589 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_589 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_589;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_589 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_590 is
  port (
    trace_jump_taken_i_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_590 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_590;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_590 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => trace_jump_taken_i_reg,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_593 is
  port (
    \trace_data_address_i_reg[23]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_593 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_593;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_593 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \trace_data_address_i_reg[23]\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_594 is
  port (
    trace_jump_taken_i_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_594 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_594;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_594 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => trace_jump_taken_i_reg,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_597 is
  port (
    \trace_data_address_i_reg[22]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_597 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_597;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_597 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \trace_data_address_i_reg[22]\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_598 is
  port (
    trace_jump_taken_i_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_598 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_598;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_598 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => trace_jump_taken_i_reg,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_6 is
  port (
    force1 : out STD_LOGIC;
    R : in STD_LOGIC;
    mul_Executing_reg : in STD_LOGIC;
    force1_i29_out : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_6 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_6;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_6 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => mul_Executing_reg,
      D => force1_i29_out,
      Q => force1,
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_601 is
  port (
    \trace_data_address_i_reg[21]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_601 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_601;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_601 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \trace_data_address_i_reg[21]\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_602 is
  port (
    trace_jump_taken_i_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_602 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_602;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_602 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => trace_jump_taken_i_reg,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_605 is
  port (
    \trace_data_address_i_reg[20]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_605 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_605;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_605 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \trace_data_address_i_reg[20]\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_606 is
  port (
    trace_jump_taken_i_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_606 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_606;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_606 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => trace_jump_taken_i_reg,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_609 is
  port (
    \trace_data_address_i_reg[1]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_609 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_609;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_609 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \trace_data_address_i_reg[1]\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_610 is
  port (
    trace_jump_taken_i_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_610 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_610;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_610 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => trace_jump_taken_i_reg,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_613 is
  port (
    \trace_data_address_i_reg[19]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_613 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_613;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_613 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \trace_data_address_i_reg[19]\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_614 is
  port (
    trace_jump_taken_i_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_614 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_614;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_614 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => trace_jump_taken_i_reg,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_617 is
  port (
    \trace_data_address_i_reg[18]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_617 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_617;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_617 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \trace_data_address_i_reg[18]\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_618 is
  port (
    trace_jump_taken_i_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_618 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_618;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_618 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => trace_jump_taken_i_reg,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_621 is
  port (
    \trace_data_address_i_reg[17]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_621 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_621;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_621 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \trace_data_address_i_reg[17]\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_622 is
  port (
    trace_jump_taken_i_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_622 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_622;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_622 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => trace_jump_taken_i_reg,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_625 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_625 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_625;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_625 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_626 is
  port (
    trace_jump_taken_i_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_626 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_626;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_626 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => trace_jump_taken_i_reg,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_629 is
  port (
    \trace_data_address_i_reg[15]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_629 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_629;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_629 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \trace_data_address_i_reg[15]\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_630 is
  port (
    trace_jump_taken_i_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_630 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_630;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_630 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => trace_jump_taken_i_reg,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_633 is
  port (
    \trace_data_address_i_reg[14]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_633 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_633;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_633 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \trace_data_address_i_reg[14]\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_634 is
  port (
    trace_jump_taken_i_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_634 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_634;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_634 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => trace_jump_taken_i_reg,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_637 is
  port (
    \trace_data_address_i_reg[13]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_637 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_637;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_637 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \trace_data_address_i_reg[13]\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_638 is
  port (
    trace_jump_taken_i_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_638 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_638;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_638 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => trace_jump_taken_i_reg,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_641 is
  port (
    \trace_data_address_i_reg[12]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_641 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_641;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_641 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \trace_data_address_i_reg[12]\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_642 is
  port (
    trace_jump_taken_i_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_642 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_642;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_642 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => trace_jump_taken_i_reg,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_645 is
  port (
    \trace_data_address_i_reg[11]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_645 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_645;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_645 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \trace_data_address_i_reg[11]\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_646 is
  port (
    trace_jump_taken_i_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_646 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_646;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_646 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => trace_jump_taken_i_reg,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_649 is
  port (
    \trace_data_address_i_reg[10]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_649 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_649;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_649 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \trace_data_address_i_reg[10]\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_650 is
  port (
    trace_jump_taken_i_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_650 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_650;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_650 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => trace_jump_taken_i_reg,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_653 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_653 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_653;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_653 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_654 is
  port (
    trace_jump_taken_i_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_654 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_654;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_654 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => trace_jump_taken_i_reg,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_7 is
  port (
    force2 : out STD_LOGIC;
    R : in STD_LOGIC;
    mul_Executing_reg : in STD_LOGIC;
    force2_i : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_7 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_7;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_7 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => mul_Executing_reg,
      D => force2_i,
      Q => force2,
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_8 is
  port (
    force_Val1 : out STD_LOGIC;
    R : in STD_LOGIC;
    mul_Executing_reg : in STD_LOGIC;
    force_Val1_i27_out : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_8 : entity is "microblaze_v10_0_7_MB_FDRE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_8;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_8 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => mul_Executing_reg,
      D => force_Val1_i27_out,
      Q => force_Val1,
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE is
  port (
    Reg_Test_Equal : out STD_LOGIC;
    R : in STD_LOGIC;
    mul_Executing_reg : in STD_LOGIC;
    Reg_Test_Equal_i : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => mul_Executing_reg,
      D => Reg_Test_Equal_i,
      Q => Reg_Test_Equal,
      S => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_431 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_431 : entity is "microblaze_v10_0_7_MB_FDSE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_431;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_431 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => D(0),
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_437 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_437 : entity is "microblaze_v10_0_7_MB_FDSE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_437;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_437 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => D(0),
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_443 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_443 : entity is "microblaze_v10_0_7_MB_FDSE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_443;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_443 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => D(0),
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_449 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_449 : entity is "microblaze_v10_0_7_MB_FDSE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_449;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_449 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => D(0),
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_455 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_455 : entity is "microblaze_v10_0_7_MB_FDSE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_455;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_455 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => D(0),
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_461 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_461 : entity is "microblaze_v10_0_7_MB_FDSE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_461;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_461 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => D(0),
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_467 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_467 : entity is "microblaze_v10_0_7_MB_FDSE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_467;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_467 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => D(0),
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_473 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_473 : entity is "microblaze_v10_0_7_MB_FDSE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_473;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_473 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => D(0),
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_479 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_479 : entity is "microblaze_v10_0_7_MB_FDSE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_479;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_479 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => D(0),
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_485 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_485 : entity is "microblaze_v10_0_7_MB_FDSE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_485;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_485 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => D(0),
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_491 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_491 : entity is "microblaze_v10_0_7_MB_FDSE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_491;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_491 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => D(0),
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_497 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_497 : entity is "microblaze_v10_0_7_MB_FDSE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_497;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_497 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => D(0),
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_503 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_503 : entity is "microblaze_v10_0_7_MB_FDSE";
end microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_503;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_503 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => D(0),
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3 is
  port (
    opsel1_SPR_Select_2_2 : out STD_LOGIC;
    instr_OF : in STD_LOGIC_VECTOR ( 1 downto 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
end microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => instr_OF(1),
      I1 => instr_OF(0),
      I2 => D(0),
      O => opsel1_SPR_Select_2_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized0\ is
  port (
    opsel1_SPR_Select : out STD_LOGIC;
    opsel1_SPR_Select_1 : in STD_LOGIC;
    opsel1_SPR_Select_2_1 : in STD_LOGIC;
    opsel1_SPR_Select_2_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized0\ : entity is "microblaze_v10_0_7_MB_LUT3";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized0\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized0\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"15"
    )
        port map (
      I0 => opsel1_SPR_Select_1,
      I1 => opsel1_SPR_Select_2_1,
      I2 => opsel1_SPR_Select_2_2,
      O => opsel1_SPR_Select
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized1\ is
  port (
    res_forward1_3 : out STD_LOGIC;
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Valid : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized1\ : entity is "microblaze_v10_0_7_MB_LUT3";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized1\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized1\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"90"
    )
        port map (
      I0 => reg1_Addr(0),
      I1 => Q(0),
      I2 => ex_Valid,
      O => res_forward1_3
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized1_18\ is
  port (
    res_forward2_3 : out STD_LOGIC;
    imm_Value : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Valid : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized1_18\ : entity is "microblaze_v10_0_7_MB_LUT3";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized1_18\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized1_18\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"90"
    )
        port map (
      I0 => imm_Value(0),
      I1 => Q(0),
      I2 => ex_Valid,
      O => res_forward2_3
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized2\ is
  port (
    force_DI1 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    use_Reg_Neg_DI : in STD_LOGIC;
    force_Val1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized2\ : entity is "microblaze_v10_0_7_MB_LUT3";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized2\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized2\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => use_Reg_Neg_DI,
      I2 => force_Val1,
      O => force_DI1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized2_27\ is
  port (
    force_jump1 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    use_Reg_Neg_S : in STD_LOGIC;
    force1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized2_27\ : entity is "microblaze_v10_0_7_MB_LUT3";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized2_27\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized2_27\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => use_Reg_Neg_S,
      I2 => force1,
      O => force_jump1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized3\ is
  port (
    control_carry : out STD_LOGIC;
    carry_In : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized3\ : entity is "microblaze_v10_0_7_MB_LUT3";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized3\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized3\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"00"
    )
        port map (
      I0 => carry_In,
      I1 => carry_In,
      I2 => '1',
      O => control_carry
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized4\ is
  port (
    sel_LSB : out STD_LOGIC_VECTOR ( 0 to 0 );
    byte_selects_1 : in STD_LOGIC;
    isbyte : in STD_LOGIC;
    isdoublet : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized4\ : entity is "microblaze_v10_0_7_MB_LUT3";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized4\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized4\ is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AB"
    )
        port map (
      I0 => byte_selects_1,
      I1 => isbyte,
      I2 => isdoublet,
      O => sel_LSB(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6 is
  port (
    alu_AddSub_1 : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    Op1_Logic : in STD_LOGIC
  );
end microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => Op1_Logic,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O => alu_AddSub_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0\ is
  port (
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0\ : entity is "microblaze_v10_0_7_MB_LUT6";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0\ is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Result(0) <= \^ex_result\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => Q(0),
      I1 => Select_Logic_reg,
      I2 => Data_Read_Mask,
      I3 => Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => Q(1),
      O => \^ex_result\(0)
    );
\Using_FPGA.Native_i_2__14\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CACFCAC0"
    )
        port map (
      I0 => \^ex_result\(0),
      I1 => Interrupt_Address(0),
      I2 => exception_kind(0),
      I3 => res_Forward2,
      I4 => reg2_Data(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_230\ is
  port (
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_230\ : entity is "microblaze_v10_0_7_MB_LUT6";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_230\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_230\ is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Result(0) <= \^ex_result\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => Q(0),
      I1 => Select_Logic_reg,
      I2 => Data_Read_Mask,
      I3 => Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => Q(1),
      O => \^ex_result\(0)
    );
\Using_FPGA.Native_i_2__13\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CACFCAC0"
    )
        port map (
      I0 => \^ex_result\(0),
      I1 => Interrupt_Address(0),
      I2 => exception_kind(0),
      I3 => res_Forward2,
      I4 => reg2_Data(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_233\ is
  port (
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_233\ : entity is "microblaze_v10_0_7_MB_LUT6";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_233\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_233\ is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Result(0) <= \^ex_result\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => Q(0),
      I1 => Select_Logic_reg,
      I2 => Data_Read_Mask,
      I3 => Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => Q(1),
      O => \^ex_result\(0)
    );
\Using_FPGA.Native_i_2__12\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CACFCAC0"
    )
        port map (
      I0 => \^ex_result\(0),
      I1 => Interrupt_Address(0),
      I2 => exception_kind(0),
      I3 => res_Forward2,
      I4 => reg2_Data(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_236\ is
  port (
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_236\ : entity is "microblaze_v10_0_7_MB_LUT6";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_236\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_236\ is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Result(0) <= \^ex_result\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => Q(0),
      I1 => Select_Logic_reg,
      I2 => Data_Read_Mask,
      I3 => Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => Q(1),
      O => \^ex_result\(0)
    );
\Using_FPGA.Native_i_2__11\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CACFCAC0"
    )
        port map (
      I0 => \^ex_result\(0),
      I1 => Interrupt_Address(0),
      I2 => exception_kind(0),
      I3 => res_Forward2,
      I4 => reg2_Data(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_239\ is
  port (
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_239\ : entity is "microblaze_v10_0_7_MB_LUT6";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_239\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_239\ is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Result(0) <= \^ex_result\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => Q(0),
      I1 => Select_Logic_reg,
      I2 => Data_Read_Mask,
      I3 => Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => Q(1),
      O => \^ex_result\(0)
    );
\Using_FPGA.Native_i_2__10\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CACFCAC0"
    )
        port map (
      I0 => \^ex_result\(0),
      I1 => Interrupt_Address(0),
      I2 => exception_kind(0),
      I3 => res_Forward2,
      I4 => reg2_Data(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_242\ is
  port (
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_242\ : entity is "microblaze_v10_0_7_MB_LUT6";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_242\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_242\ is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Result(0) <= \^ex_result\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => Q(0),
      I1 => Select_Logic_reg,
      I2 => Data_Read_Mask,
      I3 => Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => Q(1),
      O => \^ex_result\(0)
    );
\Using_FPGA.Native_i_2__9\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CACFCAC0"
    )
        port map (
      I0 => \^ex_result\(0),
      I1 => Interrupt_Address(0),
      I2 => exception_kind(0),
      I3 => res_Forward2,
      I4 => reg2_Data(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_245\ is
  port (
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_245\ : entity is "microblaze_v10_0_7_MB_LUT6";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_245\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_245\ is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Result(0) <= \^ex_result\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => Q(0),
      I1 => Select_Logic_reg,
      I2 => Data_Read_Mask,
      I3 => Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => Q(1),
      O => \^ex_result\(0)
    );
\Using_FPGA.Native_i_2__8\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CACFCAC0"
    )
        port map (
      I0 => \^ex_result\(0),
      I1 => Interrupt_Address(0),
      I2 => exception_kind(0),
      I3 => res_Forward2,
      I4 => reg2_Data(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_248\ is
  port (
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Shift_Logic_Res : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_248\ : entity is "microblaze_v10_0_7_MB_LUT6";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_248\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_248\ is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Result(0) <= \^ex_result\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => Q(0),
      I1 => Shift_Logic_Res,
      I2 => '1',
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => Q(1),
      O => \^ex_result\(0)
    );
\Using_FPGA.Native_i_3__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CACFCAC0"
    )
        port map (
      I0 => \^ex_result\(0),
      I1 => Interrupt_Address(0),
      I2 => exception_kind(0),
      I3 => res_Forward2,
      I4 => reg2_Data(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_251\ is
  port (
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Select_Logic_reg : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_251\ : entity is "microblaze_v10_0_7_MB_LUT6";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_251\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_251\ is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Result(0) <= \^ex_result\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => Q(0),
      I1 => Select_Logic_reg,
      I2 => '1',
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => Q(1),
      O => \^ex_result\(0)
    );
\Using_FPGA.Native_i_2__35\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CACFCAC0"
    )
        port map (
      I0 => \^ex_result\(0),
      I1 => Interrupt_Address(0),
      I2 => exception_kind(0),
      I3 => res_Forward2,
      I4 => reg2_Data(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_254\ is
  port (
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_254\ : entity is "microblaze_v10_0_7_MB_LUT6";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_254\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_254\ is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Result(0) <= \^ex_result\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => Q(0),
      I1 => Select_Logic_reg,
      I2 => Data_Read_Mask,
      I3 => Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => Q(1),
      O => \^ex_result\(0)
    );
\Using_FPGA.Native_i_2__7\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CACFCAC0"
    )
        port map (
      I0 => \^ex_result\(0),
      I1 => Interrupt_Address(0),
      I2 => exception_kind(0),
      I3 => res_Forward2,
      I4 => reg2_Data(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_257\ is
  port (
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Select_Logic_reg : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_257\ : entity is "microblaze_v10_0_7_MB_LUT6";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_257\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_257\ is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Result(0) <= \^ex_result\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => Q(0),
      I1 => Select_Logic_reg,
      I2 => '1',
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => Q(1),
      O => \^ex_result\(0)
    );
\Using_FPGA.Native_i_2__34\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CACFCAC0"
    )
        port map (
      I0 => \^ex_result\(0),
      I1 => Interrupt_Address(0),
      I2 => exception_kind(0),
      I3 => res_Forward2,
      I4 => reg2_Data(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_260\ is
  port (
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Select_Logic_reg : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_260\ : entity is "microblaze_v10_0_7_MB_LUT6";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_260\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_260\ is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Result(0) <= \^ex_result\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => Q(0),
      I1 => Select_Logic_reg,
      I2 => '1',
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => Q(1),
      O => \^ex_result\(0)
    );
\Using_FPGA.Native_i_2__33\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CACFCAC0"
    )
        port map (
      I0 => \^ex_result\(0),
      I1 => Interrupt_Address(0),
      I2 => exception_kind(0),
      I3 => res_Forward2,
      I4 => reg2_Data(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_263\ is
  port (
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Select_Logic_reg : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_263\ : entity is "microblaze_v10_0_7_MB_LUT6";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_263\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_263\ is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Result(0) <= \^ex_result\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => Q(0),
      I1 => Select_Logic_reg,
      I2 => '1',
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => Q(1),
      O => \^ex_result\(0)
    );
\Using_FPGA.Native_i_2__32\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CACFCAC0"
    )
        port map (
      I0 => \^ex_result\(0),
      I1 => Interrupt_Address(0),
      I2 => exception_kind(0),
      I3 => res_Forward2,
      I4 => reg2_Data(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_266\ is
  port (
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Select_Logic_reg : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_266\ : entity is "microblaze_v10_0_7_MB_LUT6";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_266\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_266\ is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Result(0) <= \^ex_result\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => Q(0),
      I1 => Select_Logic_reg,
      I2 => '1',
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => Q(1),
      O => \^ex_result\(0)
    );
\Using_FPGA.Native_i_2__31\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CACFCAC0"
    )
        port map (
      I0 => \^ex_result\(0),
      I1 => Interrupt_Address(0),
      I2 => exception_kind(0),
      I3 => res_Forward2,
      I4 => reg2_Data(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_269\ is
  port (
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Select_Logic_reg : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_269\ : entity is "microblaze_v10_0_7_MB_LUT6";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_269\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_269\ is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Result(0) <= \^ex_result\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => Q(0),
      I1 => Select_Logic_reg,
      I2 => '1',
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => Q(1),
      O => \^ex_result\(0)
    );
\Using_FPGA.Native_i_2__30\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CACFCAC0"
    )
        port map (
      I0 => \^ex_result\(0),
      I1 => Interrupt_Address(0),
      I2 => exception_kind(0),
      I3 => res_Forward2,
      I4 => reg2_Data(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_272\ is
  port (
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Select_Logic_reg : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_272\ : entity is "microblaze_v10_0_7_MB_LUT6";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_272\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_272\ is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Result(0) <= \^ex_result\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => Q(0),
      I1 => Select_Logic_reg,
      I2 => '1',
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => Q(1),
      O => \^ex_result\(0)
    );
\Using_FPGA.Native_i_2__29\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CACFCAC0"
    )
        port map (
      I0 => \^ex_result\(0),
      I1 => Interrupt_Address(0),
      I2 => exception_kind(0),
      I3 => res_Forward2,
      I4 => reg2_Data(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_275\ is
  port (
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_275\ : entity is "microblaze_v10_0_7_MB_LUT6";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_275\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_275\ is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Result(0) <= \^ex_result\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => Q(0),
      I1 => Select_Logic_reg,
      I2 => Data_Read_Mask,
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => Q(1),
      O => \^ex_result\(0)
    );
\Using_FPGA.Native_i_2__28\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CACFCAC0"
    )
        port map (
      I0 => \^ex_result\(0),
      I1 => Interrupt_Address(0),
      I2 => exception_kind(0),
      I3 => res_Forward2,
      I4 => reg2_Data(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_278\ is
  port (
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_278\ : entity is "microblaze_v10_0_7_MB_LUT6";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_278\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_278\ is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Result(0) <= \^ex_result\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => Q(0),
      I1 => Select_Logic_reg,
      I2 => Data_Read_Mask,
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => Q(1),
      O => \^ex_result\(0)
    );
\Using_FPGA.Native_i_2__27\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CACFCAC0"
    )
        port map (
      I0 => \^ex_result\(0),
      I1 => Interrupt_Address(0),
      I2 => exception_kind(0),
      I3 => res_Forward2,
      I4 => reg2_Data(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_281\ is
  port (
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_281\ : entity is "microblaze_v10_0_7_MB_LUT6";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_281\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_281\ is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Result(0) <= \^ex_result\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => Q(0),
      I1 => Select_Logic_reg,
      I2 => Data_Read_Mask,
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => Q(1),
      O => \^ex_result\(0)
    );
\Using_FPGA.Native_i_2__26\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CACFCAC0"
    )
        port map (
      I0 => \^ex_result\(0),
      I1 => Interrupt_Address(0),
      I2 => exception_kind(0),
      I3 => res_Forward2,
      I4 => reg2_Data(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_284\ is
  port (
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_284\ : entity is "microblaze_v10_0_7_MB_LUT6";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_284\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_284\ is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Result(0) <= \^ex_result\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => Q(0),
      I1 => Select_Logic_reg,
      I2 => Data_Read_Mask,
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => Q(1),
      O => \^ex_result\(0)
    );
\Using_FPGA.Native_i_2__25\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CACFCAC0"
    )
        port map (
      I0 => \^ex_result\(0),
      I1 => Interrupt_Address(0),
      I2 => exception_kind(0),
      I3 => res_Forward2,
      I4 => reg2_Data(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_287\ is
  port (
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_287\ : entity is "microblaze_v10_0_7_MB_LUT6";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_287\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_287\ is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Result(0) <= \^ex_result\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => Q(0),
      I1 => Select_Logic_reg,
      I2 => Data_Read_Mask,
      I3 => Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => Q(1),
      O => \^ex_result\(0)
    );
\Using_FPGA.Native_i_2__6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CACFCAC0"
    )
        port map (
      I0 => \^ex_result\(0),
      I1 => Interrupt_Address(0),
      I2 => exception_kind(0),
      I3 => res_Forward2,
      I4 => reg2_Data(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_290\ is
  port (
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_290\ : entity is "microblaze_v10_0_7_MB_LUT6";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_290\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_290\ is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Result(0) <= \^ex_result\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => Q(0),
      I1 => Select_Logic_reg,
      I2 => Data_Read_Mask,
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => Q(1),
      O => \^ex_result\(0)
    );
\Using_FPGA.Native_i_2__24\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CACFCAC0"
    )
        port map (
      I0 => \^ex_result\(0),
      I1 => Interrupt_Address(0),
      I2 => exception_kind(0),
      I3 => res_Forward2,
      I4 => reg2_Data(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_293\ is
  port (
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_293\ : entity is "microblaze_v10_0_7_MB_LUT6";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_293\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_293\ is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Result(0) <= \^ex_result\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => Q(0),
      I1 => Select_Logic_reg,
      I2 => Data_Read_Mask,
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => Q(1),
      O => \^ex_result\(0)
    );
\Using_FPGA.Native_i_2__23\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CACFCAC0"
    )
        port map (
      I0 => \^ex_result\(0),
      I1 => Interrupt_Address(0),
      I2 => exception_kind(0),
      I3 => res_Forward2,
      I4 => reg2_Data(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_296\ is
  port (
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_296\ : entity is "microblaze_v10_0_7_MB_LUT6";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_296\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_296\ is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Result(0) <= \^ex_result\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => Q(0),
      I1 => Select_Logic_reg,
      I2 => Data_Read_Mask,
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => Q(1),
      O => \^ex_result\(0)
    );
\Using_FPGA.Native_i_2__22\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CACFCAC0"
    )
        port map (
      I0 => \^ex_result\(0),
      I1 => Interrupt_Address(0),
      I2 => exception_kind(0),
      I3 => res_Forward2,
      I4 => reg2_Data(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_299\ is
  port (
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_299\ : entity is "microblaze_v10_0_7_MB_LUT6";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_299\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_299\ is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Result(0) <= \^ex_result\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => Q(0),
      I1 => Select_Logic_reg,
      I2 => Data_Read_Mask,
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => Q(1),
      O => \^ex_result\(0)
    );
\Using_FPGA.Native_i_2__21\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CACFCAC0"
    )
        port map (
      I0 => \^ex_result\(0),
      I1 => Interrupt_Address(0),
      I2 => exception_kind(0),
      I3 => res_Forward2,
      I4 => reg2_Data(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_302\ is
  port (
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_302\ : entity is "microblaze_v10_0_7_MB_LUT6";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_302\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_302\ is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Result(0) <= \^ex_result\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => Q(0),
      I1 => Select_Logic_reg,
      I2 => Data_Read_Mask,
      I3 => Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => Q(1),
      O => \^ex_result\(0)
    );
\Using_FPGA.Native_i_2__20\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CACFCAC0"
    )
        port map (
      I0 => \^ex_result\(0),
      I1 => Interrupt_Address(0),
      I2 => exception_kind(0),
      I3 => res_Forward2,
      I4 => reg2_Data(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_305\ is
  port (
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_305\ : entity is "microblaze_v10_0_7_MB_LUT6";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_305\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_305\ is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Result(0) <= \^ex_result\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => Q(0),
      I1 => Select_Logic_reg,
      I2 => Data_Read_Mask,
      I3 => Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => Q(1),
      O => \^ex_result\(0)
    );
\Using_FPGA.Native_i_2__19\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CACFCAC0"
    )
        port map (
      I0 => \^ex_result\(0),
      I1 => Interrupt_Address(0),
      I2 => exception_kind(0),
      I3 => res_Forward2,
      I4 => reg2_Data(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_308\ is
  port (
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_308\ : entity is "microblaze_v10_0_7_MB_LUT6";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_308\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_308\ is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Result(0) <= \^ex_result\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => Q(0),
      I1 => Select_Logic_reg,
      I2 => Data_Read_Mask,
      I3 => Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => Q(1),
      O => \^ex_result\(0)
    );
\Using_FPGA.Native_i_2__18\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CACFCAC0"
    )
        port map (
      I0 => \^ex_result\(0),
      I1 => Interrupt_Address(0),
      I2 => exception_kind(0),
      I3 => res_Forward2,
      I4 => reg2_Data(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_311\ is
  port (
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_311\ : entity is "microblaze_v10_0_7_MB_LUT6";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_311\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_311\ is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Result(0) <= \^ex_result\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => Q(0),
      I1 => Select_Logic_reg,
      I2 => Data_Read_Mask,
      I3 => Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => Q(1),
      O => \^ex_result\(0)
    );
\Using_FPGA.Native_i_2__17\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CACFCAC0"
    )
        port map (
      I0 => \^ex_result\(0),
      I1 => Interrupt_Address(0),
      I2 => exception_kind(0),
      I3 => res_Forward2,
      I4 => reg2_Data(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_314\ is
  port (
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_314\ : entity is "microblaze_v10_0_7_MB_LUT6";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_314\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_314\ is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Result(0) <= \^ex_result\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => Q(0),
      I1 => Select_Logic_reg,
      I2 => Data_Read_Mask,
      I3 => Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => Q(1),
      O => \^ex_result\(0)
    );
\Using_FPGA.Native_i_2__16\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CACFCAC0"
    )
        port map (
      I0 => \^ex_result\(0),
      I1 => Interrupt_Address(0),
      I2 => exception_kind(0),
      I3 => res_Forward2,
      I4 => reg2_Data(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_317\ is
  port (
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_317\ : entity is "microblaze_v10_0_7_MB_LUT6";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_317\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_317\ is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Result(0) <= \^ex_result\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => Q(0),
      I1 => Select_Logic_reg,
      I2 => Data_Read_Mask,
      I3 => Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => Q(1),
      O => \^ex_result\(0)
    );
\Using_FPGA.Native_i_2__15\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CACFCAC0"
    )
        port map (
      I0 => \^ex_result\(0),
      I1 => Interrupt_Address(0),
      I2 => exception_kind(0),
      I3 => res_Forward2,
      I4 => reg2_Data(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_320\ is
  port (
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_320\ : entity is "microblaze_v10_0_7_MB_LUT6";
end \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_320\;

architecture STRUCTURE of \microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_320\ is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Result(0) <= \^ex_result\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => Q(0),
      I1 => Select_Logic_reg,
      I2 => Data_Read_Mask,
      I3 => Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => Q(1),
      O => \^ex_result\(0)
    );
\Using_FPGA.Native_i_2__5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CACFCAC0"
    )
        port map (
      I0 => \^ex_result\(0),
      I1 => Interrupt_Address(0),
      I2 => exception_kind(0),
      I3 => res_Forward2,
      I4 => reg2_Data(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MULT_AND is
  port (
    sub_Carry : out STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ : in STD_LOGIC
  );
end microblaze_mcs_1_microblaze_v10_0_7_MB_MULT_AND;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MULT_AND is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "MULT_AND";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native\ : label is "LO:O";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I1 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\,
      O => sub_Carry
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MULT_AND_753 is
  port (
    DI : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MULT_AND_753 : entity is "microblaze_v10_0_7_MB_MULT_AND";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MULT_AND_753;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MULT_AND_753 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "MULT_AND";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native\ : label is "LO:O";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      O => DI
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY is
  port (
    correct_Carry_I : out STD_LOGIC;
    correct_Carry_Select : in STD_LOGIC;
    sub_Carry : in STD_LOGIC;
    correct_Carry : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 2 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 2 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 2 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
begin
  \^lopt_2\ <= lopt_1;
  lopt <= \^lopt_1\;
  lopt_3 <= lopt_2;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => correct_Carry,
      CO(3 downto 2) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3 downto 2),
      CO(1) => \^lopt_1\,
      CO(0) => correct_Carry_I,
      CYINIT => '0',
      DI(3 downto 2) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3 downto 2),
      DI(1) => \^lopt_2\,
      DI(0) => sub_Carry,
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3 downto 2) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3 downto 2),
      S(1) => lopt_3,
      S(0) => correct_Carry_Select
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_10 is
  port (
    jump_Carry1 : out STD_LOGIC;
    force_jump1 : in STD_LOGIC;
    force_DI1 : in STD_LOGIC;
    Reg_zero : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_10 : entity is "microblaze_v10_0_7_MB_MUXCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_10;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_10 is
  signal \^jump_carry1\ : STD_LOGIC;
begin
  \^jump_carry1\ <= lopt;
  jump_Carry1 <= \^jump_carry1\;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_11 is
  port (
    jump_Carry2 : out STD_LOGIC;
    force_jump2 : in STD_LOGIC;
    force_DI2 : in STD_LOGIC;
    jump_Carry1 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_11 : entity is "microblaze_v10_0_7_MB_MUXCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_11;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_11 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => jump_Carry1,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => jump_Carry2,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => force_DI2,
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => force_jump2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_12 is
  port (
    trace_jump_taken_i_reg : out STD_LOGIC;
    Trace_Delay_Slot_early_reg : out STD_LOGIC;
    R_0 : out STD_LOGIC;
    PC_Write : out STD_LOGIC;
    R : out STD_LOGIC;
    S92_out : out STD_LOGIC;
    break_Pipe_i_reg0 : out STD_LOGIC;
    of_Pause_reg : in STD_LOGIC;
    jump_Carry2 : in STD_LOGIC;
    jump2_I_reg : in STD_LOGIC;
    mul_Executing_reg : in STD_LOGIC;
    dbg_stop_instr_fetch : in STD_LOGIC;
    Trace_Delay_Slot_early : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    mul_Executing_reg_0 : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg\ : in STD_LOGIC;
    inHibit_EX : in STD_LOGIC;
    Interrupt : in STD_LOGIC;
    MSR : in STD_LOGIC_VECTOR ( 1 downto 0 );
    p_69_in : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_12 : entity is "microblaze_v10_0_7_MB_MUXCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_12;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_12 is
  signal \<const0>\ : STD_LOGIC;
  signal \^trace_jump_taken_i_reg\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__3__0\ : label is "soft_lutpair23";
  attribute SOFT_HLUTNM of mbar_first_i_2 : label is "soft_lutpair23";
begin
  \^trace_jump_taken_i_reg\ <= lopt;
  lopt_1 <= \<const0>\;
  trace_jump_taken_i_reg <= \^trace_jump_taken_i_reg\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
Trace_Delay_Slot_early_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FF8F0080"
    )
        port map (
      I0 => \^trace_jump_taken_i_reg\,
      I1 => jump2_I_reg,
      I2 => mul_Executing_reg,
      I3 => dbg_stop_instr_fetch,
      I4 => Trace_Delay_Slot_early,
      O => Trace_Delay_Slot_early_reg
    );
\Using_FPGA.Native_i_1__2__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => sync_reset,
      I1 => \^trace_jump_taken_i_reg\,
      O => R_0
    );
\Using_FPGA.Native_i_1__3__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^trace_jump_taken_i_reg\,
      I1 => mul_Executing_reg_0,
      O => PC_Write
    );
\Using_FPGA.Native_i_1__54\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => \Using_FPGA.take_Intr_2nd_Phase_reg\,
      I1 => inHibit_EX,
      I2 => \^trace_jump_taken_i_reg\,
      O => R
    );
break_Pipe_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000800080008"
    )
        port map (
      I0 => Interrupt,
      I1 => MSR(0),
      I2 => MSR(1),
      I3 => p_69_in,
      I4 => \^trace_jump_taken_i_reg\,
      I5 => jump2_I_reg,
      O => break_Pipe_i_reg0
    );
mbar_first_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^trace_jump_taken_i_reg\,
      I1 => inHibit_EX,
      O => S92_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_13 is
  port (
    new_Carry : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    select_ALU_Carry : in STD_LOGIC;
    Op1_Low : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    write_Carry_I_reg : in STD_LOGIC;
    ex_Valid : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_13 : entity is "microblaze_v10_0_7_MB_MUXCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_13;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_13 is
  signal \^new_carry\ : STD_LOGIC;
begin
  \^new_carry\ <= lopt;
  new_Carry <= \^new_carry\;
\Using_FPGA.Native_i_1__65\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FF40"
    )
        port map (
      I0 => \^new_carry\,
      I1 => write_Carry_I_reg,
      I2 => ex_Valid,
      I3 => sync_reset,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_22 is
  port (
    opsel1_SPR : out STD_LOGIC;
    opsel1_SPR_Select : in STD_LOGIC;
    take_Intr_Now_III : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_22 : entity is "microblaze_v10_0_7_MB_MUXCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_22;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_22 is
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
begin
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => take_Intr_Now_III,
      CO(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3 downto 1),
      CO(0) => opsel1_SPR,
      CYINIT => '0',
      DI(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3 downto 1),
      DI(0) => '1',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3 downto 1),
      S(0) => opsel1_SPR_Select
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_23 is
  port (
    take_Intr_Now_I : out STD_LOGIC;
    mul_Executing_reg : in STD_LOGIC;
    use_Imm_Reg : in STD_LOGIC;
    jump2_I_reg : in STD_LOGIC;
    inHibit_EX : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_23 : entity is "microblaze_v10_0_7_MB_MUXCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_23;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_23 is
  signal \<const0>\ : STD_LOGIC;
  signal S0_out : STD_LOGIC;
  signal \^take_intr_now_i\ : STD_LOGIC;
begin
  \^take_intr_now_i\ <= lopt;
  lopt_1 <= \<const0>\;
  lopt_2 <= S0_out;
  take_Intr_Now_I <= \^take_intr_now_i\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Using_FPGA.Native_i_1__63\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FF01"
    )
        port map (
      I0 => use_Imm_Reg,
      I1 => jump2_I_reg,
      I2 => inHibit_EX,
      I3 => \Using_FPGA.take_Intr_2nd_Phase_reg\,
      O => S0_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_24 is
  port (
    take_Intr_Now_II : out STD_LOGIC;
    take_Intr_Now_I : in STD_LOGIC;
    ex_Valid : in STD_LOGIC;
    mtsmsr_write_i_reg : in STD_LOGIC;
    \break_Pipe_i_reg__0\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_24 : entity is "microblaze_v10_0_7_MB_MUXCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_24;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_24 is
  signal \<const0>\ : STD_LOGIC;
  signal S : STD_LOGIC;
  signal \^take_intr_now_ii\ : STD_LOGIC;
begin
  \^take_intr_now_ii\ <= lopt;
  lopt_1 <= \<const0>\;
  lopt_2 <= S;
  take_Intr_Now_II <= \^take_intr_now_ii\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Using_FPGA.Native_i_1__55\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FF70"
    )
        port map (
      I0 => ex_Valid,
      I1 => mtsmsr_write_i_reg,
      I2 => \break_Pipe_i_reg__0\,
      I3 => \Using_FPGA.take_Intr_2nd_Phase_reg\,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_25 is
  port (
    take_Intr_Now_III : out STD_LOGIC;
    inHibit_EX_reg : out STD_LOGIC;
    take_intr_2nd_cycle_reg : out STD_LOGIC;
    inHibit_EX1 : out STD_LOGIC;
    load_Store_i2 : out STD_LOGIC;
    using_Imm0 : out STD_LOGIC;
    \Using_LWX_SWX_instr.reservation_reg\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic0 : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    take_Intr_Now_II : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    mul_Executing_reg : in STD_LOGIC;
    inHibit_EX : in STD_LOGIC;
    nonvalid_IFetch_n_reg : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \break_Pipe_i_reg__0\ : in STD_LOGIC;
    take_intr_2nd_cycle_reg_0 : in STD_LOGIC;
    of_Pause_reg : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ : in STD_LOGIC;
    load_Store_i : in STD_LOGIC;
    ex_Valid : in STD_LOGIC;
    is_swx_I_reg : in STD_LOGIC;
    DReady : in STD_LOGIC;
    is_lwx_I_reg : in STD_LOGIC;
    \Using_FPGA.set_BIP_I_reg\ : in STD_LOGIC;
    instr_OF : in STD_LOGIC_VECTOR ( 2 downto 0 );
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_25 : entity is "microblaze_v10_0_7_MB_MUXCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_25;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_25 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \Using_LWX_SWX_instr.reservation_i_2_n_0\ : STD_LOGIC;
  signal \^take_intr_now_iii\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__58\ : label is "soft_lutpair24";
  attribute SOFT_HLUTNM of \Using_FPGA.take_Intr_2nd_Phase_i_1\ : label is "soft_lutpair25";
  attribute SOFT_HLUTNM of \Using_LWX_SWX_instr.reservation_i_2\ : label is "soft_lutpair24";
  attribute SOFT_HLUTNM of using_Imm_i_1 : label is "soft_lutpair25";
  attribute SOFT_HLUTNM of \write_Addr_I[1]_i_1\ : label is "soft_lutpair26";
  attribute SOFT_HLUTNM of \write_Addr_I[2]_i_1\ : label is "soft_lutpair26";
begin
  \^take_intr_now_iii\ <= lopt;
  lopt_1 <= \<const0>\;
  lopt_2 <= \<const1>\;
  take_Intr_Now_III <= \^take_intr_now_iii\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
Select_Logic_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^take_intr_now_iii\,
      I1 => instr_OF(2),
      O => Select_Logic0
    );
\Using_FPGA.Native_i_1__4__0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^take_intr_now_iii\,
      O => load_Store_i2
    );
\Using_FPGA.Native_i_1__58\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^take_intr_now_iii\,
      I1 => sync_reset,
      O => \Using_FPGA.Native_0\
    );
\Using_FPGA.take_Intr_2nd_Phase_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^take_intr_now_iii\,
      I1 => \Using_FPGA.take_Intr_2nd_Phase_reg\,
      O => inHibit_EX1
    );
\Using_LWX_SWX_instr.reservation_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"007F007F007F00FF"
    )
        port map (
      I0 => load_Store_i,
      I1 => ex_Valid,
      I2 => is_swx_I_reg,
      I3 => \Using_LWX_SWX_instr.reservation_i_2_n_0\,
      I4 => mul_Executing_reg,
      I5 => DReady,
      O => \Using_LWX_SWX_instr.reservation_reg\
    );
\Using_LWX_SWX_instr.reservation_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFEFEFEF"
    )
        port map (
      I0 => sync_reset,
      I1 => \^take_intr_now_iii\,
      I2 => is_lwx_I_reg,
      I3 => \Using_FPGA.set_BIP_I_reg\,
      I4 => ex_Valid,
      O => \Using_LWX_SWX_instr.reservation_i_2_n_0\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
inHibit_EX_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000DCDDDCCC"
    )
        port map (
      I0 => \^take_intr_now_iii\,
      I1 => \Using_FPGA.take_Intr_2nd_Phase_reg\,
      I2 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I3 => mul_Executing_reg,
      I4 => inHibit_EX,
      I5 => nonvalid_IFetch_n_reg,
      O => inHibit_EX_reg
    );
take_intr_2nd_cycle_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0404000004045500"
    )
        port map (
      I0 => sync_reset,
      I1 => \break_Pipe_i_reg__0\,
      I2 => \Using_FPGA.take_Intr_2nd_Phase_reg\,
      I3 => take_intr_2nd_cycle_reg_0,
      I4 => \^take_intr_now_iii\,
      I5 => mul_Executing_reg,
      O => take_intr_2nd_cycle_reg
    );
using_Imm_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0015"
    )
        port map (
      I0 => \^take_intr_now_iii\,
      I1 => of_Pause_reg,
      I2 => inHibit_EX,
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\,
      O => using_Imm0
    );
\write_Addr_I[1]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"32"
    )
        port map (
      I0 => \^take_intr_now_iii\,
      I1 => sync_reset,
      I2 => instr_OF(1),
      O => D(1)
    );
\write_Addr_I[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"32"
    )
        port map (
      I0 => \^take_intr_now_iii\,
      I1 => sync_reset,
      I2 => instr_OF(0),
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_26 is
  port (
    IReady : out STD_LOGIC;
    nonvalid_IFetch_n_reg : in STD_LOGIC;
    \No_ECC.Sl_Rdy_reg\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : out STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_26 : entity is "microblaze_v10_0_7_MB_MUXCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_26;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_26 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_5 <= \^lopt_6\;
  lopt_6 <= \^lopt_7\;
  lopt_7 <= \^lopt_8\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3),
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => IReady,
      CYINIT => \No_ECC.Sl_Rdy_reg\,
      DI(3) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3),
      DI(2) => \^lopt_2\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => \^lopt_8\,
      O(2) => \^lopt_7\,
      O(1) => \^lopt_6\,
      O(0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(0),
      S(3) => lopt_9,
      S(2) => \^lopt_5\,
      S(1) => \^lopt_3\,
      S(0) => nonvalid_IFetch_n_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_29 is
  port (
    ifetch_carry1 : out STD_LOGIC;
    buffer_Full : in STD_LOGIC;
    of_Pause_reg : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_29 : entity is "microblaze_v10_0_7_MB_MUXCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_29;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_29 is
  signal \<const1>\ : STD_LOGIC;
  signal \^ifetch_carry1\ : STD_LOGIC;
begin
  \^ifetch_carry1\ <= lopt;
  ifetch_carry1 <= \^ifetch_carry1\;
  lopt_1 <= \<const1>\;
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_30 is
  port (
    ifetch_carry2 : out STD_LOGIC;
    iFetch_In_Progress_reg : out STD_LOGIC;
    missed_IFetch_reg : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3]\ : out STD_LOGIC;
    ifetch_carry1 : in STD_LOGIC;
    \No_ECC.Sl_Rdy_reg\ : in STD_LOGIC;
    iFetch_In_Progress : in STD_LOGIC;
    ex_Valid : in STD_LOGIC;
    mbar_decode_I : in STD_LOGIC;
    mul_Executing : in STD_LOGIC;
    of_Pause_reg : in STD_LOGIC;
    missed_IFetch : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    dbg_stop_instr_fetch : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_30 : entity is "microblaze_v10_0_7_MB_MUXCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_30;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_30 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lockstep_out_reg[3]\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_1__60_n_0\ : STD_LOGIC;
  signal \^ifetch_carry2\ : STD_LOGIC;
begin
  \LOCKSTEP_Out_reg[3]\ <= \^lockstep_out_reg[3]\;
  \^ifetch_carry2\ <= lopt;
  ifetch_carry2 <= \^ifetch_carry2\;
  lopt_1 <= \<const0>\;
  lopt_2 <= \Using_FPGA.Native_i_1__60_n_0\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
I_AS_INST_0: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7F007F0000007F00"
    )
        port map (
      I0 => mul_Executing,
      I1 => mbar_decode_I,
      I2 => ex_Valid,
      I3 => \^ifetch_carry2\,
      I4 => iFetch_In_Progress,
      I5 => \No_ECC.Sl_Rdy_reg\,
      O => \^lockstep_out_reg[3]\
    );
\Using_FPGA.Native_i_1__60\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => sync_reset,
      I1 => dbg_stop_instr_fetch,
      O => \Using_FPGA.Native_i_1__60_n_0\
    );
iFetch_In_Progress_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"44F4F4F4F4F4F4F4"
    )
        port map (
      I0 => \No_ECC.Sl_Rdy_reg\,
      I1 => iFetch_In_Progress,
      I2 => \^ifetch_carry2\,
      I3 => ex_Valid,
      I4 => mbar_decode_I,
      I5 => mul_Executing,
      O => iFetch_In_Progress_reg
    );
missed_IFetch_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"5530"
    )
        port map (
      I0 => \No_ECC.Sl_Rdy_reg\,
      I1 => \^lockstep_out_reg[3]\,
      I2 => of_Pause_reg,
      I3 => missed_IFetch,
      O => missed_IFetch_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_31 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ifetch_carry2 : in STD_LOGIC;
    iFetch_In_Progress : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_31 : entity is "microblaze_v10_0_7_MB_MUXCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_31;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_31 is
  signal \Using_FPGA.Native_i_1__61_n_0\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
begin
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => ifetch_carry2,
      CO(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3 downto 1),
      CO(0) => D(0),
      CYINIT => '0',
      DI(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3 downto 1),
      DI(0) => '1',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3 downto 1),
      S(0) => \Using_FPGA.Native_i_1__61_n_0\
    );
\Using_FPGA.Native_i_1__61\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => iFetch_In_Progress,
      O => \Using_FPGA.Native_i_1__61_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_32 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    load_Store_i_reg : out STD_LOGIC;
    is_swx_I_reg : out STD_LOGIC;
    is_lwx_I_reg : out STD_LOGIC;
    write_Reg_reg : out STD_LOGIC;
    Unsigned_Op_reg : out STD_LOGIC;
    \Using_LWX_SWX_instr.reservation_reg\ : out STD_LOGIC;
    mtsmsr_write_i_reg : out STD_LOGIC;
    S : out STD_LOGIC;
    Sext8_reg : out STD_LOGIC;
    swx_ready_reg : out STD_LOGIC;
    select_ALU_Carry_reg : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Valid_1st_cycle_reg : out STD_LOGIC;
    OF_PipeRun : out STD_LOGIC;
    Blocked_Valid_Instr0 : out STD_LOGIC;
    of_PipeRun_Select : in STD_LOGIC;
    of_PipeRun_without_dready : in STD_LOGIC;
    DReady : in STD_LOGIC;
    load_Store_i : in STD_LOGIC;
    of_Pause_reg : in STD_LOGIC;
    inHibit_EX : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    is_swx_I_reg_0 : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ : in STD_LOGIC;
    instr_OF : in STD_LOGIC_VECTOR ( 0 to 0 );
    is_lwx_I : in STD_LOGIC;
    write_Reg_reg_0 : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\ : in STD_LOGIC;
    take_Intr_Now_III : in STD_LOGIC;
    ex_Valid : in STD_LOGIC;
    \Using_LWX_SWX_instr.reservation_reg_0\ : in STD_LOGIC;
    mtsmsr_write_i_reg_0 : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 0 to 0 );
    swx_ready : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_3\ : in STD_LOGIC;
    dbg_stop_instr_fetch : in STD_LOGIC;
    jump2_I_reg : in STD_LOGIC;
    take_intr_Done : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_32 : entity is "microblaze_v10_0_7_MB_MUXCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_32;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_32 is
  signal \^unsigned_op_reg\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal is_swx_I : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of Compare_Instr_i_1 : label is "soft_lutpair28";
  attribute SOFT_HLUTNM of Unsigned_Op_i_1 : label is "soft_lutpair30";
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__59\ : label is "soft_lutpair29";
  attribute SOFT_HLUTNM of ex_Valid_1st_cycle_i_1 : label is "soft_lutpair29";
  attribute SOFT_HLUTNM of is_lwx_I_i_3 : label is "soft_lutpair27";
  attribute SOFT_HLUTNM of mtsmsr_write_i_i_2 : label is "soft_lutpair30";
  attribute SOFT_HLUTNM of swx_ready_i_1 : label is "soft_lutpair28";
  attribute SOFT_HLUTNM of \write_Addr_I[0]_i_1\ : label is "soft_lutpair27";
begin
  Unsigned_Op_reg <= \^unsigned_op_reg\;
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
Blocked_Valid_Instr_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"08"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => jump2_I_reg,
      I2 => take_intr_Done,
      O => Blocked_Valid_Instr0
    );
Compare_Instr_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => take_Intr_Now_III,
      I2 => sync_reset,
      O => select_ALU_Carry_reg
    );
Sext8_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EAEE"
    )
        port map (
      I0 => sync_reset,
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.take_Intr_2nd_Phase_reg\,
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_3\,
      O => Sext8_reg
    );
Unsigned_Op_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F8"
    )
        port map (
      I0 => \Using_FPGA.take_Intr_2nd_Phase_reg\,
      I1 => \^using_fpga.native_0\,
      I2 => sync_reset,
      O => \^unsigned_op_reg\
    );
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => \^using_fpga.native_0\,
      CYINIT => DReady,
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => of_PipeRun_without_dready,
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => of_PipeRun_Select
    );
\Using_FPGA.Native_I1_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => Buffer_Addr(0),
      O => S
    );
\Using_FPGA.Native_i_1__59\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => dbg_stop_instr_fetch,
      O => OF_PipeRun
    );
\Using_LWX_SWX_instr.reservation_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFE0000000"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => DReady,
      I2 => is_lwx_I,
      I3 => load_Store_i,
      I4 => ex_Valid,
      I5 => \Using_LWX_SWX_instr.reservation_reg_0\,
      O => \Using_LWX_SWX_instr.reservation_reg\
    );
ex_Valid_1st_cycle_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AA2A"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => inHibit_EX,
      I2 => of_Pause_reg,
      I3 => take_Intr_Now_III,
      O => ex_Valid_1st_cycle_reg
    );
is_lwx_I_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000222E"
    )
        port map (
      I0 => is_lwx_I,
      I1 => \^using_fpga.native_0\,
      I2 => instr_OF(0),
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\,
      I4 => is_swx_I,
      O => is_lwx_I_reg
    );
is_lwx_I_i_3: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF5400"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => DReady,
      I2 => swx_ready,
      I3 => load_Store_i,
      I4 => sync_reset,
      O => is_swx_I
    );
is_swx_I_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00002E22"
    )
        port map (
      I0 => is_swx_I_reg_0,
      I1 => \^using_fpga.native_0\,
      I2 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\,
      I3 => instr_OF(0),
      I4 => is_swx_I,
      O => is_swx_I_reg
    );
load_Store_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000002EEE2222"
    )
        port map (
      I0 => load_Store_i,
      I1 => \^using_fpga.native_0\,
      I2 => of_Pause_reg,
      I3 => inHibit_EX,
      I4 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I5 => is_swx_I,
      O => load_Store_i_reg
    );
mtsmsr_write_i_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"002E"
    )
        port map (
      I0 => mtsmsr_write_i_reg_0,
      I1 => \^using_fpga.native_0\,
      I2 => take_Intr_Now_III,
      I3 => sync_reset,
      O => mtsmsr_write_i_reg
    );
swx_ready_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0100"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => sync_reset,
      I2 => \Using_LWX_SWX_instr.reservation_reg_0\,
      I3 => is_swx_I_reg_0,
      O => swx_ready_reg
    );
\write_Addr_I[0]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => sync_reset,
      O => E(0)
    );
write_Reg_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000EEEEEEE2"
    )
        port map (
      I0 => write_Reg_reg_0,
      I1 => \^using_fpga.native_0\,
      I2 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\,
      I3 => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\,
      I4 => take_Intr_Now_III,
      I5 => \^unsigned_op_reg\,
      O => write_Reg_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_5 is
  port (
    correct_Carry : out STD_LOGIC;
    new_Carry : in STD_LOGIC;
    MSR : in STD_LOGIC_VECTOR ( 0 to 0 );
    is_swx_I_reg : in STD_LOGIC;
    ex_Valid : in STD_LOGIC;
    load_Store_i : in STD_LOGIC;
    is_lwx_I : in STD_LOGIC;
    \Using_LWX_SWX_instr.reservation_reg\ : in STD_LOGIC;
    write_Carry_I_reg : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_5 : entity is "microblaze_v10_0_7_MB_MUXCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_5;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_5 is
  signal DI_33 : STD_LOGIC;
  signal \Using_FPGA.Native_i_1__66_n_0\ : STD_LOGIC;
  signal \^correct_carry\ : STD_LOGIC;
begin
  \^correct_carry\ <= lopt;
  correct_Carry <= \^correct_carry\;
  lopt_1 <= DI_33;
  lopt_2 <= \Using_FPGA.Native_i_1__66_n_0\;
\Using_FPGA.Native_i_1__66\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => ex_Valid,
      I1 => write_Carry_I_reg,
      O => \Using_FPGA.Native_i_1__66_n_0\
    );
\Using_FPGA.Native_i_2__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0AAA2AAACAAAEAAA"
    )
        port map (
      I0 => MSR(0),
      I1 => is_swx_I_reg,
      I2 => ex_Valid,
      I3 => load_Store_i,
      I4 => is_lwx_I,
      I5 => \Using_LWX_SWX_instr.reservation_reg\,
      O => DI_33
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_661 is
  port (
    CI : out STD_LOGIC;
    control_carry : in STD_LOGIC;
    carry_In : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_661 : entity is "microblaze_v10_0_7_MB_MUXCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_661;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_661 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => CI,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => carry_In,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => control_carry
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_68 is
  port (
    zero_CI_0 : out STD_LOGIC;
    Reg_Test_Equal : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_68 : entity is "microblaze_v10_0_7_MB_MUXCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_68;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_68 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_5 <= \^lopt_6\;
  lopt_7 <= lopt_6;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_6\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => zero_CI_0,
      CYINIT => '1',
      DI(3) => \^lopt_2\,
      DI(2) => \^lopt_2\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_7,
      S(2) => \^lopt_5\,
      S(1) => \^lopt_3\,
      S(0) => Reg_Test_Equal
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_69 is
  port (
    zero_CI_1 : out STD_LOGIC;
    \Zero_Detecting[0].nibble_Zero_reg\ : in STD_LOGIC;
    reg_Test_Equal_N : in STD_LOGIC;
    zero_CI_0 : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_69 : entity is "microblaze_v10_0_7_MB_MUXCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_69;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_69 is
  signal \^zero_ci_1\ : STD_LOGIC;
begin
  \^zero_ci_1\ <= lopt;
  zero_CI_1 <= \^zero_ci_1\;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_70 is
  port (
    zero_CI_2 : out STD_LOGIC;
    S : in STD_LOGIC;
    reg_Test_Equal_N : in STD_LOGIC;
    zero_CI_1 : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_70 : entity is "microblaze_v10_0_7_MB_MUXCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_70;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_70 is
  signal \^zero_ci_2\ : STD_LOGIC;
begin
  \^zero_ci_2\ <= lopt;
  zero_CI_2 <= \^zero_ci_2\;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_71 is
  port (
    zero_CI_3 : out STD_LOGIC;
    \Zero_Detecting[2].nibble_Zero_reg\ : in STD_LOGIC;
    reg_Test_Equal_N : in STD_LOGIC;
    zero_CI_2 : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_71 : entity is "microblaze_v10_0_7_MB_MUXCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_71;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_71 is
  signal \^zero_ci_3\ : STD_LOGIC;
begin
  \^zero_ci_3\ <= lopt;
  zero_CI_3 <= \^zero_ci_3\;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_72 is
  port (
    zero_CI_4 : out STD_LOGIC;
    \Zero_Detecting[3].nibble_Zero_reg\ : in STD_LOGIC;
    reg_Test_Equal_N : in STD_LOGIC;
    zero_CI_3 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : out STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_72 : entity is "microblaze_v10_0_7_MB_MUXCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_72;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_72 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_4\ <= lopt_3;
  \^lopt_6\ <= lopt_5;
  lopt <= \^lopt_1\;
  lopt_2 <= \^lopt_3\;
  lopt_4 <= \^lopt_5\;
  lopt_7 <= lopt_6;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => zero_CI_3,
      CO(3) => \^lopt_5\,
      CO(2) => \^lopt_3\,
      CO(1) => \^lopt_1\,
      CO(0) => zero_CI_4,
      CYINIT => '0',
      DI(3) => \^lopt_6\,
      DI(2) => reg_Test_Equal_N,
      DI(1) => reg_Test_Equal_N,
      DI(0) => reg_Test_Equal_N,
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_7,
      S(2) => \^lopt_4\,
      S(1) => \^lopt_2\,
      S(0) => \Zero_Detecting[3].nibble_Zero_reg\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_73 is
  port (
    zero_CI_5 : out STD_LOGIC;
    \Zero_Detecting[4].nibble_Zero_reg\ : in STD_LOGIC;
    reg_Test_Equal_N : in STD_LOGIC;
    zero_CI_4 : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_73 : entity is "microblaze_v10_0_7_MB_MUXCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_73;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_73 is
  signal \^zero_ci_5\ : STD_LOGIC;
begin
  \^zero_ci_5\ <= lopt;
  zero_CI_5 <= \^zero_ci_5\;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_74 is
  port (
    Reg_zero : out STD_LOGIC;
    \Zero_Detecting[5].nibble_Zero_reg\ : in STD_LOGIC;
    reg_Test_Equal_N : in STD_LOGIC;
    zero_CI_5 : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_74 : entity is "microblaze_v10_0_7_MB_MUXCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_74;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_74 is
  signal \^reg_zero\ : STD_LOGIC;
begin
  Reg_zero <= \^reg_zero\;
  \^reg_zero\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_755 is
  port (
    CI : out STD_LOGIC;
    Compare_Instr_reg : in STD_LOGIC;
    Unsigned_Op : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_755 : entity is "microblaze_v10_0_7_MB_MUXCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_755;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_755 is
  signal \^lopt_1\ : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_10;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => CI,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => Unsigned_Op,
      O(3 downto 2) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 2),
      O(1) => lopt_10,
      O(0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => Compare_Instr_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_9 is
  port (
    correct_Carry_II : out STD_LOGIC;
    load_Store_i2 : in STD_LOGIC;
    correct_Carry_I : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_9 : entity is "microblaze_v10_0_7_MB_MUXCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_9;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_9 is
  signal \<const0>\ : STD_LOGIC;
  signal \^correct_carry_ii\ : STD_LOGIC;
begin
  \^correct_carry_ii\ <= lopt;
  correct_Carry_II <= \^correct_carry_ii\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY is
  port (
    buffer_Addr_S_I_2 : out STD_LOGIC;
    S_34 : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY is
  signal \^buffer_addr_s_i_2\ : STD_LOGIC;
begin
  \^buffer_addr_s_i_2\ <= lopt;
  buffer_Addr_S_I_2 <= \^buffer_addr_s_i_2\;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_34 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    mul_Executing_reg : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_34 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_34;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_34 is
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_36 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    mul_Executing_reg : in STD_LOGIC;
    CI : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_36 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_36;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_36 is
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_429 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_429 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_429;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_429 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => Carry_Out,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_432 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_432 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_432;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_432 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_out\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  Carry_Out <= \^carry_out\;
  O <= \^o\;
  \^carry_out\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_438 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_438 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_438;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_438 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_out\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  Carry_Out <= \^carry_out\;
  O <= \^o\;
  \^carry_out\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_444 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_444 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_444;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_444 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_out\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  Carry_Out <= \^carry_out\;
  O <= \^o\;
  \^carry_out\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_450 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_450 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_450;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_450 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => Carry_Out,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_456 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_456 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_456;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_456 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_out\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  Carry_Out <= \^carry_out\;
  O <= \^o\;
  \^carry_out\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_462 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_462 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_462;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_462 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_out\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  Carry_Out <= \^carry_out\;
  O <= \^o\;
  \^carry_out\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_468 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_468 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_468;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_468 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_out\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  Carry_Out <= \^carry_out\;
  O <= \^o\;
  \^carry_out\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_474 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_474 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_474;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_474 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => Carry_Out,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_480 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_480 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_480;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_480 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_out\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  Carry_Out <= \^carry_out\;
  O <= \^o\;
  \^carry_out\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_486 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_486 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_486;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_486 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_out\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  Carry_Out <= \^carry_out\;
  O <= \^o\;
  \^carry_out\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_492 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_492 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_492;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_492 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_out\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  Carry_Out <= \^carry_out\;
  O <= \^o\;
  \^carry_out\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_498 is
  port (
    pc_Sum : out STD_LOGIC;
    xor_Sum : in STD_LOGIC;
    LO : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_498 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_498;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_498 is
  signal \NLW_Using_FPGA.Native_I2_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_I2_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_I2_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_I2_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native_I2_CARRY4\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I2_CARRY4\ : label is "(MUXCY,XORCY)";
begin
\Using_FPGA.Native_I2_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3 downto 0) => \NLW_Using_FPGA.Native_I2_CARRY4_CO_UNCONNECTED\(3 downto 0),
      CYINIT => '0',
      DI(3 downto 0) => \NLW_Using_FPGA.Native_I2_CARRY4_DI_UNCONNECTED\(3 downto 0),
      O(3 downto 1) => \NLW_Using_FPGA.Native_I2_CARRY4_O_UNCONNECTED\(3 downto 1),
      O(0) => pc_Sum,
      S(3 downto 1) => \NLW_Using_FPGA.Native_I2_CARRY4_S_UNCONNECTED\(3 downto 1),
      S(0) => xor_Sum
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_692 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    EX_CarryIn : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_692 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_692;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_692 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^d\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_694 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_694 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_694;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_694 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => EX_CarryOut,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => D(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_696 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_696 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_696;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_696 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^d\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_698 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_698 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_698;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_698 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^d\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_700 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_700 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_700;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_700 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^d\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_702 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_702 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_702;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_702 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => EX_CarryOut,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => D(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_704 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_704 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_704;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_704 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^d\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_706 is
  port (
    EX_CarryOut : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    EX_CarryIn : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_706 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_706;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_706 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  EX_CarryOut <= \^ex_carryout\;
  O <= \^o\;
  \^ex_carryout\ <= lopt;
  \^o\ <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_708 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_708 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_708;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_708 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC;
begin
  EX_CarryOut <= \^ex_carryout\;
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \^ex_carryout\ <= lopt;
  \^using_fpga.native\ <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_710 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_710 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_710;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_710 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^d\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_712 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_712 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_712;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_712 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^d\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_714 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_714 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_714;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_714 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => EX_CarryOut,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => D(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_716 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_716 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_716;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_716 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^d\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_718 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_718 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_718;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_718 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^d\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_720 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_720 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_720;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_720 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^d\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_722 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_722 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_722;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_722 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => EX_CarryOut,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => D(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_724 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_724 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_724;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_724 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^d\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_726 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_726 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_726;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_726 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^d\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_728 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_728 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_728;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_728 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^d\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_730 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_730 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_730;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_730 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => EX_CarryOut,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => D(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_732 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_732 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_732;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_732 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^d\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_734 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_734 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_734;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_734 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^d\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_736 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_736 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_736;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_736 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^d\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_738 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_738 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_738;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_738 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^d\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_740 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_740 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_740;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_740 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => EX_CarryOut,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => D(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_742 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_742 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_742;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_742 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^d\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_744 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_744 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_744;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_744 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^d\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_746 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_746 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_746;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_746 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^d\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_748 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_748 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_748;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_748 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => EX_CarryOut,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => D(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_750 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_750 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_750;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_750 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^d\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_752 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_752 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_752;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_752 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^d\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_754 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    CI : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_754 : entity is "microblaze_v10_0_7_MB_MUXCY_XORCY";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_754;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_754 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^using_fpga.native\ : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \^d\(0) <= lopt_1;
  \^using_fpga.native\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => \Using_FPGA.Native_0\,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_108 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_108 : entity is "microblaze_v10_0_7_MB_MUXF7";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_108;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_108 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => \Using_FPGA.Native_0\,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_111 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_111 : entity is "microblaze_v10_0_7_MB_MUXF7";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_111;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_111 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => \Using_FPGA.Native_0\,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_114 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_114 : entity is "microblaze_v10_0_7_MB_MUXF7";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_114;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_114 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => \Using_FPGA.Native_0\,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_117 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_117 : entity is "microblaze_v10_0_7_MB_MUXF7";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_117;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_117 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => \Using_FPGA.Native_0\,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_120 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_120 : entity is "microblaze_v10_0_7_MB_MUXF7";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_120;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_120 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => \Using_FPGA.Native_0\,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_123 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_123 : entity is "microblaze_v10_0_7_MB_MUXF7";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_123;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_123 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => \Using_FPGA.Native_0\,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_126 is
  port (
    Shift_Logic_Res : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_126 : entity is "microblaze_v10_0_7_MB_MUXF7";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_126;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_126 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Shift_Logic_Res,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_129 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_129 : entity is "microblaze_v10_0_7_MB_MUXF7";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_129;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_129 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => \Using_FPGA.Native_0\,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_132 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_132 : entity is "microblaze_v10_0_7_MB_MUXF7";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_132;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_132 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => \Using_FPGA.Native_0\,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_135 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_135 : entity is "microblaze_v10_0_7_MB_MUXF7";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_135;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_135 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => \Using_FPGA.Native_0\,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_138 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_138 : entity is "microblaze_v10_0_7_MB_MUXF7";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_138;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_138 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => \Using_FPGA.Native_0\,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_141 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_141 : entity is "microblaze_v10_0_7_MB_MUXF7";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_141;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_141 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => \Using_FPGA.Native_0\,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_144 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_144 : entity is "microblaze_v10_0_7_MB_MUXF7";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_144;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_144 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => \Using_FPGA.Native_0\,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_147 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_147 : entity is "microblaze_v10_0_7_MB_MUXF7";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_147;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_147 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => \Using_FPGA.Native_0\,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_150 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_150 : entity is "microblaze_v10_0_7_MB_MUXF7";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_150;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_150 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => \Using_FPGA.Native_0\,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_153 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_153 : entity is "microblaze_v10_0_7_MB_MUXF7";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_153;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_153 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => \Using_FPGA.Native_0\,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_156 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_156 : entity is "microblaze_v10_0_7_MB_MUXF7";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_156;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_156 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => \Using_FPGA.Native_0\,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_159 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_159 : entity is "microblaze_v10_0_7_MB_MUXF7";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_159;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_159 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => \Using_FPGA.Native_0\,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_162 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_162 : entity is "microblaze_v10_0_7_MB_MUXF7";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_162;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_162 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => \Using_FPGA.Native_0\,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_165 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_165 : entity is "microblaze_v10_0_7_MB_MUXF7";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_165;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_165 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => \Using_FPGA.Native_0\,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_168 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_168 : entity is "microblaze_v10_0_7_MB_MUXF7";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_168;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_168 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => \Using_FPGA.Native_0\,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_171 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_171 : entity is "microblaze_v10_0_7_MB_MUXF7";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_171;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_171 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => \Using_FPGA.Native_0\,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_174 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_174 : entity is "microblaze_v10_0_7_MB_MUXF7";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_174;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_174 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => \Using_FPGA.Native_0\,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_177 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_177 : entity is "microblaze_v10_0_7_MB_MUXF7";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_177;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_177 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => \Using_FPGA.Native_0\,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_180 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_180 : entity is "microblaze_v10_0_7_MB_MUXF7";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_180;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_180 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => \Using_FPGA.Native_0\,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_183 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_183 : entity is "microblaze_v10_0_7_MB_MUXF7";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_183;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_183 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => \Using_FPGA.Native_0\,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_186 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_186 : entity is "microblaze_v10_0_7_MB_MUXF7";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_186;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_186 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => \Using_FPGA.Native_0\,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_189 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_189 : entity is "microblaze_v10_0_7_MB_MUXF7";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_189;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_189 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => \Using_FPGA.Native_0\,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_192 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_192 : entity is "microblaze_v10_0_7_MB_MUXF7";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_192;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_192 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => \Using_FPGA.Native_0\,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_195 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_195 : entity is "microblaze_v10_0_7_MB_MUXF7";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_195;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_195 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => \Using_FPGA.Native_0\,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_198 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_198 : entity is "microblaze_v10_0_7_MB_MUXF7";
end microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_198;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_198 is
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => \Using_FPGA.Native_0\,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_mb_sync_bit is
  port (
    \out\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reset : in STD_LOGIC;
    Mb_Reset : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
end microblaze_mcs_1_microblaze_v10_0_7_mb_sync_bit;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_mb_sync_bit is
  signal reset_temp : STD_LOGIC;
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  \out\(0) <= sync(2);
\Synchronize.use_sync_reset.sync[1]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => Reset,
      I1 => Mb_Reset,
      O => reset_temp
    );
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => reset_temp,
      Q => sync(1),
      R => '0'
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_mb_sync_bit_1 is
  port (
    \out\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \No_Master_Debug_Logic.sleep_reset_mode_reg\ : out STD_LOGIC;
    Reset_Mode : in STD_LOGIC_VECTOR ( 0 to 1 );
    sync_reset : in STD_LOGIC;
    \Synchronize.use_sync_reset.sync_reg[2]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \No_Master_Debug_Logic.sleep_reset_mode_reg_0\ : in STD_LOGIC;
    Wakeup : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_mb_sync_bit_1 : entity is "microblaze_v10_0_7_mb_sync_bit";
end microblaze_mcs_1_microblaze_v10_0_7_mb_sync_bit_1;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_mb_sync_bit_1 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  \out\(0) <= sync(2);
\No_Master_Debug_Logic.sleep_reset_mode_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4040404F40404040"
    )
        port map (
      I0 => Reset_Mode(0),
      I1 => Reset_Mode(1),
      I2 => sync_reset,
      I3 => sync(2),
      I4 => \Synchronize.use_sync_reset.sync_reg[2]_0\(0),
      I5 => \No_Master_Debug_Logic.sleep_reset_mode_reg_0\,
      O => \No_Master_Debug_Logic.sleep_reset_mode_reg\
    );
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => Wakeup(0),
      Q => sync(1),
      R => sync_reset
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_microblaze_v10_0_7_mb_sync_bit_2 is
  port (
    \out\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    Wakeup : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_microblaze_v10_0_7_mb_sync_bit_2 : entity is "microblaze_v10_0_7_mb_sync_bit";
end microblaze_mcs_1_microblaze_v10_0_7_mb_sync_bit_2;

architecture STRUCTURE of microblaze_mcs_1_microblaze_v10_0_7_mb_sync_bit_2 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  \out\(0) <= sync(2);
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => Wakeup(0),
      Q => sync(1),
      R => sync_reset
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Divide_part is
  port (
    Clk_En_I_1 : out STD_LOGIC;
    Clk : in STD_LOGIC
  );
end microblaze_mcs_1_Divide_part;

architecture STRUCTURE of microblaze_mcs_1_Divide_part is
begin
\One_SRL16.SRL16E_I\: entity work.microblaze_mcs_1_XIL_SRL16E_783
     port map (
      Clk => Clk,
      Clk_En_I_1 => Clk_En_I_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_Divide_part__parameterized0\ is
  port (
    en_16x_baud : out STD_LOGIC;
    Clk_En_I_1 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_Divide_part__parameterized0\ : entity is "Divide_part";
end \microblaze_mcs_1_Divide_part__parameterized0\;

architecture STRUCTURE of \microblaze_mcs_1_Divide_part__parameterized0\ is
  signal Out1 : STD_LOGIC;
  signal loop_Bit : STD_LOGIC;
begin
\One_SRL16.SRL16E_I\: entity work.microblaze_mcs_1_XIL_SRL16E_782
     port map (
      Clk => Clk,
      Clk_En_I_1 => Clk_En_I_1,
      loop_Bit => loop_Bit
    );
\not_First.Clk_En_Out_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => Out1,
      D => Clk_En_I_1,
      Q => en_16x_baud,
      R => '0'
    );
\not_First.Out1_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => loop_Bit,
      Q => Out1,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_UART_Receive is
  port (
    \out\ : out STD_LOGIC;
    \TMR_No.frame_error_reg\ : out STD_LOGIC;
    rx_data_exists : out STD_LOGIC;
    UART_Interrupt : out STD_LOGIC;
    \TMR_No.overrun_error_reg\ : out STD_LOGIC;
    \TMR_No.frame_error_reg_0\ : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 7 downto 0 );
    en_16x_baud : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Rst : in STD_LOGIC;
    UART_Rx : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 4 downto 0 );
    lmb_reg_read : in STD_LOGIC;
    tx_data_transmitted : in STD_LOGIC;
    \TMR_No.error_interrupt_reg\ : in STD_LOGIC;
    UART_Status_Read : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
end microblaze_mcs_1_UART_Receive;

architecture STRUCTURE of microblaze_mcs_1_UART_Receive is
  signal D_0 : STD_LOGIC;
  signal \TMR_No.Convert_Serial_To_Parallel[2].serial_to_parallel_reg\ : STD_LOGIC;
  signal \TMR_No.Convert_Serial_To_Parallel[3].serial_to_parallel_reg\ : STD_LOGIC;
  signal \TMR_No.Convert_Serial_To_Parallel[4].serial_to_parallel_reg\ : STD_LOGIC;
  signal \TMR_No.Convert_Serial_To_Parallel[5].serial_to_parallel_reg\ : STD_LOGIC;
  signal \TMR_No.Convert_Serial_To_Parallel[6].serial_to_parallel_reg\ : STD_LOGIC;
  signal \TMR_No.Convert_Serial_To_Parallel[7].serial_to_parallel_reg\ : STD_LOGIC;
  signal \TMR_No.Convert_Serial_To_Parallel[8].serial_to_parallel_reg\ : STD_LOGIC;
  signal \TMR_No.Delay_16_n_1\ : STD_LOGIC;
  signal \TMR_No.Delay_16_n_2\ : STD_LOGIC;
  signal \TMR_No.RX_Data[7]_i_1_n_0\ : STD_LOGIC;
  signal \^tmr_no.frame_error_reg\ : STD_LOGIC;
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of \TMR_No.frame_error_reg\ : signal is "true";
  signal \TMR_No.previous_RX_i_1_n_0\ : STD_LOGIC;
  signal \TMR_No.running_reg_n_0\ : STD_LOGIC;
  signal \TMR_No.rx_data_exists_i_i_1_n_0\ : STD_LOGIC;
  signal \TMR_No.rx_data_exists_i_i_2_n_0\ : STD_LOGIC;
  signal \TMR_No.start_Edge_Detected_i_1_n_0\ : STD_LOGIC;
  signal \TMR_No.start_Edge_Detected_reg_n_0\ : STD_LOGIC;
  signal \TMR_No.stop_Bit_Position_reg_n_0\ : STD_LOGIC;
  signal mid_Start_Bit : STD_LOGIC;
  signal new_rx_data : STD_LOGIC_VECTOR ( 0 to 8 );
  attribute RTL_KEEP of new_rx_data : signal is "true";
  signal new_rx_data_write : STD_LOGIC;
  attribute RTL_KEEP of new_rx_data_write : signal is "true";
  signal \p_4_out__0\ : STD_LOGIC;
  signal previous_RX : STD_LOGIC;
  signal rx_1 : STD_LOGIC;
  signal \^rx_data_exists\ : STD_LOGIC;
  signal rx_data_i : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal rx_parity_error : STD_LOGIC;
  attribute RTL_KEEP of rx_parity_error : signal is "true";
  signal sample_Point : STD_LOGIC;
  attribute KEEP : string;
  attribute KEEP of \TMR_No.new_rx_data_write_reg\ : label is "yes";
  attribute equivalent_register_removal : string;
  attribute equivalent_register_removal of \TMR_No.new_rx_data_write_reg\ : label is "no";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \TMR_No.previous_RX_i_1\ : label is "soft_lutpair5";
  attribute SOFT_HLUTNM of \TMR_No.start_Edge_Detected_i_1\ : label is "soft_lutpair5";
begin
  \TMR_No.frame_error_reg\ <= \^tmr_no.frame_error_reg\;
  \out\ <= new_rx_data_write;
  rx_data_exists <= \^rx_data_exists\;
\TMR_No.Convert_Serial_To_Parallel[1].First_Bit.First_Bit_I\: entity work.microblaze_mcs_1_iomodule_v3_1_3_MB_FDSE
     port map (
      Clk => Clk,
      D_0 => D_0,
      en_16x_baud => en_16x_baud,
      in0(0) => new_rx_data(1),
      mid_Start_Bit => mid_Start_Bit
    );
\TMR_No.Convert_Serial_To_Parallel[2].Rest_Bits.Others_I\: entity work.microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_774
     port map (
      Clk => Clk,
      \TMR_No.Convert_Serial_To_Parallel[2].serial_to_parallel_reg\ => \TMR_No.Convert_Serial_To_Parallel[2].serial_to_parallel_reg\,
      en_16x_baud => en_16x_baud,
      in0(0) => new_rx_data(2),
      mid_Start_Bit => mid_Start_Bit
    );
\TMR_No.Convert_Serial_To_Parallel[3].Rest_Bits.Others_I\: entity work.microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_775
     port map (
      Clk => Clk,
      \TMR_No.Convert_Serial_To_Parallel[3].serial_to_parallel_reg\ => \TMR_No.Convert_Serial_To_Parallel[3].serial_to_parallel_reg\,
      en_16x_baud => en_16x_baud,
      in0(0) => new_rx_data(3),
      mid_Start_Bit => mid_Start_Bit
    );
\TMR_No.Convert_Serial_To_Parallel[4].Rest_Bits.Others_I\: entity work.microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_776
     port map (
      Clk => Clk,
      \TMR_No.Convert_Serial_To_Parallel[4].serial_to_parallel_reg\ => \TMR_No.Convert_Serial_To_Parallel[4].serial_to_parallel_reg\,
      en_16x_baud => en_16x_baud,
      in0(0) => new_rx_data(4),
      mid_Start_Bit => mid_Start_Bit
    );
\TMR_No.Convert_Serial_To_Parallel[5].Rest_Bits.Others_I\: entity work.microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_777
     port map (
      Clk => Clk,
      \TMR_No.Convert_Serial_To_Parallel[5].serial_to_parallel_reg\ => \TMR_No.Convert_Serial_To_Parallel[5].serial_to_parallel_reg\,
      en_16x_baud => en_16x_baud,
      in0(0) => new_rx_data(5),
      mid_Start_Bit => mid_Start_Bit
    );
\TMR_No.Convert_Serial_To_Parallel[6].Rest_Bits.Others_I\: entity work.microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_778
     port map (
      Clk => Clk,
      \TMR_No.Convert_Serial_To_Parallel[6].serial_to_parallel_reg\ => \TMR_No.Convert_Serial_To_Parallel[6].serial_to_parallel_reg\,
      en_16x_baud => en_16x_baud,
      in0(0) => new_rx_data(6),
      mid_Start_Bit => mid_Start_Bit
    );
\TMR_No.Convert_Serial_To_Parallel[7].Rest_Bits.Others_I\: entity work.microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_779
     port map (
      Clk => Clk,
      \TMR_No.Convert_Serial_To_Parallel[7].serial_to_parallel_reg\ => \TMR_No.Convert_Serial_To_Parallel[7].serial_to_parallel_reg\,
      en_16x_baud => en_16x_baud,
      in0(0) => new_rx_data(7),
      mid_Start_Bit => mid_Start_Bit
    );
\TMR_No.Convert_Serial_To_Parallel[8].Rest_Bits.Others_I\: entity work.microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE_780
     port map (
      Clk => Clk,
      \TMR_No.Convert_Serial_To_Parallel[8].serial_to_parallel_reg\ => \TMR_No.Convert_Serial_To_Parallel[8].serial_to_parallel_reg\,
      en_16x_baud => en_16x_baud,
      in0(0) => new_rx_data(8),
      mid_Start_Bit => mid_Start_Bit
    );
\TMR_No.Delay_16\: entity work.\microblaze_mcs_1_XIL_SRL16E__parameterized1\
     port map (
      Clk => Clk,
      D_0 => D_0,
      \TMR_No.Convert_Serial_To_Parallel[2].serial_to_parallel_reg\ => \TMR_No.Convert_Serial_To_Parallel[2].serial_to_parallel_reg\,
      \TMR_No.Convert_Serial_To_Parallel[3].serial_to_parallel_reg\ => \TMR_No.Convert_Serial_To_Parallel[3].serial_to_parallel_reg\,
      \TMR_No.Convert_Serial_To_Parallel[4].serial_to_parallel_reg\ => \TMR_No.Convert_Serial_To_Parallel[4].serial_to_parallel_reg\,
      \TMR_No.Convert_Serial_To_Parallel[5].serial_to_parallel_reg\ => \TMR_No.Convert_Serial_To_Parallel[5].serial_to_parallel_reg\,
      \TMR_No.Convert_Serial_To_Parallel[6].serial_to_parallel_reg\ => \TMR_No.Convert_Serial_To_Parallel[6].serial_to_parallel_reg\,
      \TMR_No.Convert_Serial_To_Parallel[7].serial_to_parallel_reg\ => \TMR_No.Convert_Serial_To_Parallel[7].serial_to_parallel_reg\,
      \TMR_No.Convert_Serial_To_Parallel[8].serial_to_parallel_reg\ => \TMR_No.Convert_Serial_To_Parallel[8].serial_to_parallel_reg\,
      \TMR_No.running_reg\ => \TMR_No.Delay_16_n_2\,
      \TMR_No.running_reg_0\ => \TMR_No.running_reg_n_0\,
      \TMR_No.start_Edge_Detected_reg\ => \TMR_No.start_Edge_Detected_reg_n_0\,
      \TMR_No.stop_Bit_Position_reg\ => \TMR_No.Delay_16_n_1\,
      \TMR_No.stop_Bit_Position_reg_0\ => \TMR_No.stop_Bit_Position_reg_n_0\,
      en_16x_baud => en_16x_baud,
      mid_Start_Bit => mid_Start_Bit,
      \out\(8) => new_rx_data(0),
      \out\(7) => new_rx_data(1),
      \out\(6) => new_rx_data(2),
      \out\(5) => new_rx_data(3),
      \out\(4) => new_rx_data(4),
      \out\(3) => new_rx_data(5),
      \out\(2) => new_rx_data(6),
      \out\(1) => new_rx_data(7),
      \out\(0) => new_rx_data(8),
      sample_Point => sample_Point
    );
\TMR_No.Mid_Start_Bit_SRL16\: entity work.\microblaze_mcs_1_XIL_SRL16E__parameterized1_781\
     port map (
      Clk => Clk,
      \TMR_No.start_Edge_Detected_reg\ => \TMR_No.start_Edge_Detected_reg_n_0\,
      en_16x_baud => en_16x_baud,
      mid_Start_Bit => mid_Start_Bit
    );
\TMR_No.RX_Data[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFFD"
    )
        port map (
      I0 => lmb_reg_read,
      I1 => Q(0),
      I2 => Q(4),
      I3 => Q(1),
      I4 => Q(2),
      I5 => Q(3),
      O => \TMR_No.RX_Data[7]_i_1_n_0\
    );
\TMR_No.RX_Data_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => rx_data_i(0),
      Q => \Using_FPGA.Native\(0),
      R => \TMR_No.RX_Data[7]_i_1_n_0\
    );
\TMR_No.RX_Data_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => rx_data_i(1),
      Q => \Using_FPGA.Native\(1),
      R => \TMR_No.RX_Data[7]_i_1_n_0\
    );
\TMR_No.RX_Data_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => rx_data_i(2),
      Q => \Using_FPGA.Native\(2),
      R => \TMR_No.RX_Data[7]_i_1_n_0\
    );
\TMR_No.RX_Data_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => rx_data_i(3),
      Q => \Using_FPGA.Native\(3),
      R => \TMR_No.RX_Data[7]_i_1_n_0\
    );
\TMR_No.RX_Data_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => rx_data_i(4),
      Q => \Using_FPGA.Native\(4),
      R => \TMR_No.RX_Data[7]_i_1_n_0\
    );
\TMR_No.RX_Data_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => rx_data_i(5),
      Q => \Using_FPGA.Native\(5),
      R => \TMR_No.RX_Data[7]_i_1_n_0\
    );
\TMR_No.RX_Data_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => rx_data_i(6),
      Q => \Using_FPGA.Native\(6),
      R => \TMR_No.RX_Data[7]_i_1_n_0\
    );
\TMR_No.RX_Data_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => rx_data_i(7),
      Q => \Using_FPGA.Native\(7),
      R => \TMR_No.RX_Data[7]_i_1_n_0\
    );
\TMR_No.frame_error_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"BA"
    )
        port map (
      I0 => \^tmr_no.frame_error_reg\,
      I1 => UART_Status_Read,
      I2 => D(1),
      O => \TMR_No.frame_error_reg_0\
    );
\TMR_No.new_rx_data_write_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \p_4_out__0\,
      Q => new_rx_data_write,
      R => Rst
    );
\TMR_No.overrun_error_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8F88"
    )
        port map (
      I0 => \^rx_data_exists\,
      I1 => new_rx_data_write,
      I2 => UART_Status_Read,
      I3 => D(0),
      O => \TMR_No.overrun_error_reg\
    );
\TMR_No.previous_RX_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => new_rx_data(0),
      I1 => en_16x_baud,
      I2 => previous_RX,
      O => \TMR_No.previous_RX_i_1_n_0\
    );
\TMR_No.previous_RX_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \TMR_No.previous_RX_i_1_n_0\,
      Q => previous_RX,
      R => Rst
    );
\TMR_No.running_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \TMR_No.Delay_16_n_2\,
      Q => \TMR_No.running_reg_n_0\,
      R => Rst
    );
\TMR_No.rx_1_reg\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => UART_Rx,
      Q => rx_1,
      S => Rst
    );
\TMR_No.rx_2_reg\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => rx_1,
      Q => new_rx_data(0),
      S => Rst
    );
\TMR_No.rx_data_exists_i_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5454545454545400"
    )
        port map (
      I0 => Rst,
      I1 => new_rx_data_write,
      I2 => \^rx_data_exists\,
      I3 => \TMR_No.rx_data_exists_i_i_2_n_0\,
      I4 => Q(2),
      I5 => Q(3),
      O => \TMR_No.rx_data_exists_i_i_1_n_0\
    );
\TMR_No.rx_data_exists_i_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFD"
    )
        port map (
      I0 => lmb_reg_read,
      I1 => Q(0),
      I2 => Q(4),
      I3 => Q(1),
      O => \TMR_No.rx_data_exists_i_i_2_n_0\
    );
\TMR_No.rx_data_exists_i_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \TMR_No.rx_data_exists_i_i_1_n_0\,
      Q => \^rx_data_exists\,
      R => '0'
    );
\TMR_No.rx_data_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => new_rx_data_write,
      D => new_rx_data(8),
      Q => rx_data_i(0),
      R => Rst
    );
\TMR_No.rx_data_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => new_rx_data_write,
      D => new_rx_data(7),
      Q => rx_data_i(1),
      R => Rst
    );
\TMR_No.rx_data_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => new_rx_data_write,
      D => new_rx_data(6),
      Q => rx_data_i(2),
      R => Rst
    );
\TMR_No.rx_data_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => new_rx_data_write,
      D => new_rx_data(5),
      Q => rx_data_i(3),
      R => Rst
    );
\TMR_No.rx_data_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => new_rx_data_write,
      D => new_rx_data(4),
      Q => rx_data_i(4),
      R => Rst
    );
\TMR_No.rx_data_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => new_rx_data_write,
      D => new_rx_data(3),
      Q => rx_data_i(5),
      R => Rst
    );
\TMR_No.rx_data_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => new_rx_data_write,
      D => new_rx_data(2),
      Q => rx_data_i(6),
      R => Rst
    );
\TMR_No.rx_data_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => new_rx_data_write,
      D => new_rx_data(1),
      Q => rx_data_i(7),
      R => Rst
    );
\TMR_No.start_Edge_Detected_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"02FF0200"
    )
        port map (
      I0 => previous_RX,
      I1 => new_rx_data(0),
      I2 => \TMR_No.running_reg_n_0\,
      I3 => en_16x_baud,
      I4 => \TMR_No.start_Edge_Detected_reg_n_0\,
      O => \TMR_No.start_Edge_Detected_i_1_n_0\
    );
\TMR_No.start_Edge_Detected_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \TMR_No.start_Edge_Detected_i_1_n_0\,
      Q => \TMR_No.start_Edge_Detected_reg_n_0\,
      R => Rst
    );
\TMR_No.stop_Bit_Position_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \TMR_No.Delay_16_n_1\,
      Q => \TMR_No.stop_Bit_Position_reg_n_0\,
      R => Rst
    );
UART_Interrupt_INST_0: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => new_rx_data_write,
      I1 => tx_data_transmitted,
      I2 => \TMR_No.error_interrupt_reg\,
      O => UART_Interrupt
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => rx_parity_error
    );
in00: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0080"
    )
        port map (
      I0 => en_16x_baud,
      I1 => sample_Point,
      I2 => \TMR_No.stop_Bit_Position_reg_n_0\,
      I3 => new_rx_data(0),
      O => \^tmr_no.frame_error_reg\
    );
p_4_out: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8000"
    )
        port map (
      I0 => \TMR_No.stop_Bit_Position_reg_n_0\,
      I1 => sample_Point,
      I2 => new_rx_data(0),
      I3 => en_16x_baud,
      O => \p_4_out__0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_UART_Transmit is
  port (
    UART_Tx : out STD_LOGIC;
    tx_data_transmitted : out STD_LOGIC;
    \UART_Status_reg[3]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    en_16x_baud : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Rst : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC_VECTOR ( 7 downto 0 )
  );
end microblaze_mcs_1_UART_Transmit;

architecture STRUCTURE of microblaze_mcs_1_UART_Transmit is
  signal CI : STD_LOGIC;
  signal LI : STD_LOGIC;
  signal S : STD_LOGIC;
  signal \TMR_No.Counter[2].h_Cnt_reg\ : STD_LOGIC;
  signal \TMR_No.fifo_DOut_reg_n_0_[1]\ : STD_LOGIC;
  signal \TMR_No.fifo_DOut_reg_n_0_[2]\ : STD_LOGIC;
  signal \TMR_No.fifo_DOut_reg_n_0_[3]\ : STD_LOGIC;
  signal \TMR_No.fifo_DOut_reg_n_0_[4]\ : STD_LOGIC;
  signal \TMR_No.fifo_DOut_reg_n_0_[5]\ : STD_LOGIC;
  signal \TMR_No.fifo_DOut_reg_n_0_[6]\ : STD_LOGIC;
  signal \TMR_No.fifo_DOut_reg_n_0_[7]\ : STD_LOGIC;
  signal \TMR_No.mux_sel_reg_n_0_[0]\ : STD_LOGIC;
  signal \TMR_No.mux_sel_reg_n_0_[2]\ : STD_LOGIC;
  signal \TMR_No.tx_buffer_empty_i_i_1_n_0\ : STD_LOGIC;
  signal cnt_cy_1 : STD_LOGIC;
  signal cnt_cy_2 : STD_LOGIC;
  signal div16 : STD_LOGIC;
  signal lopt : STD_LOGIC;
  signal lopt_1 : STD_LOGIC;
  signal lopt_2 : STD_LOGIC;
  signal mux_0123 : STD_LOGIC;
  signal mux_4567 : STD_LOGIC;
  signal mux_Out : STD_LOGIC;
  signal p_0_in : STD_LOGIC;
  signal p_11_out : STD_LOGIC;
  signal p_2_out : STD_LOGIC;
  signal p_3_out : STD_LOGIC;
  signal p_7_out : STD_LOGIC;
  signal serial_Data : STD_LOGIC;
  signal sum_cnt : STD_LOGIC_VECTOR ( 0 to 2 );
  signal tx_DataBits : STD_LOGIC;
  signal tx_Data_Enable : STD_LOGIC;
  signal tx_Start : STD_LOGIC;
  signal tx_buffer_empty_i : STD_LOGIC;
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of tx_buffer_empty_i : signal is "true";
  signal \^tx_data_transmitted\ : STD_LOGIC;
  attribute KEEP : string;
  attribute KEEP of \TMR_No.TX_reg\ : label is "yes";
  attribute equivalent_register_removal : string;
  attribute equivalent_register_removal of \TMR_No.TX_reg\ : label is "no";
  attribute KEEP of \TMR_No.tx_buffer_empty_i_reg\ : label is "yes";
  attribute equivalent_register_removal of \TMR_No.tx_buffer_empty_i_reg\ : label is "no";
begin
  tx_data_transmitted <= \^tx_data_transmitted\;
\TMR_No.Counter[0].XORCY_I\: entity work.microblaze_mcs_1_iomodule_v3_1_3_MB_XORCY
     port map (
      D(0) => sum_cnt(0),
      Q(0) => \TMR_No.mux_sel_reg_n_0_[0]\,
      cnt_cy_2 => cnt_cy_2,
      lopt => lopt_1,
      lopt_1 => lopt_2
    );
\TMR_No.Counter[1].Used_MuxCY.MUXCY_L_I\: entity work.microblaze_mcs_1_iomodule_v3_1_3_MB_MUXCY
     port map (
      LI => LI,
      Q(0) => S,
      cnt_cy_1 => cnt_cy_1,
      cnt_cy_2 => cnt_cy_2,
      lopt => lopt
    );
\TMR_No.Counter[1].XORCY_I\: entity work.microblaze_mcs_1_iomodule_v3_1_3_MB_XORCY_770
     port map (
      D(0) => sum_cnt(1),
      LI => LI,
      cnt_cy_1 => cnt_cy_1
    );
\TMR_No.Counter[2].Used_MuxCY.MUXCY_L_I\: entity work.microblaze_mcs_1_iomodule_v3_1_3_MB_MUXCY_771
     port map (
      CI => CI,
      Q(0) => \TMR_No.mux_sel_reg_n_0_[2]\,
      \TMR_No.Counter[2].h_Cnt_reg\ => \TMR_No.Counter[2].h_Cnt_reg\,
      cnt_cy_1 => cnt_cy_1,
      lopt => lopt,
      lopt_1 => S,
      lopt_2 => LI,
      lopt_3 => lopt_1,
      lopt_4 => lopt_2,
      tx_DataBits => tx_DataBits
    );
\TMR_No.Counter[2].XORCY_I\: entity work.microblaze_mcs_1_iomodule_v3_1_3_MB_XORCY_772
     port map (
      CI => CI,
      D(0) => sum_cnt(2),
      \TMR_No.Counter[2].h_Cnt_reg\ => \TMR_No.Counter[2].h_Cnt_reg\
    );
\TMR_No.DIV16_SRL16E\: entity work.microblaze_mcs_1_XIL_SRL16E
     port map (
      Clk => Clk,
      div16 => div16,
      en_16x_baud => en_16x_baud
    );
\TMR_No.FDRE_I\: entity work.microblaze_mcs_1_iomodule_v3_1_3_MB_FDRE
     port map (
      Clk => Clk,
      Q(2) => \TMR_No.mux_sel_reg_n_0_[0]\,
      Q(1) => S,
      Q(0) => \TMR_No.mux_sel_reg_n_0_[2]\,
      div16 => div16,
      en_16x_baud => en_16x_baud,
      \out\ => tx_buffer_empty_i,
      p_11_out => p_11_out,
      p_3_out => p_3_out,
      p_7_out => p_7_out,
      tx_DataBits => tx_DataBits,
      tx_Data_Enable => tx_Data_Enable,
      tx_Start => tx_Start,
      tx_data_transmitted => \^tx_data_transmitted\
    );
\TMR_No.MUXF6_I\: entity work.microblaze_mcs_1_MB_MUXF6
     port map (
      Q(0) => \TMR_No.mux_sel_reg_n_0_[0]\,
      mux_0123 => mux_0123,
      mux_4567 => mux_4567,
      mux_Out => mux_Out
    );
\TMR_No.MUX_F5_1\: entity work.microblaze_mcs_1_MB_MUXF5
     port map (
      Q(1) => S,
      Q(0) => \TMR_No.mux_sel_reg_n_0_[2]\,
      \TMR_No.fifo_DOut_reg[0]\(3) => p_0_in,
      \TMR_No.fifo_DOut_reg[0]\(2) => \TMR_No.fifo_DOut_reg_n_0_[1]\,
      \TMR_No.fifo_DOut_reg[0]\(1) => \TMR_No.fifo_DOut_reg_n_0_[2]\,
      \TMR_No.fifo_DOut_reg[0]\(0) => \TMR_No.fifo_DOut_reg_n_0_[3]\,
      mux_0123 => mux_0123
    );
\TMR_No.MUX_F5_2\: entity work.microblaze_mcs_1_MB_MUXF5_773
     port map (
      Q(1) => S,
      Q(0) => \TMR_No.mux_sel_reg_n_0_[2]\,
      \TMR_No.fifo_DOut_reg[4]\(3) => \TMR_No.fifo_DOut_reg_n_0_[4]\,
      \TMR_No.fifo_DOut_reg[4]\(2) => \TMR_No.fifo_DOut_reg_n_0_[5]\,
      \TMR_No.fifo_DOut_reg[4]\(1) => \TMR_No.fifo_DOut_reg_n_0_[6]\,
      \TMR_No.fifo_DOut_reg[4]\(0) => \TMR_No.fifo_DOut_reg_n_0_[7]\,
      mux_4567 => mux_4567
    );
\TMR_No.TX_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"0B"
    )
        port map (
      I0 => serial_Data,
      I1 => tx_DataBits,
      I2 => tx_Start,
      O => p_2_out
    );
\TMR_No.TX_reg\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => p_2_out,
      Q => UART_Tx,
      S => Rst
    );
\TMR_No.data_is_sent_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => p_3_out,
      Q => \^tx_data_transmitted\,
      R => Rst
    );
\TMR_No.fifo_DOut_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => \out\(7),
      Q => p_0_in,
      R => Rst
    );
\TMR_No.fifo_DOut_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => \out\(6),
      Q => \TMR_No.fifo_DOut_reg_n_0_[1]\,
      R => Rst
    );
\TMR_No.fifo_DOut_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => \out\(5),
      Q => \TMR_No.fifo_DOut_reg_n_0_[2]\,
      R => Rst
    );
\TMR_No.fifo_DOut_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => \out\(4),
      Q => \TMR_No.fifo_DOut_reg_n_0_[3]\,
      R => Rst
    );
\TMR_No.fifo_DOut_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => \out\(3),
      Q => \TMR_No.fifo_DOut_reg_n_0_[4]\,
      R => Rst
    );
\TMR_No.fifo_DOut_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => \out\(2),
      Q => \TMR_No.fifo_DOut_reg_n_0_[5]\,
      R => Rst
    );
\TMR_No.fifo_DOut_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => \out\(1),
      Q => \TMR_No.fifo_DOut_reg_n_0_[6]\,
      R => Rst
    );
\TMR_No.fifo_DOut_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => \out\(0),
      Q => \TMR_No.fifo_DOut_reg_n_0_[7]\,
      R => Rst
    );
\TMR_No.mux_sel_reg[0]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => tx_Data_Enable,
      D => sum_cnt(0),
      Q => \TMR_No.mux_sel_reg_n_0_[0]\,
      S => Rst
    );
\TMR_No.mux_sel_reg[1]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => tx_Data_Enable,
      D => sum_cnt(1),
      Q => S,
      S => Rst
    );
\TMR_No.mux_sel_reg[2]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => tx_Data_Enable,
      D => sum_cnt(2),
      Q => \TMR_No.mux_sel_reg_n_0_[2]\,
      S => Rst
    );
\TMR_No.serial_Data_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mux_Out,
      Q => serial_Data,
      R => Rst
    );
\TMR_No.tx_DataBits_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => p_7_out,
      Q => tx_DataBits,
      R => Rst
    );
\TMR_No.tx_Start_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => p_11_out,
      Q => tx_Start,
      R => Rst
    );
\TMR_No.tx_buffer_empty_i_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFEE"
    )
        port map (
      I0 => \^tx_data_transmitted\,
      I1 => Rst,
      I2 => E(0),
      I3 => tx_buffer_empty_i,
      O => \TMR_No.tx_buffer_empty_i_i_1_n_0\
    );
\TMR_No.tx_buffer_empty_i_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \TMR_No.tx_buffer_empty_i_i_1_n_0\,
      Q => tx_buffer_empty_i,
      R => '0'
    );
\UART_Status[3]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => tx_buffer_empty_i,
      O => \UART_Status_reg[3]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_bd_3c9d_0_dlmb_0 is
  port (
    LMB_Clk : in STD_LOGIC;
    SYS_Rst : in STD_LOGIC;
    LMB_Rst : out STD_LOGIC;
    M_ABus : in STD_LOGIC_VECTOR ( 0 to 31 );
    M_ReadStrobe : in STD_LOGIC;
    M_WriteStrobe : in STD_LOGIC;
    M_AddrStrobe : in STD_LOGIC;
    M_DBus : in STD_LOGIC_VECTOR ( 0 to 31 );
    M_BE : in STD_LOGIC_VECTOR ( 0 to 3 );
    Sl_DBus : in STD_LOGIC_VECTOR ( 0 to 63 );
    Sl_Ready : in STD_LOGIC_VECTOR ( 0 to 1 );
    Sl_Wait : in STD_LOGIC_VECTOR ( 0 to 1 );
    Sl_UE : in STD_LOGIC_VECTOR ( 0 to 1 );
    Sl_CE : in STD_LOGIC_VECTOR ( 0 to 1 );
    LMB_ABus : out STD_LOGIC_VECTOR ( 0 to 31 );
    LMB_ReadStrobe : out STD_LOGIC;
    LMB_WriteStrobe : out STD_LOGIC;
    LMB_AddrStrobe : out STD_LOGIC;
    LMB_ReadDBus : out STD_LOGIC_VECTOR ( 0 to 31 );
    LMB_WriteDBus : out STD_LOGIC_VECTOR ( 0 to 31 );
    LMB_Ready : out STD_LOGIC;
    LMB_Wait : out STD_LOGIC;
    LMB_UE : out STD_LOGIC;
    LMB_CE : out STD_LOGIC;
    LMB_BE : out STD_LOGIC_VECTOR ( 0 to 3 )
  );
  attribute CHECK_LICENSE_TYPE : string;
  attribute CHECK_LICENSE_TYPE of microblaze_mcs_1_bd_3c9d_0_dlmb_0 : entity is "bd_3c9d_0_dlmb_0,lmb_v10,{}";
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of microblaze_mcs_1_bd_3c9d_0_dlmb_0 : entity is "yes";
  attribute X_CORE_INFO : string;
  attribute X_CORE_INFO of microblaze_mcs_1_bd_3c9d_0_dlmb_0 : entity is "lmb_v10,Vivado 2018.2";
end microblaze_mcs_1_bd_3c9d_0_dlmb_0;

architecture STRUCTURE of microblaze_mcs_1_bd_3c9d_0_dlmb_0 is
  attribute C_EXT_RESET_HIGH : integer;
  attribute C_EXT_RESET_HIGH of U0 : label is 1;
  attribute C_LMB_AWIDTH : integer;
  attribute C_LMB_AWIDTH of U0 : label is 32;
  attribute C_LMB_DWIDTH : integer;
  attribute C_LMB_DWIDTH of U0 : label is 32;
  attribute C_LMB_NUM_SLAVES : integer;
  attribute C_LMB_NUM_SLAVES of U0 : label is 2;
  attribute X_INTERFACE_INFO : string;
  attribute X_INTERFACE_INFO of LMB_AddrStrobe : signal is "xilinx.com:interface:lmb:1.0 LMB_Sl_0 ADDRSTROBE, xilinx.com:interface:lmb:1.0 LMB_Sl_1 ADDRSTROBE";
  attribute X_INTERFACE_INFO of LMB_CE : signal is "xilinx.com:interface:lmb:1.0 LMB_M CE";
  attribute X_INTERFACE_INFO of LMB_Clk : signal is "xilinx.com:signal:clock:1.0 CLK.LMB_Clk CLK";
  attribute X_INTERFACE_PARAMETER : string;
  attribute X_INTERFACE_PARAMETER of LMB_Clk : signal is "XIL_INTERFACENAME CLK.LMB_Clk, ASSOCIATED_BUSIF LMB_Sl_0:LMB_Sl_1:LMB_Sl_2:LMB_Sl_3:LMB_Sl_4:LMB_Sl_5:LMB_Sl_6:LMB_Sl_7:LMB_Sl_8:LMB_Sl_9:LMB_Sl_10:LMB_Sl_11:LMB_Sl_12:LMB_Sl_13:LMB_Sl_14:LMB_Sl_15:LMB_M, ASSOCIATED_RESET SYS_Rst, FREQ_HZ 100000000, PHASE 0.000";
  attribute X_INTERFACE_INFO of LMB_ReadStrobe : signal is "xilinx.com:interface:lmb:1.0 LMB_Sl_0 READSTROBE, xilinx.com:interface:lmb:1.0 LMB_Sl_1 READSTROBE";
  attribute X_INTERFACE_INFO of LMB_Ready : signal is "xilinx.com:interface:lmb:1.0 LMB_M READY";
  attribute X_INTERFACE_INFO of LMB_Rst : signal is "xilinx.com:interface:lmb:1.0 LMB_Sl_0 RST, xilinx.com:interface:lmb:1.0 LMB_Sl_1 RST, xilinx.com:interface:lmb:1.0 LMB_M RST";
  attribute X_INTERFACE_PARAMETER of LMB_Rst : signal is "XIL_INTERFACENAME LMB_Sl_0, ADDR_WIDTH 32, DATA_WIDTH 32, READ_WRITE_MODE READ_WRITE, XIL_INTERFACENAME LMB_Sl_1, ADDR_WIDTH 32, DATA_WIDTH 32, READ_WRITE_MODE READ_WRITE, XIL_INTERFACENAME LMB_M, ADDR_WIDTH 32, DATA_WIDTH 32, READ_WRITE_MODE READ_WRITE";
  attribute X_INTERFACE_INFO of LMB_UE : signal is "xilinx.com:interface:lmb:1.0 LMB_M UE";
  attribute X_INTERFACE_INFO of LMB_Wait : signal is "xilinx.com:interface:lmb:1.0 LMB_M WAIT";
  attribute X_INTERFACE_INFO of LMB_WriteStrobe : signal is "xilinx.com:interface:lmb:1.0 LMB_Sl_0 WRITESTROBE, xilinx.com:interface:lmb:1.0 LMB_Sl_1 WRITESTROBE";
  attribute X_INTERFACE_INFO of M_AddrStrobe : signal is "xilinx.com:interface:lmb:1.0 LMB_M ADDRSTROBE";
  attribute X_INTERFACE_INFO of M_ReadStrobe : signal is "xilinx.com:interface:lmb:1.0 LMB_M READSTROBE";
  attribute X_INTERFACE_INFO of M_WriteStrobe : signal is "xilinx.com:interface:lmb:1.0 LMB_M WRITESTROBE";
  attribute X_INTERFACE_INFO of SYS_Rst : signal is "xilinx.com:signal:reset:1.0 RST.SYS_Rst RST";
  attribute X_INTERFACE_PARAMETER of SYS_Rst : signal is "XIL_INTERFACENAME RST.SYS_Rst, POLARITY ACTIVE_HIGH, TYPE INTERCONNECT";
  attribute X_INTERFACE_INFO of LMB_ABus : signal is "xilinx.com:interface:lmb:1.0 LMB_Sl_0 ABUS, xilinx.com:interface:lmb:1.0 LMB_Sl_1 ABUS";
  attribute X_INTERFACE_INFO of LMB_BE : signal is "xilinx.com:interface:lmb:1.0 LMB_Sl_0 BE, xilinx.com:interface:lmb:1.0 LMB_Sl_1 BE";
  attribute X_INTERFACE_INFO of LMB_ReadDBus : signal is "xilinx.com:interface:lmb:1.0 LMB_M READDBUS";
  attribute X_INTERFACE_INFO of LMB_WriteDBus : signal is "xilinx.com:interface:lmb:1.0 LMB_Sl_0 WRITEDBUS, xilinx.com:interface:lmb:1.0 LMB_Sl_1 WRITEDBUS";
  attribute X_INTERFACE_INFO of M_ABus : signal is "xilinx.com:interface:lmb:1.0 LMB_M ABUS";
  attribute X_INTERFACE_INFO of M_BE : signal is "xilinx.com:interface:lmb:1.0 LMB_M BE";
  attribute X_INTERFACE_INFO of M_DBus : signal is "xilinx.com:interface:lmb:1.0 LMB_M WRITEDBUS";
  attribute X_INTERFACE_INFO of Sl_CE : signal is "xilinx.com:interface:lmb:1.0 LMB_Sl_0 CE [0:0] [0:0], xilinx.com:interface:lmb:1.0 LMB_Sl_1 CE [0:0] [1:1]";
  attribute X_INTERFACE_INFO of Sl_DBus : signal is "xilinx.com:interface:lmb:1.0 LMB_Sl_0 READDBUS [0:31] [0:31], xilinx.com:interface:lmb:1.0 LMB_Sl_1 READDBUS [0:31] [32:63]";
  attribute X_INTERFACE_INFO of Sl_Ready : signal is "xilinx.com:interface:lmb:1.0 LMB_Sl_0 READY [0:0] [0:0], xilinx.com:interface:lmb:1.0 LMB_Sl_1 READY [0:0] [1:1]";
  attribute X_INTERFACE_INFO of Sl_UE : signal is "xilinx.com:interface:lmb:1.0 LMB_Sl_0 UE [0:0] [0:0], xilinx.com:interface:lmb:1.0 LMB_Sl_1 UE [0:0] [1:1]";
  attribute X_INTERFACE_INFO of Sl_Wait : signal is "xilinx.com:interface:lmb:1.0 LMB_Sl_0 WAIT [0:0] [0:0], xilinx.com:interface:lmb:1.0 LMB_Sl_1 WAIT [0:0] [1:1]";
begin
U0: entity work.microblaze_mcs_1_lmb_v10
     port map (
      LMB_ABus(0 to 31) => LMB_ABus(0 to 31),
      LMB_AddrStrobe => LMB_AddrStrobe,
      LMB_BE(0 to 3) => LMB_BE(0 to 3),
      LMB_CE => LMB_CE,
      LMB_Clk => LMB_Clk,
      LMB_ReadDBus(0 to 31) => LMB_ReadDBus(0 to 31),
      LMB_ReadStrobe => LMB_ReadStrobe,
      LMB_Ready => LMB_Ready,
      LMB_Rst => LMB_Rst,
      LMB_UE => LMB_UE,
      LMB_Wait => LMB_Wait,
      LMB_WriteDBus(0 to 31) => LMB_WriteDBus(0 to 31),
      LMB_WriteStrobe => LMB_WriteStrobe,
      M_ABus(0 to 31) => M_ABus(0 to 31),
      M_AddrStrobe => M_AddrStrobe,
      M_BE(0 to 3) => M_BE(0 to 3),
      M_DBus(0 to 31) => M_DBus(0 to 31),
      M_ReadStrobe => M_ReadStrobe,
      M_WriteStrobe => M_WriteStrobe,
      SYS_Rst => SYS_Rst,
      Sl_CE(0 to 1) => Sl_CE(0 to 1),
      Sl_DBus(0 to 63) => Sl_DBus(0 to 63),
      Sl_Ready(0 to 1) => Sl_Ready(0 to 1),
      Sl_UE(0 to 1) => Sl_UE(0 to 1),
      Sl_Wait(0 to 1) => Sl_Wait(0 to 1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_bd_3c9d_0_dlmb_cntlr_0 is
  port (
    LMB_Clk : in STD_LOGIC;
    LMB_Rst : in STD_LOGIC;
    LMB_ABus : in STD_LOGIC_VECTOR ( 0 to 31 );
    LMB_WriteDBus : in STD_LOGIC_VECTOR ( 0 to 31 );
    LMB_AddrStrobe : in STD_LOGIC;
    LMB_ReadStrobe : in STD_LOGIC;
    LMB_WriteStrobe : in STD_LOGIC;
    LMB_BE : in STD_LOGIC_VECTOR ( 0 to 3 );
    Sl_DBus : out STD_LOGIC_VECTOR ( 0 to 31 );
    Sl_Ready : out STD_LOGIC;
    Sl_Wait : out STD_LOGIC;
    Sl_UE : out STD_LOGIC;
    Sl_CE : out STD_LOGIC;
    BRAM_Rst_A : out STD_LOGIC;
    BRAM_Clk_A : out STD_LOGIC;
    BRAM_Addr_A : out STD_LOGIC_VECTOR ( 0 to 31 );
    BRAM_EN_A : out STD_LOGIC;
    BRAM_WEN_A : out STD_LOGIC_VECTOR ( 0 to 3 );
    BRAM_Dout_A : out STD_LOGIC_VECTOR ( 0 to 31 );
    BRAM_Din_A : in STD_LOGIC_VECTOR ( 0 to 31 )
  );
  attribute CHECK_LICENSE_TYPE : string;
  attribute CHECK_LICENSE_TYPE of microblaze_mcs_1_bd_3c9d_0_dlmb_cntlr_0 : entity is "bd_3c9d_0_dlmb_cntlr_0,lmb_bram_if_cntlr,{}";
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of microblaze_mcs_1_bd_3c9d_0_dlmb_cntlr_0 : entity is "yes";
  attribute X_CORE_INFO : string;
  attribute X_CORE_INFO of microblaze_mcs_1_bd_3c9d_0_dlmb_cntlr_0 : entity is "lmb_bram_if_cntlr,Vivado 2018.2";
end microblaze_mcs_1_bd_3c9d_0_dlmb_cntlr_0;

architecture STRUCTURE of microblaze_mcs_1_bd_3c9d_0_dlmb_cntlr_0 is
  signal \<const0>\ : STD_LOGIC;
  signal \^bram_din_a\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^lmb_abus\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^lmb_addrstrobe\ : STD_LOGIC;
  signal \^lmb_clk\ : STD_LOGIC;
  signal \^lmb_writedbus\ : STD_LOGIC_VECTOR ( 0 to 31 );
  attribute X_INTERFACE_INFO : string;
  attribute X_INTERFACE_INFO of BRAM_Clk_A : signal is "xilinx.com:interface:bram:1.0 BRAM_PORT CLK";
  attribute X_INTERFACE_INFO of BRAM_EN_A : signal is "xilinx.com:interface:bram:1.0 BRAM_PORT EN";
  attribute X_INTERFACE_INFO of BRAM_Rst_A : signal is "xilinx.com:interface:bram:1.0 BRAM_PORT RST";
  attribute X_INTERFACE_PARAMETER : string;
  attribute X_INTERFACE_PARAMETER of BRAM_Rst_A : signal is "XIL_INTERFACENAME BRAM_PORT, MEM_SIZE 32768, MASTER_TYPE BRAM_CTRL, MEM_WIDTH 32, MEM_ECC NONE";
  attribute X_INTERFACE_INFO of LMB_AddrStrobe : signal is "xilinx.com:interface:lmb:1.0 SLMB ADDRSTROBE";
  attribute X_INTERFACE_INFO of LMB_Clk : signal is "xilinx.com:signal:clock:1.0 CLK.LMB_Clk CLK";
  attribute X_INTERFACE_PARAMETER of LMB_Clk : signal is "XIL_INTERFACENAME CLK.LMB_Clk, ASSOCIATED_BUSIF SLMB:SLMB1:SLMB2:SLMB3, ASSOCIATED_RESET LMB_Rst, FREQ_HZ 100000000, PHASE 0.000";
  attribute X_INTERFACE_INFO of LMB_ReadStrobe : signal is "xilinx.com:interface:lmb:1.0 SLMB READSTROBE";
  attribute X_INTERFACE_INFO of LMB_Rst : signal is "xilinx.com:signal:reset:1.0 RST.LMB_Rst RST";
  attribute X_INTERFACE_PARAMETER of LMB_Rst : signal is "XIL_INTERFACENAME RST.LMB_Rst, POLARITY ACTIVE_HIGH, TYPE INTERCONNECT";
  attribute X_INTERFACE_INFO of LMB_WriteStrobe : signal is "xilinx.com:interface:lmb:1.0 SLMB WRITESTROBE";
  attribute X_INTERFACE_INFO of Sl_CE : signal is "xilinx.com:interface:lmb:1.0 SLMB CE";
  attribute X_INTERFACE_INFO of Sl_Ready : signal is "xilinx.com:interface:lmb:1.0 SLMB READY";
  attribute X_INTERFACE_INFO of Sl_UE : signal is "xilinx.com:interface:lmb:1.0 SLMB UE";
  attribute X_INTERFACE_INFO of Sl_Wait : signal is "xilinx.com:interface:lmb:1.0 SLMB WAIT";
  attribute X_INTERFACE_INFO of BRAM_Addr_A : signal is "xilinx.com:interface:bram:1.0 BRAM_PORT ADDR";
  attribute X_INTERFACE_INFO of BRAM_Din_A : signal is "xilinx.com:interface:bram:1.0 BRAM_PORT DOUT";
  attribute X_INTERFACE_INFO of BRAM_Dout_A : signal is "xilinx.com:interface:bram:1.0 BRAM_PORT DIN";
  attribute X_INTERFACE_INFO of BRAM_WEN_A : signal is "xilinx.com:interface:bram:1.0 BRAM_PORT WE";
  attribute X_INTERFACE_INFO of LMB_ABus : signal is "xilinx.com:interface:lmb:1.0 SLMB ABUS";
  attribute X_INTERFACE_PARAMETER of LMB_ABus : signal is "XIL_INTERFACENAME SLMB, ADDR_WIDTH 32, DATA_WIDTH 32, READ_WRITE_MODE READ_WRITE";
  attribute X_INTERFACE_INFO of LMB_BE : signal is "xilinx.com:interface:lmb:1.0 SLMB BE";
  attribute X_INTERFACE_INFO of LMB_WriteDBus : signal is "xilinx.com:interface:lmb:1.0 SLMB WRITEDBUS";
  attribute X_INTERFACE_INFO of Sl_DBus : signal is "xilinx.com:interface:lmb:1.0 SLMB READDBUS";
begin
  BRAM_Addr_A(0 to 31) <= \^lmb_abus\(0 to 31);
  BRAM_Clk_A <= \^lmb_clk\;
  BRAM_Dout_A(0 to 31) <= \^lmb_writedbus\(0 to 31);
  BRAM_EN_A <= \^lmb_addrstrobe\;
  BRAM_Rst_A <= \<const0>\;
  Sl_CE <= \<const0>\;
  Sl_DBus(0 to 31) <= \^bram_din_a\(0 to 31);
  Sl_UE <= \<const0>\;
  Sl_Wait <= \<const0>\;
  \^bram_din_a\(0 to 31) <= BRAM_Din_A(0 to 31);
  \^lmb_abus\(0 to 31) <= LMB_ABus(0 to 31);
  \^lmb_addrstrobe\ <= LMB_AddrStrobe;
  \^lmb_clk\ <= LMB_Clk;
  \^lmb_writedbus\(0 to 31) <= LMB_WriteDBus(0 to 31);
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
U0: entity work.microblaze_mcs_1_lmb_bram_if_cntlr
     port map (
      BRAM_WEN_A(0 to 3) => BRAM_WEN_A(0 to 3),
      LMB_ABus(1) => \^lmb_abus\(0),
      LMB_ABus(0) => \^lmb_abus\(1),
      LMB_AddrStrobe => \^lmb_addrstrobe\,
      LMB_BE(0 to 3) => LMB_BE(0 to 3),
      LMB_Clk => \^lmb_clk\,
      LMB_Rst => LMB_Rst,
      LMB_WriteStrobe => LMB_WriteStrobe,
      Sl_Ready => Sl_Ready
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_bd_3c9d_0_ilmb_0 is
  port (
    LMB_Clk : in STD_LOGIC;
    SYS_Rst : in STD_LOGIC;
    LMB_Rst : out STD_LOGIC;
    M_ABus : in STD_LOGIC_VECTOR ( 0 to 31 );
    M_ReadStrobe : in STD_LOGIC;
    M_WriteStrobe : in STD_LOGIC;
    M_AddrStrobe : in STD_LOGIC;
    M_DBus : in STD_LOGIC_VECTOR ( 0 to 31 );
    M_BE : in STD_LOGIC_VECTOR ( 0 to 3 );
    Sl_DBus : in STD_LOGIC_VECTOR ( 0 to 31 );
    Sl_Ready : in STD_LOGIC_VECTOR ( 0 to 0 );
    Sl_Wait : in STD_LOGIC_VECTOR ( 0 to 0 );
    Sl_UE : in STD_LOGIC_VECTOR ( 0 to 0 );
    Sl_CE : in STD_LOGIC_VECTOR ( 0 to 0 );
    LMB_ABus : out STD_LOGIC_VECTOR ( 0 to 31 );
    LMB_ReadStrobe : out STD_LOGIC;
    LMB_WriteStrobe : out STD_LOGIC;
    LMB_AddrStrobe : out STD_LOGIC;
    LMB_ReadDBus : out STD_LOGIC_VECTOR ( 0 to 31 );
    LMB_WriteDBus : out STD_LOGIC_VECTOR ( 0 to 31 );
    LMB_Ready : out STD_LOGIC;
    LMB_Wait : out STD_LOGIC;
    LMB_UE : out STD_LOGIC;
    LMB_CE : out STD_LOGIC;
    LMB_BE : out STD_LOGIC_VECTOR ( 0 to 3 )
  );
  attribute CHECK_LICENSE_TYPE : string;
  attribute CHECK_LICENSE_TYPE of microblaze_mcs_1_bd_3c9d_0_ilmb_0 : entity is "bd_3c9d_0_ilmb_0,lmb_v10,{}";
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of microblaze_mcs_1_bd_3c9d_0_ilmb_0 : entity is "yes";
  attribute X_CORE_INFO : string;
  attribute X_CORE_INFO of microblaze_mcs_1_bd_3c9d_0_ilmb_0 : entity is "lmb_v10,Vivado 2018.2";
end microblaze_mcs_1_bd_3c9d_0_ilmb_0;

architecture STRUCTURE of microblaze_mcs_1_bd_3c9d_0_ilmb_0 is
  attribute C_EXT_RESET_HIGH : integer;
  attribute C_EXT_RESET_HIGH of U0 : label is 1;
  attribute C_LMB_AWIDTH : integer;
  attribute C_LMB_AWIDTH of U0 : label is 32;
  attribute C_LMB_DWIDTH : integer;
  attribute C_LMB_DWIDTH of U0 : label is 32;
  attribute C_LMB_NUM_SLAVES : integer;
  attribute C_LMB_NUM_SLAVES of U0 : label is 1;
  attribute X_INTERFACE_INFO : string;
  attribute X_INTERFACE_INFO of LMB_AddrStrobe : signal is "xilinx.com:interface:lmb:1.0 LMB_Sl_0 ADDRSTROBE";
  attribute X_INTERFACE_INFO of LMB_CE : signal is "xilinx.com:interface:lmb:1.0 LMB_M CE";
  attribute X_INTERFACE_INFO of LMB_Clk : signal is "xilinx.com:signal:clock:1.0 CLK.LMB_Clk CLK";
  attribute X_INTERFACE_PARAMETER : string;
  attribute X_INTERFACE_PARAMETER of LMB_Clk : signal is "XIL_INTERFACENAME CLK.LMB_Clk, ASSOCIATED_BUSIF LMB_Sl_0:LMB_Sl_1:LMB_Sl_2:LMB_Sl_3:LMB_Sl_4:LMB_Sl_5:LMB_Sl_6:LMB_Sl_7:LMB_Sl_8:LMB_Sl_9:LMB_Sl_10:LMB_Sl_11:LMB_Sl_12:LMB_Sl_13:LMB_Sl_14:LMB_Sl_15:LMB_M, ASSOCIATED_RESET SYS_Rst, FREQ_HZ 100000000, PHASE 0.000";
  attribute X_INTERFACE_INFO of LMB_ReadStrobe : signal is "xilinx.com:interface:lmb:1.0 LMB_Sl_0 READSTROBE";
  attribute X_INTERFACE_INFO of LMB_Ready : signal is "xilinx.com:interface:lmb:1.0 LMB_M READY";
  attribute X_INTERFACE_INFO of LMB_Rst : signal is "xilinx.com:interface:lmb:1.0 LMB_Sl_0 RST, xilinx.com:interface:lmb:1.0 LMB_M RST";
  attribute X_INTERFACE_PARAMETER of LMB_Rst : signal is "XIL_INTERFACENAME LMB_Sl_0, ADDR_WIDTH 32, DATA_WIDTH 32, READ_WRITE_MODE READ_WRITE, XIL_INTERFACENAME LMB_M, ADDR_WIDTH 32, DATA_WIDTH 32, READ_WRITE_MODE READ_ONLY";
  attribute X_INTERFACE_INFO of LMB_UE : signal is "xilinx.com:interface:lmb:1.0 LMB_M UE";
  attribute X_INTERFACE_INFO of LMB_Wait : signal is "xilinx.com:interface:lmb:1.0 LMB_M WAIT";
  attribute X_INTERFACE_INFO of LMB_WriteStrobe : signal is "xilinx.com:interface:lmb:1.0 LMB_Sl_0 WRITESTROBE";
  attribute X_INTERFACE_INFO of M_AddrStrobe : signal is "xilinx.com:interface:lmb:1.0 LMB_M ADDRSTROBE";
  attribute X_INTERFACE_INFO of M_ReadStrobe : signal is "xilinx.com:interface:lmb:1.0 LMB_M READSTROBE";
  attribute X_INTERFACE_INFO of M_WriteStrobe : signal is "xilinx.com:interface:lmb:1.0 LMB_M WRITESTROBE";
  attribute X_INTERFACE_INFO of SYS_Rst : signal is "xilinx.com:signal:reset:1.0 RST.SYS_Rst RST";
  attribute X_INTERFACE_PARAMETER of SYS_Rst : signal is "XIL_INTERFACENAME RST.SYS_Rst, POLARITY ACTIVE_HIGH, TYPE INTERCONNECT";
  attribute X_INTERFACE_INFO of LMB_ABus : signal is "xilinx.com:interface:lmb:1.0 LMB_Sl_0 ABUS";
  attribute X_INTERFACE_INFO of LMB_BE : signal is "xilinx.com:interface:lmb:1.0 LMB_Sl_0 BE";
  attribute X_INTERFACE_INFO of LMB_ReadDBus : signal is "xilinx.com:interface:lmb:1.0 LMB_M READDBUS";
  attribute X_INTERFACE_INFO of LMB_WriteDBus : signal is "xilinx.com:interface:lmb:1.0 LMB_Sl_0 WRITEDBUS";
  attribute X_INTERFACE_INFO of M_ABus : signal is "xilinx.com:interface:lmb:1.0 LMB_M ABUS";
  attribute X_INTERFACE_INFO of M_BE : signal is "xilinx.com:interface:lmb:1.0 LMB_M BE";
  attribute X_INTERFACE_INFO of M_DBus : signal is "xilinx.com:interface:lmb:1.0 LMB_M WRITEDBUS";
  attribute X_INTERFACE_INFO of Sl_CE : signal is "xilinx.com:interface:lmb:1.0 LMB_Sl_0 CE";
  attribute X_INTERFACE_INFO of Sl_DBus : signal is "xilinx.com:interface:lmb:1.0 LMB_Sl_0 READDBUS";
  attribute X_INTERFACE_INFO of Sl_Ready : signal is "xilinx.com:interface:lmb:1.0 LMB_Sl_0 READY";
  attribute X_INTERFACE_INFO of Sl_UE : signal is "xilinx.com:interface:lmb:1.0 LMB_Sl_0 UE";
  attribute X_INTERFACE_INFO of Sl_Wait : signal is "xilinx.com:interface:lmb:1.0 LMB_Sl_0 WAIT";
begin
U0: entity work.\microblaze_mcs_1_lmb_v10__parameterized1\
     port map (
      LMB_ABus(0 to 31) => LMB_ABus(0 to 31),
      LMB_AddrStrobe => LMB_AddrStrobe,
      LMB_BE(0 to 3) => LMB_BE(0 to 3),
      LMB_CE => LMB_CE,
      LMB_Clk => LMB_Clk,
      LMB_ReadDBus(0 to 31) => LMB_ReadDBus(0 to 31),
      LMB_ReadStrobe => LMB_ReadStrobe,
      LMB_Ready => LMB_Ready,
      LMB_Rst => LMB_Rst,
      LMB_UE => LMB_UE,
      LMB_Wait => LMB_Wait,
      LMB_WriteDBus(0 to 31) => LMB_WriteDBus(0 to 31),
      LMB_WriteStrobe => LMB_WriteStrobe,
      M_ABus(0 to 31) => M_ABus(0 to 31),
      M_AddrStrobe => M_AddrStrobe,
      M_BE(0 to 3) => M_BE(0 to 3),
      M_DBus(0 to 31) => M_DBus(0 to 31),
      M_ReadStrobe => M_ReadStrobe,
      M_WriteStrobe => M_WriteStrobe,
      SYS_Rst => SYS_Rst,
      Sl_CE(0) => Sl_CE(0),
      Sl_DBus(0 to 31) => Sl_DBus(0 to 31),
      Sl_Ready(0) => Sl_Ready(0),
      Sl_UE(0) => Sl_UE(0),
      Sl_Wait(0) => Sl_Wait(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_bd_3c9d_0_ilmb_cntlr_0 is
  port (
    LMB_Clk : in STD_LOGIC;
    LMB_Rst : in STD_LOGIC;
    LMB_ABus : in STD_LOGIC_VECTOR ( 0 to 31 );
    LMB_WriteDBus : in STD_LOGIC_VECTOR ( 0 to 31 );
    LMB_AddrStrobe : in STD_LOGIC;
    LMB_ReadStrobe : in STD_LOGIC;
    LMB_WriteStrobe : in STD_LOGIC;
    LMB_BE : in STD_LOGIC_VECTOR ( 0 to 3 );
    Sl_DBus : out STD_LOGIC_VECTOR ( 0 to 31 );
    Sl_Ready : out STD_LOGIC;
    Sl_Wait : out STD_LOGIC;
    Sl_UE : out STD_LOGIC;
    Sl_CE : out STD_LOGIC;
    BRAM_Rst_A : out STD_LOGIC;
    BRAM_Clk_A : out STD_LOGIC;
    BRAM_Addr_A : out STD_LOGIC_VECTOR ( 0 to 31 );
    BRAM_EN_A : out STD_LOGIC;
    BRAM_WEN_A : out STD_LOGIC_VECTOR ( 0 to 3 );
    BRAM_Dout_A : out STD_LOGIC_VECTOR ( 0 to 31 );
    BRAM_Din_A : in STD_LOGIC_VECTOR ( 0 to 31 )
  );
  attribute CHECK_LICENSE_TYPE : string;
  attribute CHECK_LICENSE_TYPE of microblaze_mcs_1_bd_3c9d_0_ilmb_cntlr_0 : entity is "bd_3c9d_0_ilmb_cntlr_0,lmb_bram_if_cntlr,{}";
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of microblaze_mcs_1_bd_3c9d_0_ilmb_cntlr_0 : entity is "yes";
  attribute X_CORE_INFO : string;
  attribute X_CORE_INFO of microblaze_mcs_1_bd_3c9d_0_ilmb_cntlr_0 : entity is "lmb_bram_if_cntlr,Vivado 2018.2";
end microblaze_mcs_1_bd_3c9d_0_ilmb_cntlr_0;

architecture STRUCTURE of microblaze_mcs_1_bd_3c9d_0_ilmb_cntlr_0 is
  signal \<const0>\ : STD_LOGIC;
  signal \^bram_din_a\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^lmb_abus\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^lmb_addrstrobe\ : STD_LOGIC;
  signal \^lmb_clk\ : STD_LOGIC;
  signal \^lmb_writedbus\ : STD_LOGIC_VECTOR ( 0 to 31 );
  attribute X_INTERFACE_INFO : string;
  attribute X_INTERFACE_INFO of BRAM_Clk_A : signal is "xilinx.com:interface:bram:1.0 BRAM_PORT CLK";
  attribute X_INTERFACE_INFO of BRAM_EN_A : signal is "xilinx.com:interface:bram:1.0 BRAM_PORT EN";
  attribute X_INTERFACE_INFO of BRAM_Rst_A : signal is "xilinx.com:interface:bram:1.0 BRAM_PORT RST";
  attribute X_INTERFACE_PARAMETER : string;
  attribute X_INTERFACE_PARAMETER of BRAM_Rst_A : signal is "XIL_INTERFACENAME BRAM_PORT, MEM_SIZE 32768, MASTER_TYPE BRAM_CTRL, MEM_WIDTH 32, MEM_ECC NONE";
  attribute X_INTERFACE_INFO of LMB_AddrStrobe : signal is "xilinx.com:interface:lmb:1.0 SLMB ADDRSTROBE";
  attribute X_INTERFACE_INFO of LMB_Clk : signal is "xilinx.com:signal:clock:1.0 CLK.LMB_Clk CLK";
  attribute X_INTERFACE_PARAMETER of LMB_Clk : signal is "XIL_INTERFACENAME CLK.LMB_Clk, ASSOCIATED_BUSIF SLMB:SLMB1:SLMB2:SLMB3, ASSOCIATED_RESET LMB_Rst, FREQ_HZ 100000000, PHASE 0.000";
  attribute X_INTERFACE_INFO of LMB_ReadStrobe : signal is "xilinx.com:interface:lmb:1.0 SLMB READSTROBE";
  attribute X_INTERFACE_INFO of LMB_Rst : signal is "xilinx.com:signal:reset:1.0 RST.LMB_Rst RST";
  attribute X_INTERFACE_PARAMETER of LMB_Rst : signal is "XIL_INTERFACENAME RST.LMB_Rst, POLARITY ACTIVE_HIGH, TYPE INTERCONNECT";
  attribute X_INTERFACE_INFO of LMB_WriteStrobe : signal is "xilinx.com:interface:lmb:1.0 SLMB WRITESTROBE";
  attribute X_INTERFACE_INFO of Sl_CE : signal is "xilinx.com:interface:lmb:1.0 SLMB CE";
  attribute X_INTERFACE_INFO of Sl_Ready : signal is "xilinx.com:interface:lmb:1.0 SLMB READY";
  attribute X_INTERFACE_INFO of Sl_UE : signal is "xilinx.com:interface:lmb:1.0 SLMB UE";
  attribute X_INTERFACE_INFO of Sl_Wait : signal is "xilinx.com:interface:lmb:1.0 SLMB WAIT";
  attribute X_INTERFACE_INFO of BRAM_Addr_A : signal is "xilinx.com:interface:bram:1.0 BRAM_PORT ADDR";
  attribute X_INTERFACE_INFO of BRAM_Din_A : signal is "xilinx.com:interface:bram:1.0 BRAM_PORT DOUT";
  attribute X_INTERFACE_INFO of BRAM_Dout_A : signal is "xilinx.com:interface:bram:1.0 BRAM_PORT DIN";
  attribute X_INTERFACE_INFO of BRAM_WEN_A : signal is "xilinx.com:interface:bram:1.0 BRAM_PORT WE";
  attribute X_INTERFACE_INFO of LMB_ABus : signal is "xilinx.com:interface:lmb:1.0 SLMB ABUS";
  attribute X_INTERFACE_PARAMETER of LMB_ABus : signal is "XIL_INTERFACENAME SLMB, ADDR_WIDTH 32, DATA_WIDTH 32, READ_WRITE_MODE READ_WRITE";
  attribute X_INTERFACE_INFO of LMB_BE : signal is "xilinx.com:interface:lmb:1.0 SLMB BE";
  attribute X_INTERFACE_INFO of LMB_WriteDBus : signal is "xilinx.com:interface:lmb:1.0 SLMB WRITEDBUS";
  attribute X_INTERFACE_INFO of Sl_DBus : signal is "xilinx.com:interface:lmb:1.0 SLMB READDBUS";
begin
  BRAM_Addr_A(0 to 31) <= \^lmb_abus\(0 to 31);
  BRAM_Clk_A <= \^lmb_clk\;
  BRAM_Dout_A(0 to 31) <= \^lmb_writedbus\(0 to 31);
  BRAM_EN_A <= \^lmb_addrstrobe\;
  BRAM_Rst_A <= \<const0>\;
  Sl_CE <= \<const0>\;
  Sl_DBus(0 to 31) <= \^bram_din_a\(0 to 31);
  Sl_UE <= \<const0>\;
  Sl_Wait <= \<const0>\;
  \^bram_din_a\(0 to 31) <= BRAM_Din_A(0 to 31);
  \^lmb_abus\(0 to 31) <= LMB_ABus(0 to 31);
  \^lmb_addrstrobe\ <= LMB_AddrStrobe;
  \^lmb_clk\ <= LMB_Clk;
  \^lmb_writedbus\(0 to 31) <= LMB_WriteDBus(0 to 31);
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
U0: entity work.\microblaze_mcs_1_lmb_bram_if_cntlr__parameterized1\
     port map (
      BRAM_WEN_A(0 to 3) => BRAM_WEN_A(0 to 3),
      LMB_ABus(0) => \^lmb_abus\(0),
      LMB_AddrStrobe => \^lmb_addrstrobe\,
      LMB_BE(0 to 3) => LMB_BE(0 to 3),
      LMB_Clk => \^lmb_clk\,
      LMB_Rst => LMB_Rst,
      LMB_WriteStrobe => LMB_WriteStrobe,
      Sl_Ready => Sl_Ready
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_intr_ctrl is
  port (
    INTC_IRQ : out STD_LOGIC;
    Sl_DBus : out STD_LOGIC_VECTOR ( 3 downto 0 );
    INTC_Interrupt_Address : out STD_LOGIC_VECTOR ( 12 downto 0 );
    Clk : in STD_LOGIC;
    Rst : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 14 downto 0 );
    INTC_Processor_Ack : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 5 downto 0 );
    lmb_reg_write : in STD_LOGIC;
    lmb_reg_read : in STD_LOGIC;
    GPI1_Interrupt : in STD_LOGIC;
    \TMR_No.new_rx_data_write_reg\ : in STD_LOGIC;
    tx_data_transmitted : in STD_LOGIC;
    \TMR_No.error_interrupt_reg\ : in STD_LOGIC;
    \UART_Status_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_GPI.GPI_In_reg[2]\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \TMR_No.RX_Data_reg[2]\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    io_bus_read_data : in STD_LOGIC_VECTOR ( 3 downto 0 )
  );
end microblaze_mcs_1_intr_ctrl;

architecture STRUCTURE of microblaze_mcs_1_intr_ctrl is
  signal \All_INTR_Bits[0].Using_CIMR.CIMR_TMR_No.cimr[0]_i_2_n_0\ : STD_LOGIC;
  signal \All_INTR_Bits[0].Using_Intr.CISR_CIER_TMR_No.cisr[0]_i_1_n_0\ : STD_LOGIC;
  signal \All_INTR_Bits[0].Using_Intr.CISR_CIER_TMR_No.cisr[0]_i_2_n_0\ : STD_LOGIC;
  signal \All_INTR_Bits[0].Using_Intr.CISR_CIER_TMR_No.cisr[0]_i_3_n_0\ : STD_LOGIC;
  signal \All_INTR_Bits[0].Using_Intr.CISR_CIER_TMR_No.cisr[0]_i_4_n_0\ : STD_LOGIC;
  signal \All_INTR_Bits[11].Using_Intr.CISR_CIER_TMR_No.cisr[11]_i_1_n_0\ : STD_LOGIC;
  signal \All_INTR_Bits[11].Using_Intr.CISR_CIER_TMR_No.cisr[11]_i_2_n_0\ : STD_LOGIC;
  signal \All_INTR_Bits[1].Using_Intr.CISR_CIER_TMR_No.cisr[1]_i_1_n_0\ : STD_LOGIC;
  signal \All_INTR_Bits[1].Using_Intr.CISR_CIER_TMR_No.cisr[1]_i_2_n_0\ : STD_LOGIC;
  signal \All_INTR_Bits[2].Using_Intr.CISR_CIER_TMR_No.cisr[2]_i_1_n_0\ : STD_LOGIC;
  signal \All_INTR_Bits[2].Using_Intr.CISR_CIER_TMR_No.cisr[2]_i_2_n_0\ : STD_LOGIC;
  signal D14_out : STD_LOGIC;
  signal D17_out : STD_LOGIC;
  signal D20_out : STD_LOGIC;
  signal \FSM_sequential_Using_Fast.Fast_FSM_TMR_No.fast_state[0]_i_1_n_0\ : STD_LOGIC;
  signal \FSM_sequential_Using_Fast.Fast_FSM_TMR_No.fast_state[0]_i_2_n_0\ : STD_LOGIC;
  signal \FSM_sequential_Using_Fast.Fast_FSM_TMR_No.fast_state[1]_i_1_n_0\ : STD_LOGIC;
  signal \FSM_sequential_Using_Fast.Fast_FSM_TMR_No.fast_state[1]_i_2_n_0\ : STD_LOGIC;
  signal \FSM_sequential_Using_Fast.Fast_FSM_TMR_No.fast_state[1]_i_3_n_0\ : STD_LOGIC;
  signal INTC_CISR : STD_LOGIC_VECTOR ( 11 downto 0 );
  signal \INTC_CISR[11]_i_1_n_0\ : STD_LOGIC;
  signal INTC_WRITE_CIVAR : STD_LOGIC;
  signal \Using_Fast.Fast_FSM_TMR_No.INTC_IRQ_i_1_n_0\ : STD_LOGIC;
  signal \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[0]\ : STD_LOGIC;
  signal \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[1]\ : STD_LOGIC;
  signal \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[3]\ : STD_LOGIC;
  signal \Using_Fast.Fast_FSM_TMR_No.do_fast_ack_i_2_n_0\ : STD_LOGIC;
  signal \Using_Fast.Fast_FSM_TMR_No.do_fast_ack_i_3_n_0\ : STD_LOGIC;
  signal \Using_Fast.Fast_FSM_TMR_No.do_fast_ack_reg_n_0\ : STD_LOGIC;
  signal \Using_Fast.Using_LUTRAM.civar_reg_0_15_0_5_n_0\ : STD_LOGIC;
  signal \Using_Fast.Using_LUTRAM.civar_reg_0_15_0_5_n_1\ : STD_LOGIC;
  signal \Using_Fast.Using_LUTRAM.civar_reg_0_15_0_5_n_2\ : STD_LOGIC;
  signal \Using_Fast.Using_LUTRAM.civar_reg_0_15_0_5_n_3\ : STD_LOGIC;
  signal \Using_Fast.Using_LUTRAM.civar_reg_0_15_0_5_n_4\ : STD_LOGIC;
  signal \Using_Fast.Using_LUTRAM.civar_reg_0_15_0_5_n_5\ : STD_LOGIC;
  signal \Using_Fast.Using_LUTRAM.civar_reg_0_15_12_12_n_1\ : STD_LOGIC;
  signal \Using_Fast.Using_LUTRAM.civar_reg_0_15_6_11_n_0\ : STD_LOGIC;
  signal \Using_Fast.Using_LUTRAM.civar_reg_0_15_6_11_n_1\ : STD_LOGIC;
  signal \Using_Fast.Using_LUTRAM.civar_reg_0_15_6_11_n_2\ : STD_LOGIC;
  signal \Using_Fast.Using_LUTRAM.civar_reg_0_15_6_11_n_3\ : STD_LOGIC;
  signal \Using_Fast.Using_LUTRAM.civar_reg_0_15_6_11_n_4\ : STD_LOGIC;
  signal \Using_Fast.Using_LUTRAM.civar_reg_0_15_6_11_n_5\ : STD_LOGIC;
  signal \byte_zeros__2\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal cier : STD_LOGIC_VECTOR ( 11 downto 0 );
  signal cimr : STD_LOGIC_VECTOR ( 11 downto 0 );
  signal \cipr_rd_dff_all[2].fdr_i_n_0\ : STD_LOGIC;
  signal cisr : STD_LOGIC_VECTOR ( 11 downto 0 );
  signal civr : STD_LOGIC;
  signal do_fast_ack : STD_LOGIC;
  signal fast_state : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of fast_state : signal is "yes";
  signal intc_write_cier : STD_LOGIC;
  signal intc_write_cimr : STD_LOGIC;
  signal \mux_res[0]_0\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_Fast.Using_LUTRAM.civar_reg_0_15_0_5_DOD_UNCONNECTED\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \NLW_Using_Fast.Using_LUTRAM.civar_reg_0_15_12_12_DOA_UNCONNECTED\ : STD_LOGIC_VECTOR ( 1 to 1 );
  signal \NLW_Using_Fast.Using_LUTRAM.civar_reg_0_15_12_12_DOB_UNCONNECTED\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \NLW_Using_Fast.Using_LUTRAM.civar_reg_0_15_12_12_DOC_UNCONNECTED\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \NLW_Using_Fast.Using_LUTRAM.civar_reg_0_15_12_12_DOD_UNCONNECTED\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \NLW_Using_Fast.Using_LUTRAM.civar_reg_0_15_6_11_DOD_UNCONNECTED\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \All_INTR_Bits[0].Using_CIMR.CIMR_TMR_No.cimr[0]_i_2\ : label is "soft_lutpair9";
  attribute SOFT_HLUTNM of \All_INTR_Bits[0].Using_Intr.CISR_CIER_TMR_No.cisr[0]_i_4\ : label is "soft_lutpair9";
  attribute FSM_ENCODED_STATES : string;
  attribute FSM_ENCODED_STATES of \FSM_sequential_Using_Fast.Fast_FSM_TMR_No.fast_state_reg[0]\ : label is "interrupting:01,handling:10,idle:00,acknowledge:11";
  attribute KEEP : string;
  attribute KEEP of \FSM_sequential_Using_Fast.Fast_FSM_TMR_No.fast_state_reg[0]\ : label is "yes";
  attribute FSM_ENCODED_STATES of \FSM_sequential_Using_Fast.Fast_FSM_TMR_No.fast_state_reg[1]\ : label is "interrupting:01,handling:10,idle:00,acknowledge:11";
  attribute KEEP of \FSM_sequential_Using_Fast.Fast_FSM_TMR_No.fast_state_reg[1]\ : label is "yes";
  attribute METHODOLOGY_DRC_VIOS : string;
  attribute METHODOLOGY_DRC_VIOS of \Using_Fast.Using_LUTRAM.civar_reg_0_15_0_5\ : label is "";
  attribute METHODOLOGY_DRC_VIOS of \Using_Fast.Using_LUTRAM.civar_reg_0_15_12_12\ : label is "";
  attribute METHODOLOGY_DRC_VIOS of \Using_Fast.Using_LUTRAM.civar_reg_0_15_6_11\ : label is "";
begin
\All_INTR_Bits[0].Using_CIMR.CIMR_TMR_No.cimr[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000800"
    )
        port map (
      I0 => \All_INTR_Bits[0].Using_CIMR.CIMR_TMR_No.cimr[0]_i_2_n_0\,
      I1 => lmb_reg_write,
      I2 => Q(5),
      I3 => Q(0),
      I4 => Q(2),
      I5 => Q(3),
      O => intc_write_cimr
    );
\All_INTR_Bits[0].Using_CIMR.CIMR_TMR_No.cimr[0]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => Q(1),
      I1 => Q(4),
      O => \All_INTR_Bits[0].Using_CIMR.CIMR_TMR_No.cimr[0]_i_2_n_0\
    );
\All_INTR_Bits[0].Using_CIMR.CIMR_TMR_No.cimr_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => intc_write_cimr,
      D => \out\(0),
      Q => cimr(0),
      R => Rst
    );
\All_INTR_Bits[0].Using_Intr.CISR_CIER_TMR_No.cier[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000008000000000"
    )
        port map (
      I0 => Q(2),
      I1 => Q(3),
      I2 => lmb_reg_write,
      I3 => Q(5),
      I4 => Q(0),
      I5 => \All_INTR_Bits[0].Using_CIMR.CIMR_TMR_No.cimr[0]_i_2_n_0\,
      O => intc_write_cier
    );
\All_INTR_Bits[0].Using_Intr.CISR_CIER_TMR_No.cier_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => intc_write_cier,
      D => \out\(0),
      Q => cier(0),
      R => Rst
    );
\All_INTR_Bits[0].Using_Intr.CISR_CIER_TMR_No.cisr[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"ABBBBBBBA8888888"
    )
        port map (
      I0 => \TMR_No.error_interrupt_reg\,
      I1 => \All_INTR_Bits[0].Using_Intr.CISR_CIER_TMR_No.cisr[0]_i_2_n_0\,
      I2 => \out\(0),
      I3 => \All_INTR_Bits[0].Using_Intr.CISR_CIER_TMR_No.cisr[0]_i_3_n_0\,
      I4 => \All_INTR_Bits[0].Using_Intr.CISR_CIER_TMR_No.cisr[0]_i_4_n_0\,
      I5 => cisr(0),
      O => \All_INTR_Bits[0].Using_Intr.CISR_CIER_TMR_No.cisr[0]_i_1_n_0\
    );
\All_INTR_Bits[0].Using_Intr.CISR_CIER_TMR_No.cisr[0]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF0002"
    )
        port map (
      I0 => \Using_Fast.Fast_FSM_TMR_No.do_fast_ack_reg_n_0\,
      I1 => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[3]\,
      I2 => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[1]\,
      I3 => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[0]\,
      I4 => \TMR_No.error_interrupt_reg\,
      O => \All_INTR_Bits[0].Using_Intr.CISR_CIER_TMR_No.cisr[0]_i_2_n_0\
    );
\All_INTR_Bits[0].Using_Intr.CISR_CIER_TMR_No.cisr[0]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4000"
    )
        port map (
      I0 => Q(5),
      I1 => lmb_reg_write,
      I2 => Q(3),
      I3 => Q(2),
      O => \All_INTR_Bits[0].Using_Intr.CISR_CIER_TMR_No.cisr[0]_i_3_n_0\
    );
\All_INTR_Bits[0].Using_Intr.CISR_CIER_TMR_No.cisr[0]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"40"
    )
        port map (
      I0 => Q(4),
      I1 => Q(1),
      I2 => Q(0),
      O => \All_INTR_Bits[0].Using_Intr.CISR_CIER_TMR_No.cisr[0]_i_4_n_0\
    );
\All_INTR_Bits[0].Using_Intr.CISR_CIER_TMR_No.cisr_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \All_INTR_Bits[0].Using_Intr.CISR_CIER_TMR_No.cisr[0]_i_1_n_0\,
      Q => cisr(0),
      R => Rst
    );
\All_INTR_Bits[11].Using_CIMR.CIMR_TMR_No.cimr_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => intc_write_cimr,
      D => \out\(11),
      Q => cimr(11),
      R => Rst
    );
\All_INTR_Bits[11].Using_Intr.CISR_CIER_TMR_No.cier_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => intc_write_cier,
      D => \out\(11),
      Q => cier(11),
      R => Rst
    );
\All_INTR_Bits[11].Using_Intr.CISR_CIER_TMR_No.cisr[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"ABBBBBBBA8888888"
    )
        port map (
      I0 => GPI1_Interrupt,
      I1 => \All_INTR_Bits[11].Using_Intr.CISR_CIER_TMR_No.cisr[11]_i_2_n_0\,
      I2 => \All_INTR_Bits[0].Using_Intr.CISR_CIER_TMR_No.cisr[0]_i_3_n_0\,
      I3 => \All_INTR_Bits[0].Using_Intr.CISR_CIER_TMR_No.cisr[0]_i_4_n_0\,
      I4 => \out\(11),
      I5 => cisr(11),
      O => \All_INTR_Bits[11].Using_Intr.CISR_CIER_TMR_No.cisr[11]_i_1_n_0\
    );
\All_INTR_Bits[11].Using_Intr.CISR_CIER_TMR_No.cisr[11]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF8000"
    )
        port map (
      I0 => \Using_Fast.Fast_FSM_TMR_No.do_fast_ack_reg_n_0\,
      I1 => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[3]\,
      I2 => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[1]\,
      I3 => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[0]\,
      I4 => GPI1_Interrupt,
      O => \All_INTR_Bits[11].Using_Intr.CISR_CIER_TMR_No.cisr[11]_i_2_n_0\
    );
\All_INTR_Bits[11].Using_Intr.CISR_CIER_TMR_No.cisr_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \All_INTR_Bits[11].Using_Intr.CISR_CIER_TMR_No.cisr[11]_i_1_n_0\,
      Q => cisr(11),
      R => Rst
    );
\All_INTR_Bits[1].Using_CIMR.CIMR_TMR_No.cimr_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => intc_write_cimr,
      D => \out\(1),
      Q => cimr(1),
      R => Rst
    );
\All_INTR_Bits[1].Using_Intr.CISR_CIER_TMR_No.cier_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => intc_write_cier,
      D => \out\(1),
      Q => cier(1),
      R => Rst
    );
\All_INTR_Bits[1].Using_Intr.CISR_CIER_TMR_No.cisr[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"ABBBBBBBA8888888"
    )
        port map (
      I0 => tx_data_transmitted,
      I1 => \All_INTR_Bits[1].Using_Intr.CISR_CIER_TMR_No.cisr[1]_i_2_n_0\,
      I2 => \All_INTR_Bits[0].Using_Intr.CISR_CIER_TMR_No.cisr[0]_i_3_n_0\,
      I3 => \All_INTR_Bits[0].Using_Intr.CISR_CIER_TMR_No.cisr[0]_i_4_n_0\,
      I4 => \out\(1),
      I5 => cisr(1),
      O => \All_INTR_Bits[1].Using_Intr.CISR_CIER_TMR_No.cisr[1]_i_1_n_0\
    );
\All_INTR_Bits[1].Using_Intr.CISR_CIER_TMR_No.cisr[1]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF0200"
    )
        port map (
      I0 => \Using_Fast.Fast_FSM_TMR_No.do_fast_ack_reg_n_0\,
      I1 => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[3]\,
      I2 => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[1]\,
      I3 => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[0]\,
      I4 => tx_data_transmitted,
      O => \All_INTR_Bits[1].Using_Intr.CISR_CIER_TMR_No.cisr[1]_i_2_n_0\
    );
\All_INTR_Bits[1].Using_Intr.CISR_CIER_TMR_No.cisr_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \All_INTR_Bits[1].Using_Intr.CISR_CIER_TMR_No.cisr[1]_i_1_n_0\,
      Q => cisr(1),
      R => Rst
    );
\All_INTR_Bits[2].Using_CIMR.CIMR_TMR_No.cimr_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => intc_write_cimr,
      D => \out\(2),
      Q => cimr(2),
      R => Rst
    );
\All_INTR_Bits[2].Using_Intr.CISR_CIER_TMR_No.cier_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => intc_write_cier,
      D => \out\(2),
      Q => cier(2),
      R => Rst
    );
\All_INTR_Bits[2].Using_Intr.CISR_CIER_TMR_No.cisr[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"ABBBBBBBA8888888"
    )
        port map (
      I0 => \TMR_No.new_rx_data_write_reg\,
      I1 => \All_INTR_Bits[2].Using_Intr.CISR_CIER_TMR_No.cisr[2]_i_2_n_0\,
      I2 => \All_INTR_Bits[0].Using_Intr.CISR_CIER_TMR_No.cisr[0]_i_3_n_0\,
      I3 => \All_INTR_Bits[0].Using_Intr.CISR_CIER_TMR_No.cisr[0]_i_4_n_0\,
      I4 => \out\(2),
      I5 => cisr(2),
      O => \All_INTR_Bits[2].Using_Intr.CISR_CIER_TMR_No.cisr[2]_i_1_n_0\
    );
\All_INTR_Bits[2].Using_Intr.CISR_CIER_TMR_No.cisr[2]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF0020"
    )
        port map (
      I0 => \Using_Fast.Fast_FSM_TMR_No.do_fast_ack_reg_n_0\,
      I1 => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[3]\,
      I2 => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[1]\,
      I3 => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[0]\,
      I4 => \TMR_No.new_rx_data_write_reg\,
      O => \All_INTR_Bits[2].Using_Intr.CISR_CIER_TMR_No.cisr[2]_i_2_n_0\
    );
\All_INTR_Bits[2].Using_Intr.CISR_CIER_TMR_No.cisr_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \All_INTR_Bits[2].Using_Intr.CISR_CIER_TMR_No.cisr[2]_i_1_n_0\,
      Q => cisr(2),
      R => Rst
    );
\FSM_sequential_Using_Fast.Fast_FSM_TMR_No.fast_state[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"ABABBBABA8A888A8"
    )
        port map (
      I0 => \FSM_sequential_Using_Fast.Fast_FSM_TMR_No.fast_state[0]_i_2_n_0\,
      I1 => \FSM_sequential_Using_Fast.Fast_FSM_TMR_No.fast_state[1]_i_3_n_0\,
      I2 => civr,
      I3 => \byte_zeros__2\(0),
      I4 => D20_out,
      I5 => fast_state(0),
      O => \FSM_sequential_Using_Fast.Fast_FSM_TMR_No.fast_state[0]_i_1_n_0\
    );
\FSM_sequential_Using_Fast.Fast_FSM_TMR_No.fast_state[0]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"0B"
    )
        port map (
      I0 => INTC_Processor_Ack(1),
      I1 => fast_state(1),
      I2 => fast_state(0),
      O => \FSM_sequential_Using_Fast.Fast_FSM_TMR_No.fast_state[0]_i_2_n_0\
    );
\FSM_sequential_Using_Fast.Fast_FSM_TMR_No.fast_state[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"ABABBBABA8A888A8"
    )
        port map (
      I0 => \FSM_sequential_Using_Fast.Fast_FSM_TMR_No.fast_state[1]_i_2_n_0\,
      I1 => \FSM_sequential_Using_Fast.Fast_FSM_TMR_No.fast_state[1]_i_3_n_0\,
      I2 => civr,
      I3 => \byte_zeros__2\(0),
      I4 => D20_out,
      I5 => fast_state(1),
      O => \FSM_sequential_Using_Fast.Fast_FSM_TMR_No.fast_state[1]_i_1_n_0\
    );
\FSM_sequential_Using_Fast.Fast_FSM_TMR_No.fast_state[1]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"38"
    )
        port map (
      I0 => INTC_Processor_Ack(1),
      I1 => fast_state(1),
      I2 => fast_state(0),
      O => \FSM_sequential_Using_Fast.Fast_FSM_TMR_No.fast_state[1]_i_2_n_0\
    );
\FSM_sequential_Using_Fast.Fast_FSM_TMR_No.fast_state[1]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCA8"
    )
        port map (
      I0 => fast_state(0),
      I1 => fast_state(1),
      I2 => INTC_Processor_Ack(0),
      I3 => INTC_Processor_Ack(1),
      O => \FSM_sequential_Using_Fast.Fast_FSM_TMR_No.fast_state[1]_i_3_n_0\
    );
\FSM_sequential_Using_Fast.Fast_FSM_TMR_No.fast_state[1]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000077707770777"
    )
        port map (
      I0 => cisr(0),
      I1 => cier(0),
      I2 => cisr(1),
      I3 => cier(1),
      I4 => cier(2),
      I5 => cisr(2),
      O => \byte_zeros__2\(0)
    );
\FSM_sequential_Using_Fast.Fast_FSM_TMR_No.fast_state_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \FSM_sequential_Using_Fast.Fast_FSM_TMR_No.fast_state[0]_i_1_n_0\,
      Q => fast_state(0),
      R => Rst
    );
\FSM_sequential_Using_Fast.Fast_FSM_TMR_No.fast_state_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \FSM_sequential_Using_Fast.Fast_FSM_TMR_No.fast_state[1]_i_1_n_0\,
      Q => fast_state(1),
      R => Rst
    );
\INTC_CISR[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFFFFFFFFFF"
    )
        port map (
      I0 => Q(1),
      I1 => Q(4),
      I2 => Q(0),
      I3 => lmb_reg_read,
      I4 => Q(3),
      I5 => Q(2),
      O => \INTC_CISR[11]_i_1_n_0\
    );
\INTC_CISR_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => cisr(0),
      Q => INTC_CISR(0),
      R => \INTC_CISR[11]_i_1_n_0\
    );
\INTC_CISR_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => cisr(11),
      Q => INTC_CISR(11),
      R => \INTC_CISR[11]_i_1_n_0\
    );
\INTC_CISR_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => cisr(1),
      Q => INTC_CISR(1),
      R => \INTC_CISR[11]_i_1_n_0\
    );
\INTC_CISR_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => cisr(2),
      Q => INTC_CISR(2),
      R => \INTC_CISR[11]_i_1_n_0\
    );
\Using_Fast.Fast_FSM_TMR_No.INTC_IRQ_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"008A"
    )
        port map (
      I0 => fast_state(0),
      I1 => INTC_Processor_Ack(1),
      I2 => INTC_Processor_Ack(0),
      I3 => fast_state(1),
      O => \Using_Fast.Fast_FSM_TMR_No.INTC_IRQ_i_1_n_0\
    );
\Using_Fast.Fast_FSM_TMR_No.INTC_IRQ_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_Fast.Fast_FSM_TMR_No.INTC_IRQ_i_1_n_0\,
      Q => INTC_IRQ,
      R => Rst
    );
\Using_Fast.Fast_FSM_TMR_No.civr[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7077707070707070"
    )
        port map (
      I0 => cisr(0),
      I1 => cier(0),
      I2 => D14_out,
      I3 => D17_out,
      I4 => cisr(11),
      I5 => cier(11),
      O => \mux_res[0]_0\(0)
    );
\Using_Fast.Fast_FSM_TMR_No.civr[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000F080F080F08"
    )
        port map (
      I0 => cisr(11),
      I1 => cier(11),
      I2 => D14_out,
      I3 => D17_out,
      I4 => cier(0),
      I5 => cisr(0),
      O => \mux_res[0]_0\(1)
    );
\Using_Fast.Fast_FSM_TMR_No.civr[3]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => fast_state(0),
      I1 => fast_state(1),
      O => civr
    );
\Using_Fast.Fast_FSM_TMR_No.civr[3]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => cier(11),
      I1 => cisr(11),
      I2 => \byte_zeros__2\(0),
      O => \mux_res[0]_0\(3)
    );
\Using_Fast.Fast_FSM_TMR_No.civr_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => civr,
      D => \mux_res[0]_0\(0),
      Q => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[0]\,
      R => Rst
    );
\Using_Fast.Fast_FSM_TMR_No.civr_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => civr,
      D => \mux_res[0]_0\(1),
      Q => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[1]\,
      R => Rst
    );
\Using_Fast.Fast_FSM_TMR_No.civr_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => civr,
      D => \mux_res[0]_0\(3),
      Q => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[3]\,
      R => Rst
    );
\Using_Fast.Fast_FSM_TMR_No.do_fast_ack_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A888888888888888"
    )
        port map (
      I0 => \Using_Fast.Fast_FSM_TMR_No.do_fast_ack_i_2_n_0\,
      I1 => \Using_Fast.Fast_FSM_TMR_No.do_fast_ack_i_3_n_0\,
      I2 => cimr(11),
      I3 => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[3]\,
      I4 => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[1]\,
      I5 => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[0]\,
      O => do_fast_ack
    );
\Using_Fast.Fast_FSM_TMR_No.do_fast_ack_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0020"
    )
        port map (
      I0 => fast_state(0),
      I1 => fast_state(1),
      I2 => INTC_Processor_Ack(0),
      I3 => INTC_Processor_Ack(1),
      O => \Using_Fast.Fast_FSM_TMR_No.do_fast_ack_i_2_n_0\
    );
\Using_Fast.Fast_FSM_TMR_No.do_fast_ack_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000004F454A40"
    )
        port map (
      I0 => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[1]\,
      I1 => cimr(1),
      I2 => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[0]\,
      I3 => cimr(2),
      I4 => cimr(0),
      I5 => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[3]\,
      O => \Using_Fast.Fast_FSM_TMR_No.do_fast_ack_i_3_n_0\
    );
\Using_Fast.Fast_FSM_TMR_No.do_fast_ack_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => do_fast_ack,
      Q => \Using_Fast.Fast_FSM_TMR_No.do_fast_ack_reg_n_0\,
      R => Rst
    );
\Using_Fast.Using_LUTRAM.civar_reg_0_15_0_5\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000055555555",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000"
    )
        port map (
      ADDRA(4) => '0',
      ADDRA(3) => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[3]\,
      ADDRA(2) => '0',
      ADDRA(1) => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[1]\,
      ADDRA(0) => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[0]\,
      ADDRB(4) => '0',
      ADDRB(3) => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[3]\,
      ADDRB(2) => '0',
      ADDRB(1) => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[1]\,
      ADDRB(0) => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[0]\,
      ADDRC(4) => '0',
      ADDRC(3) => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[3]\,
      ADDRC(2) => '0',
      ADDRC(1) => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[1]\,
      ADDRC(0) => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[0]\,
      ADDRD(4) => '0',
      ADDRD(3 downto 0) => Q(3 downto 0),
      DIA(1 downto 0) => \out\(3 downto 2),
      DIB(1 downto 0) => \out\(5 downto 4),
      DIC(1 downto 0) => \out\(7 downto 6),
      DID(1 downto 0) => B"00",
      DOA(1) => \Using_Fast.Using_LUTRAM.civar_reg_0_15_0_5_n_0\,
      DOA(0) => \Using_Fast.Using_LUTRAM.civar_reg_0_15_0_5_n_1\,
      DOB(1) => \Using_Fast.Using_LUTRAM.civar_reg_0_15_0_5_n_2\,
      DOB(0) => \Using_Fast.Using_LUTRAM.civar_reg_0_15_0_5_n_3\,
      DOC(1) => \Using_Fast.Using_LUTRAM.civar_reg_0_15_0_5_n_4\,
      DOC(0) => \Using_Fast.Using_LUTRAM.civar_reg_0_15_0_5_n_5\,
      DOD(1 downto 0) => \NLW_Using_Fast.Using_LUTRAM.civar_reg_0_15_0_5_DOD_UNCONNECTED\(1 downto 0),
      WCLK => Clk,
      WE => INTC_WRITE_CIVAR
    );
\Using_Fast.Using_LUTRAM.civar_reg_0_15_0_5_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => Q(5),
      I1 => lmb_reg_write,
      O => INTC_WRITE_CIVAR
    );
\Using_Fast.Using_LUTRAM.civar_reg_0_15_12_12\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000"
    )
        port map (
      ADDRA(4) => '0',
      ADDRA(3) => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[3]\,
      ADDRA(2) => '0',
      ADDRA(1) => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[1]\,
      ADDRA(0) => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[0]\,
      ADDRB(4) => '0',
      ADDRB(3) => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[3]\,
      ADDRB(2) => '0',
      ADDRB(1) => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[1]\,
      ADDRB(0) => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[0]\,
      ADDRC(4) => '0',
      ADDRC(3) => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[3]\,
      ADDRC(2) => '0',
      ADDRC(1) => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[1]\,
      ADDRC(0) => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[0]\,
      ADDRD(4) => '0',
      ADDRD(3 downto 0) => Q(3 downto 0),
      DIA(1) => '0',
      DIA(0) => \out\(14),
      DIB(1 downto 0) => B"00",
      DIC(1 downto 0) => B"00",
      DID(1 downto 0) => B"00",
      DOA(1) => \NLW_Using_Fast.Using_LUTRAM.civar_reg_0_15_12_12_DOA_UNCONNECTED\(1),
      DOA(0) => \Using_Fast.Using_LUTRAM.civar_reg_0_15_12_12_n_1\,
      DOB(1 downto 0) => \NLW_Using_Fast.Using_LUTRAM.civar_reg_0_15_12_12_DOB_UNCONNECTED\(1 downto 0),
      DOC(1 downto 0) => \NLW_Using_Fast.Using_LUTRAM.civar_reg_0_15_12_12_DOC_UNCONNECTED\(1 downto 0),
      DOD(1 downto 0) => \NLW_Using_Fast.Using_LUTRAM.civar_reg_0_15_12_12_DOD_UNCONNECTED\(1 downto 0),
      WCLK => Clk,
      WE => INTC_WRITE_CIVAR
    );
\Using_Fast.Using_LUTRAM.civar_reg_0_15_6_11\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000"
    )
        port map (
      ADDRA(4) => '0',
      ADDRA(3) => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[3]\,
      ADDRA(2) => '0',
      ADDRA(1) => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[1]\,
      ADDRA(0) => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[0]\,
      ADDRB(4) => '0',
      ADDRB(3) => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[3]\,
      ADDRB(2) => '0',
      ADDRB(1) => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[1]\,
      ADDRB(0) => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[0]\,
      ADDRC(4) => '0',
      ADDRC(3) => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[3]\,
      ADDRC(2) => '0',
      ADDRC(1) => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[1]\,
      ADDRC(0) => \Using_Fast.Fast_FSM_TMR_No.civr_reg_n_0_[0]\,
      ADDRD(4) => '0',
      ADDRD(3 downto 0) => Q(3 downto 0),
      DIA(1 downto 0) => \out\(9 downto 8),
      DIB(1 downto 0) => \out\(11 downto 10),
      DIC(1 downto 0) => \out\(13 downto 12),
      DID(1 downto 0) => B"00",
      DOA(1) => \Using_Fast.Using_LUTRAM.civar_reg_0_15_6_11_n_0\,
      DOA(0) => \Using_Fast.Using_LUTRAM.civar_reg_0_15_6_11_n_1\,
      DOB(1) => \Using_Fast.Using_LUTRAM.civar_reg_0_15_6_11_n_2\,
      DOB(0) => \Using_Fast.Using_LUTRAM.civar_reg_0_15_6_11_n_3\,
      DOC(1) => \Using_Fast.Using_LUTRAM.civar_reg_0_15_6_11_n_4\,
      DOC(0) => \Using_Fast.Using_LUTRAM.civar_reg_0_15_6_11_n_5\,
      DOD(1 downto 0) => \NLW_Using_Fast.Using_LUTRAM.civar_reg_0_15_6_11_DOD_UNCONNECTED\(1 downto 0),
      WCLK => Clk,
      WE => INTC_WRITE_CIVAR
    );
\Using_Fast.Using_LUTRAM.intr_addr_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_Fast.Using_LUTRAM.civar_reg_0_15_0_5_n_1\,
      Q => INTC_Interrupt_Address(0),
      R => '0'
    );
\Using_Fast.Using_LUTRAM.intr_addr_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_Fast.Using_LUTRAM.civar_reg_0_15_6_11_n_5\,
      Q => INTC_Interrupt_Address(10),
      R => '0'
    );
\Using_Fast.Using_LUTRAM.intr_addr_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_Fast.Using_LUTRAM.civar_reg_0_15_6_11_n_4\,
      Q => INTC_Interrupt_Address(11),
      R => '0'
    );
\Using_Fast.Using_LUTRAM.intr_addr_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_Fast.Using_LUTRAM.civar_reg_0_15_12_12_n_1\,
      Q => INTC_Interrupt_Address(12),
      R => '0'
    );
\Using_Fast.Using_LUTRAM.intr_addr_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_Fast.Using_LUTRAM.civar_reg_0_15_0_5_n_0\,
      Q => INTC_Interrupt_Address(1),
      R => '0'
    );
\Using_Fast.Using_LUTRAM.intr_addr_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_Fast.Using_LUTRAM.civar_reg_0_15_0_5_n_3\,
      Q => INTC_Interrupt_Address(2),
      R => '0'
    );
\Using_Fast.Using_LUTRAM.intr_addr_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_Fast.Using_LUTRAM.civar_reg_0_15_0_5_n_2\,
      Q => INTC_Interrupt_Address(3),
      R => '0'
    );
\Using_Fast.Using_LUTRAM.intr_addr_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_Fast.Using_LUTRAM.civar_reg_0_15_0_5_n_5\,
      Q => INTC_Interrupt_Address(4),
      R => '0'
    );
\Using_Fast.Using_LUTRAM.intr_addr_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_Fast.Using_LUTRAM.civar_reg_0_15_0_5_n_4\,
      Q => INTC_Interrupt_Address(5),
      R => '0'
    );
\Using_Fast.Using_LUTRAM.intr_addr_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_Fast.Using_LUTRAM.civar_reg_0_15_6_11_n_1\,
      Q => INTC_Interrupt_Address(6),
      R => '0'
    );
\Using_Fast.Using_LUTRAM.intr_addr_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_Fast.Using_LUTRAM.civar_reg_0_15_6_11_n_0\,
      Q => INTC_Interrupt_Address(7),
      R => '0'
    );
\Using_Fast.Using_LUTRAM.intr_addr_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_Fast.Using_LUTRAM.civar_reg_0_15_6_11_n_3\,
      Q => INTC_Interrupt_Address(8),
      R => '0'
    );
\Using_Fast.Using_LUTRAM.intr_addr_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_Fast.Using_LUTRAM.civar_reg_0_15_6_11_n_2\,
      Q => INTC_Interrupt_Address(9),
      R => '0'
    );
\cipr_rd_dff_all[0].fdr_i\: entity work.microblaze_mcs_1_iomodule_v3_1_3_MB_FDR
     port map (
      Clk => Clk,
      Q(0) => INTC_CISR(0),
      Sl_DBus(0) => Sl_DBus(0),
      \TMR_No.RX_Data_reg[0]\(0) => \TMR_No.RX_Data_reg[2]\(0),
      \UART_Status_reg[0]\(0) => \UART_Status_reg[0]\(0),
      \Using_GPI.GPI_In_reg[0]\(0) => \Using_GPI.GPI_In_reg[2]\(0),
      cier(0) => cier(0),
      cisr(0) => cisr(0),
      io_bus_read_data(0) => io_bus_read_data(0),
      lmb_reg_read_reg => \cipr_rd_dff_all[2].fdr_i_n_0\
    );
\cipr_rd_dff_all[11].fdr_i\: entity work.microblaze_mcs_1_iomodule_v3_1_3_MB_FDR_767
     port map (
      Clk => Clk,
      D20_out => D20_out,
      Q(0) => INTC_CISR(11),
      Sl_DBus(0) => Sl_DBus(3),
      cier(0) => cier(11),
      cisr(0) => cisr(11),
      io_bus_read_data(0) => io_bus_read_data(3),
      lmb_reg_read_reg => \cipr_rd_dff_all[2].fdr_i_n_0\
    );
\cipr_rd_dff_all[1].fdr_i\: entity work.microblaze_mcs_1_iomodule_v3_1_3_MB_FDR_768
     port map (
      Clk => Clk,
      D14_out => D14_out,
      Q(0) => INTC_CISR(1),
      Sl_DBus(0) => Sl_DBus(1),
      \TMR_No.RX_Data_reg[1]\(0) => \TMR_No.RX_Data_reg[2]\(1),
      \Using_GPI.GPI_In_reg[1]\(0) => \Using_GPI.GPI_In_reg[2]\(1),
      cier(0) => cier(1),
      cisr(0) => cisr(1),
      io_bus_read_data(0) => io_bus_read_data(1),
      lmb_reg_read_reg => \cipr_rd_dff_all[2].fdr_i_n_0\
    );
\cipr_rd_dff_all[2].fdr_i\: entity work.microblaze_mcs_1_iomodule_v3_1_3_MB_FDR_769
     port map (
      Clk => Clk,
      D17_out => D17_out,
      \INTC_CISR_reg[2]\(0) => INTC_CISR(2),
      Q(4 downto 0) => Q(4 downto 0),
      Sl_DBus(0) => Sl_DBus(2),
      \TMR_No.RX_Data_reg[2]\(0) => \TMR_No.RX_Data_reg[2]\(2),
      \Using_FPGA.Native_0\ => \cipr_rd_dff_all[2].fdr_i_n_0\,
      \Using_GPI.GPI_In_reg[2]\(0) => \Using_GPI.GPI_In_reg[2]\(2),
      cier(0) => cier(2),
      cisr(0) => cisr(2),
      io_bus_read_data(0) => io_bus_read_data(2),
      lmb_reg_read => lmb_reg_read
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_lpf is
  port (
    lpf_int : out STD_LOGIC;
    slowest_sync_clk : in STD_LOGIC;
    dcm_locked : in STD_LOGIC;
    ext_reset_in : in STD_LOGIC;
    mb_debug_sys_rst : in STD_LOGIC;
    aux_reset_in : in STD_LOGIC
  );
end microblaze_mcs_1_lpf;

architecture STRUCTURE of microblaze_mcs_1_lpf is
  signal \ACTIVE_HIGH_EXT.ACT_HI_EXT_n_0\ : STD_LOGIC;
  signal \ACTIVE_LOW_AUX.ACT_LO_AUX_n_0\ : STD_LOGIC;
  signal Q : STD_LOGIC;
  signal asr_lpf : STD_LOGIC_VECTOR ( 0 to 0 );
  signal lpf_asr : STD_LOGIC;
  signal lpf_exr : STD_LOGIC;
  signal \lpf_int0__0\ : STD_LOGIC;
  signal p_1_in : STD_LOGIC;
  signal p_2_in : STD_LOGIC;
  signal p_3_in1_in : STD_LOGIC;
  signal p_3_out : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of POR_SRL_I : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of POR_SRL_I : label is "SRL16";
  attribute srl_name : string;
  attribute srl_name of POR_SRL_I : label is "inst/rst_0/U0/\EXT_LPF/POR_SRL_I ";
begin
\ACTIVE_HIGH_EXT.ACT_HI_EXT\: entity work.microblaze_mcs_1_cdc_sync
     port map (
      ext_reset_in => ext_reset_in,
      lpf_exr => lpf_exr,
      lpf_exr_reg => \ACTIVE_HIGH_EXT.ACT_HI_EXT_n_0\,
      mb_debug_sys_rst => mb_debug_sys_rst,
      p_3_out(2 downto 0) => p_3_out(2 downto 0),
      scndry_out => p_3_out(3),
      slowest_sync_clk => slowest_sync_clk
    );
\ACTIVE_LOW_AUX.ACT_LO_AUX\: entity work.microblaze_mcs_1_cdc_sync_0
     port map (
      asr_lpf(0) => asr_lpf(0),
      aux_reset_in => aux_reset_in,
      lpf_asr => lpf_asr,
      lpf_asr_reg => \ACTIVE_LOW_AUX.ACT_LO_AUX_n_0\,
      p_1_in => p_1_in,
      p_2_in => p_2_in,
      scndry_out => p_3_in1_in,
      slowest_sync_clk => slowest_sync_clk
    );
\AUX_LPF[1].asr_lpf_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => p_3_in1_in,
      Q => p_2_in,
      R => '0'
    );
\AUX_LPF[2].asr_lpf_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => p_2_in,
      Q => p_1_in,
      R => '0'
    );
\AUX_LPF[3].asr_lpf_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => p_1_in,
      Q => asr_lpf(0),
      R => '0'
    );
\EXT_LPF[1].exr_lpf_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => p_3_out(3),
      Q => p_3_out(2),
      R => '0'
    );
\EXT_LPF[2].exr_lpf_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => p_3_out(2),
      Q => p_3_out(1),
      R => '0'
    );
\EXT_LPF[3].exr_lpf_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => p_3_out(1),
      Q => p_3_out(0),
      R => '0'
    );
POR_SRL_I: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"FFFF"
    )
        port map (
      A0 => '1',
      A1 => '1',
      A2 => '1',
      A3 => '1',
      CE => '1',
      CLK => slowest_sync_clk,
      D => '0',
      Q => Q
    );
lpf_asr_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => \ACTIVE_LOW_AUX.ACT_LO_AUX_n_0\,
      Q => lpf_asr,
      R => '0'
    );
lpf_exr_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => \ACTIVE_HIGH_EXT.ACT_HI_EXT_n_0\,
      Q => lpf_exr,
      R => '0'
    );
lpf_int0: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFD"
    )
        port map (
      I0 => dcm_locked,
      I1 => lpf_exr,
      I2 => lpf_asr,
      I3 => Q,
      O => \lpf_int0__0\
    );
lpf_int_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => \lpf_int0__0\,
      Q => lpf_int,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_sequence_psr is
  port (
    MB_out : out STD_LOGIC;
    Bsr_out : out STD_LOGIC;
    Pr_out : out STD_LOGIC;
    \ACTIVE_LOW_BSR_OUT_DFF[0].FDRE_BSR_N\ : out STD_LOGIC;
    \ACTIVE_LOW_PR_OUT_DFF[0].FDRE_PER_N\ : out STD_LOGIC;
    lpf_int : in STD_LOGIC;
    slowest_sync_clk : in STD_LOGIC
  );
end microblaze_mcs_1_sequence_psr;

architecture STRUCTURE of microblaze_mcs_1_sequence_psr is
  signal \^bsr_out\ : STD_LOGIC;
  signal Core_i_1_n_0 : STD_LOGIC;
  signal \^mb_out\ : STD_LOGIC;
  signal \^pr_out\ : STD_LOGIC;
  signal \bsr_dec_reg_n_0_[0]\ : STD_LOGIC;
  signal \bsr_dec_reg_n_0_[2]\ : STD_LOGIC;
  signal bsr_i_1_n_0 : STD_LOGIC;
  signal \core_dec[0]_i_1_n_0\ : STD_LOGIC;
  signal \core_dec[2]_i_1_n_0\ : STD_LOGIC;
  signal \core_dec_reg_n_0_[0]\ : STD_LOGIC;
  signal \core_dec_reg_n_0_[1]\ : STD_LOGIC;
  signal from_sys_i_1_n_0 : STD_LOGIC;
  signal p_0_in : STD_LOGIC;
  signal p_3_out : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal p_5_out : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal \pr_dec0__0\ : STD_LOGIC;
  signal \pr_dec_reg_n_0_[0]\ : STD_LOGIC;
  signal \pr_dec_reg_n_0_[2]\ : STD_LOGIC;
  signal pr_i_1_n_0 : STD_LOGIC;
  signal seq_clr : STD_LOGIC;
  signal seq_cnt : STD_LOGIC_VECTOR ( 5 downto 0 );
  signal seq_cnt_en : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \ACTIVE_LOW_BSR_OUT_DFF[0].FDRE_BSR_N_i_1\ : label is "soft_lutpair48";
  attribute SOFT_HLUTNM of \ACTIVE_LOW_PR_OUT_DFF[0].FDRE_PER_N_i_1\ : label is "soft_lutpair47";
  attribute SOFT_HLUTNM of Core_i_1 : label is "soft_lutpair46";
  attribute SOFT_HLUTNM of \bsr_dec[2]_i_1\ : label is "soft_lutpair49";
  attribute SOFT_HLUTNM of bsr_i_1 : label is "soft_lutpair48";
  attribute SOFT_HLUTNM of \core_dec[0]_i_1\ : label is "soft_lutpair45";
  attribute SOFT_HLUTNM of \core_dec[2]_i_1\ : label is "soft_lutpair49";
  attribute SOFT_HLUTNM of from_sys_i_1 : label is "soft_lutpair46";
  attribute SOFT_HLUTNM of \pr_dec[0]_i_1\ : label is "soft_lutpair45";
  attribute SOFT_HLUTNM of pr_i_1 : label is "soft_lutpair47";
begin
  Bsr_out <= \^bsr_out\;
  MB_out <= \^mb_out\;
  Pr_out <= \^pr_out\;
\ACTIVE_LOW_BSR_OUT_DFF[0].FDRE_BSR_N_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^bsr_out\,
      O => \ACTIVE_LOW_BSR_OUT_DFF[0].FDRE_BSR_N\
    );
\ACTIVE_LOW_PR_OUT_DFF[0].FDRE_PER_N_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^pr_out\,
      O => \ACTIVE_LOW_PR_OUT_DFF[0].FDRE_PER_N\
    );
Core_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^mb_out\,
      I1 => p_0_in,
      O => Core_i_1_n_0
    );
Core_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => Core_i_1_n_0,
      Q => \^mb_out\,
      S => lpf_int
    );
SEQ_COUNTER: entity work.microblaze_mcs_1_upcnt_n
     port map (
      Q(5 downto 0) => seq_cnt(5 downto 0),
      seq_clr => seq_clr,
      seq_cnt_en => seq_cnt_en,
      slowest_sync_clk => slowest_sync_clk
    );
\bsr_dec[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0090"
    )
        port map (
      I0 => seq_cnt_en,
      I1 => seq_cnt(4),
      I2 => seq_cnt(3),
      I3 => seq_cnt(5),
      O => p_5_out(0)
    );
\bsr_dec[2]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \core_dec_reg_n_0_[1]\,
      I1 => \bsr_dec_reg_n_0_[0]\,
      O => p_5_out(2)
    );
\bsr_dec_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => p_5_out(0),
      Q => \bsr_dec_reg_n_0_[0]\,
      R => '0'
    );
\bsr_dec_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => p_5_out(2),
      Q => \bsr_dec_reg_n_0_[2]\,
      R => '0'
    );
bsr_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^bsr_out\,
      I1 => \bsr_dec_reg_n_0_[2]\,
      O => bsr_i_1_n_0
    );
bsr_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => bsr_i_1_n_0,
      Q => \^bsr_out\,
      S => lpf_int
    );
\core_dec[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9000"
    )
        port map (
      I0 => seq_cnt_en,
      I1 => seq_cnt(4),
      I2 => seq_cnt(3),
      I3 => seq_cnt(5),
      O => \core_dec[0]_i_1_n_0\
    );
\core_dec[2]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \core_dec_reg_n_0_[1]\,
      I1 => \core_dec_reg_n_0_[0]\,
      O => \core_dec[2]_i_1_n_0\
    );
\core_dec_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => \core_dec[0]_i_1_n_0\,
      Q => \core_dec_reg_n_0_[0]\,
      R => '0'
    );
\core_dec_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => \pr_dec0__0\,
      Q => \core_dec_reg_n_0_[1]\,
      R => '0'
    );
\core_dec_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => \core_dec[2]_i_1_n_0\,
      Q => p_0_in,
      R => '0'
    );
from_sys_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^mb_out\,
      I1 => seq_cnt_en,
      O => from_sys_i_1_n_0
    );
from_sys_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => from_sys_i_1_n_0,
      Q => seq_cnt_en,
      S => lpf_int
    );
pr_dec0: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0018"
    )
        port map (
      I0 => seq_cnt_en,
      I1 => seq_cnt(0),
      I2 => seq_cnt(2),
      I3 => seq_cnt(1),
      O => \pr_dec0__0\
    );
\pr_dec[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0480"
    )
        port map (
      I0 => seq_cnt_en,
      I1 => seq_cnt(3),
      I2 => seq_cnt(5),
      I3 => seq_cnt(4),
      O => p_3_out(0)
    );
\pr_dec[2]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \core_dec_reg_n_0_[1]\,
      I1 => \pr_dec_reg_n_0_[0]\,
      O => p_3_out(2)
    );
\pr_dec_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => p_3_out(0),
      Q => \pr_dec_reg_n_0_[0]\,
      R => '0'
    );
\pr_dec_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => p_3_out(2),
      Q => \pr_dec_reg_n_0_[2]\,
      R => '0'
    );
pr_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^pr_out\,
      I1 => \pr_dec_reg_n_0_[2]\,
      O => pr_i_1_n_0
    );
pr_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => pr_i_1_n_0,
      Q => \^pr_out\,
      S => lpf_int
    );
seq_clr_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => '1',
      Q => seq_clr,
      R => lpf_int
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_ALU_Bit is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
end microblaze_mcs_1_ALU_Bit;

architecture STRUCTURE of microblaze_mcs_1_ALU_Bit is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized2_751\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_752
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_ALU_Bit_662 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_ALU_Bit_662 : entity is "ALU_Bit";
end microblaze_mcs_1_ALU_Bit_662;

architecture STRUCTURE of microblaze_mcs_1_ALU_Bit_662 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized2_749\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_750
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_ALU_Bit_663 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_ALU_Bit_663 : entity is "ALU_Bit";
end microblaze_mcs_1_ALU_Bit_663;

architecture STRUCTURE of microblaze_mcs_1_ALU_Bit_663 is
  signal alu_AddSub : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized2_747\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_748
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_ALU_Bit_664 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_ALU_Bit_664 : entity is "ALU_Bit";
end microblaze_mcs_1_ALU_Bit_664;

architecture STRUCTURE of microblaze_mcs_1_ALU_Bit_664 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized2_745\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_746
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_ALU_Bit_665 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_ALU_Bit_665 : entity is "ALU_Bit";
end microblaze_mcs_1_ALU_Bit_665;

architecture STRUCTURE of microblaze_mcs_1_ALU_Bit_665 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized2_743\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_744
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_ALU_Bit_666 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_ALU_Bit_666 : entity is "ALU_Bit";
end microblaze_mcs_1_ALU_Bit_666;

architecture STRUCTURE of microblaze_mcs_1_ALU_Bit_666 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized2_741\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_742
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_ALU_Bit_667 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_ALU_Bit_667 : entity is "ALU_Bit";
end microblaze_mcs_1_ALU_Bit_667;

architecture STRUCTURE of microblaze_mcs_1_ALU_Bit_667 is
  signal alu_AddSub : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized2_739\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_740
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_ALU_Bit_668 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_ALU_Bit_668 : entity is "ALU_Bit";
end microblaze_mcs_1_ALU_Bit_668;

architecture STRUCTURE of microblaze_mcs_1_ALU_Bit_668 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized2_737\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_738
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_ALU_Bit_669 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_ALU_Bit_669 : entity is "ALU_Bit";
end microblaze_mcs_1_ALU_Bit_669;

architecture STRUCTURE of microblaze_mcs_1_ALU_Bit_669 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized2_735\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_736
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_ALU_Bit_670 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_ALU_Bit_670 : entity is "ALU_Bit";
end microblaze_mcs_1_ALU_Bit_670;

architecture STRUCTURE of microblaze_mcs_1_ALU_Bit_670 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized2_733\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_734
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_ALU_Bit_671 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_ALU_Bit_671 : entity is "ALU_Bit";
end microblaze_mcs_1_ALU_Bit_671;

architecture STRUCTURE of microblaze_mcs_1_ALU_Bit_671 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized2_731\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_732
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_ALU_Bit_672 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_ALU_Bit_672 : entity is "ALU_Bit";
end microblaze_mcs_1_ALU_Bit_672;

architecture STRUCTURE of microblaze_mcs_1_ALU_Bit_672 is
  signal alu_AddSub : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized2_729\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_730
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_ALU_Bit_673 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_ALU_Bit_673 : entity is "ALU_Bit";
end microblaze_mcs_1_ALU_Bit_673;

architecture STRUCTURE of microblaze_mcs_1_ALU_Bit_673 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized2_727\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_728
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_ALU_Bit_674 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_ALU_Bit_674 : entity is "ALU_Bit";
end microblaze_mcs_1_ALU_Bit_674;

architecture STRUCTURE of microblaze_mcs_1_ALU_Bit_674 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized2_725\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_726
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_ALU_Bit_675 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_ALU_Bit_675 : entity is "ALU_Bit";
end microblaze_mcs_1_ALU_Bit_675;

architecture STRUCTURE of microblaze_mcs_1_ALU_Bit_675 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized2_723\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_724
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_ALU_Bit_676 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_ALU_Bit_676 : entity is "ALU_Bit";
end microblaze_mcs_1_ALU_Bit_676;

architecture STRUCTURE of microblaze_mcs_1_ALU_Bit_676 is
  signal alu_AddSub : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized2_721\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_722
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_ALU_Bit_677 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_ALU_Bit_677 : entity is "ALU_Bit";
end microblaze_mcs_1_ALU_Bit_677;

architecture STRUCTURE of microblaze_mcs_1_ALU_Bit_677 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized2_719\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_720
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_ALU_Bit_678 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_ALU_Bit_678 : entity is "ALU_Bit";
end microblaze_mcs_1_ALU_Bit_678;

architecture STRUCTURE of microblaze_mcs_1_ALU_Bit_678 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized2_717\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_718
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_ALU_Bit_679 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_ALU_Bit_679 : entity is "ALU_Bit";
end microblaze_mcs_1_ALU_Bit_679;

architecture STRUCTURE of microblaze_mcs_1_ALU_Bit_679 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized2_715\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_716
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_ALU_Bit_680 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    Op1_Shift : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_ALU_Bit_680 : entity is "ALU_Bit";
end microblaze_mcs_1_ALU_Bit_680;

architecture STRUCTURE of microblaze_mcs_1_ALU_Bit_680 is
  signal alu_AddSub : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized2_713\
     port map (
      DI => op2_is_1,
      Op1_Shift => Op1_Shift,
      S => alu_AddSub,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      alu_Op(0 to 1) => alu_Op(0 to 1)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_714
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_ALU_Bit_681 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_ALU_Bit_681 : entity is "ALU_Bit";
end microblaze_mcs_1_ALU_Bit_681;

architecture STRUCTURE of microblaze_mcs_1_ALU_Bit_681 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized2_711\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      alu_Op(0 to 1) => alu_Op(0 to 1)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_712
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_ALU_Bit_682 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_ALU_Bit_682 : entity is "ALU_Bit";
end microblaze_mcs_1_ALU_Bit_682;

architecture STRUCTURE of microblaze_mcs_1_ALU_Bit_682 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized2_709\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_710
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_ALU_Bit_683 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_ALU_Bit_683 : entity is "ALU_Bit";
end microblaze_mcs_1_ALU_Bit_683;

architecture STRUCTURE of microblaze_mcs_1_ALU_Bit_683 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized2_707\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_1\,
      alu_Op(0 to 1) => alu_Op(0 to 1)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_708
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_ALU_Bit_684 is
  port (
    EX_CarryOut : out STD_LOGIC;
    O : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC;
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    EX_Op1 : in STD_LOGIC;
    EX_CarryIn : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_ALU_Bit_684 : entity is "ALU_Bit";
end microblaze_mcs_1_ALU_Bit_684;

architecture STRUCTURE of microblaze_mcs_1_ALU_Bit_684 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized2_705\
     port map (
      DI => op2_is_1,
      EX_Op1 => EX_Op1,
      EX_Op2 => EX_Op2,
      S => alu_AddSub,
      alu_Op(0 to 1) => alu_Op(0 to 1)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_706
     port map (
      DI => op2_is_1,
      EX_CarryIn => EX_CarryIn,
      EX_CarryOut => EX_CarryOut,
      O => O,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_ALU_Bit_685 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_ALU_Bit_685 : entity is "ALU_Bit";
end microblaze_mcs_1_ALU_Bit_685;

architecture STRUCTURE of microblaze_mcs_1_ALU_Bit_685 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized2_703\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_704
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_ALU_Bit_686 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_ALU_Bit_686 : entity is "ALU_Bit";
end microblaze_mcs_1_ALU_Bit_686;

architecture STRUCTURE of microblaze_mcs_1_ALU_Bit_686 is
  signal alu_AddSub : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized2_701\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_702
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_ALU_Bit_687 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_ALU_Bit_687 : entity is "ALU_Bit";
end microblaze_mcs_1_ALU_Bit_687;

architecture STRUCTURE of microblaze_mcs_1_ALU_Bit_687 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized2_699\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_700
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_ALU_Bit_688 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_ALU_Bit_688 : entity is "ALU_Bit";
end microblaze_mcs_1_ALU_Bit_688;

architecture STRUCTURE of microblaze_mcs_1_ALU_Bit_688 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized2_697\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_698
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_ALU_Bit_689 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_ALU_Bit_689 : entity is "ALU_Bit";
end microblaze_mcs_1_ALU_Bit_689;

architecture STRUCTURE of microblaze_mcs_1_ALU_Bit_689 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized2_695\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_696
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_ALU_Bit_690 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_ALU_Bit_690 : entity is "ALU_Bit";
end microblaze_mcs_1_ALU_Bit_690;

architecture STRUCTURE of microblaze_mcs_1_ALU_Bit_690 is
  signal alu_AddSub : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized2_693\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_694
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_ALU_Bit_691 is
  port (
    EX_CarryOut : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    EX_CarryIn : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_ALU_Bit_691 : entity is "ALU_Bit";
end microblaze_mcs_1_ALU_Bit_691;

architecture STRUCTURE of microblaze_mcs_1_ALU_Bit_691 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized2\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_692
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryIn => EX_CarryIn,
      EX_CarryOut => EX_CarryOut,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_ALU_Bit__parameterized2\ is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Unsigned_Op : in STD_LOGIC;
    LO : in STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    Op1_Logic : in STD_LOGIC;
    compare_Instr : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_ALU_Bit__parameterized2\ : entity is "ALU_Bit";
end \microblaze_mcs_1_ALU_Bit__parameterized2\;

architecture STRUCTURE of \microblaze_mcs_1_ALU_Bit__parameterized2\ is
  signal S : STD_LOGIC;
  signal alu_AddSub : STD_LOGIC;
  signal alu_AddSub_1 : STD_LOGIC;
  signal invert_result : STD_LOGIC;
  signal \^lopt\ : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal maintain_sign_n_rep_n_0 : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= lopt_5;
\Last_Bit.I_ALU_LUT_2\: entity work.\microblaze_mcs_1_MB_LUT4__parameterized13\
     port map (
      Compare_Instr_reg => S,
      S => alu_AddSub,
      alu_AddSub_1 => alu_AddSub_1,
      alu_Op(0) => alu_Op(0),
      op2_C(0) => op2_C(0)
    );
\Last_Bit.I_ALU_LUT_V5\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6
     port map (
      Op1_Logic => Op1_Logic,
      alu_AddSub_1 => alu_AddSub_1,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Last_Bit.MULT_AND_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MULT_AND_753
     port map (
      DI => op2_is_1,
      alu_Op(0) => alu_Op(0),
      op2_C(0) => op2_C(0)
    );
\Last_Bit.MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_754
     port map (
      CI => invert_result,
      D(0) => D(0),
      DI => op2_is_1,
      S => alu_AddSub,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => \^lopt\,
      lopt_1 => lopt_7
    );
\Last_Bit.Pre_MUXCY_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_755
     port map (
      CI => invert_result,
      Compare_Instr_reg => maintain_sign_n_rep_n_0,
      LO => LO,
      Unsigned_Op => Unsigned_Op,
      lopt => \^lopt\,
      lopt_1 => op2_is_1,
      lopt_2 => alu_AddSub,
      lopt_3 => \^lopt_1\,
      lopt_4 => \^lopt_2\,
      lopt_5 => \^lopt_3\,
      lopt_6 => \^lopt_4\,
      lopt_7 => \^lopt_5\,
      lopt_8 => lopt_6,
      lopt_9 => lopt_7
    );
maintain_sign_n: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D7"
    )
        port map (
      I0 => compare_Instr,
      I1 => Op1_Logic,
      I2 => op2_C(0),
      O => S
    );
maintain_sign_n_rep: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D7"
    )
        port map (
      I0 => compare_Instr,
      I1 => Op1_Logic,
      I2 => op2_C(0),
      O => maintain_sign_n_rep_n_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MSR_Reg_Bit is
  port (
    MSR : out STD_LOGIC_VECTOR ( 0 to 0 );
    I3_1 : out STD_LOGIC;
    MSR_Rst : in STD_LOGIC;
    \Using_FPGA.set_BIP_I_reg\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    PC_OF : in STD_LOGIC
  );
end microblaze_mcs_1_MSR_Reg_Bit;

architecture STRUCTURE of microblaze_mcs_1_MSR_Reg_Bit is
begin
MSR_I: entity work.microblaze_mcs_1_MB_FDRSE_660
     port map (
      Clk => Clk,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I3_1 => I3_1,
      MSR(0) => MSR(0),
      MSR_Rst => MSR_Rst,
      PC_OF => PC_OF,
      \Using_FPGA.set_BIP_I_reg\ => \Using_FPGA.set_BIP_I_reg\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MSR_Reg_Bit_656 is
  port (
    MSR : out STD_LOGIC_VECTOR ( 0 to 0 );
    I3 : out STD_LOGIC;
    I3_2 : out STD_LOGIC;
    write_Carry_I_reg : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MSR_Reg_Bit_656 : entity is "MSR_Reg_Bit";
end microblaze_mcs_1_MSR_Reg_Bit_656;

architecture STRUCTURE of microblaze_mcs_1_MSR_Reg_Bit_656 is
begin
MSR_I: entity work.microblaze_mcs_1_MB_FDRSE_659
     port map (
      Clk => Clk,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I3 => I3,
      I3_2 => I3_2,
      MSR(0) => MSR(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      write_Carry_I_reg => write_Carry_I_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MSR_Reg_Bit_657 is
  port (
    MSR : out STD_LOGIC_VECTOR ( 0 to 0 );
    I3_0 : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : in STD_LOGIC;
    \Using_FPGA.enable_Interrupts_I_reg\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_MSR_Reg_Bit_657 : entity is "MSR_Reg_Bit";
end microblaze_mcs_1_MSR_Reg_Bit_657;

architecture STRUCTURE of microblaze_mcs_1_MSR_Reg_Bit_657 is
begin
MSR_I: entity work.microblaze_mcs_1_MB_FDRSE_658
     port map (
      Clk => Clk,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I3_0 => I3_0,
      MSR(0) => MSR(0),
      \Use_Async_Reset.sync_reset_reg\ => \Use_Async_Reset.sync_reset_reg\,
      \Using_FPGA.enable_Interrupts_I_reg\ => \Using_FPGA.enable_Interrupts_I_reg\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Operand_Select_Bit is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_7 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3_5 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
end microblaze_mcs_1_Operand_Select_Bit;

architecture STRUCTURE of microblaze_mcs_1_Operand_Select_Bit is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Both_PC_and_MSR.Op1_LUT6\: entity work.microblaze_mcs_1_MB_LUT6_2_588
     port map (
      I3_5 => I3_5,
      Reg1_Data(0) => Reg1_Data(0),
      ex_Result(0) => ex_Result(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_589
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_590
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
Op2_DFF: entity work.microblaze_mcs_1_MB_FDE_591
     port map (
      Clk => Clk,
      D_7 => D_7,
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Operand_Select_Bit_517 is
  port (
    \trace_data_address_i_reg[25]\ : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_6 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3_4 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Operand_Select_Bit_517 : entity is "Operand_Select_Bit";
end microblaze_mcs_1_Operand_Select_Bit_517;

architecture STRUCTURE of microblaze_mcs_1_Operand_Select_Bit_517 is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Both_PC_and_MSR.Op1_LUT6\: entity work.microblaze_mcs_1_MB_LUT6_2_584
     port map (
      I3_4 => I3_4,
      Reg1_Data(0) => Reg1_Data(0),
      ex_Result(0) => ex_Result(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_585
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[25]\ => \trace_data_address_i_reg[25]\
    );
Op1_Reg_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_586
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
Op2_DFF: entity work.microblaze_mcs_1_MB_FDE_587
     port map (
      Clk => Clk,
      D_6 => D_6,
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Operand_Select_Bit_518 is
  port (
    Shifted : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    Op2 : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_2 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3_0 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Operand_Select_Bit_518 : entity is "Operand_Select_Bit";
end microblaze_mcs_1_Operand_Select_Bit_518;

architecture STRUCTURE of microblaze_mcs_1_Operand_Select_Bit_518 is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Both_PC_and_MSR.Op1_LUT6\: entity work.microblaze_mcs_1_MB_LUT6_2_568
     port map (
      I3_0 => I3_0,
      Reg1_Data(0) => Reg1_Data(0),
      ex_Result(0) => ex_Result(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_569
     port map (
      Clk => Clk,
      Shifted => Shifted,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_570
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
Op2_DFF: entity work.microblaze_mcs_1_MB_FDE_571
     port map (
      Clk => Clk,
      D_2 => D_2,
      Op2 => Op2,
      of_PipeRun => of_PipeRun
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Operand_Select_Bit_520 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    \trace_data_address_i_reg[31]\ : out STD_LOGIC;
    \Zero_Detecting[0].nibble_Zero_reg\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_1 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Operand_Select_Bit_520 : entity is "Operand_Select_Bit";
end microblaze_mcs_1_Operand_Select_Bit_520;

architecture STRUCTURE of microblaze_mcs_1_Operand_Select_Bit_520 is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Both_PC_and_MSR.Op1_LUT6\: entity work.microblaze_mcs_1_MB_LUT6_2_560
     port map (
      I3 => I3,
      Reg1_Data(0) => Reg1_Data(0),
      ex_Result(0) => ex_Result(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_561
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_562
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Zero_Detecting[0].nibble_Zero_reg\ => \Zero_Detecting[0].nibble_Zero_reg\,
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.microblaze_mcs_1_MB_FDE_563
     port map (
      Clk => Clk,
      D_1 => D_1,
      of_PipeRun => of_PipeRun,
      \trace_data_address_i_reg[31]\ => \trace_data_address_i_reg[31]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Operand_Select_Bit_521 is
  port (
    Op1_Logic : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    EX_Op2 : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_0 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Operand_Select_Bit_521 : entity is "Operand_Select_Bit";
end microblaze_mcs_1_Operand_Select_Bit_521;

architecture STRUCTURE of microblaze_mcs_1_Operand_Select_Bit_521 is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Both_PC_and_MSR.Op1_LUT6\: entity work.microblaze_mcs_1_MB_LUT6_2_556
     port map (
      Reg1_Data(0) => Reg1_Data(0),
      ex_Result(0) => ex_Result(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_557
     port map (
      Clk => Clk,
      Op1_Logic => Op1_Logic,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_558
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
Op2_DFF: entity work.microblaze_mcs_1_MB_FDE_559
     port map (
      Clk => Clk,
      D_0 => D_0,
      EX_Op2 => EX_Op2,
      of_PipeRun => of_PipeRun
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_Operand_Select_Bit__parameterized10\ is
  port (
    \trace_data_address_i_reg[10]\ : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_21 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_Operand_Select_Bit__parameterized10\ : entity is "Operand_Select_Bit";
end \microblaze_mcs_1_Operand_Select_Bit__parameterized10\;

architecture STRUCTURE of \microblaze_mcs_1_Operand_Select_Bit__parameterized10\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.microblaze_mcs_1_MB_LUT6_2_648
     port map (
      Reg1_Data(0) => Reg1_Data(0),
      ex_Result(0) => ex_Result(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_649
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[10]\ => \trace_data_address_i_reg[10]\
    );
Op1_Reg_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_650
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
Op2_DFF: entity work.microblaze_mcs_1_MB_FDE_651
     port map (
      Clk => Clk,
      D_21 => D_21,
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_Operand_Select_Bit__parameterized10_504\ is
  port (
    \trace_data_address_i_reg[11]\ : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_20 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_Operand_Select_Bit__parameterized10_504\ : entity is "Operand_Select_Bit";
end \microblaze_mcs_1_Operand_Select_Bit__parameterized10_504\;

architecture STRUCTURE of \microblaze_mcs_1_Operand_Select_Bit__parameterized10_504\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.microblaze_mcs_1_MB_LUT6_2_644
     port map (
      Reg1_Data(0) => Reg1_Data(0),
      ex_Result(0) => ex_Result(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_645
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[11]\ => \trace_data_address_i_reg[11]\
    );
Op1_Reg_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_646
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
Op2_DFF: entity work.microblaze_mcs_1_MB_FDE_647
     port map (
      Clk => Clk,
      D_20 => D_20,
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_Operand_Select_Bit__parameterized10_505\ is
  port (
    \trace_data_address_i_reg[12]\ : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_19 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_Operand_Select_Bit__parameterized10_505\ : entity is "Operand_Select_Bit";
end \microblaze_mcs_1_Operand_Select_Bit__parameterized10_505\;

architecture STRUCTURE of \microblaze_mcs_1_Operand_Select_Bit__parameterized10_505\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.microblaze_mcs_1_MB_LUT6_2_640
     port map (
      Reg1_Data(0) => Reg1_Data(0),
      ex_Result(0) => ex_Result(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_641
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[12]\ => \trace_data_address_i_reg[12]\
    );
Op1_Reg_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_642
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
Op2_DFF: entity work.microblaze_mcs_1_MB_FDE_643
     port map (
      Clk => Clk,
      D_19 => D_19,
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_Operand_Select_Bit__parameterized10_506\ is
  port (
    \trace_data_address_i_reg[13]\ : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_18 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_Operand_Select_Bit__parameterized10_506\ : entity is "Operand_Select_Bit";
end \microblaze_mcs_1_Operand_Select_Bit__parameterized10_506\;

architecture STRUCTURE of \microblaze_mcs_1_Operand_Select_Bit__parameterized10_506\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.microblaze_mcs_1_MB_LUT6_2_636
     port map (
      Reg1_Data(0) => Reg1_Data(0),
      ex_Result(0) => ex_Result(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_637
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[13]\ => \trace_data_address_i_reg[13]\
    );
Op1_Reg_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_638
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
Op2_DFF: entity work.microblaze_mcs_1_MB_FDE_639
     port map (
      Clk => Clk,
      D_18 => D_18,
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_Operand_Select_Bit__parameterized10_507\ is
  port (
    \trace_data_address_i_reg[14]\ : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_17 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_Operand_Select_Bit__parameterized10_507\ : entity is "Operand_Select_Bit";
end \microblaze_mcs_1_Operand_Select_Bit__parameterized10_507\;

architecture STRUCTURE of \microblaze_mcs_1_Operand_Select_Bit__parameterized10_507\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.microblaze_mcs_1_MB_LUT6_2_632
     port map (
      Reg1_Data(0) => Reg1_Data(0),
      ex_Result(0) => ex_Result(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_633
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[14]\ => \trace_data_address_i_reg[14]\
    );
Op1_Reg_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_634
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
Op2_DFF: entity work.microblaze_mcs_1_MB_FDE_635
     port map (
      Clk => Clk,
      D_17 => D_17,
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_Operand_Select_Bit__parameterized10_508\ is
  port (
    \trace_data_address_i_reg[15]\ : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_16 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_Operand_Select_Bit__parameterized10_508\ : entity is "Operand_Select_Bit";
end \microblaze_mcs_1_Operand_Select_Bit__parameterized10_508\;

architecture STRUCTURE of \microblaze_mcs_1_Operand_Select_Bit__parameterized10_508\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.microblaze_mcs_1_MB_LUT6_2_628
     port map (
      Reg1_Data(0) => Reg1_Data(0),
      ex_Result(0) => ex_Result(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_629
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[15]\ => \trace_data_address_i_reg[15]\
    );
Op1_Reg_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_630
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
Op2_DFF: entity work.microblaze_mcs_1_MB_FDE_631
     port map (
      Clk => Clk,
      D_16 => D_16,
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_Operand_Select_Bit__parameterized10_512\ is
  port (
    \trace_data_address_i_reg[1]\ : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_30 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_Operand_Select_Bit__parameterized10_512\ : entity is "Operand_Select_Bit";
end \microblaze_mcs_1_Operand_Select_Bit__parameterized10_512\;

architecture STRUCTURE of \microblaze_mcs_1_Operand_Select_Bit__parameterized10_512\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.microblaze_mcs_1_MB_LUT6_2_608
     port map (
      Reg1_Data(0) => Reg1_Data(0),
      ex_Result(0) => ex_Result(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_609
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[1]\ => \trace_data_address_i_reg[1]\
    );
Op1_Reg_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_610
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
Op2_DFF: entity work.microblaze_mcs_1_MB_FDE_611
     port map (
      Clk => Clk,
      D_30 => D_30,
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_Operand_Select_Bit__parameterized10_519\ is
  port (
    \trace_data_address_i_reg[2]\ : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_29 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_Operand_Select_Bit__parameterized10_519\ : entity is "Operand_Select_Bit";
end \microblaze_mcs_1_Operand_Select_Bit__parameterized10_519\;

architecture STRUCTURE of \microblaze_mcs_1_Operand_Select_Bit__parameterized10_519\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.microblaze_mcs_1_MB_LUT6_2_564
     port map (
      Reg1_Data(0) => Reg1_Data(0),
      ex_Result(0) => ex_Result(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_565
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[2]\ => \trace_data_address_i_reg[2]\
    );
Op1_Reg_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_566
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
Op2_DFF: entity work.microblaze_mcs_1_MB_FDE_567
     port map (
      Clk => Clk,
      D_29 => D_29,
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_Operand_Select_Bit__parameterized10_522\ is
  port (
    \trace_data_address_i_reg[3]\ : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_28 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_Operand_Select_Bit__parameterized10_522\ : entity is "Operand_Select_Bit";
end \microblaze_mcs_1_Operand_Select_Bit__parameterized10_522\;

architecture STRUCTURE of \microblaze_mcs_1_Operand_Select_Bit__parameterized10_522\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.microblaze_mcs_1_MB_LUT6_2_552
     port map (
      Reg1_Data(0) => Reg1_Data(0),
      ex_Result(0) => ex_Result(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_553
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[3]\ => \trace_data_address_i_reg[3]\
    );
Op1_Reg_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_554
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
Op2_DFF: entity work.microblaze_mcs_1_MB_FDE_555
     port map (
      Clk => Clk,
      D_28 => D_28,
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_Operand_Select_Bit__parameterized10_523\ is
  port (
    \trace_data_address_i_reg[4]\ : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_27 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_Operand_Select_Bit__parameterized10_523\ : entity is "Operand_Select_Bit";
end \microblaze_mcs_1_Operand_Select_Bit__parameterized10_523\;

architecture STRUCTURE of \microblaze_mcs_1_Operand_Select_Bit__parameterized10_523\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.microblaze_mcs_1_MB_LUT6_2_548
     port map (
      Reg1_Data(0) => Reg1_Data(0),
      ex_Result(0) => ex_Result(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_549
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[4]\ => \trace_data_address_i_reg[4]\
    );
Op1_Reg_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_550
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
Op2_DFF: entity work.microblaze_mcs_1_MB_FDE_551
     port map (
      Clk => Clk,
      D_27 => D_27,
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_Operand_Select_Bit__parameterized10_524\ is
  port (
    \trace_data_address_i_reg[5]\ : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_26 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_Operand_Select_Bit__parameterized10_524\ : entity is "Operand_Select_Bit";
end \microblaze_mcs_1_Operand_Select_Bit__parameterized10_524\;

architecture STRUCTURE of \microblaze_mcs_1_Operand_Select_Bit__parameterized10_524\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.microblaze_mcs_1_MB_LUT6_2_544
     port map (
      Reg1_Data(0) => Reg1_Data(0),
      ex_Result(0) => ex_Result(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_545
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[5]\ => \trace_data_address_i_reg[5]\
    );
Op1_Reg_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_546
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
Op2_DFF: entity work.microblaze_mcs_1_MB_FDE_547
     port map (
      Clk => Clk,
      D_26 => D_26,
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_Operand_Select_Bit__parameterized10_525\ is
  port (
    \trace_data_address_i_reg[6]\ : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_25 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_Operand_Select_Bit__parameterized10_525\ : entity is "Operand_Select_Bit";
end \microblaze_mcs_1_Operand_Select_Bit__parameterized10_525\;

architecture STRUCTURE of \microblaze_mcs_1_Operand_Select_Bit__parameterized10_525\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.microblaze_mcs_1_MB_LUT6_2_540
     port map (
      Reg1_Data(0) => Reg1_Data(0),
      ex_Result(0) => ex_Result(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_541
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[6]\ => \trace_data_address_i_reg[6]\
    );
Op1_Reg_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_542
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
Op2_DFF: entity work.microblaze_mcs_1_MB_FDE_543
     port map (
      Clk => Clk,
      D_25 => D_25,
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_Operand_Select_Bit__parameterized10_526\ is
  port (
    \trace_data_address_i_reg[7]\ : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_24 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_Operand_Select_Bit__parameterized10_526\ : entity is "Operand_Select_Bit";
end \microblaze_mcs_1_Operand_Select_Bit__parameterized10_526\;

architecture STRUCTURE of \microblaze_mcs_1_Operand_Select_Bit__parameterized10_526\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.microblaze_mcs_1_MB_LUT6_2_536
     port map (
      Reg1_Data(0) => Reg1_Data(0),
      ex_Result(0) => ex_Result(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_537
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[7]\ => \trace_data_address_i_reg[7]\
    );
Op1_Reg_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_538
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
Op2_DFF: entity work.microblaze_mcs_1_MB_FDE_539
     port map (
      Clk => Clk,
      D_24 => D_24,
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_Operand_Select_Bit__parameterized10_527\ is
  port (
    \trace_data_address_i_reg[8]\ : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_23 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_Operand_Select_Bit__parameterized10_527\ : entity is "Operand_Select_Bit";
end \microblaze_mcs_1_Operand_Select_Bit__parameterized10_527\;

architecture STRUCTURE of \microblaze_mcs_1_Operand_Select_Bit__parameterized10_527\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.microblaze_mcs_1_MB_LUT6_2_532
     port map (
      Reg1_Data(0) => Reg1_Data(0),
      ex_Result(0) => ex_Result(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_533
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[8]\ => \trace_data_address_i_reg[8]\
    );
Op1_Reg_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_534
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
Op2_DFF: entity work.microblaze_mcs_1_MB_FDE_535
     port map (
      Clk => Clk,
      D_23 => D_23,
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_Operand_Select_Bit__parameterized10_528\ is
  port (
    \trace_data_address_i_reg[9]\ : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_22 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_Operand_Select_Bit__parameterized10_528\ : entity is "Operand_Select_Bit";
end \microblaze_mcs_1_Operand_Select_Bit__parameterized10_528\;

architecture STRUCTURE of \microblaze_mcs_1_Operand_Select_Bit__parameterized10_528\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.microblaze_mcs_1_MB_LUT6_2
     port map (
      Reg1_Data(0) => Reg1_Data(0),
      ex_Result(0) => ex_Result(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_529
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[9]\ => \trace_data_address_i_reg[9]\
    );
Op1_Reg_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_530
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
Op2_DFF: entity work.microblaze_mcs_1_MB_FDE_531
     port map (
      Clk => Clk,
      D_22 => D_22,
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_Operand_Select_Bit__parameterized12\ is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_31 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3_6 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_Operand_Select_Bit__parameterized12\ : entity is "Operand_Select_Bit";
end \microblaze_mcs_1_Operand_Select_Bit__parameterized12\;

architecture STRUCTURE of \microblaze_mcs_1_Operand_Select_Bit__parameterized12\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Both_PC_and_MSR.Op1_LUT6\: entity work.microblaze_mcs_1_MB_LUT6_2_652
     port map (
      I3_6 => I3_6,
      Reg1_Data(0) => Reg1_Data(0),
      ex_Result(0) => ex_Result(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_653
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_654
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
Op2_DFF: entity work.microblaze_mcs_1_MB_FDE_655
     port map (
      Clk => Clk,
      D_31 => D_31,
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_Operand_Select_Bit__parameterized2\ is
  port (
    Op1_Shift : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    \trace_data_address_i_reg[28]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_3 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3_1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_Operand_Select_Bit__parameterized2\ : entity is "Operand_Select_Bit";
end \microblaze_mcs_1_Operand_Select_Bit__parameterized2\;

architecture STRUCTURE of \microblaze_mcs_1_Operand_Select_Bit__parameterized2\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Both_PC_and_MSR.Op1_LUT6\: entity work.microblaze_mcs_1_MB_LUT6_2_572
     port map (
      I3_1 => I3_1,
      Reg1_Data(0) => Reg1_Data(0),
      ex_Result(0) => ex_Result(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_573
     port map (
      Clk => Clk,
      Op1_Shift => Op1_Shift,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_574
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
Op2_DFF: entity work.microblaze_mcs_1_MB_FDE_575
     port map (
      Clk => Clk,
      D_3 => D_3,
      of_PipeRun => of_PipeRun,
      \trace_data_address_i_reg[28]\ => \trace_data_address_i_reg[28]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_Operand_Select_Bit__parameterized4\ is
  port (
    \trace_data_address_i_reg[27]\ : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_4 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3_2 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_Operand_Select_Bit__parameterized4\ : entity is "Operand_Select_Bit";
end \microblaze_mcs_1_Operand_Select_Bit__parameterized4\;

architecture STRUCTURE of \microblaze_mcs_1_Operand_Select_Bit__parameterized4\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Both_PC_and_MSR.Op1_LUT6\: entity work.microblaze_mcs_1_MB_LUT6_2_576
     port map (
      I3_2 => I3_2,
      Reg1_Data(0) => Reg1_Data(0),
      ex_Result(0) => ex_Result(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_577
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[27]\ => \trace_data_address_i_reg[27]\
    );
Op1_Reg_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_578
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
Op2_DFF: entity work.microblaze_mcs_1_MB_FDE_579
     port map (
      Clk => Clk,
      D_4 => D_4,
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_Operand_Select_Bit__parameterized6\ is
  port (
    \trace_data_address_i_reg[26]\ : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_5 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3_3 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_Operand_Select_Bit__parameterized6\ : entity is "Operand_Select_Bit";
end \microblaze_mcs_1_Operand_Select_Bit__parameterized6\;

architecture STRUCTURE of \microblaze_mcs_1_Operand_Select_Bit__parameterized6\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Both_PC_and_MSR.Op1_LUT6\: entity work.microblaze_mcs_1_MB_LUT6_2_580
     port map (
      I3_3 => I3_3,
      Reg1_Data(0) => Reg1_Data(0),
      ex_Result(0) => ex_Result(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_581
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[26]\ => \trace_data_address_i_reg[26]\
    );
Op1_Reg_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_582
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
Op2_DFF: entity work.microblaze_mcs_1_MB_FDE_583
     port map (
      Clk => Clk,
      D_5 => D_5,
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_Operand_Select_Bit__parameterized8\ is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_15 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_Operand_Select_Bit__parameterized8\ : entity is "Operand_Select_Bit";
end \microblaze_mcs_1_Operand_Select_Bit__parameterized8\;

architecture STRUCTURE of \microblaze_mcs_1_Operand_Select_Bit__parameterized8\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.microblaze_mcs_1_MB_LUT6_2_624
     port map (
      Reg1_Data(0) => Reg1_Data(0),
      ex_Result(0) => ex_Result(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_625
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_626
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
Op2_DFF: entity work.microblaze_mcs_1_MB_FDE_627
     port map (
      Clk => Clk,
      D_15 => D_15,
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_Operand_Select_Bit__parameterized8_509\ is
  port (
    \trace_data_address_i_reg[17]\ : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_14 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_Operand_Select_Bit__parameterized8_509\ : entity is "Operand_Select_Bit";
end \microblaze_mcs_1_Operand_Select_Bit__parameterized8_509\;

architecture STRUCTURE of \microblaze_mcs_1_Operand_Select_Bit__parameterized8_509\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.microblaze_mcs_1_MB_LUT6_2_620
     port map (
      Reg1_Data(0) => Reg1_Data(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => ex_Result(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_621
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[17]\ => \trace_data_address_i_reg[17]\
    );
Op1_Reg_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_622
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
Op2_DFF: entity work.microblaze_mcs_1_MB_FDE_623
     port map (
      Clk => Clk,
      D_14 => D_14,
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_Operand_Select_Bit__parameterized8_510\ is
  port (
    \trace_data_address_i_reg[18]\ : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_13 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_Operand_Select_Bit__parameterized8_510\ : entity is "Operand_Select_Bit";
end \microblaze_mcs_1_Operand_Select_Bit__parameterized8_510\;

architecture STRUCTURE of \microblaze_mcs_1_Operand_Select_Bit__parameterized8_510\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.microblaze_mcs_1_MB_LUT6_2_616
     port map (
      Reg1_Data(0) => Reg1_Data(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => ex_Result(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_617
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[18]\ => \trace_data_address_i_reg[18]\
    );
Op1_Reg_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_618
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
Op2_DFF: entity work.microblaze_mcs_1_MB_FDE_619
     port map (
      Clk => Clk,
      D_13 => D_13,
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_Operand_Select_Bit__parameterized8_511\ is
  port (
    \trace_data_address_i_reg[19]\ : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_12 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_Operand_Select_Bit__parameterized8_511\ : entity is "Operand_Select_Bit";
end \microblaze_mcs_1_Operand_Select_Bit__parameterized8_511\;

architecture STRUCTURE of \microblaze_mcs_1_Operand_Select_Bit__parameterized8_511\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.microblaze_mcs_1_MB_LUT6_2_612
     port map (
      Reg1_Data(0) => Reg1_Data(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => ex_Result(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_613
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[19]\ => \trace_data_address_i_reg[19]\
    );
Op1_Reg_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_614
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
Op2_DFF: entity work.microblaze_mcs_1_MB_FDE_615
     port map (
      Clk => Clk,
      D_12 => D_12,
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_Operand_Select_Bit__parameterized8_513\ is
  port (
    \trace_data_address_i_reg[20]\ : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_11 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_Operand_Select_Bit__parameterized8_513\ : entity is "Operand_Select_Bit";
end \microblaze_mcs_1_Operand_Select_Bit__parameterized8_513\;

architecture STRUCTURE of \microblaze_mcs_1_Operand_Select_Bit__parameterized8_513\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.microblaze_mcs_1_MB_LUT6_2_604
     port map (
      Reg1_Data(0) => Reg1_Data(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => ex_Result(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_605
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[20]\ => \trace_data_address_i_reg[20]\
    );
Op1_Reg_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_606
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
Op2_DFF: entity work.microblaze_mcs_1_MB_FDE_607
     port map (
      Clk => Clk,
      D_11 => D_11,
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_Operand_Select_Bit__parameterized8_514\ is
  port (
    \trace_data_address_i_reg[21]\ : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_10 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_Operand_Select_Bit__parameterized8_514\ : entity is "Operand_Select_Bit";
end \microblaze_mcs_1_Operand_Select_Bit__parameterized8_514\;

architecture STRUCTURE of \microblaze_mcs_1_Operand_Select_Bit__parameterized8_514\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.microblaze_mcs_1_MB_LUT6_2_600
     port map (
      Reg1_Data(0) => Reg1_Data(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => ex_Result(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_601
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[21]\ => \trace_data_address_i_reg[21]\
    );
Op1_Reg_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_602
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
Op2_DFF: entity work.microblaze_mcs_1_MB_FDE_603
     port map (
      Clk => Clk,
      D_10 => D_10,
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_Operand_Select_Bit__parameterized8_515\ is
  port (
    \trace_data_address_i_reg[22]\ : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_9 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_Operand_Select_Bit__parameterized8_515\ : entity is "Operand_Select_Bit";
end \microblaze_mcs_1_Operand_Select_Bit__parameterized8_515\;

architecture STRUCTURE of \microblaze_mcs_1_Operand_Select_Bit__parameterized8_515\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.microblaze_mcs_1_MB_LUT6_2_596
     port map (
      Reg1_Data(0) => Reg1_Data(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => ex_Result(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_597
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[22]\ => \trace_data_address_i_reg[22]\
    );
Op1_Reg_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_598
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
Op2_DFF: entity work.microblaze_mcs_1_MB_FDE_599
     port map (
      Clk => Clk,
      D_9 => D_9,
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_Operand_Select_Bit__parameterized8_516\ is
  port (
    \trace_data_address_i_reg[23]\ : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    op2_C : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_8 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    PC_OF : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_Operand_Select_Bit__parameterized8_516\ : entity is "Operand_Select_Bit";
end \microblaze_mcs_1_Operand_Select_Bit__parameterized8_516\;

architecture STRUCTURE of \microblaze_mcs_1_Operand_Select_Bit__parameterized8_516\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.microblaze_mcs_1_MB_LUT6_2_592
     port map (
      PC_OF => PC_OF,
      Reg1_Data(0) => Reg1_Data(0),
      ex_Result(0) => ex_Result(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_593
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[23]\ => \trace_data_address_i_reg[23]\
    );
Op1_Reg_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_594
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
Op2_DFF: entity work.microblaze_mcs_1_MB_FDE_595
     port map (
      Clk => Clk,
      D_8 => D_8,
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_PC_Bit is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    PC_OF : out STD_LOGIC;
    \trace_pc_i_reg[17]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    OF_PipeRun : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC
  );
end microblaze_mcs_1_PC_Bit;

architecture STRUCTURE of microblaze_mcs_1_PC_Bit is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^pc_of\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  PC_OF <= \^pc_of\;
MUXCY_XOR_I: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_498
     port map (
      LO => LO,
      pc_Sum => pc_Sum,
      xor_Sum => xor_Sum
    );
NewPC_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized23_499\
     port map (
      D(0) => \^d\(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0),
      jump => jump,
      pc_Sum => pc_Sum
    );
PC_EX_DFF: entity work.microblaze_mcs_1_MB_FDE_500
     port map (
      Clk => Clk,
      OF_PipeRun => OF_PipeRun,
      PC_OF => \^pc_of\,
      \trace_pc_i_reg[17]\(0) => \trace_pc_i_reg[17]\(0)
    );
PC_OF_Buffer: entity work.microblaze_mcs_1_MB_SRL16E_501
     port map (
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      PC_OF => \^pc_of\,
      pc_I => pc_I
    );
SUM_I: entity work.\microblaze_mcs_1_MB_LUT4__parameterized21_502\
     port map (
      pc_I => pc_I,
      xor_Sum => xor_Sum
    );
\Set_DFF.PC_IF_DFF\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_503
     port map (
      Clk => Clk,
      D(0) => \^d\(0),
      PC_Write => PC_Write,
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_PC_Bit_417 is
  port (
    Carry_Out : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC;
    \trace_pc_i_reg[18]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    OF_PipeRun : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_PC_Bit_417 : entity is "PC_Bit";
end microblaze_mcs_1_PC_Bit_417;

architecture STRUCTURE of microblaze_mcs_1_PC_Bit_417 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^using_fpga.native\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \^lopt_2\ <= lopt_3;
  lopt_2 <= xor_Sum;
MUXCY_XOR_I: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_492
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \^lopt_2\
    );
NewPC_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized23_493\
     port map (
      D(0) => \^d\(0),
      O => pc_Sum,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      jump => jump
    );
PC_EX_DFF: entity work.microblaze_mcs_1_MB_FDE_494
     port map (
      Clk => Clk,
      OF_PipeRun => OF_PipeRun,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \trace_pc_i_reg[18]\(0) => \trace_pc_i_reg[18]\(0)
    );
PC_OF_Buffer: entity work.microblaze_mcs_1_MB_SRL16E_495
     port map (
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      \Using_FPGA.Native\ => \^using_fpga.native\,
      pc_I => pc_I
    );
SUM_I: entity work.\microblaze_mcs_1_MB_LUT4__parameterized21_496\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_497
     port map (
      Clk => Clk,
      D(0) => \^d\(0),
      PC_Write => PC_Write,
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_PC_Bit_418 is
  port (
    Carry_Out : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC;
    \trace_pc_i_reg[19]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    OF_PipeRun : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_PC_Bit_418 : entity is "PC_Bit";
end microblaze_mcs_1_PC_Bit_418;

architecture STRUCTURE of microblaze_mcs_1_PC_Bit_418 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^using_fpga.native\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \^lopt_2\ <= lopt_3;
  lopt_2 <= xor_Sum;
MUXCY_XOR_I: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_486
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \^lopt_2\
    );
NewPC_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized23_487\
     port map (
      D(0) => \^d\(0),
      O => pc_Sum,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      jump => jump
    );
PC_EX_DFF: entity work.microblaze_mcs_1_MB_FDE_488
     port map (
      Clk => Clk,
      OF_PipeRun => OF_PipeRun,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \trace_pc_i_reg[19]\(0) => \trace_pc_i_reg[19]\(0)
    );
PC_OF_Buffer: entity work.microblaze_mcs_1_MB_SRL16E_489
     port map (
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      \Using_FPGA.Native\ => \^using_fpga.native\,
      pc_I => pc_I
    );
SUM_I: entity work.\microblaze_mcs_1_MB_LUT4__parameterized21_490\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_491
     port map (
      Clk => Clk,
      D(0) => \^d\(0),
      PC_Write => PC_Write,
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_PC_Bit_419 is
  port (
    Carry_Out : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC;
    \trace_pc_i_reg[20]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    OF_PipeRun : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_PC_Bit_419 : entity is "PC_Bit";
end microblaze_mcs_1_PC_Bit_419;

architecture STRUCTURE of microblaze_mcs_1_PC_Bit_419 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^using_fpga.native\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \^lopt_2\ <= lopt_3;
  lopt_2 <= xor_Sum;
MUXCY_XOR_I: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_480
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \^lopt_2\
    );
NewPC_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized23_481\
     port map (
      D(0) => \^d\(0),
      O => pc_Sum,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      jump => jump
    );
PC_EX_DFF: entity work.microblaze_mcs_1_MB_FDE_482
     port map (
      Clk => Clk,
      OF_PipeRun => OF_PipeRun,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \trace_pc_i_reg[20]\(0) => \trace_pc_i_reg[20]\(0)
    );
PC_OF_Buffer: entity work.microblaze_mcs_1_MB_SRL16E_483
     port map (
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      \Using_FPGA.Native\ => \^using_fpga.native\,
      pc_I => pc_I
    );
SUM_I: entity work.\microblaze_mcs_1_MB_LUT4__parameterized21_484\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_485
     port map (
      Clk => Clk,
      D(0) => \^d\(0),
      PC_Write => PC_Write,
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_PC_Bit_420 is
  port (
    Carry_Out : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC;
    \trace_pc_i_reg[21]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    OF_PipeRun : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_PC_Bit_420 : entity is "PC_Bit";
end microblaze_mcs_1_PC_Bit_420;

architecture STRUCTURE of microblaze_mcs_1_PC_Bit_420 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^using_fpga.native\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  \Using_FPGA.Native\ <= \^using_fpga.native\;
MUXCY_XOR_I: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_474
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
NewPC_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized23_475\
     port map (
      D(0) => \^d\(0),
      O => pc_Sum,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      jump => jump
    );
PC_EX_DFF: entity work.microblaze_mcs_1_MB_FDE_476
     port map (
      Clk => Clk,
      OF_PipeRun => OF_PipeRun,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \trace_pc_i_reg[21]\(0) => \trace_pc_i_reg[21]\(0)
    );
PC_OF_Buffer: entity work.microblaze_mcs_1_MB_SRL16E_477
     port map (
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      \Using_FPGA.Native\ => \^using_fpga.native\,
      pc_I => pc_I
    );
SUM_I: entity work.\microblaze_mcs_1_MB_LUT4__parameterized21_478\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_479
     port map (
      Clk => Clk,
      D(0) => \^d\(0),
      PC_Write => PC_Write,
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_PC_Bit_421 is
  port (
    Carry_Out : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC;
    \trace_pc_i_reg[22]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    OF_PipeRun : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_PC_Bit_421 : entity is "PC_Bit";
end microblaze_mcs_1_PC_Bit_421;

architecture STRUCTURE of microblaze_mcs_1_PC_Bit_421 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^using_fpga.native\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \^lopt_2\ <= lopt_3;
  lopt_2 <= xor_Sum;
MUXCY_XOR_I: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_468
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \^lopt_2\
    );
NewPC_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized23_469\
     port map (
      D(0) => \^d\(0),
      O => pc_Sum,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      jump => jump
    );
PC_EX_DFF: entity work.microblaze_mcs_1_MB_FDE_470
     port map (
      Clk => Clk,
      OF_PipeRun => OF_PipeRun,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \trace_pc_i_reg[22]\(0) => \trace_pc_i_reg[22]\(0)
    );
PC_OF_Buffer: entity work.microblaze_mcs_1_MB_SRL16E_471
     port map (
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      \Using_FPGA.Native\ => \^using_fpga.native\,
      pc_I => pc_I
    );
SUM_I: entity work.\microblaze_mcs_1_MB_LUT4__parameterized21_472\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_473
     port map (
      Clk => Clk,
      D(0) => \^d\(0),
      PC_Write => PC_Write,
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_PC_Bit_422 is
  port (
    Carry_Out : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC;
    \trace_pc_i_reg[23]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    OF_PipeRun : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_PC_Bit_422 : entity is "PC_Bit";
end microblaze_mcs_1_PC_Bit_422;

architecture STRUCTURE of microblaze_mcs_1_PC_Bit_422 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^using_fpga.native\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \^lopt_2\ <= lopt_3;
  lopt_2 <= xor_Sum;
MUXCY_XOR_I: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_462
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \^lopt_2\
    );
NewPC_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized23_463\
     port map (
      D(0) => \^d\(0),
      O => pc_Sum,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      jump => jump
    );
PC_EX_DFF: entity work.microblaze_mcs_1_MB_FDE_464
     port map (
      Clk => Clk,
      OF_PipeRun => OF_PipeRun,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \trace_pc_i_reg[23]\(0) => \trace_pc_i_reg[23]\(0)
    );
PC_OF_Buffer: entity work.microblaze_mcs_1_MB_SRL16E_465
     port map (
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      \Using_FPGA.Native\ => \^using_fpga.native\,
      pc_I => pc_I
    );
SUM_I: entity work.\microblaze_mcs_1_MB_LUT4__parameterized21_466\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_467
     port map (
      Clk => Clk,
      D(0) => \^d\(0),
      PC_Write => PC_Write,
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_PC_Bit_423 is
  port (
    I3 : out STD_LOGIC;
    Carry_Out : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \trace_pc_i_reg[24]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    OF_PipeRun : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_PC_Bit_423 : entity is "PC_Bit";
end microblaze_mcs_1_PC_Bit_423;

architecture STRUCTURE of microblaze_mcs_1_PC_Bit_423 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal PC_OF_Buffer_n_0 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  \^lopt_2\ <= lopt_3;
  lopt_2 <= xor_Sum;
MUXCY_XOR_I: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_456
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \^lopt_2\
    );
NewPC_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized23_457\
     port map (
      D(0) => \^d\(0),
      O => pc_Sum,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0),
      jump => jump
    );
PC_EX_DFF: entity work.microblaze_mcs_1_MB_FDE_458
     port map (
      Clk => Clk,
      OF_PipeRun => OF_PipeRun,
      PC_OF => PC_OF_Buffer_n_0,
      \trace_pc_i_reg[24]\(0) => \trace_pc_i_reg[24]\(0)
    );
PC_OF_Buffer: entity work.microblaze_mcs_1_MB_SRL16E_459
     port map (
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I3 => I3,
      IReady => IReady,
      PC_OF => PC_OF_Buffer_n_0,
      pc_I => pc_I
    );
SUM_I: entity work.\microblaze_mcs_1_MB_LUT4__parameterized21_460\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_461
     port map (
      Clk => Clk,
      D(0) => \^d\(0),
      PC_Write => PC_Write,
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_PC_Bit_424 is
  port (
    I3_0 : out STD_LOGIC;
    Carry_Out : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \trace_pc_i_reg[25]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    OF_PipeRun : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_PC_Bit_424 : entity is "PC_Bit";
end microblaze_mcs_1_PC_Bit_424;

architecture STRUCTURE of microblaze_mcs_1_PC_Bit_424 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal PC_OF_Buffer_n_0 : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  D(0) <= \^d\(0);
MUXCY_XOR_I: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_450
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
NewPC_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized23_451\
     port map (
      D(0) => \^d\(0),
      O => pc_Sum,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0),
      jump => jump
    );
PC_EX_DFF: entity work.microblaze_mcs_1_MB_FDE_452
     port map (
      Clk => Clk,
      OF_PipeRun => OF_PipeRun,
      PC_OF => PC_OF_Buffer_n_0,
      \trace_pc_i_reg[25]\(0) => \trace_pc_i_reg[25]\(0)
    );
PC_OF_Buffer: entity work.microblaze_mcs_1_MB_SRL16E_453
     port map (
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I3_0 => I3_0,
      IReady => IReady,
      PC_OF => PC_OF_Buffer_n_0,
      pc_I => pc_I
    );
SUM_I: entity work.\microblaze_mcs_1_MB_LUT4__parameterized21_454\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_455
     port map (
      Clk => Clk,
      D(0) => \^d\(0),
      PC_Write => PC_Write,
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_PC_Bit_425 is
  port (
    I3_1 : out STD_LOGIC;
    Carry_Out : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \trace_pc_i_reg[26]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    OF_PipeRun : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_PC_Bit_425 : entity is "PC_Bit";
end microblaze_mcs_1_PC_Bit_425;

architecture STRUCTURE of microblaze_mcs_1_PC_Bit_425 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal PC_OF_Buffer_n_0 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  \^lopt_2\ <= lopt_3;
  lopt_2 <= xor_Sum;
MUXCY_XOR_I: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_444
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \^lopt_2\
    );
NewPC_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized23_445\
     port map (
      D(0) => \^d\(0),
      O => pc_Sum,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0),
      jump => jump
    );
PC_EX_DFF: entity work.microblaze_mcs_1_MB_FDE_446
     port map (
      Clk => Clk,
      OF_PipeRun => OF_PipeRun,
      PC_OF => PC_OF_Buffer_n_0,
      \trace_pc_i_reg[26]\(0) => \trace_pc_i_reg[26]\(0)
    );
PC_OF_Buffer: entity work.microblaze_mcs_1_MB_SRL16E_447
     port map (
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I3_1 => I3_1,
      IReady => IReady,
      PC_OF => PC_OF_Buffer_n_0,
      pc_I => pc_I
    );
SUM_I: entity work.\microblaze_mcs_1_MB_LUT4__parameterized21_448\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_449
     port map (
      Clk => Clk,
      D(0) => \^d\(0),
      PC_Write => PC_Write,
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_PC_Bit_426 is
  port (
    I3_2 : out STD_LOGIC;
    Carry_Out : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \trace_pc_i_reg[27]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    OF_PipeRun : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_PC_Bit_426 : entity is "PC_Bit";
end microblaze_mcs_1_PC_Bit_426;

architecture STRUCTURE of microblaze_mcs_1_PC_Bit_426 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal PC_OF_Buffer_n_0 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  \^lopt_2\ <= lopt_3;
  lopt_2 <= xor_Sum;
MUXCY_XOR_I: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_438
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \^lopt_2\
    );
NewPC_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized23_439\
     port map (
      D(0) => \^d\(0),
      O => pc_Sum,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0),
      jump => jump
    );
PC_EX_DFF: entity work.microblaze_mcs_1_MB_FDE_440
     port map (
      Clk => Clk,
      OF_PipeRun => OF_PipeRun,
      PC_OF => PC_OF_Buffer_n_0,
      \trace_pc_i_reg[27]\(0) => \trace_pc_i_reg[27]\(0)
    );
PC_OF_Buffer: entity work.microblaze_mcs_1_MB_SRL16E_441
     port map (
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I3_2 => I3_2,
      IReady => IReady,
      PC_OF => PC_OF_Buffer_n_0,
      pc_I => pc_I
    );
SUM_I: entity work.\microblaze_mcs_1_MB_LUT4__parameterized21_442\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_443
     port map (
      Clk => Clk,
      D(0) => \^d\(0),
      PC_Write => PC_Write,
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_PC_Bit_427 is
  port (
    Carry_Out : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC;
    \trace_pc_i_reg[28]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    OF_PipeRun : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_PC_Bit_427 : entity is "PC_Bit";
end microblaze_mcs_1_PC_Bit_427;

architecture STRUCTURE of microblaze_mcs_1_PC_Bit_427 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^using_fpga.native\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \^lopt_2\ <= lopt_3;
  lopt_2 <= xor_Sum;
MUXCY_XOR_I: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_432
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \^lopt_2\
    );
NewPC_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized23_433\
     port map (
      D(0) => \^d\(0),
      O => pc_Sum,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      jump => jump
    );
PC_EX_DFF: entity work.microblaze_mcs_1_MB_FDE_434
     port map (
      Clk => Clk,
      OF_PipeRun => OF_PipeRun,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \trace_pc_i_reg[28]\(0) => \trace_pc_i_reg[28]\(0)
    );
PC_OF_Buffer: entity work.microblaze_mcs_1_MB_SRL16E_435
     port map (
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      \Using_FPGA.Native\ => \^using_fpga.native\,
      pc_I => pc_I
    );
SUM_I: entity work.\microblaze_mcs_1_MB_LUT4__parameterized21_436\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_437
     port map (
      Clk => Clk,
      D(0) => \^d\(0),
      PC_Write => PC_Write,
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_PC_Bit_428 is
  port (
    Carry_Out : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC;
    \trace_pc_i_reg[29]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Increment : in STD_LOGIC;
    DI : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    OF_PipeRun : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_PC_Bit_428 : entity is "PC_Bit";
end microblaze_mcs_1_PC_Bit_428;

architecture STRUCTURE of microblaze_mcs_1_PC_Bit_428 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^using_fpga.native\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  \Using_FPGA.Native\ <= \^using_fpga.native\;
MUXCY_XOR_I: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_429
     port map (
      Carry_Out => Carry_Out,
      DI => DI,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
NewPC_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized23\
     port map (
      D(0) => \^d\(0),
      O => pc_Sum,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      jump => jump
    );
PC_EX_DFF: entity work.microblaze_mcs_1_MB_FDE
     port map (
      Clk => Clk,
      OF_PipeRun => OF_PipeRun,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \trace_pc_i_reg[29]\(0) => \trace_pc_i_reg[29]\(0)
    );
PC_OF_Buffer: entity work.microblaze_mcs_1_MB_SRL16E_430
     port map (
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      \Using_FPGA.Native\ => \^using_fpga.native\,
      pc_I => pc_I
    );
SUM_I: entity work.\microblaze_mcs_1_MB_LUT4__parameterized21\
     port map (
      Increment => Increment,
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE_431
     port map (
      Clk => Clk,
      D(0) => \^d\(0),
      PC_Write => PC_Write,
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_PreFetch_Buffer is
  port (
    of_Valid_Raw : out STD_LOGIC;
    instr_OF : out STD_LOGIC_VECTOR ( 10 downto 0 );
    \instr_EX_i_reg[9]\ : out STD_LOGIC;
    \instr_EX_i_reg[9]_0\ : out STD_LOGIC;
    \instr_EX_i_reg[9]_1\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 18 downto 0 );
    \instr_EX_i_reg[25]\ : out STD_LOGIC;
    \instr_EX_i_reg[26]\ : out STD_LOGIC;
    nonvalid_IFetch_n_reg : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    Sext16_reg : out STD_LOGIC;
    Sext8_reg : out STD_LOGIC;
    doublet_i_reg : out STD_LOGIC;
    byte_i12_out : out STD_LOGIC;
    byte_i_reg : out STD_LOGIC;
    \Using_FPGA.set_BIP_I_reg\ : out STD_LOGIC;
    mtsmsr_write_i_reg : out STD_LOGIC;
    mbar_hold_I_reg : out STD_LOGIC;
    of_mbar_decode : out STD_LOGIC;
    Increment : out STD_LOGIC;
    buffer_Full : out STD_LOGIC;
    mbar_is_sleep0 : out STD_LOGIC;
    inHibit_EX_reg : out STD_LOGIC;
    enable_Interrupts_I : out STD_LOGIC;
    reset_BIP_I8_out : out STD_LOGIC;
    write_Reg_reg : out STD_LOGIC;
    write_Carry_I_reg : out STD_LOGIC;
    write_Reg_reg_0 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    force1_i29_out : out STD_LOGIC;
    Reg_Test_Equal_i : out STD_LOGIC;
    Reg_Test_Equal_N_i7_out : out STD_LOGIC;
    use_Reg_Neg_DI_i26_out : out STD_LOGIC;
    force2_i : out STD_LOGIC;
    force_Val1_i27_out : out STD_LOGIC;
    use_Reg_Neg_S_i28_out : out STD_LOGIC;
    write_Carry_I_reg_0 : out STD_LOGIC;
    D_0 : out STD_LOGIC;
    D_1 : out STD_LOGIC;
    D_2 : out STD_LOGIC;
    D_3 : out STD_LOGIC;
    D_4 : out STD_LOGIC;
    D_5 : out STD_LOGIC;
    D_6 : out STD_LOGIC;
    D_7 : out STD_LOGIC;
    D_8 : out STD_LOGIC;
    D_9 : out STD_LOGIC;
    D_10 : out STD_LOGIC;
    D_11 : out STD_LOGIC;
    D_12 : out STD_LOGIC;
    D_13 : out STD_LOGIC;
    D_14 : out STD_LOGIC;
    D_15 : out STD_LOGIC;
    D_16 : out STD_LOGIC;
    D_17 : out STD_LOGIC;
    D_18 : out STD_LOGIC;
    D_19 : out STD_LOGIC;
    D_20 : out STD_LOGIC;
    D_21 : out STD_LOGIC;
    D_22 : out STD_LOGIC;
    D_23 : out STD_LOGIC;
    D_24 : out STD_LOGIC;
    D_25 : out STD_LOGIC;
    D_26 : out STD_LOGIC;
    D_27 : out STD_LOGIC;
    D_28 : out STD_LOGIC;
    D_29 : out STD_LOGIC;
    D_30 : out STD_LOGIC;
    D_31 : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    D_32 : out STD_LOGIC;
    jump2_I_reg : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Size_17to32.imm_Reg_reg[15]\ : out STD_LOGIC;
    mbar_first : out STD_LOGIC;
    select_ALU_Carry_reg : out STD_LOGIC;
    ex_Valid_reg : out STD_LOGIC;
    d_AS_I15_out : out STD_LOGIC;
    is_swx_I_reg : out STD_LOGIC;
    writing : out STD_LOGIC;
    load_Store_i_reg : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    \write_Addr_I_reg[0]\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    Compare_Instr_reg : out STD_LOGIC;
    DI : out STD_LOGIC;
    R : in STD_LOGIC;
    Clk : in STD_LOGIC;
    CI : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 31 );
    inHibit_EX : in STD_LOGIC;
    \No_ECC.Sl_Rdy_reg\ : in STD_LOGIC;
    mul_Executing_reg : in STD_LOGIC;
    of_Pause_reg : in STD_LOGIC;
    nonvalid_IFetch_n_reg_0 : in STD_LOGIC;
    S92_out : in STD_LOGIC;
    force_Val2_N : in STD_LOGIC;
    mul_Executing_reg_0 : in STD_LOGIC;
    take_Intr_Now_III : in STD_LOGIC;
    Sext16 : in STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : in STD_LOGIC;
    sext8 : in STD_LOGIC;
    isdoublet : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    isbyte : in STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg_0\ : in STD_LOGIC;
    \Using_FPGA.set_BIP_I_reg_0\ : in STD_LOGIC;
    mtsmsr_write_i_reg_0 : in STD_LOGIC;
    mbar_hold_I_reg_0 : in STD_LOGIC;
    missed_IFetch : in STD_LOGIC;
    ex_Valid : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg\ : in STD_LOGIC;
    \Size_17to32.imm_Reg_reg[0]\ : in STD_LOGIC_VECTOR ( 15 downto 0 );
    use_Imm_Reg : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_0\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_1\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_2\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_3\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_4\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_5\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_6\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_7\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_8\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_9\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_10\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_11\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_12\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_13\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_14\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_15\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[12]\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[11]\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[10]\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[9]\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[8]\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[7]\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[6]\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[5]\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[4]\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[3]\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[2]\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[1]\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[0]\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_16\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_17\ : in STD_LOGIC;
    take_Intr_Now_II : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_18\ : in STD_LOGIC;
    of_Pause : in STD_LOGIC;
    mbar_first_reg : in STD_LOGIC;
    mul_Executing : in STD_LOGIC;
    load_Store_i : in STD_LOGIC;
    DReady : in STD_LOGIC;
    jump_Carry2 : in STD_LOGIC;
    jump2_I_reg_0 : in STD_LOGIC;
    S : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC
  );
end microblaze_mcs_1_PreFetch_Buffer;

architecture STRUCTURE of microblaze_mcs_1_PreFetch_Buffer is
  signal \^d\ : STD_LOGIC_VECTOR ( 18 downto 0 );
  signal D_33 : STD_LOGIC;
  signal \PreFetch_Buffers[0].SRL16E_I_n_2\ : STD_LOGIC;
  signal \PreFetch_Buffers[11].SRL16E_I_n_1\ : STD_LOGIC;
  signal \PreFetch_Buffers[2].SRL16E_I_n_2\ : STD_LOGIC;
  signal \PreFetch_Buffers[2].SRL16E_I_n_3\ : STD_LOGIC;
  signal \PreFetch_Buffers[2].SRL16E_I_n_5\ : STD_LOGIC;
  signal \PreFetch_Buffers[4].SRL16E_I_n_11\ : STD_LOGIC;
  signal \PreFetch_Buffers[4].SRL16E_I_n_4\ : STD_LOGIC;
  signal \PreFetch_Buffers[5].SRL16E_I_n_2\ : STD_LOGIC;
  signal \PreFetch_Buffers[5].SRL16E_I_n_3\ : STD_LOGIC;
  signal S0_out : STD_LOGIC;
  signal S_34 : STD_LOGIC;
  signal \^size_17to32.imm_reg_reg[15]\ : STD_LOGIC;
  signal \^using_fpga.native_2\ : STD_LOGIC;
  signal buffer_Addr_Carry_1 : STD_LOGIC;
  signal buffer_Addr_Carry_2 : STD_LOGIC;
  signal buffer_Addr_S_I_0 : STD_LOGIC;
  signal buffer_Addr_S_I_1 : STD_LOGIC;
  signal buffer_Addr_S_I_2 : STD_LOGIC;
  signal \^byte_i12_out\ : STD_LOGIC;
  signal \^instr_ex_i_reg[25]\ : STD_LOGIC;
  signal \^instr_ex_i_reg[26]\ : STD_LOGIC;
  signal \^instr_ex_i_reg[9]\ : STD_LOGIC;
  signal \^instr_ex_i_reg[9]_0\ : STD_LOGIC;
  signal \^instr_ex_i_reg[9]_1\ : STD_LOGIC;
  signal \^instr_of\ : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^write_carry_i_reg\ : STD_LOGIC;
begin
  D(18 downto 0) <= \^d\(18 downto 0);
  \Size_17to32.imm_Reg_reg[15]\ <= \^size_17to32.imm_reg_reg[15]\;
  \Using_FPGA.Native_2\ <= \^using_fpga.native_2\;
  \^lopt_2\ <= lopt_3;
  \^lopt_3\ <= lopt_4;
  \^lopt_4\ <= lopt_5;
  byte_i12_out <= \^byte_i12_out\;
  \instr_EX_i_reg[25]\ <= \^instr_ex_i_reg[25]\;
  \instr_EX_i_reg[26]\ <= \^instr_ex_i_reg[26]\;
  \instr_EX_i_reg[9]\ <= \^instr_ex_i_reg[9]\;
  \instr_EX_i_reg[9]_0\ <= \^instr_ex_i_reg[9]_0\;
  \instr_EX_i_reg[9]_1\ <= \^instr_ex_i_reg[9]_1\;
  instr_OF(10 downto 0) <= \^instr_of\(10 downto 0);
  lopt_2 <= S0_out;
  lopt_6 <= S_34;
  write_Carry_I_reg <= \^write_carry_i_reg\;
\Buffer_DFFs[1].FDS_I\: entity work.microblaze_mcs_1_MB_FDS
     port map (
      Clk => Clk,
      R => R,
      S_34 => S_34,
      buffer_Addr_S_I_2 => buffer_Addr_S_I_2,
      \instr_EX_i_reg[9]\ => \^instr_ex_i_reg[9]_1\,
      mul_Executing_reg => mul_Executing_reg_0
    );
\Buffer_DFFs[1].MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY
     port map (
      LO => buffer_Addr_Carry_2,
      S_34 => S_34,
      buffer_Addr_S_I_2 => buffer_Addr_S_I_2,
      lopt => \^lopt_4\
    );
\Buffer_DFFs[2].FDS_I\: entity work.microblaze_mcs_1_MB_FDS_33
     port map (
      Clk => Clk,
      O => buffer_Addr_S_I_1,
      R => R,
      S => S0_out,
      \instr_EX_i_reg[9]\ => \^instr_ex_i_reg[9]_0\,
      mul_Executing_reg => mul_Executing_reg_0
    );
\Buffer_DFFs[2].MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_34
     port map (
      LO => buffer_Addr_Carry_2,
      O => buffer_Addr_S_I_1,
      S => S0_out,
      \Using_FPGA.Native\ => buffer_Addr_Carry_1,
      lopt => lopt_1,
      lopt_1 => \^lopt_3\,
      mul_Executing_reg => mul_Executing_reg_0
    );
\Buffer_DFFs[3].FDS_I\: entity work.microblaze_mcs_1_MB_FDS_35
     port map (
      Clk => Clk,
      O => buffer_Addr_S_I_0,
      R => R,
      \instr_EX_i_reg[9]\ => \^instr_ex_i_reg[9]\
    );
\Buffer_DFFs[3].MUXCY_XOR_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_XORCY_36
     port map (
      CI => CI,
      LO => buffer_Addr_Carry_1,
      O => buffer_Addr_S_I_0,
      S => S,
      lopt => lopt,
      lopt_1 => \^lopt_2\,
      mul_Executing_reg => mul_Executing_reg_0
    );
\PreFetch_Buffers[0].SRL16E_I\: entity work.microblaze_mcs_1_MB_SRL16E
     port map (
      CI => CI,
      Clk => Clk,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \^instr_of\(9),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ => \^instr_of\(5),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\ => \^using_fpga.native_2\,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\ => \^instr_of\(7),
      Instr(0) => Instr(0),
      \Result_Sel_reg[0]\ => \^instr_of\(10),
      \Using_FPGA.Native\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_0\ => \^instr_ex_i_reg[9]\,
      \Using_FPGA.Native_1\ => \^instr_ex_i_reg[9]_0\,
      \Using_FPGA.Native_2\ => \^instr_ex_i_reg[9]_1\,
      \Using_FPGA.take_Intr_2nd_Phase_reg\ => \Using_FPGA.take_Intr_2nd_Phase_reg_18\,
      byte_i12_out => \^byte_i12_out\,
      d_AS_I15_out => d_AS_I15_out,
      inHibit_EX => inHibit_EX,
      inHibit_EX_reg => \PreFetch_Buffers[0].SRL16E_I_n_2\,
      mul_Executing_reg => mul_Executing_reg_0,
      of_Pause_reg => of_Pause_reg,
      select_ALU_Carry_reg => select_ALU_Carry_reg,
      take_Intr_Now_III => take_Intr_Now_III,
      writing => writing
    );
\PreFetch_Buffers[10].SRL16E_I\: entity work.microblaze_mcs_1_MB_SRL16E_37
     port map (
      CI => CI,
      Clk => Clk,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \PreFetch_Buffers[2].SRL16E_I_n_2\,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ => \^instr_of\(2),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\ => \^instr_of\(1),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\ => \PreFetch_Buffers[5].SRL16E_I_n_2\,
      Instr(0) => Instr(10),
      Reg_Test_Equal_i => Reg_Test_Equal_i,
      \Using_FPGA.Native\ => \^instr_ex_i_reg[9]\,
      \Using_FPGA.Native_0\ => \^instr_ex_i_reg[9]_0\,
      \Using_FPGA.Native_1\ => \^instr_ex_i_reg[9]_1\,
      enable_Interrupts_I => enable_Interrupts_I,
      \instr_EX_i_reg[10]\ => \^instr_of\(0),
      sync_reset => sync_reset,
      take_Intr_Now_III => take_Intr_Now_III,
      \write_Addr_I_reg[4]\(0) => \write_Addr_I_reg[0]\(0)
    );
\PreFetch_Buffers[11].SRL16E_I\: entity work.microblaze_mcs_1_MB_SRL16E_38
     port map (
      CI => CI,
      Clk => Clk,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \^instr_of\(5),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ => \^instr_of\(7),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\ => \^instr_of\(9),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\ => \^instr_of\(10),
      Instr(0) => Instr(11),
      S92_out => S92_out,
      \Using_FPGA.Native\ => \^instr_ex_i_reg[9]\,
      \Using_FPGA.Native_0\ => \^instr_ex_i_reg[9]_0\,
      \Using_FPGA.Native_1\ => \^instr_ex_i_reg[9]_1\,
      \instr_EX_i_reg[11]\ => \^d\(18),
      jump2_I_reg => \PreFetch_Buffers[11].SRL16E_I_n_1\
    );
\PreFetch_Buffers[12].SRL16E_I\: entity work.microblaze_mcs_1_MB_SRL16E_39
     port map (
      CI => CI,
      Clk => Clk,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \PreFetch_Buffers[5].SRL16E_I_n_3\,
      Instr(0) => Instr(12),
      \Using_FPGA.Native\ => \^using_fpga.native_2\,
      \Using_FPGA.Native_0\ => \^instr_ex_i_reg[9]\,
      \Using_FPGA.Native_1\ => \^instr_ex_i_reg[9]_0\,
      \Using_FPGA.Native_2\ => \^instr_ex_i_reg[9]_1\,
      \instr_EX_i_reg[12]\ => \^d\(17)
    );
\PreFetch_Buffers[13].SRL16E_I\: entity work.microblaze_mcs_1_MB_SRL16E_40
     port map (
      CI => CI,
      Clk => Clk,
      D(0) => \^d\(18),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \PreFetch_Buffers[5].SRL16E_I_n_3\,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ => \^d\(17),
      Instr(0) => Instr(13),
      \Use_Async_Reset.sync_reset_reg\ => \Use_Async_Reset.sync_reset_reg_0\,
      \Using_FPGA.Native\ => \^instr_ex_i_reg[9]\,
      \Using_FPGA.Native_0\ => \^instr_ex_i_reg[9]_0\,
      \Using_FPGA.Native_1\ => \^instr_ex_i_reg[9]_1\,
      \Using_FPGA.set_BIP_I_reg\ => \Using_FPGA.set_BIP_I_reg\,
      \Using_FPGA.set_BIP_I_reg_0\ => \Using_FPGA.set_BIP_I_reg_0\,
      \instr_EX_i_reg[13]\ => \^d\(16),
      mul_Executing_reg => mul_Executing_reg_0,
      sync_reset => sync_reset
    );
\PreFetch_Buffers[14].SRL16E_I\: entity work.microblaze_mcs_1_MB_SRL16E_41
     port map (
      CI => CI,
      Clk => Clk,
      D(0) => \^d\(15),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \PreFetch_Buffers[4].SRL16E_I_n_11\,
      Instr(0) => Instr(14),
      \Using_FPGA.Native\ => \^instr_ex_i_reg[9]\,
      \Using_FPGA.Native_0\ => \^instr_ex_i_reg[9]_0\,
      \Using_FPGA.Native_1\ => \^instr_ex_i_reg[9]_1\,
      mbar_hold_I_reg => mbar_hold_I_reg,
      mbar_hold_I_reg_0 => mbar_hold_I_reg_0,
      mul_Executing_reg => mul_Executing_reg,
      mul_Executing_reg_0 => mul_Executing_reg_0,
      of_mbar_decode => of_mbar_decode,
      sync_reset => sync_reset,
      take_Intr_Now_III => take_Intr_Now_III
    );
\PreFetch_Buffers[15].SRL16E_I\: entity work.microblaze_mcs_1_MB_SRL16E_42
     port map (
      CI => CI,
      Clk => Clk,
      D(0) => \^d\(14),
      Instr(0) => Instr(15),
      \Using_FPGA.Native\ => \^instr_ex_i_reg[9]\,
      \Using_FPGA.Native_0\ => \^instr_ex_i_reg[9]_0\,
      \Using_FPGA.Native_1\ => \^instr_ex_i_reg[9]_1\
    );
\PreFetch_Buffers[16].SRL16E_I\: entity work.microblaze_mcs_1_MB_SRL16E_43
     port map (
      CI => CI,
      Clk => Clk,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \PreFetch_Buffers[2].SRL16E_I_n_5\,
      D_0 => D_0,
      D_1 => D_1,
      D_10 => D_10,
      D_11 => D_11,
      D_12 => D_12,
      D_13 => D_13,
      D_14 => D_14,
      D_15 => D_15,
      D_2 => D_2,
      D_3 => D_3,
      D_4 => D_4,
      D_5 => D_5,
      D_6 => D_6,
      D_7 => D_7,
      D_8 => D_8,
      D_9 => D_9,
      Instr(0) => Instr(16),
      \Size_17to32.imm_Reg_reg[0]\(15 downto 0) => \Size_17to32.imm_Reg_reg[0]\(15 downto 0),
      \Using_FPGA.Native\ => \^instr_ex_i_reg[9]\,
      \Using_FPGA.Native_0\ => \^instr_ex_i_reg[9]_0\,
      \Using_FPGA.Native_1\ => \^instr_ex_i_reg[9]_1\,
      \Using_FPGA.take_Intr_2nd_Phase_reg\ => \Using_FPGA.take_Intr_2nd_Phase_reg\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_0\ => \Using_FPGA.take_Intr_2nd_Phase_reg_0\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_1\ => \Using_FPGA.take_Intr_2nd_Phase_reg_1\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_10\ => \Using_FPGA.take_Intr_2nd_Phase_reg_10\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_11\ => \Using_FPGA.take_Intr_2nd_Phase_reg_11\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_12\ => \Using_FPGA.take_Intr_2nd_Phase_reg_12\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_13\ => \Using_FPGA.take_Intr_2nd_Phase_reg_13\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_14\ => \Using_FPGA.take_Intr_2nd_Phase_reg_14\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_2\ => \Using_FPGA.take_Intr_2nd_Phase_reg_2\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_3\ => \Using_FPGA.take_Intr_2nd_Phase_reg_3\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_4\ => \Using_FPGA.take_Intr_2nd_Phase_reg_4\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_5\ => \Using_FPGA.take_Intr_2nd_Phase_reg_5\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_6\ => \Using_FPGA.take_Intr_2nd_Phase_reg_6\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_7\ => \Using_FPGA.take_Intr_2nd_Phase_reg_7\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_8\ => \Using_FPGA.take_Intr_2nd_Phase_reg_8\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_9\ => \Using_FPGA.take_Intr_2nd_Phase_reg_9\,
      \instr_EX_i_reg[16]\ => \^d\(13),
      use_Imm_Reg => use_Imm_Reg
    );
\PreFetch_Buffers[17].SRL16E_I\: entity work.microblaze_mcs_1_MB_SRL16E_44
     port map (
      CI => CI,
      Clk => Clk,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \^d\(0),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ => \PreFetch_Buffers[4].SRL16E_I_n_4\,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\ => \PreFetch_Buffers[2].SRL16E_I_n_5\,
      D_17 => D_17,
      Instr(0) => Instr(17),
      \Using_FPGA.Native\ => \^instr_ex_i_reg[9]\,
      \Using_FPGA.Native_0\ => \^instr_ex_i_reg[9]_0\,
      \Using_FPGA.Native_1\ => \^instr_ex_i_reg[9]_1\,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[12]\ => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[12]\,
      \instr_EX_i_reg[17]\ => \^d\(12),
      mtsmsr_write_i_reg => mtsmsr_write_i_reg,
      mtsmsr_write_i_reg_0 => mtsmsr_write_i_reg_0,
      mul_Executing_reg => mul_Executing_reg_0
    );
\PreFetch_Buffers[18].SRL16E_I\: entity work.microblaze_mcs_1_MB_SRL16E_45
     port map (
      CI => CI,
      Clk => Clk,
      D(0) => \^d\(11),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \PreFetch_Buffers[2].SRL16E_I_n_5\,
      D_18 => D_18,
      Instr(0) => Instr(18),
      \Using_FPGA.Native\ => \^instr_ex_i_reg[9]\,
      \Using_FPGA.Native_0\ => \^instr_ex_i_reg[9]_0\,
      \Using_FPGA.Native_1\ => \^instr_ex_i_reg[9]_1\,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[11]\ => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[11]\
    );
\PreFetch_Buffers[19].SRL16E_I\: entity work.microblaze_mcs_1_MB_SRL16E_46
     port map (
      CI => CI,
      Clk => Clk,
      D(0) => \^d\(10),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \PreFetch_Buffers[2].SRL16E_I_n_5\,
      D_19 => D_19,
      Instr(0) => Instr(19),
      \Using_FPGA.Native\ => \^instr_ex_i_reg[9]\,
      \Using_FPGA.Native_0\ => \^instr_ex_i_reg[9]_0\,
      \Using_FPGA.Native_1\ => \^instr_ex_i_reg[9]_1\,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[10]\ => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[10]\
    );
\PreFetch_Buffers[1].SRL16E_I\: entity work.microblaze_mcs_1_MB_SRL16E_47
     port map (
      CI => CI,
      Clk => Clk,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \^instr_of\(10),
      Instr(0) => Instr(1),
      \Result_Sel_reg[1]\ => \^instr_of\(9),
      \Using_FPGA.Native\ => \^instr_ex_i_reg[9]\,
      \Using_FPGA.Native_0\ => \^instr_ex_i_reg[9]_0\,
      \Using_FPGA.Native_1\ => \^instr_ex_i_reg[9]_1\,
      load_Store_i_reg => load_Store_i_reg,
      take_Intr_Now_III => take_Intr_Now_III
    );
\PreFetch_Buffers[20].SRL16E_I\: entity work.microblaze_mcs_1_MB_SRL16E_48
     port map (
      CI => CI,
      Clk => Clk,
      D(0) => \^d\(9),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \PreFetch_Buffers[2].SRL16E_I_n_5\,
      D_20 => D_20,
      Instr(0) => Instr(20),
      \Using_FPGA.Native\ => \^instr_ex_i_reg[9]\,
      \Using_FPGA.Native_0\ => \^instr_ex_i_reg[9]_0\,
      \Using_FPGA.Native_1\ => \^instr_ex_i_reg[9]_1\,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[9]\ => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[9]\
    );
\PreFetch_Buffers[21].SRL16E_I\: entity work.microblaze_mcs_1_MB_SRL16E_49
     port map (
      CI => CI,
      Clk => Clk,
      D(0) => \^d\(8),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \PreFetch_Buffers[2].SRL16E_I_n_5\,
      D_21 => D_21,
      Instr(0) => Instr(21),
      \Using_FPGA.Native\ => \^instr_ex_i_reg[9]\,
      \Using_FPGA.Native_0\ => \^instr_ex_i_reg[9]_0\,
      \Using_FPGA.Native_1\ => \^instr_ex_i_reg[9]_1\,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[8]\ => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[8]\
    );
\PreFetch_Buffers[22].SRL16E_I\: entity work.microblaze_mcs_1_MB_SRL16E_50
     port map (
      CI => CI,
      Clk => Clk,
      D(0) => \^d\(7),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \PreFetch_Buffers[2].SRL16E_I_n_5\,
      D_22 => D_22,
      Instr(0) => Instr(22),
      \Using_FPGA.Native\ => \^instr_ex_i_reg[9]\,
      \Using_FPGA.Native_0\ => \^instr_ex_i_reg[9]_0\,
      \Using_FPGA.Native_1\ => \^instr_ex_i_reg[9]_1\,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[7]\ => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[7]\
    );
\PreFetch_Buffers[23].SRL16E_I\: entity work.microblaze_mcs_1_MB_SRL16E_51
     port map (
      CI => CI,
      Clk => Clk,
      D(0) => \^d\(6),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \PreFetch_Buffers[2].SRL16E_I_n_5\,
      D_23 => D_23,
      Instr(0) => Instr(23),
      \Using_FPGA.Native\ => \^instr_ex_i_reg[9]\,
      \Using_FPGA.Native_0\ => \^instr_ex_i_reg[9]_0\,
      \Using_FPGA.Native_1\ => \^instr_ex_i_reg[9]_1\,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[6]\ => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[6]\
    );
\PreFetch_Buffers[24].SRL16E_I\: entity work.microblaze_mcs_1_MB_SRL16E_52
     port map (
      CI => CI,
      Clk => Clk,
      D(0) => \^d\(5),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \PreFetch_Buffers[2].SRL16E_I_n_5\,
      D_24 => D_24,
      Instr(0) => Instr(24),
      \Using_FPGA.Native\ => \^instr_ex_i_reg[9]\,
      \Using_FPGA.Native_0\ => \^instr_ex_i_reg[9]_0\,
      \Using_FPGA.Native_1\ => \^instr_ex_i_reg[9]_1\,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[5]\ => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[5]\
    );
\PreFetch_Buffers[25].SRL16E_I\: entity work.microblaze_mcs_1_MB_SRL16E_53
     port map (
      CI => CI,
      Clk => Clk,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \PreFetch_Buffers[2].SRL16E_I_n_5\,
      D_25 => D_25,
      Instr(0) => Instr(25),
      \Using_FPGA.Native\ => \^instr_ex_i_reg[9]\,
      \Using_FPGA.Native_0\ => \^instr_ex_i_reg[9]_0\,
      \Using_FPGA.Native_1\ => \^instr_ex_i_reg[9]_1\,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[4]\ => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[4]\,
      \instr_EX_i_reg[25]\ => \^instr_ex_i_reg[25]\
    );
\PreFetch_Buffers[26].SRL16E_I\: entity work.microblaze_mcs_1_MB_SRL16E_54
     port map (
      CI => CI,
      Clk => Clk,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \^instr_ex_i_reg[25]\,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ => \^d\(0),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\ => \^write_carry_i_reg\,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\ => \^instr_of\(7),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_3\ => \^instr_of\(10),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_4\ => \^instr_of\(9),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_5\ => \PreFetch_Buffers[2].SRL16E_I_n_5\,
      D_26 => D_26,
      Instr(0) => Instr(26),
      Sext16 => Sext16,
      Sext16_reg => Sext16_reg,
      \Use_Async_Reset.sync_reset_reg\ => \Use_Async_Reset.sync_reset_reg\,
      \Using_FPGA.Native\ => \^instr_ex_i_reg[9]\,
      \Using_FPGA.Native_0\ => \^instr_ex_i_reg[9]_0\,
      \Using_FPGA.Native_1\ => \^instr_ex_i_reg[9]_1\,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[3]\ => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[3]\,
      \instr_EX_i_reg[26]\ => \^instr_ex_i_reg[26]\,
      mul_Executing_reg => mul_Executing_reg_0,
      write_Carry_I_reg => write_Carry_I_reg_0
    );
\PreFetch_Buffers[27].SRL16E_I\: entity work.microblaze_mcs_1_MB_SRL16E_55
     port map (
      CI => CI,
      Clk => Clk,
      D(0) => \^d\(4),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \PreFetch_Buffers[2].SRL16E_I_n_5\,
      D_27 => D_27,
      Instr(0) => Instr(27),
      \Using_FPGA.Native\ => \^instr_ex_i_reg[9]\,
      \Using_FPGA.Native_0\ => \^instr_ex_i_reg[9]_0\,
      \Using_FPGA.Native_1\ => \^instr_ex_i_reg[9]_1\,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[2]\ => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[2]\
    );
\PreFetch_Buffers[28].SRL16E_I\: entity work.microblaze_mcs_1_MB_SRL16E_56
     port map (
      CI => CI,
      Clk => Clk,
      D(0) => \^d\(3),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \PreFetch_Buffers[2].SRL16E_I_n_5\,
      D_28 => D_28,
      Instr(0) => Instr(28),
      \Using_FPGA.Native\ => \^instr_ex_i_reg[9]\,
      \Using_FPGA.Native_0\ => \^instr_ex_i_reg[9]_0\,
      \Using_FPGA.Native_1\ => \^instr_ex_i_reg[9]_1\,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[1]\ => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[1]\
    );
\PreFetch_Buffers[29].SRL16E_I\: entity work.microblaze_mcs_1_MB_SRL16E_57
     port map (
      CI => CI,
      Clk => Clk,
      D(0) => \^d\(2),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\(2) => \^d\(16),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\(1) => \^d\(12),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\(0) => \^d\(3),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ => \PreFetch_Buffers[5].SRL16E_I_n_3\,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\ => \PreFetch_Buffers[2].SRL16E_I_n_3\,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\ => \PreFetch_Buffers[4].SRL16E_I_n_4\,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_3\ => \PreFetch_Buffers[2].SRL16E_I_n_5\,
      D_29 => D_29,
      Instr(0) => Instr(29),
      \Using_FPGA.Native\ => \^instr_ex_i_reg[9]\,
      \Using_FPGA.Native_0\ => \^instr_ex_i_reg[9]_0\,
      \Using_FPGA.Native_1\ => \^instr_ex_i_reg[9]_1\,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[0]\ => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[0]\,
      write_Reg_reg => write_Reg_reg_0
    );
\PreFetch_Buffers[2].SRL16E_I\: entity work.microblaze_mcs_1_MB_SRL16E_58
     port map (
      CI => CI,
      Clk => Clk,
      Compare_Instr_reg => Compare_Instr_reg,
      D(1) => \^d\(13),
      D(0) => \^d\(0),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \PreFetch_Buffers[5].SRL16E_I_n_3\,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ => \^instr_of\(6),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\ => \^instr_of\(7),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\ => \^instr_of\(9),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_3\ => \^instr_of\(10),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_4\ => \^instr_of\(5),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_5\ => \PreFetch_Buffers[4].SRL16E_I_n_4\,
      D_16 => D_16,
      Instr(0) => Instr(2),
      S92_out => S92_out,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \PreFetch_Buffers[2].SRL16E_I_n_2\,
      \Using_FPGA.Native_1\ => \PreFetch_Buffers[2].SRL16E_I_n_5\,
      \Using_FPGA.Native_2\ => \^instr_ex_i_reg[9]\,
      \Using_FPGA.Native_3\ => \^instr_ex_i_reg[9]_0\,
      \Using_FPGA.Native_4\ => \^instr_ex_i_reg[9]_1\,
      \Using_FPGA.take_Intr_2nd_Phase_reg\ => \Using_FPGA.take_Intr_2nd_Phase_reg_15\,
      force_Val2_N => force_Val2_N,
      \instr_EX_i_reg[2]\ => \^instr_of\(8),
      mul_Executing_reg => mul_Executing_reg_0,
      take_Intr_Now_II => take_Intr_Now_II,
      take_Intr_Now_III => take_Intr_Now_III,
      write_Reg_reg => \PreFetch_Buffers[2].SRL16E_I_n_3\
    );
\PreFetch_Buffers[30].SRL16E_I\: entity work.microblaze_mcs_1_MB_SRL16E_59
     port map (
      CI => CI,
      Clk => Clk,
      D(0) => \^d\(1),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \PreFetch_Buffers[2].SRL16E_I_n_5\,
      D_30 => D_30,
      Instr(0) => Instr(30),
      \Using_FPGA.Native\ => \^instr_ex_i_reg[9]\,
      \Using_FPGA.Native_0\ => \^instr_ex_i_reg[9]_0\,
      \Using_FPGA.Native_1\ => \^instr_ex_i_reg[9]_1\,
      \Using_FPGA.take_Intr_2nd_Phase_reg\ => \Using_FPGA.take_Intr_2nd_Phase_reg_16\
    );
\PreFetch_Buffers[31].SRL16E_I\: entity work.microblaze_mcs_1_MB_SRL16E_60
     port map (
      CI => CI,
      Clk => Clk,
      D(0) => \^d\(0),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \^instr_ex_i_reg[26]\,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ => \^instr_ex_i_reg[25]\,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\ => \PreFetch_Buffers[2].SRL16E_I_n_5\,
      D_31 => D_31,
      Instr(0) => Instr(31),
      Sext8_reg => Sext8_reg,
      \Use_Async_Reset.sync_reset_reg\ => \Use_Async_Reset.sync_reset_reg\,
      \Using_FPGA.Native\ => \^instr_ex_i_reg[9]\,
      \Using_FPGA.Native_0\ => \^instr_ex_i_reg[9]_0\,
      \Using_FPGA.Native_1\ => \^instr_ex_i_reg[9]_1\,
      \Using_FPGA.take_Intr_2nd_Phase_reg\ => \Using_FPGA.take_Intr_2nd_Phase_reg_17\,
      mul_Executing_reg => mul_Executing_reg_0,
      sext8 => sext8
    );
\PreFetch_Buffers[3].SRL16E_I\: entity work.microblaze_mcs_1_MB_SRL16E_61
     port map (
      CI => CI,
      Clk => Clk,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \^instr_of\(6),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ => \^instr_of\(9),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\ => \^instr_of\(10),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\ => \^instr_of\(5),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_3\ => \^instr_of\(8),
      Instr(0) => Instr(3),
      \Size_17to32.imm_Reg_reg[15]\ => \^size_17to32.imm_reg_reg[15]\,
      \Using_FPGA.Native\ => \^instr_ex_i_reg[9]\,
      \Using_FPGA.Native_0\ => \^instr_ex_i_reg[9]_0\,
      \Using_FPGA.Native_1\ => \^instr_ex_i_reg[9]_1\,
      \instr_EX_i_reg[3]\ => \^instr_of\(7)
    );
\PreFetch_Buffers[4].SRL16E_I\: entity work.microblaze_mcs_1_MB_SRL16E_62
     port map (
      CI => CI,
      Clk => Clk,
      D(3 downto 2) => \^d\(16 downto 15),
      D(1) => \^d\(12),
      D(0) => \^d\(8),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \^instr_of\(5),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ => \PreFetch_Buffers[5].SRL16E_I_n_3\,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\ => \PreFetch_Buffers[2].SRL16E_I_n_3\,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\ => \^instr_of\(1),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_3\ => \^instr_of\(2),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_4\ => \^instr_of\(0),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_5\ => \^instr_of\(7),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_6\ => \^instr_of\(9),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_7\ => \^instr_of\(10),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_8\ => \^instr_of\(8),
      Instr(0) => Instr(4),
      S92_out => S92_out,
      \Using_FPGA.Native\ => force2_i,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_1\ => \^instr_ex_i_reg[9]\,
      \Using_FPGA.Native_2\ => \^instr_ex_i_reg[9]_0\,
      \Using_FPGA.Native_3\ => \^instr_ex_i_reg[9]_1\,
      byte_i12_out => \^byte_i12_out\,
      byte_i_reg => byte_i_reg,
      doublet_i_reg => doublet_i_reg,
      force_Val1_i27_out => force_Val1_i27_out,
      \instr_EX_i_reg[4]\ => \^instr_of\(6),
      is_swx_I_reg => is_swx_I_reg,
      isbyte => isbyte,
      isdoublet => isdoublet,
      mbar_first => mbar_first,
      mbar_first_reg => mbar_first_reg,
      mtsmsr_write_i_reg => \PreFetch_Buffers[4].SRL16E_I_n_4\,
      mul_Executing_reg => \PreFetch_Buffers[4].SRL16E_I_n_11\,
      mul_Executing_reg_0 => mul_Executing_reg_0,
      sync_reset => sync_reset,
      take_Intr_Now_III => take_Intr_Now_III,
      use_Reg_Neg_DI_i26_out => use_Reg_Neg_DI_i26_out,
      use_Reg_Neg_S_i28_out => use_Reg_Neg_S_i28_out,
      write_Carry_I_reg => \^write_carry_i_reg\,
      write_Reg_reg => write_Reg_reg
    );
\PreFetch_Buffers[5].SRL16E_I\: entity work.microblaze_mcs_1_MB_SRL16E_63
     port map (
      CI => CI,
      Clk => Clk,
      D(0) => \^d\(0),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \^d\(12),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ => \PreFetch_Buffers[4].SRL16E_I_n_4\,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\ => \^instr_of\(1),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\ => \^instr_of\(2),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_3\ => \^d\(17),
      D_32 => D_32,
      Instr(0) => Instr(5),
      Reg_Test_Equal_N_i7_out => Reg_Test_Equal_N_i7_out,
      \Using_FPGA.Native\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_0\ => \PreFetch_Buffers[5].SRL16E_I_n_2\,
      \Using_FPGA.Native_1\ => \PreFetch_Buffers[5].SRL16E_I_n_3\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_3\ => \^instr_ex_i_reg[9]\,
      \Using_FPGA.Native_4\ => \^instr_ex_i_reg[9]_0\,
      \Using_FPGA.Native_5\ => \^instr_ex_i_reg[9]_1\,
      \Using_FPGA.take_Intr_2nd_Phase_reg\ => \Using_FPGA.take_Intr_2nd_Phase_reg_18\,
      inHibit_EX_reg => \PreFetch_Buffers[11].SRL16E_I_n_1\,
      \instr_EX_i_reg[5]\ => \^instr_of\(5),
      instr_OF(6 downto 2) => \^instr_of\(10 downto 6),
      instr_OF(1) => \^instr_of\(4),
      instr_OF(0) => \^instr_of\(0),
      jump2_I_reg => jump2_I_reg,
      take_Intr_Now_III => take_Intr_Now_III
    );
\PreFetch_Buffers[6].SRL16E_I\: entity work.microblaze_mcs_1_MB_SRL16E_64
     port map (
      CI => CI,
      Clk => Clk,
      D(0) => \^d\(18),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\(2 downto 1) => \^instr_of\(6 downto 5),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\(0) => \^instr_of\(3),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ => \PreFetch_Buffers[0].SRL16E_I_n_2\,
      Instr(0) => Instr(6),
      S92_out => S92_out,
      \Using_FPGA.Native\ => \^instr_ex_i_reg[9]\,
      \Using_FPGA.Native_0\ => \^instr_ex_i_reg[9]_0\,
      \Using_FPGA.Native_1\ => \^instr_ex_i_reg[9]_1\,
      inHibit_EX_reg => inHibit_EX_reg,
      instr_OF(0) => \^instr_of\(4),
      mbar_is_sleep0 => mbar_is_sleep0,
      sync_reset => sync_reset,
      take_Intr_Now_III => take_Intr_Now_III,
      \write_Addr_I_reg[0]\(0) => \write_Addr_I_reg[0]\(1)
    );
\PreFetch_Buffers[7].SRL16E_I\: entity work.microblaze_mcs_1_MB_SRL16E_65
     port map (
      CI => CI,
      Clk => Clk,
      Instr(0) => Instr(7),
      \Using_FPGA.Native\ => \^instr_ex_i_reg[9]\,
      \Using_FPGA.Native_0\ => \^instr_ex_i_reg[9]_0\,
      \Using_FPGA.Native_1\ => \^instr_ex_i_reg[9]_1\,
      instr_OF(0) => \^instr_of\(3)
    );
\PreFetch_Buffers[8].SRL16E_I\: entity work.microblaze_mcs_1_MB_SRL16E_66
     port map (
      CI => CI,
      Clk => Clk,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \^instr_of\(1),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ => \PreFetch_Buffers[5].SRL16E_I_n_2\,
      Instr(0) => Instr(8),
      \Using_FPGA.Native\ => \^instr_ex_i_reg[9]\,
      \Using_FPGA.Native_0\ => \^instr_ex_i_reg[9]_0\,
      \Using_FPGA.Native_1\ => \^instr_ex_i_reg[9]_1\,
      force1_i29_out => force1_i29_out,
      \instr_EX_i_reg[8]\ => \^instr_of\(2),
      take_Intr_Now_III => take_Intr_Now_III
    );
\PreFetch_Buffers[9].SRL16E_I\: entity work.microblaze_mcs_1_MB_SRL16E_67
     port map (
      CI => CI,
      Clk => Clk,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \PreFetch_Buffers[2].SRL16E_I_n_2\,
      Instr(0) => Instr(9),
      \Using_FPGA.Native\ => \^instr_ex_i_reg[9]\,
      \Using_FPGA.Native_0\ => \^instr_ex_i_reg[9]_0\,
      \Using_FPGA.Native_1\ => \^instr_ex_i_reg[9]_1\,
      \instr_EX_i_reg[9]\ => \^instr_of\(1),
      reset_BIP_I8_out => reset_BIP_I8_out,
      take_Intr_Now_III => take_Intr_Now_III
    );
of_Valid_early: unisim.vcomponents.LUT3
    generic map(
      INIT => X"7F"
    )
        port map (
      I0 => buffer_Addr_S_I_2,
      I1 => buffer_Addr_S_I_1,
      I2 => buffer_Addr_S_I_0,
      O => D_33
    );
of_valid_FDR_I: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDR
     port map (
      Clk => Clk,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \^size_17to32.imm_reg_reg[15]\,
      DI => DI,
      DReady => DReady,
      D_33 => D_33,
      E(0) => E(0),
      Increment => Increment,
      \No_ECC.Sl_Rdy_reg\ => \No_ECC.Sl_Rdy_reg\,
      R => R,
      \Size_17to32.imm_Reg_reg[15]\ => of_Valid_Raw,
      \Using_FPGA.Native_0\ => \^instr_ex_i_reg[9]_1\,
      buffer_Full => buffer_Full,
      ex_Valid => ex_Valid,
      ex_Valid_reg => ex_Valid_reg,
      inHibit_EX => inHibit_EX,
      jump2_I_reg => jump2_I_reg_0,
      jump_Carry2 => jump_Carry2,
      load_Store_i => load_Store_i,
      mbar_hold_I_reg => mbar_hold_I_reg_0,
      missed_IFetch => missed_IFetch,
      mul_Executing => mul_Executing,
      mul_Executing_reg => mul_Executing_reg,
      mul_Executing_reg_0 => mul_Executing_reg_0,
      nonvalid_IFetch_n_reg => nonvalid_IFetch_n_reg,
      nonvalid_IFetch_n_reg_0 => nonvalid_IFetch_n_reg_0,
      of_Pause => of_Pause,
      of_Pause_reg => of_Pause_reg,
      take_Intr_Now_III => take_Intr_Now_III,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File_Bit is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
end microblaze_mcs_1_Register_File_Bit;

architecture STRUCTURE of microblaze_mcs_1_Register_File_Bit is
begin
RegFile_X1: entity work.microblaze_mcs_1_MB_RAM32X1D_415
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
RegFile_X2: entity work.microblaze_mcs_1_MB_RAM32X1D_416
     port map (
      Clk => Clk,
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File_Bit_323 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Register_File_Bit_323 : entity is "Register_File_Bit";
end microblaze_mcs_1_Register_File_Bit_323;

architecture STRUCTURE of microblaze_mcs_1_Register_File_Bit_323 is
begin
RegFile_X1: entity work.microblaze_mcs_1_MB_RAM32X1D_413
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
RegFile_X2: entity work.microblaze_mcs_1_MB_RAM32X1D_414
     port map (
      Clk => Clk,
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File_Bit_324 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Register_File_Bit_324 : entity is "Register_File_Bit";
end microblaze_mcs_1_Register_File_Bit_324;

architecture STRUCTURE of microblaze_mcs_1_Register_File_Bit_324 is
begin
RegFile_X1: entity work.microblaze_mcs_1_MB_RAM32X1D_411
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
RegFile_X2: entity work.microblaze_mcs_1_MB_RAM32X1D_412
     port map (
      Clk => Clk,
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File_Bit_325 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Register_File_Bit_325 : entity is "Register_File_Bit";
end microblaze_mcs_1_Register_File_Bit_325;

architecture STRUCTURE of microblaze_mcs_1_Register_File_Bit_325 is
begin
RegFile_X1: entity work.microblaze_mcs_1_MB_RAM32X1D_409
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
RegFile_X2: entity work.microblaze_mcs_1_MB_RAM32X1D_410
     port map (
      Clk => Clk,
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File_Bit_326 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Register_File_Bit_326 : entity is "Register_File_Bit";
end microblaze_mcs_1_Register_File_Bit_326;

architecture STRUCTURE of microblaze_mcs_1_Register_File_Bit_326 is
begin
RegFile_X1: entity work.microblaze_mcs_1_MB_RAM32X1D_407
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
RegFile_X2: entity work.microblaze_mcs_1_MB_RAM32X1D_408
     port map (
      Clk => Clk,
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File_Bit_327 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Register_File_Bit_327 : entity is "Register_File_Bit";
end microblaze_mcs_1_Register_File_Bit_327;

architecture STRUCTURE of microblaze_mcs_1_Register_File_Bit_327 is
begin
RegFile_X1: entity work.microblaze_mcs_1_MB_RAM32X1D_405
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
RegFile_X2: entity work.microblaze_mcs_1_MB_RAM32X1D_406
     port map (
      Clk => Clk,
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File_Bit_328 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Register_File_Bit_328 : entity is "Register_File_Bit";
end microblaze_mcs_1_Register_File_Bit_328;

architecture STRUCTURE of microblaze_mcs_1_Register_File_Bit_328 is
begin
RegFile_X1: entity work.microblaze_mcs_1_MB_RAM32X1D_403
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
RegFile_X2: entity work.microblaze_mcs_1_MB_RAM32X1D_404
     port map (
      Clk => Clk,
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File_Bit_329 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Register_File_Bit_329 : entity is "Register_File_Bit";
end microblaze_mcs_1_Register_File_Bit_329;

architecture STRUCTURE of microblaze_mcs_1_Register_File_Bit_329 is
begin
RegFile_X1: entity work.microblaze_mcs_1_MB_RAM32X1D_401
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
RegFile_X2: entity work.microblaze_mcs_1_MB_RAM32X1D_402
     port map (
      Clk => Clk,
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File_Bit_330 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Register_File_Bit_330 : entity is "Register_File_Bit";
end microblaze_mcs_1_Register_File_Bit_330;

architecture STRUCTURE of microblaze_mcs_1_Register_File_Bit_330 is
begin
RegFile_X1: entity work.microblaze_mcs_1_MB_RAM32X1D_399
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
RegFile_X2: entity work.microblaze_mcs_1_MB_RAM32X1D_400
     port map (
      Clk => Clk,
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File_Bit_331 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Register_File_Bit_331 : entity is "Register_File_Bit";
end microblaze_mcs_1_Register_File_Bit_331;

architecture STRUCTURE of microblaze_mcs_1_Register_File_Bit_331 is
begin
RegFile_X1: entity work.microblaze_mcs_1_MB_RAM32X1D_397
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
RegFile_X2: entity work.microblaze_mcs_1_MB_RAM32X1D_398
     port map (
      Clk => Clk,
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File_Bit_332 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Register_File_Bit_332 : entity is "Register_File_Bit";
end microblaze_mcs_1_Register_File_Bit_332;

architecture STRUCTURE of microblaze_mcs_1_Register_File_Bit_332 is
begin
RegFile_X1: entity work.microblaze_mcs_1_MB_RAM32X1D_395
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
RegFile_X2: entity work.microblaze_mcs_1_MB_RAM32X1D_396
     port map (
      Clk => Clk,
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File_Bit_333 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Register_File_Bit_333 : entity is "Register_File_Bit";
end microblaze_mcs_1_Register_File_Bit_333;

architecture STRUCTURE of microblaze_mcs_1_Register_File_Bit_333 is
begin
RegFile_X1: entity work.microblaze_mcs_1_MB_RAM32X1D_393
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
RegFile_X2: entity work.microblaze_mcs_1_MB_RAM32X1D_394
     port map (
      Clk => Clk,
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File_Bit_334 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Register_File_Bit_334 : entity is "Register_File_Bit";
end microblaze_mcs_1_Register_File_Bit_334;

architecture STRUCTURE of microblaze_mcs_1_Register_File_Bit_334 is
begin
RegFile_X1: entity work.microblaze_mcs_1_MB_RAM32X1D_391
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
RegFile_X2: entity work.microblaze_mcs_1_MB_RAM32X1D_392
     port map (
      Clk => Clk,
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File_Bit_335 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Register_File_Bit_335 : entity is "Register_File_Bit";
end microblaze_mcs_1_Register_File_Bit_335;

architecture STRUCTURE of microblaze_mcs_1_Register_File_Bit_335 is
begin
RegFile_X1: entity work.microblaze_mcs_1_MB_RAM32X1D_389
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
RegFile_X2: entity work.microblaze_mcs_1_MB_RAM32X1D_390
     port map (
      Clk => Clk,
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File_Bit_336 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Register_File_Bit_336 : entity is "Register_File_Bit";
end microblaze_mcs_1_Register_File_Bit_336;

architecture STRUCTURE of microblaze_mcs_1_Register_File_Bit_336 is
begin
RegFile_X1: entity work.microblaze_mcs_1_MB_RAM32X1D_387
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
RegFile_X2: entity work.microblaze_mcs_1_MB_RAM32X1D_388
     port map (
      Clk => Clk,
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File_Bit_337 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Register_File_Bit_337 : entity is "Register_File_Bit";
end microblaze_mcs_1_Register_File_Bit_337;

architecture STRUCTURE of microblaze_mcs_1_Register_File_Bit_337 is
begin
RegFile_X1: entity work.microblaze_mcs_1_MB_RAM32X1D_385
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
RegFile_X2: entity work.microblaze_mcs_1_MB_RAM32X1D_386
     port map (
      Clk => Clk,
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File_Bit_338 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Register_File_Bit_338 : entity is "Register_File_Bit";
end microblaze_mcs_1_Register_File_Bit_338;

architecture STRUCTURE of microblaze_mcs_1_Register_File_Bit_338 is
begin
RegFile_X1: entity work.microblaze_mcs_1_MB_RAM32X1D_383
     port map (
      Clk => Clk,
      D(0) => D(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
RegFile_X2: entity work.microblaze_mcs_1_MB_RAM32X1D_384
     port map (
      Clk => Clk,
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File_Bit_339 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Register_File_Bit_339 : entity is "Register_File_Bit";
end microblaze_mcs_1_Register_File_Bit_339;

architecture STRUCTURE of microblaze_mcs_1_Register_File_Bit_339 is
begin
RegFile_X1: entity work.microblaze_mcs_1_MB_RAM32X1D_381
     port map (
      Clk => Clk,
      D(0) => D(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
RegFile_X2: entity work.microblaze_mcs_1_MB_RAM32X1D_382
     port map (
      Clk => Clk,
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File_Bit_340 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Register_File_Bit_340 : entity is "Register_File_Bit";
end microblaze_mcs_1_Register_File_Bit_340;

architecture STRUCTURE of microblaze_mcs_1_Register_File_Bit_340 is
begin
RegFile_X1: entity work.microblaze_mcs_1_MB_RAM32X1D_379
     port map (
      Clk => Clk,
      D(0) => D(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
RegFile_X2: entity work.microblaze_mcs_1_MB_RAM32X1D_380
     port map (
      Clk => Clk,
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File_Bit_341 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Register_File_Bit_341 : entity is "Register_File_Bit";
end microblaze_mcs_1_Register_File_Bit_341;

architecture STRUCTURE of microblaze_mcs_1_Register_File_Bit_341 is
begin
RegFile_X1: entity work.microblaze_mcs_1_MB_RAM32X1D_377
     port map (
      Clk => Clk,
      D(0) => D(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
RegFile_X2: entity work.microblaze_mcs_1_MB_RAM32X1D_378
     port map (
      Clk => Clk,
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File_Bit_342 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Register_File_Bit_342 : entity is "Register_File_Bit";
end microblaze_mcs_1_Register_File_Bit_342;

architecture STRUCTURE of microblaze_mcs_1_Register_File_Bit_342 is
begin
RegFile_X1: entity work.microblaze_mcs_1_MB_RAM32X1D_375
     port map (
      Clk => Clk,
      D(0) => D(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
RegFile_X2: entity work.microblaze_mcs_1_MB_RAM32X1D_376
     port map (
      Clk => Clk,
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File_Bit_343 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Register_File_Bit_343 : entity is "Register_File_Bit";
end microblaze_mcs_1_Register_File_Bit_343;

architecture STRUCTURE of microblaze_mcs_1_Register_File_Bit_343 is
begin
RegFile_X1: entity work.microblaze_mcs_1_MB_RAM32X1D_373
     port map (
      Clk => Clk,
      D(0) => D(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
RegFile_X2: entity work.microblaze_mcs_1_MB_RAM32X1D_374
     port map (
      Clk => Clk,
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File_Bit_344 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Register_File_Bit_344 : entity is "Register_File_Bit";
end microblaze_mcs_1_Register_File_Bit_344;

architecture STRUCTURE of microblaze_mcs_1_Register_File_Bit_344 is
begin
RegFile_X1: entity work.microblaze_mcs_1_MB_RAM32X1D_371
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
RegFile_X2: entity work.microblaze_mcs_1_MB_RAM32X1D_372
     port map (
      Clk => Clk,
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File_Bit_345 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Register_File_Bit_345 : entity is "Register_File_Bit";
end microblaze_mcs_1_Register_File_Bit_345;

architecture STRUCTURE of microblaze_mcs_1_Register_File_Bit_345 is
begin
RegFile_X1: entity work.microblaze_mcs_1_MB_RAM32X1D_369
     port map (
      Clk => Clk,
      D(0) => D(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
RegFile_X2: entity work.microblaze_mcs_1_MB_RAM32X1D_370
     port map (
      Clk => Clk,
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File_Bit_346 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Register_File_Bit_346 : entity is "Register_File_Bit";
end microblaze_mcs_1_Register_File_Bit_346;

architecture STRUCTURE of microblaze_mcs_1_Register_File_Bit_346 is
begin
RegFile_X1: entity work.microblaze_mcs_1_MB_RAM32X1D_367
     port map (
      Clk => Clk,
      D(0) => D(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
RegFile_X2: entity work.microblaze_mcs_1_MB_RAM32X1D_368
     port map (
      Clk => Clk,
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File_Bit_347 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Register_File_Bit_347 : entity is "Register_File_Bit";
end microblaze_mcs_1_Register_File_Bit_347;

architecture STRUCTURE of microblaze_mcs_1_Register_File_Bit_347 is
begin
RegFile_X1: entity work.microblaze_mcs_1_MB_RAM32X1D_365
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
RegFile_X2: entity work.microblaze_mcs_1_MB_RAM32X1D_366
     port map (
      Clk => Clk,
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File_Bit_348 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Register_File_Bit_348 : entity is "Register_File_Bit";
end microblaze_mcs_1_Register_File_Bit_348;

architecture STRUCTURE of microblaze_mcs_1_Register_File_Bit_348 is
begin
RegFile_X1: entity work.microblaze_mcs_1_MB_RAM32X1D_363
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
RegFile_X2: entity work.microblaze_mcs_1_MB_RAM32X1D_364
     port map (
      Clk => Clk,
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File_Bit_349 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Register_File_Bit_349 : entity is "Register_File_Bit";
end microblaze_mcs_1_Register_File_Bit_349;

architecture STRUCTURE of microblaze_mcs_1_Register_File_Bit_349 is
begin
RegFile_X1: entity work.microblaze_mcs_1_MB_RAM32X1D_361
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
RegFile_X2: entity work.microblaze_mcs_1_MB_RAM32X1D_362
     port map (
      Clk => Clk,
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File_Bit_350 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Register_File_Bit_350 : entity is "Register_File_Bit";
end microblaze_mcs_1_Register_File_Bit_350;

architecture STRUCTURE of microblaze_mcs_1_Register_File_Bit_350 is
begin
RegFile_X1: entity work.microblaze_mcs_1_MB_RAM32X1D_359
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
RegFile_X2: entity work.microblaze_mcs_1_MB_RAM32X1D_360
     port map (
      Clk => Clk,
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File_Bit_351 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Register_File_Bit_351 : entity is "Register_File_Bit";
end microblaze_mcs_1_Register_File_Bit_351;

architecture STRUCTURE of microblaze_mcs_1_Register_File_Bit_351 is
begin
RegFile_X1: entity work.microblaze_mcs_1_MB_RAM32X1D_357
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
RegFile_X2: entity work.microblaze_mcs_1_MB_RAM32X1D_358
     port map (
      Clk => Clk,
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File_Bit_352 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Register_File_Bit_352 : entity is "Register_File_Bit";
end microblaze_mcs_1_Register_File_Bit_352;

architecture STRUCTURE of microblaze_mcs_1_Register_File_Bit_352 is
begin
RegFile_X1: entity work.microblaze_mcs_1_MB_RAM32X1D_355
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
RegFile_X2: entity work.microblaze_mcs_1_MB_RAM32X1D_356
     port map (
      Clk => Clk,
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File_Bit_353 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Register_File_Bit_353 : entity is "Register_File_Bit";
end microblaze_mcs_1_Register_File_Bit_353;

architecture STRUCTURE of microblaze_mcs_1_Register_File_Bit_353 is
begin
RegFile_X1: entity work.microblaze_mcs_1_MB_RAM32X1D
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
RegFile_X2: entity work.microblaze_mcs_1_MB_RAM32X1D_354
     port map (
      Clk => Clk,
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux_Bit is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
end microblaze_mcs_1_Result_Mux_Bit;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux_Bit is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  ex_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_320\
     port map (
      Data_Read(0) => Data_Read(0),
      Data_Read_Mask => Data_Read_Mask,
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => \^ex_result\(0),
      exception_kind(0) => exception_kind(0),
      mul_ALU_Res => mul_ALU_Res,
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
EX_Result_DFF: entity work.microblaze_mcs_1_MB_FD_321
     port map (
      Clk => Clk,
      D(0) => D(0),
      ex_Result(0) => \^ex_result\(0)
    );
Mul_ALU_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized19_322\
     port map (
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      mul_ALU_Res => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux_Bit_199 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Result_Mux_Bit_199 : entity is "Result_Mux_Bit";
end microblaze_mcs_1_Result_Mux_Bit_199;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux_Bit_199 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  ex_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_317\
     port map (
      Data_Read(0) => Data_Read(0),
      Data_Read_Mask => Data_Read_Mask,
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => \^ex_result\(0),
      exception_kind(0) => exception_kind(0),
      mul_ALU_Res => mul_ALU_Res,
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
EX_Result_DFF: entity work.microblaze_mcs_1_MB_FD_318
     port map (
      Clk => Clk,
      D(0) => D(0),
      ex_Result(0) => \^ex_result\(0)
    );
Mul_ALU_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized19_319\
     port map (
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      mul_ALU_Res => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux_Bit_200 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Result_Mux_Bit_200 : entity is "Result_Mux_Bit";
end microblaze_mcs_1_Result_Mux_Bit_200;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux_Bit_200 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  ex_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_314\
     port map (
      Data_Read(0) => Data_Read(0),
      Data_Read_Mask => Data_Read_Mask,
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => \^ex_result\(0),
      exception_kind(0) => exception_kind(0),
      mul_ALU_Res => mul_ALU_Res,
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
EX_Result_DFF: entity work.microblaze_mcs_1_MB_FD_315
     port map (
      Clk => Clk,
      D(0) => D(0),
      ex_Result(0) => \^ex_result\(0)
    );
Mul_ALU_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized19_316\
     port map (
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      mul_ALU_Res => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux_Bit_201 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Result_Mux_Bit_201 : entity is "Result_Mux_Bit";
end microblaze_mcs_1_Result_Mux_Bit_201;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux_Bit_201 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  ex_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_311\
     port map (
      Data_Read(0) => Data_Read(0),
      Data_Read_Mask => Data_Read_Mask,
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => \^ex_result\(0),
      exception_kind(0) => exception_kind(0),
      mul_ALU_Res => mul_ALU_Res,
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
EX_Result_DFF: entity work.microblaze_mcs_1_MB_FD_312
     port map (
      Clk => Clk,
      D(0) => D(0),
      ex_Result(0) => \^ex_result\(0)
    );
Mul_ALU_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized19_313\
     port map (
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      mul_ALU_Res => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux_Bit_202 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Result_Mux_Bit_202 : entity is "Result_Mux_Bit";
end microblaze_mcs_1_Result_Mux_Bit_202;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux_Bit_202 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  ex_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_308\
     port map (
      Data_Read(0) => Data_Read(0),
      Data_Read_Mask => Data_Read_Mask,
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => \^ex_result\(0),
      exception_kind(0) => exception_kind(0),
      mul_ALU_Res => mul_ALU_Res,
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
EX_Result_DFF: entity work.microblaze_mcs_1_MB_FD_309
     port map (
      Clk => Clk,
      D(0) => D(0),
      ex_Result(0) => \^ex_result\(0)
    );
Mul_ALU_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized19_310\
     port map (
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      mul_ALU_Res => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux_Bit_203 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Result_Mux_Bit_203 : entity is "Result_Mux_Bit";
end microblaze_mcs_1_Result_Mux_Bit_203;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux_Bit_203 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  ex_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_305\
     port map (
      Data_Read(0) => Data_Read(0),
      Data_Read_Mask => Data_Read_Mask,
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => \^ex_result\(0),
      exception_kind(0) => exception_kind(0),
      mul_ALU_Res => mul_ALU_Res,
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
EX_Result_DFF: entity work.microblaze_mcs_1_MB_FD_306
     port map (
      Clk => Clk,
      D(0) => D(0),
      ex_Result(0) => \^ex_result\(0)
    );
Mul_ALU_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized19_307\
     port map (
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      mul_ALU_Res => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux_Bit_204 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Result_Mux_Bit_204 : entity is "Result_Mux_Bit";
end microblaze_mcs_1_Result_Mux_Bit_204;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux_Bit_204 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  ex_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_302\
     port map (
      Data_Read(0) => Data_Read(0),
      Data_Read_Mask => Data_Read_Mask,
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => \^ex_result\(0),
      exception_kind(0) => exception_kind(0),
      mul_ALU_Res => mul_ALU_Res,
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
EX_Result_DFF: entity work.microblaze_mcs_1_MB_FD_303
     port map (
      Clk => Clk,
      D(0) => D(0),
      ex_Result(0) => \^ex_result\(0)
    );
Mul_ALU_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized19_304\
     port map (
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      mul_ALU_Res => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux_Bit_205 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Result_Mux_Bit_205 : entity is "Result_Mux_Bit";
end microblaze_mcs_1_Result_Mux_Bit_205;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux_Bit_205 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  ex_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_299\
     port map (
      Data_Read_Mask => Data_Read_Mask,
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => \^ex_result\(0),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      mul_ALU_Res => mul_ALU_Res,
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
EX_Result_DFF: entity work.microblaze_mcs_1_MB_FD_300
     port map (
      Clk => Clk,
      D(0) => D(0),
      ex_Result(0) => \^ex_result\(0)
    );
Mul_ALU_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized19_301\
     port map (
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      mul_ALU_Res => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux_Bit_206 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Result_Mux_Bit_206 : entity is "Result_Mux_Bit";
end microblaze_mcs_1_Result_Mux_Bit_206;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux_Bit_206 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  ex_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_296\
     port map (
      Data_Read_Mask => Data_Read_Mask,
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => \^ex_result\(0),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      mul_ALU_Res => mul_ALU_Res,
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
EX_Result_DFF: entity work.microblaze_mcs_1_MB_FD_297
     port map (
      Clk => Clk,
      D(0) => D(0),
      ex_Result(0) => \^ex_result\(0)
    );
Mul_ALU_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized19_298\
     port map (
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      mul_ALU_Res => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux_Bit_207 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Result_Mux_Bit_207 : entity is "Result_Mux_Bit";
end microblaze_mcs_1_Result_Mux_Bit_207;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux_Bit_207 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  ex_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_293\
     port map (
      Data_Read_Mask => Data_Read_Mask,
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => \^ex_result\(0),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      mul_ALU_Res => mul_ALU_Res,
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
EX_Result_DFF: entity work.microblaze_mcs_1_MB_FD_294
     port map (
      Clk => Clk,
      D(0) => D(0),
      ex_Result(0) => \^ex_result\(0)
    );
Mul_ALU_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized19_295\
     port map (
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      mul_ALU_Res => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux_Bit_208 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Result_Mux_Bit_208 : entity is "Result_Mux_Bit";
end microblaze_mcs_1_Result_Mux_Bit_208;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux_Bit_208 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  ex_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_290\
     port map (
      Data_Read_Mask => Data_Read_Mask,
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => \^ex_result\(0),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      mul_ALU_Res => mul_ALU_Res,
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
EX_Result_DFF: entity work.microblaze_mcs_1_MB_FD_291
     port map (
      Clk => Clk,
      D(0) => D(0),
      ex_Result(0) => \^ex_result\(0)
    );
Mul_ALU_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized19_292\
     port map (
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      mul_ALU_Res => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux_Bit_209 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Result_Mux_Bit_209 : entity is "Result_Mux_Bit";
end microblaze_mcs_1_Result_Mux_Bit_209;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux_Bit_209 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  ex_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_287\
     port map (
      Data_Read(0) => Data_Read(0),
      Data_Read_Mask => Data_Read_Mask,
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => \^ex_result\(0),
      exception_kind(0) => exception_kind(0),
      mul_ALU_Res => mul_ALU_Res,
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
EX_Result_DFF: entity work.microblaze_mcs_1_MB_FD_288
     port map (
      Clk => Clk,
      D(0) => D(0),
      ex_Result(0) => \^ex_result\(0)
    );
Mul_ALU_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized19_289\
     port map (
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      mul_ALU_Res => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux_Bit_210 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Result_Mux_Bit_210 : entity is "Result_Mux_Bit";
end microblaze_mcs_1_Result_Mux_Bit_210;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux_Bit_210 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  ex_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_284\
     port map (
      Data_Read_Mask => Data_Read_Mask,
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => \^ex_result\(0),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      mul_ALU_Res => mul_ALU_Res,
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
EX_Result_DFF: entity work.microblaze_mcs_1_MB_FD_285
     port map (
      Clk => Clk,
      D(0) => D(0),
      ex_Result(0) => \^ex_result\(0)
    );
Mul_ALU_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized19_286\
     port map (
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      mul_ALU_Res => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux_Bit_211 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Result_Mux_Bit_211 : entity is "Result_Mux_Bit";
end microblaze_mcs_1_Result_Mux_Bit_211;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux_Bit_211 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  ex_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_281\
     port map (
      Data_Read_Mask => Data_Read_Mask,
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => \^ex_result\(0),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      mul_ALU_Res => mul_ALU_Res,
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
EX_Result_DFF: entity work.microblaze_mcs_1_MB_FD_282
     port map (
      Clk => Clk,
      D(0) => D(0),
      ex_Result(0) => \^ex_result\(0)
    );
Mul_ALU_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized19_283\
     port map (
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      mul_ALU_Res => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux_Bit_212 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Result_Mux_Bit_212 : entity is "Result_Mux_Bit";
end microblaze_mcs_1_Result_Mux_Bit_212;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux_Bit_212 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  ex_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_278\
     port map (
      Data_Read_Mask => Data_Read_Mask,
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => \^ex_result\(0),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      mul_ALU_Res => mul_ALU_Res,
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
EX_Result_DFF: entity work.microblaze_mcs_1_MB_FD_279
     port map (
      Clk => Clk,
      D(0) => D(0),
      ex_Result(0) => \^ex_result\(0)
    );
Mul_ALU_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized19_280\
     port map (
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      mul_ALU_Res => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux_Bit_213 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Result_Mux_Bit_213 : entity is "Result_Mux_Bit";
end microblaze_mcs_1_Result_Mux_Bit_213;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux_Bit_213 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  ex_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_275\
     port map (
      Data_Read_Mask => Data_Read_Mask,
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => \^ex_result\(0),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      mul_ALU_Res => mul_ALU_Res,
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
EX_Result_DFF: entity work.microblaze_mcs_1_MB_FD_276
     port map (
      Clk => Clk,
      D(0) => D(0),
      ex_Result(0) => \^ex_result\(0)
    );
Mul_ALU_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized19_277\
     port map (
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      mul_ALU_Res => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux_Bit_214 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic_reg : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Result_Mux_Bit_214 : entity is "Result_Mux_Bit";
end microblaze_mcs_1_Result_Mux_Bit_214;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux_Bit_214 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  ex_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_272\
     port map (
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => \^ex_result\(0),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      mul_ALU_Res => mul_ALU_Res,
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
EX_Result_DFF: entity work.microblaze_mcs_1_MB_FD_273
     port map (
      Clk => Clk,
      D(0) => D(0),
      ex_Result(0) => \^ex_result\(0)
    );
Mul_ALU_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized19_274\
     port map (
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      mul_ALU_Res => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux_Bit_215 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic_reg : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Result_Mux_Bit_215 : entity is "Result_Mux_Bit";
end microblaze_mcs_1_Result_Mux_Bit_215;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux_Bit_215 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  ex_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_269\
     port map (
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => \^ex_result\(0),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      mul_ALU_Res => mul_ALU_Res,
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
EX_Result_DFF: entity work.microblaze_mcs_1_MB_FD_270
     port map (
      Clk => Clk,
      D(0) => D(0),
      ex_Result(0) => \^ex_result\(0)
    );
Mul_ALU_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized19_271\
     port map (
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      mul_ALU_Res => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux_Bit_216 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic_reg : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Result_Mux_Bit_216 : entity is "Result_Mux_Bit";
end microblaze_mcs_1_Result_Mux_Bit_216;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux_Bit_216 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  ex_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_266\
     port map (
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => \^ex_result\(0),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      mul_ALU_Res => mul_ALU_Res,
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
EX_Result_DFF: entity work.microblaze_mcs_1_MB_FD_267
     port map (
      Clk => Clk,
      D(0) => D(0),
      ex_Result(0) => \^ex_result\(0)
    );
Mul_ALU_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized19_268\
     port map (
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      mul_ALU_Res => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux_Bit_217 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic_reg : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Result_Mux_Bit_217 : entity is "Result_Mux_Bit";
end microblaze_mcs_1_Result_Mux_Bit_217;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux_Bit_217 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  ex_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_263\
     port map (
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => \^ex_result\(0),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      mul_ALU_Res => mul_ALU_Res,
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
EX_Result_DFF: entity work.microblaze_mcs_1_MB_FD_264
     port map (
      Clk => Clk,
      D(0) => D(0),
      ex_Result(0) => \^ex_result\(0)
    );
Mul_ALU_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized19_265\
     port map (
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      mul_ALU_Res => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux_Bit_218 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic_reg : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Result_Mux_Bit_218 : entity is "Result_Mux_Bit";
end microblaze_mcs_1_Result_Mux_Bit_218;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux_Bit_218 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  ex_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_260\
     port map (
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => \^ex_result\(0),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      mul_ALU_Res => mul_ALU_Res,
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
EX_Result_DFF: entity work.microblaze_mcs_1_MB_FD_261
     port map (
      Clk => Clk,
      D(0) => D(0),
      ex_Result(0) => \^ex_result\(0)
    );
Mul_ALU_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized19_262\
     port map (
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      mul_ALU_Res => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux_Bit_219 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic_reg : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Result_Mux_Bit_219 : entity is "Result_Mux_Bit";
end microblaze_mcs_1_Result_Mux_Bit_219;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux_Bit_219 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  ex_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_257\
     port map (
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => \^ex_result\(0),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      mul_ALU_Res => mul_ALU_Res,
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
EX_Result_DFF: entity work.microblaze_mcs_1_MB_FD_258
     port map (
      Clk => Clk,
      D(0) => D(0),
      ex_Result(0) => \^ex_result\(0)
    );
Mul_ALU_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized19_259\
     port map (
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      mul_ALU_Res => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux_Bit_220 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Result_Mux_Bit_220 : entity is "Result_Mux_Bit";
end microblaze_mcs_1_Result_Mux_Bit_220;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux_Bit_220 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  ex_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_254\
     port map (
      Data_Read(0) => Data_Read(0),
      Data_Read_Mask => Data_Read_Mask,
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => \^ex_result\(0),
      exception_kind(0) => exception_kind(0),
      mul_ALU_Res => mul_ALU_Res,
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
EX_Result_DFF: entity work.microblaze_mcs_1_MB_FD_255
     port map (
      Clk => Clk,
      D(0) => D(0),
      ex_Result(0) => \^ex_result\(0)
    );
Mul_ALU_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized19_256\
     port map (
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      mul_ALU_Res => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux_Bit_221 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Select_Logic_reg : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Result_Mux_Bit_221 : entity is "Result_Mux_Bit";
end microblaze_mcs_1_Result_Mux_Bit_221;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux_Bit_221 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  ex_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_251\
     port map (
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => \^ex_result\(0),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      mul_ALU_Res => mul_ALU_Res,
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
EX_Result_DFF: entity work.microblaze_mcs_1_MB_FD_252
     port map (
      Clk => Clk,
      D(0) => D(0),
      ex_Result(0) => \^ex_result\(0)
    );
Mul_ALU_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized19_253\
     port map (
      Q(0) => Q(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      mul_ALU_Res => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux_Bit_222 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ALU_Result : in STD_LOGIC;
    Shift_Logic_Res : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Result_Mux_Bit_222 : entity is "Result_Mux_Bit";
end microblaze_mcs_1_Result_Mux_Bit_222;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux_Bit_222 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  ex_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_248\
     port map (
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Shift_Logic_Res => Shift_Logic_Res,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => \^ex_result\(0),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      mul_ALU_Res => mul_ALU_Res,
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
EX_Result_DFF: entity work.microblaze_mcs_1_MB_FD_249
     port map (
      Clk => Clk,
      D(0) => D(0),
      ex_Result(0) => \^ex_result\(0)
    );
Mul_ALU_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized19_250\
     port map (
      ALU_Result => ALU_Result,
      Q(0) => Q(0),
      mul_ALU_Res => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux_Bit_223 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Result_Mux_Bit_223 : entity is "Result_Mux_Bit";
end microblaze_mcs_1_Result_Mux_Bit_223;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux_Bit_223 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  ex_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_245\
     port map (
      Data_Read(0) => Data_Read(0),
      Data_Read_Mask => Data_Read_Mask,
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => \^ex_result\(0),
      exception_kind(0) => exception_kind(0),
      mul_ALU_Res => mul_ALU_Res,
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
EX_Result_DFF: entity work.microblaze_mcs_1_MB_FD_246
     port map (
      Clk => Clk,
      D(0) => D(0),
      ex_Result(0) => \^ex_result\(0)
    );
Mul_ALU_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized19_247\
     port map (
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      mul_ALU_Res => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux_Bit_224 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Result_Mux_Bit_224 : entity is "Result_Mux_Bit";
end microblaze_mcs_1_Result_Mux_Bit_224;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux_Bit_224 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  ex_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_242\
     port map (
      Data_Read(0) => Data_Read(0),
      Data_Read_Mask => Data_Read_Mask,
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => \^ex_result\(0),
      exception_kind(0) => exception_kind(0),
      mul_ALU_Res => mul_ALU_Res,
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
EX_Result_DFF: entity work.microblaze_mcs_1_MB_FD_243
     port map (
      Clk => Clk,
      D(0) => D(0),
      ex_Result(0) => \^ex_result\(0)
    );
Mul_ALU_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized19_244\
     port map (
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      mul_ALU_Res => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux_Bit_225 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Result_Mux_Bit_225 : entity is "Result_Mux_Bit";
end microblaze_mcs_1_Result_Mux_Bit_225;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux_Bit_225 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  ex_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_239\
     port map (
      Data_Read(0) => Data_Read(0),
      Data_Read_Mask => Data_Read_Mask,
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => \^ex_result\(0),
      exception_kind(0) => exception_kind(0),
      mul_ALU_Res => mul_ALU_Res,
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
EX_Result_DFF: entity work.microblaze_mcs_1_MB_FD_240
     port map (
      Clk => Clk,
      D(0) => D(0),
      ex_Result(0) => \^ex_result\(0)
    );
Mul_ALU_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized19_241\
     port map (
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      mul_ALU_Res => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux_Bit_226 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Result_Mux_Bit_226 : entity is "Result_Mux_Bit";
end microblaze_mcs_1_Result_Mux_Bit_226;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux_Bit_226 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  ex_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_236\
     port map (
      Data_Read(0) => Data_Read(0),
      Data_Read_Mask => Data_Read_Mask,
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => \^ex_result\(0),
      exception_kind(0) => exception_kind(0),
      mul_ALU_Res => mul_ALU_Res,
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
EX_Result_DFF: entity work.microblaze_mcs_1_MB_FD_237
     port map (
      Clk => Clk,
      D(0) => D(0),
      ex_Result(0) => \^ex_result\(0)
    );
Mul_ALU_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized19_238\
     port map (
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      mul_ALU_Res => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux_Bit_227 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Result_Mux_Bit_227 : entity is "Result_Mux_Bit";
end microblaze_mcs_1_Result_Mux_Bit_227;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux_Bit_227 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  ex_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_233\
     port map (
      Data_Read(0) => Data_Read(0),
      Data_Read_Mask => Data_Read_Mask,
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => \^ex_result\(0),
      exception_kind(0) => exception_kind(0),
      mul_ALU_Res => mul_ALU_Res,
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
EX_Result_DFF: entity work.microblaze_mcs_1_MB_FD_234
     port map (
      Clk => Clk,
      D(0) => D(0),
      ex_Result(0) => \^ex_result\(0)
    );
Mul_ALU_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized19_235\
     port map (
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      mul_ALU_Res => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux_Bit_228 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Result_Mux_Bit_228 : entity is "Result_Mux_Bit";
end microblaze_mcs_1_Result_Mux_Bit_228;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux_Bit_228 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  ex_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0_230\
     port map (
      Data_Read(0) => Data_Read(0),
      Data_Read_Mask => Data_Read_Mask,
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => \^ex_result\(0),
      exception_kind(0) => exception_kind(0),
      mul_ALU_Res => mul_ALU_Res,
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
EX_Result_DFF: entity work.microblaze_mcs_1_MB_FD_231
     port map (
      Clk => Clk,
      D(0) => D(0),
      ex_Result(0) => \^ex_result\(0)
    );
Mul_ALU_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized19_232\
     port map (
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      mul_ALU_Res => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux_Bit_229 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic_reg : in STD_LOGIC;
    Data_Read_Mask : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Result_Mux_Bit_229 : entity is "Result_Mux_Bit";
end microblaze_mcs_1_Result_Mux_Bit_229;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux_Bit_229 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  ex_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT6__parameterized0\
     port map (
      Data_Read(0) => Data_Read(0),
      Data_Read_Mask => Data_Read_Mask,
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Result(0) => \^ex_result\(0),
      exception_kind(0) => exception_kind(0),
      mul_ALU_Res => mul_ALU_Res,
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
EX_Result_DFF: entity work.microblaze_mcs_1_MB_FD
     port map (
      Clk => Clk,
      D(0) => D(0),
      ex_Result(0) => \^ex_result\(0)
    );
Mul_ALU_Mux: entity work.\microblaze_mcs_1_MB_LUT4__parameterized19\
     port map (
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      mul_ALU_Res => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Bit is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
end microblaze_mcs_1_Shift_Logic_Bit;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Bit is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized15_196\
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      logic_Res_i => logic_Res_i,
      op2_C(0) => op2_C(0)
    );
Shift_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized17_197\
     port map (
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_198
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Bit_100 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Shift_Logic_Bit_100 : entity is "Shift_Logic_Bit";
end microblaze_mcs_1_Shift_Logic_Bit_100;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Bit_100 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized15_118\
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      logic_Res_i => logic_Res_i,
      op2_C(0) => op2_C(0)
    );
Shift_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized17_119\
     port map (
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_120
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Bit_101 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Shift_Logic_Bit_101 : entity is "Shift_Logic_Bit";
end microblaze_mcs_1_Shift_Logic_Bit_101;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Bit_101 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized15_115\
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      logic_Res_i => logic_Res_i,
      op2_C(0) => op2_C(0)
    );
Shift_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized17_116\
     port map (
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_117
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Bit_102 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Shift_Logic_Bit_102 : entity is "Shift_Logic_Bit";
end microblaze_mcs_1_Shift_Logic_Bit_102;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Bit_102 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized15_112\
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      logic_Res_i => logic_Res_i,
      op2_C(0) => op2_C(0)
    );
Shift_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized17_113\
     port map (
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_114
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Bit_103 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Shift_Logic_Bit_103 : entity is "Shift_Logic_Bit";
end microblaze_mcs_1_Shift_Logic_Bit_103;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Bit_103 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized15_109\
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      logic_Res_i => logic_Res_i,
      op2_C(0) => op2_C(0)
    );
Shift_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized17_110\
     port map (
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_111
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Bit_104 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Shift_Logic_Bit_104 : entity is "Shift_Logic_Bit";
end microblaze_mcs_1_Shift_Logic_Bit_104;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Bit_104 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized15_106\
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      logic_Res_i => logic_Res_i,
      op2_C(0) => op2_C(0)
    );
Shift_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized17_107\
     port map (
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_108
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Bit_105 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Shift_Logic_Bit_105 : entity is "Shift_Logic_Bit";
end microblaze_mcs_1_Shift_Logic_Bit_105;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Bit_105 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized15\
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      logic_Res_i => logic_Res_i,
      op2_C(0) => op2_C(0)
    );
Shift_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized17\
     port map (
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Bit_75 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Shift_Logic_Bit_75 : entity is "Shift_Logic_Bit";
end microblaze_mcs_1_Shift_Logic_Bit_75;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Bit_75 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized15_193\
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      logic_Res_i => logic_Res_i,
      op2_C(0) => op2_C(0)
    );
Shift_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized17_194\
     port map (
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_195
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Bit_76 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Shift_Logic_Bit_76 : entity is "Shift_Logic_Bit";
end microblaze_mcs_1_Shift_Logic_Bit_76;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Bit_76 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized15_190\
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      logic_Res_i => logic_Res_i,
      op2_C(0) => op2_C(0)
    );
Shift_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized17_191\
     port map (
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_192
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Bit_77 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Shift_Logic_Bit_77 : entity is "Shift_Logic_Bit";
end microblaze_mcs_1_Shift_Logic_Bit_77;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Bit_77 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized15_187\
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      logic_Res_i => logic_Res_i,
      op2_C(0) => op2_C(0)
    );
Shift_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized17_188\
     port map (
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_189
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Bit_78 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Shift_Logic_Bit_78 : entity is "Shift_Logic_Bit";
end microblaze_mcs_1_Shift_Logic_Bit_78;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Bit_78 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized15_184\
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      logic_Res_i => logic_Res_i,
      op2_C(0) => op2_C(0)
    );
Shift_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized17_185\
     port map (
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_186
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Bit_79 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Shift_Logic_Bit_79 : entity is "Shift_Logic_Bit";
end microblaze_mcs_1_Shift_Logic_Bit_79;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Bit_79 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized15_181\
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      logic_Res_i => logic_Res_i,
      op2_C(0) => op2_C(0)
    );
Shift_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized17_182\
     port map (
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_183
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Bit_80 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Shift_Logic_Bit_80 : entity is "Shift_Logic_Bit";
end microblaze_mcs_1_Shift_Logic_Bit_80;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Bit_80 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized15_178\
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      logic_Res_i => logic_Res_i,
      op2_C(0) => op2_C(0)
    );
Shift_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized17_179\
     port map (
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_180
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Bit_81 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Shift_Logic_Bit_81 : entity is "Shift_Logic_Bit";
end microblaze_mcs_1_Shift_Logic_Bit_81;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Bit_81 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized15_175\
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      logic_Res_i => logic_Res_i,
      op2_C(0) => op2_C(0)
    );
Shift_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized17_176\
     port map (
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_177
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Bit_82 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Shift_Logic_Bit_82 : entity is "Shift_Logic_Bit";
end microblaze_mcs_1_Shift_Logic_Bit_82;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Bit_82 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized15_172\
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      logic_Res_i => logic_Res_i,
      op2_C(0) => op2_C(0)
    );
Shift_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized17_173\
     port map (
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_174
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Bit_83 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Shift_Logic_Bit_83 : entity is "Shift_Logic_Bit";
end microblaze_mcs_1_Shift_Logic_Bit_83;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Bit_83 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized15_169\
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      logic_Res_i => logic_Res_i,
      op2_C(0) => op2_C(0)
    );
Shift_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized17_170\
     port map (
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_171
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Bit_84 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Shift_Logic_Bit_84 : entity is "Shift_Logic_Bit";
end microblaze_mcs_1_Shift_Logic_Bit_84;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Bit_84 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized15_166\
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      logic_Res_i => logic_Res_i,
      op2_C(0) => op2_C(0)
    );
Shift_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized17_167\
     port map (
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_168
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Bit_85 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Shift_Logic_Bit_85 : entity is "Shift_Logic_Bit";
end microblaze_mcs_1_Shift_Logic_Bit_85;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Bit_85 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized15_163\
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      logic_Res_i => logic_Res_i,
      op2_C(0) => op2_C(0)
    );
Shift_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized17_164\
     port map (
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_165
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Bit_86 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Shift_Logic_Bit_86 : entity is "Shift_Logic_Bit";
end microblaze_mcs_1_Shift_Logic_Bit_86;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Bit_86 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized15_160\
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      logic_Res_i => logic_Res_i,
      op2_C(0) => op2_C(0)
    );
Shift_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized17_161\
     port map (
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_162
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Bit_87 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Shift_Logic_Bit_87 : entity is "Shift_Logic_Bit";
end microblaze_mcs_1_Shift_Logic_Bit_87;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Bit_87 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized15_157\
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      logic_Res_i => logic_Res_i,
      op2_C(0) => op2_C(0)
    );
Shift_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized17_158\
     port map (
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_159
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Bit_88 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Shift_Logic_Bit_88 : entity is "Shift_Logic_Bit";
end microblaze_mcs_1_Shift_Logic_Bit_88;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Bit_88 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized15_154\
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      logic_Res_i => logic_Res_i,
      op2_C(0) => op2_C(0)
    );
Shift_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized17_155\
     port map (
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_156
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Bit_89 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Shift_Logic_Bit_89 : entity is "Shift_Logic_Bit";
end microblaze_mcs_1_Shift_Logic_Bit_89;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Bit_89 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized15_151\
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      logic_Res_i => logic_Res_i,
      op2_C(0) => op2_C(0)
    );
Shift_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized17_152\
     port map (
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_153
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Bit_90 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Shift_Logic_Bit_90 : entity is "Shift_Logic_Bit";
end microblaze_mcs_1_Shift_Logic_Bit_90;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Bit_90 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized15_148\
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      logic_Res_i => logic_Res_i,
      op2_C(0) => op2_C(0)
    );
Shift_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized17_149\
     port map (
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_150
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Bit_91 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Shift_Logic_Bit_91 : entity is "Shift_Logic_Bit";
end microblaze_mcs_1_Shift_Logic_Bit_91;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Bit_91 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized15_145\
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      logic_Res_i => logic_Res_i,
      op2_C(0) => op2_C(0)
    );
Shift_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized17_146\
     port map (
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_147
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Bit_92 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Shift_Logic_Bit_92 : entity is "Shift_Logic_Bit";
end microblaze_mcs_1_Shift_Logic_Bit_92;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Bit_92 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized15_142\
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      logic_Res_i => logic_Res_i,
      op2_C(0) => op2_C(0)
    );
Shift_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized17_143\
     port map (
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_144
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Bit_93 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Shift_Logic_Bit_93 : entity is "Shift_Logic_Bit";
end microblaze_mcs_1_Shift_Logic_Bit_93;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Bit_93 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized15_139\
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      logic_Res_i => logic_Res_i,
      op2_C(0) => op2_C(0)
    );
Shift_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized17_140\
     port map (
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_141
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Bit_94 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Op1_Shift : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Shift_Logic_Bit_94 : entity is "Shift_Logic_Bit";
end microblaze_mcs_1_Shift_Logic_Bit_94;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Bit_94 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized15_136\
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Op1_Shift => Op1_Shift,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      logic_Res_i => logic_Res_i
    );
Shift_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized17_137\
     port map (
      Op1_Shift => Op1_Shift,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_138
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Bit_95 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    Op2 : in STD_LOGIC;
    Shifted : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    Op1_Shift : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Shift_Logic_Bit_95 : entity is "Shift_Logic_Bit";
end microblaze_mcs_1_Shift_Logic_Bit_95;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Bit_95 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized15_133\
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Op2 => Op2,
      Shifted => Shifted,
      logic_Res_i => logic_Res_i
    );
Shift_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized17_134\
     port map (
      Op1_Shift => Op1_Shift,
      Shift_Oper => Shift_Oper,
      Shifted => Shifted,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_135
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Bit_96 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Shift_Logic_Bit_96 : entity is "Shift_Logic_Bit";
end microblaze_mcs_1_Shift_Logic_Bit_96;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Bit_96 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized15_130\
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      logic_Res_i => logic_Res_i,
      op2_C(0) => op2_C(0)
    );
Shift_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized17_131\
     port map (
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_132
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Bit_97 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    Shifted : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Shift_Logic_Bit_97 : entity is "Shift_Logic_Bit";
end microblaze_mcs_1_Shift_Logic_Bit_97;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Bit_97 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized15_127\
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_1\,
      logic_Res_i => logic_Res_i
    );
Shift_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized17_128\
     port map (
      Shift_Oper => Shift_Oper,
      Shifted => Shifted,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_129
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Bit_98 is
  port (
    Shift_Logic_Res : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC;
    Op1_Logic : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Shift_Logic_Bit_98 : entity is "Shift_Logic_Bit";
end microblaze_mcs_1_Shift_Logic_Bit_98;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Bit_98 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized15_124\
     port map (
      EX_Op2 => EX_Op2,
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Op1_Logic => Op1_Logic,
      logic_Res_i => logic_Res_i
    );
Shift_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized17_125\
     port map (
      Op1_Logic => Op1_Logic,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_126
     port map (
      Select_Logic => Select_Logic,
      Shift_Logic_Res => Shift_Logic_Res,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Bit_99 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_mcs_1_Shift_Logic_Bit_99 : entity is "Shift_Logic_Bit";
end microblaze_mcs_1_Shift_Logic_Bit_99;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Bit_99 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized15_121\
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      logic_Res_i => logic_Res_i,
      op2_C(0) => op2_C(0)
    );
Shift_LUT: entity work.\microblaze_mcs_1_MB_LUT4__parameterized17_122\
     port map (
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXF7_123
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Zero_Detect is
  port (
    Reg_zero : out STD_LOGIC;
    Reg_Test_Equal : in STD_LOGIC;
    \Zero_Detecting[0].nibble_Zero_reg\ : in STD_LOGIC;
    reg_Test_Equal_N : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    \Using_FPGA.Native_9\ : in STD_LOGIC;
    \Using_FPGA.Native_10\ : in STD_LOGIC;
    \Using_FPGA.Native_11\ : in STD_LOGIC;
    \Using_FPGA.Native_12\ : in STD_LOGIC;
    \Using_FPGA.Native_13\ : in STD_LOGIC;
    \Using_FPGA.Native_14\ : in STD_LOGIC;
    \Using_FPGA.Native_15\ : in STD_LOGIC;
    \Using_FPGA.Native_16\ : in STD_LOGIC;
    \Using_FPGA.Native_17\ : in STD_LOGIC;
    \Using_FPGA.Native_18\ : in STD_LOGIC;
    \Using_FPGA.Native_19\ : in STD_LOGIC;
    \Using_FPGA.Native_20\ : in STD_LOGIC;
    \Using_FPGA.Native_21\ : in STD_LOGIC;
    \Using_FPGA.Native_22\ : in STD_LOGIC;
    \Using_FPGA.Native_23\ : in STD_LOGIC;
    \Using_FPGA.Native_24\ : in STD_LOGIC;
    \Using_FPGA.Native_25\ : in STD_LOGIC;
    \Using_FPGA.Native_26\ : in STD_LOGIC;
    \Using_FPGA.Native_27\ : in STD_LOGIC;
    \Using_FPGA.Native_28\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
end microblaze_mcs_1_Zero_Detect;

architecture STRUCTURE of microblaze_mcs_1_Zero_Detect is
  signal S : STD_LOGIC;
  signal \Zero_Detecting[2].nibble_Zero_reg\ : STD_LOGIC;
  signal \Zero_Detecting[3].nibble_Zero_reg\ : STD_LOGIC;
  signal \Zero_Detecting[4].nibble_Zero_reg\ : STD_LOGIC;
  signal \Zero_Detecting[5].nibble_Zero_reg\ : STD_LOGIC;
  signal \^lopt\ : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal zero_CI_0 : STD_LOGIC;
  signal zero_CI_1 : STD_LOGIC;
  signal zero_CI_2 : STD_LOGIC;
  signal zero_CI_3 : STD_LOGIC;
  signal zero_CI_4 : STD_LOGIC;
  signal zero_CI_5 : STD_LOGIC;
begin
  lopt <= lopt_5;
  lopt_6 <= lopt_1;
  lopt_7 <= lopt_2;
Part_Of_Zero_Carry_Start: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_68
     port map (
      Reg_Test_Equal => Reg_Test_Equal,
      lopt => \^lopt\,
      lopt_1 => reg_Test_Equal_N,
      lopt_2 => \Zero_Detecting[0].nibble_Zero_reg\,
      lopt_3 => \^lopt_1\,
      lopt_4 => S,
      lopt_5 => \^lopt_2\,
      lopt_6 => \Zero_Detecting[2].nibble_Zero_reg\,
      zero_CI_0 => zero_CI_0
    );
\Zero_Detecting[0].I_Part_Of_Zero_Detect\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_69
     port map (
      \Zero_Detecting[0].nibble_Zero_reg\ => \Zero_Detecting[0].nibble_Zero_reg\,
      lopt => \^lopt\,
      reg_Test_Equal_N => reg_Test_Equal_N,
      zero_CI_0 => zero_CI_0,
      zero_CI_1 => zero_CI_1
    );
\Zero_Detecting[1].I_Part_Of_Zero_Detect\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_70
     port map (
      S => S,
      lopt => \^lopt_1\,
      reg_Test_Equal_N => reg_Test_Equal_N,
      zero_CI_1 => zero_CI_1,
      zero_CI_2 => zero_CI_2
    );
\Zero_Detecting[2].I_Part_Of_Zero_Detect\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_71
     port map (
      \Zero_Detecting[2].nibble_Zero_reg\ => \Zero_Detecting[2].nibble_Zero_reg\,
      lopt => \^lopt_2\,
      reg_Test_Equal_N => reg_Test_Equal_N,
      zero_CI_2 => zero_CI_2,
      zero_CI_3 => zero_CI_3
    );
\Zero_Detecting[3].I_Part_Of_Zero_Detect\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_72
     port map (
      \Zero_Detecting[3].nibble_Zero_reg\ => \Zero_Detecting[3].nibble_Zero_reg\,
      lopt => lopt_3,
      lopt_1 => \Zero_Detecting[4].nibble_Zero_reg\,
      lopt_2 => lopt_4,
      lopt_3 => \Zero_Detecting[5].nibble_Zero_reg\,
      lopt_4 => lopt_5,
      lopt_5 => lopt_6,
      lopt_6 => lopt_7,
      reg_Test_Equal_N => reg_Test_Equal_N,
      zero_CI_3 => zero_CI_3,
      zero_CI_4 => zero_CI_4
    );
\Zero_Detecting[4].I_Part_Of_Zero_Detect\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_73
     port map (
      \Zero_Detecting[4].nibble_Zero_reg\ => \Zero_Detecting[4].nibble_Zero_reg\,
      lopt => lopt_3,
      reg_Test_Equal_N => reg_Test_Equal_N,
      zero_CI_4 => zero_CI_4,
      zero_CI_5 => zero_CI_5
    );
\Zero_Detecting[5].I_Part_Of_Zero_Detect\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_74
     port map (
      Reg_zero => Reg_zero,
      \Zero_Detecting[5].nibble_Zero_reg\ => \Zero_Detecting[5].nibble_Zero_reg\,
      lopt => lopt_4,
      reg_Test_Equal_N => reg_Test_Equal_N,
      zero_CI_5 => zero_CI_5
    );
\nibble_Zero0_inferred__0/i_\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => \Using_FPGA.Native\,
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      I3 => \Using_FPGA.Native_2\,
      I4 => \Using_FPGA.Native_3\,
      I5 => \Using_FPGA.Native_4\,
      O => S
    );
\nibble_Zero0_inferred__1/i_\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => \Using_FPGA.Native_5\,
      I1 => \Using_FPGA.Native_6\,
      I2 => \Using_FPGA.Native_7\,
      I3 => \Using_FPGA.Native_8\,
      I4 => \Using_FPGA.Native_9\,
      I5 => \Using_FPGA.Native_10\,
      O => \Zero_Detecting[2].nibble_Zero_reg\
    );
\nibble_Zero0_inferred__2/i_\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => \Using_FPGA.Native_11\,
      I1 => \Using_FPGA.Native_12\,
      I2 => \Using_FPGA.Native_13\,
      I3 => \Using_FPGA.Native_14\,
      I4 => \Using_FPGA.Native_15\,
      I5 => \Using_FPGA.Native_16\,
      O => \Zero_Detecting[3].nibble_Zero_reg\
    );
\nibble_Zero0_inferred__3/i_\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => \Using_FPGA.Native_17\,
      I1 => \Using_FPGA.Native_18\,
      I2 => \Using_FPGA.Native_19\,
      I3 => \Using_FPGA.Native_20\,
      I4 => \Using_FPGA.Native_21\,
      I5 => \Using_FPGA.Native_22\,
      O => \Zero_Detecting[4].nibble_Zero_reg\
    );
\nibble_Zero0_inferred__4/i_\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => \Using_FPGA.Native_23\,
      I1 => \Using_FPGA.Native_24\,
      I2 => \Using_FPGA.Native_25\,
      I3 => \Using_FPGA.Native_26\,
      I4 => \Using_FPGA.Native_27\,
      I5 => \Using_FPGA.Native_28\,
      O => \Zero_Detecting[5].nibble_Zero_reg\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_blk_mem_gen_prim_width is
  port (
    douta : out STD_LOGIC_VECTOR ( 3 downto 0 );
    doutb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    clka : in STD_LOGIC;
    clkb : in STD_LOGIC;
    ENA_I : in STD_LOGIC;
    ENB_I : in STD_LOGIC;
    ram_rstram_a : in STD_LOGIC;
    ram_rstram_b : in STD_LOGIC;
    addra : in STD_LOGIC_VECTOR ( 12 downto 0 );
    addrb : in STD_LOGIC_VECTOR ( 12 downto 0 );
    dina : in STD_LOGIC_VECTOR ( 3 downto 0 );
    dinb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    wea : in STD_LOGIC_VECTOR ( 0 to 0 );
    web : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
end microblaze_mcs_1_blk_mem_gen_prim_width;

architecture STRUCTURE of microblaze_mcs_1_blk_mem_gen_prim_width is
begin
\prim_noinit.ram\: entity work.microblaze_mcs_1_blk_mem_gen_prim_wrapper
     port map (
      ENA_I => ENA_I,
      ENB_I => ENB_I,
      addra(12 downto 0) => addra(12 downto 0),
      addrb(12 downto 0) => addrb(12 downto 0),
      clka => clka,
      clkb => clkb,
      dina(3 downto 0) => dina(3 downto 0),
      dinb(3 downto 0) => dinb(3 downto 0),
      douta(3 downto 0) => douta(3 downto 0),
      doutb(3 downto 0) => doutb(3 downto 0),
      ram_rstram_a => ram_rstram_a,
      ram_rstram_b => ram_rstram_b,
      wea(0) => wea(0),
      web(0) => web(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_blk_mem_gen_prim_width__parameterized0\ is
  port (
    douta : out STD_LOGIC_VECTOR ( 3 downto 0 );
    doutb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    clka : in STD_LOGIC;
    clkb : in STD_LOGIC;
    ENA_I : in STD_LOGIC;
    ENB_I : in STD_LOGIC;
    ram_rstram_a : in STD_LOGIC;
    ram_rstram_b : in STD_LOGIC;
    addra : in STD_LOGIC_VECTOR ( 12 downto 0 );
    addrb : in STD_LOGIC_VECTOR ( 12 downto 0 );
    dina : in STD_LOGIC_VECTOR ( 3 downto 0 );
    dinb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    wea : in STD_LOGIC_VECTOR ( 0 to 0 );
    web : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_blk_mem_gen_prim_width__parameterized0\ : entity is "blk_mem_gen_prim_width";
end \microblaze_mcs_1_blk_mem_gen_prim_width__parameterized0\;

architecture STRUCTURE of \microblaze_mcs_1_blk_mem_gen_prim_width__parameterized0\ is
begin
\prim_noinit.ram\: entity work.\microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized0\
     port map (
      ENA_I => ENA_I,
      ENB_I => ENB_I,
      addra(12 downto 0) => addra(12 downto 0),
      addrb(12 downto 0) => addrb(12 downto 0),
      clka => clka,
      clkb => clkb,
      dina(3 downto 0) => dina(3 downto 0),
      dinb(3 downto 0) => dinb(3 downto 0),
      douta(3 downto 0) => douta(3 downto 0),
      doutb(3 downto 0) => doutb(3 downto 0),
      ram_rstram_a => ram_rstram_a,
      ram_rstram_b => ram_rstram_b,
      wea(0) => wea(0),
      web(0) => web(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_blk_mem_gen_prim_width__parameterized1\ is
  port (
    douta : out STD_LOGIC_VECTOR ( 3 downto 0 );
    doutb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    clka : in STD_LOGIC;
    clkb : in STD_LOGIC;
    ENA_I : in STD_LOGIC;
    ENB_I : in STD_LOGIC;
    ram_rstram_a : in STD_LOGIC;
    ram_rstram_b : in STD_LOGIC;
    addra : in STD_LOGIC_VECTOR ( 12 downto 0 );
    addrb : in STD_LOGIC_VECTOR ( 12 downto 0 );
    dina : in STD_LOGIC_VECTOR ( 3 downto 0 );
    dinb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    wea : in STD_LOGIC_VECTOR ( 0 to 0 );
    web : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_blk_mem_gen_prim_width__parameterized1\ : entity is "blk_mem_gen_prim_width";
end \microblaze_mcs_1_blk_mem_gen_prim_width__parameterized1\;

architecture STRUCTURE of \microblaze_mcs_1_blk_mem_gen_prim_width__parameterized1\ is
begin
\prim_noinit.ram\: entity work.\microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized1\
     port map (
      ENA_I => ENA_I,
      ENB_I => ENB_I,
      addra(12 downto 0) => addra(12 downto 0),
      addrb(12 downto 0) => addrb(12 downto 0),
      clka => clka,
      clkb => clkb,
      dina(3 downto 0) => dina(3 downto 0),
      dinb(3 downto 0) => dinb(3 downto 0),
      douta(3 downto 0) => douta(3 downto 0),
      doutb(3 downto 0) => doutb(3 downto 0),
      ram_rstram_a => ram_rstram_a,
      ram_rstram_b => ram_rstram_b,
      wea(0) => wea(0),
      web(0) => web(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_blk_mem_gen_prim_width__parameterized2\ is
  port (
    douta : out STD_LOGIC_VECTOR ( 3 downto 0 );
    doutb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    clka : in STD_LOGIC;
    clkb : in STD_LOGIC;
    ENA_I : in STD_LOGIC;
    ENB_I : in STD_LOGIC;
    ram_rstram_a : in STD_LOGIC;
    ram_rstram_b : in STD_LOGIC;
    addra : in STD_LOGIC_VECTOR ( 12 downto 0 );
    addrb : in STD_LOGIC_VECTOR ( 12 downto 0 );
    dina : in STD_LOGIC_VECTOR ( 3 downto 0 );
    dinb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    wea : in STD_LOGIC_VECTOR ( 0 to 0 );
    web : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_blk_mem_gen_prim_width__parameterized2\ : entity is "blk_mem_gen_prim_width";
end \microblaze_mcs_1_blk_mem_gen_prim_width__parameterized2\;

architecture STRUCTURE of \microblaze_mcs_1_blk_mem_gen_prim_width__parameterized2\ is
begin
\prim_noinit.ram\: entity work.\microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized2\
     port map (
      ENA_I => ENA_I,
      ENB_I => ENB_I,
      addra(12 downto 0) => addra(12 downto 0),
      addrb(12 downto 0) => addrb(12 downto 0),
      clka => clka,
      clkb => clkb,
      dina(3 downto 0) => dina(3 downto 0),
      dinb(3 downto 0) => dinb(3 downto 0),
      douta(3 downto 0) => douta(3 downto 0),
      doutb(3 downto 0) => doutb(3 downto 0),
      ram_rstram_a => ram_rstram_a,
      ram_rstram_b => ram_rstram_b,
      wea(0) => wea(0),
      web(0) => web(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_blk_mem_gen_prim_width__parameterized3\ is
  port (
    douta : out STD_LOGIC_VECTOR ( 3 downto 0 );
    doutb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    clka : in STD_LOGIC;
    clkb : in STD_LOGIC;
    ENA_I : in STD_LOGIC;
    ENB_I : in STD_LOGIC;
    ram_rstram_a : in STD_LOGIC;
    ram_rstram_b : in STD_LOGIC;
    addra : in STD_LOGIC_VECTOR ( 12 downto 0 );
    addrb : in STD_LOGIC_VECTOR ( 12 downto 0 );
    dina : in STD_LOGIC_VECTOR ( 3 downto 0 );
    dinb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    wea : in STD_LOGIC_VECTOR ( 0 to 0 );
    web : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_blk_mem_gen_prim_width__parameterized3\ : entity is "blk_mem_gen_prim_width";
end \microblaze_mcs_1_blk_mem_gen_prim_width__parameterized3\;

architecture STRUCTURE of \microblaze_mcs_1_blk_mem_gen_prim_width__parameterized3\ is
begin
\prim_noinit.ram\: entity work.\microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized3\
     port map (
      ENA_I => ENA_I,
      ENB_I => ENB_I,
      addra(12 downto 0) => addra(12 downto 0),
      addrb(12 downto 0) => addrb(12 downto 0),
      clka => clka,
      clkb => clkb,
      dina(3 downto 0) => dina(3 downto 0),
      dinb(3 downto 0) => dinb(3 downto 0),
      douta(3 downto 0) => douta(3 downto 0),
      doutb(3 downto 0) => doutb(3 downto 0),
      ram_rstram_a => ram_rstram_a,
      ram_rstram_b => ram_rstram_b,
      wea(0) => wea(0),
      web(0) => web(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_blk_mem_gen_prim_width__parameterized4\ is
  port (
    douta : out STD_LOGIC_VECTOR ( 3 downto 0 );
    doutb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    clka : in STD_LOGIC;
    clkb : in STD_LOGIC;
    ENA_I : in STD_LOGIC;
    ENB_I : in STD_LOGIC;
    ram_rstram_a : in STD_LOGIC;
    ram_rstram_b : in STD_LOGIC;
    addra : in STD_LOGIC_VECTOR ( 12 downto 0 );
    addrb : in STD_LOGIC_VECTOR ( 12 downto 0 );
    dina : in STD_LOGIC_VECTOR ( 3 downto 0 );
    dinb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    wea : in STD_LOGIC_VECTOR ( 0 to 0 );
    web : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_blk_mem_gen_prim_width__parameterized4\ : entity is "blk_mem_gen_prim_width";
end \microblaze_mcs_1_blk_mem_gen_prim_width__parameterized4\;

architecture STRUCTURE of \microblaze_mcs_1_blk_mem_gen_prim_width__parameterized4\ is
begin
\prim_noinit.ram\: entity work.\microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized4\
     port map (
      ENA_I => ENA_I,
      ENB_I => ENB_I,
      addra(12 downto 0) => addra(12 downto 0),
      addrb(12 downto 0) => addrb(12 downto 0),
      clka => clka,
      clkb => clkb,
      dina(3 downto 0) => dina(3 downto 0),
      dinb(3 downto 0) => dinb(3 downto 0),
      douta(3 downto 0) => douta(3 downto 0),
      doutb(3 downto 0) => doutb(3 downto 0),
      ram_rstram_a => ram_rstram_a,
      ram_rstram_b => ram_rstram_b,
      wea(0) => wea(0),
      web(0) => web(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_blk_mem_gen_prim_width__parameterized5\ is
  port (
    douta : out STD_LOGIC_VECTOR ( 3 downto 0 );
    doutb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    clka : in STD_LOGIC;
    clkb : in STD_LOGIC;
    ENA_I : in STD_LOGIC;
    ENB_I : in STD_LOGIC;
    ram_rstram_a : in STD_LOGIC;
    ram_rstram_b : in STD_LOGIC;
    addra : in STD_LOGIC_VECTOR ( 12 downto 0 );
    addrb : in STD_LOGIC_VECTOR ( 12 downto 0 );
    dina : in STD_LOGIC_VECTOR ( 3 downto 0 );
    dinb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    wea : in STD_LOGIC_VECTOR ( 0 to 0 );
    web : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_blk_mem_gen_prim_width__parameterized5\ : entity is "blk_mem_gen_prim_width";
end \microblaze_mcs_1_blk_mem_gen_prim_width__parameterized5\;

architecture STRUCTURE of \microblaze_mcs_1_blk_mem_gen_prim_width__parameterized5\ is
begin
\prim_noinit.ram\: entity work.\microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized5\
     port map (
      ENA_I => ENA_I,
      ENB_I => ENB_I,
      addra(12 downto 0) => addra(12 downto 0),
      addrb(12 downto 0) => addrb(12 downto 0),
      clka => clka,
      clkb => clkb,
      dina(3 downto 0) => dina(3 downto 0),
      dinb(3 downto 0) => dinb(3 downto 0),
      douta(3 downto 0) => douta(3 downto 0),
      doutb(3 downto 0) => doutb(3 downto 0),
      ram_rstram_a => ram_rstram_a,
      ram_rstram_b => ram_rstram_b,
      wea(0) => wea(0),
      web(0) => web(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_mcs_1_blk_mem_gen_prim_width__parameterized6\ is
  port (
    douta : out STD_LOGIC_VECTOR ( 3 downto 0 );
    doutb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    ENA_I : out STD_LOGIC;
    ENB_I : out STD_LOGIC;
    ram_rstram_a : out STD_LOGIC;
    ram_rstram_b : out STD_LOGIC;
    rsta_busy : out STD_LOGIC;
    rstb_busy : out STD_LOGIC;
    clkb : in STD_LOGIC;
    clka : in STD_LOGIC;
    addra : in STD_LOGIC_VECTOR ( 12 downto 0 );
    addrb : in STD_LOGIC_VECTOR ( 12 downto 0 );
    dina : in STD_LOGIC_VECTOR ( 3 downto 0 );
    dinb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    wea : in STD_LOGIC_VECTOR ( 0 to 0 );
    web : in STD_LOGIC_VECTOR ( 0 to 0 );
    rsta : in STD_LOGIC;
    ena : in STD_LOGIC;
    rstb : in STD_LOGIC;
    enb : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_mcs_1_blk_mem_gen_prim_width__parameterized6\ : entity is "blk_mem_gen_prim_width";
end \microblaze_mcs_1_blk_mem_gen_prim_width__parameterized6\;

architecture STRUCTURE of \microblaze_mcs_1_blk_mem_gen_prim_width__parameterized6\ is
  signal ENA_dly : STD_LOGIC;
  signal ENA_dly_D : STD_LOGIC;
  signal ENB_dly : STD_LOGIC;
  signal ENB_dly_D : STD_LOGIC;
  signal POR_A : STD_LOGIC;
  signal POR_B : STD_LOGIC;
  signal \SAFETY_CKT_GEN.POR_A_i_1_n_0\ : STD_LOGIC;
  signal \SAFETY_CKT_GEN.POR_B_i_1_n_0\ : STD_LOGIC;
  signal \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3_n_0\ : STD_LOGIC;
  signal \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg_n_0_[0]\ : STD_LOGIC;
  signal \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg_n_0_[4]\ : STD_LOGIC;
  signal \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3_n_0\ : STD_LOGIC;
  signal \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg_n_0_[0]\ : STD_LOGIC;
  signal \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg_n_0_[4]\ : STD_LOGIC;
  signal \^ram_rstram_a\ : STD_LOGIC;
  signal ram_rstram_a_busy : STD_LOGIC;
  signal \^ram_rstram_b\ : STD_LOGIC;
  signal ram_rstram_b_busy : STD_LOGIC;
  attribute srl_bus_name : string;
  attribute srl_bus_name of \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3\ : label is "inst/lmb_bram_I/U0/\inst_blk_mem_gen/gnbram.gnative_mem_map_bmg.native_mem_map_blk_mem_gen/valid.cstr/ramloop[7].ram.r/SAFETY_CKT_GEN.RSTA_SHFT_REG_reg ";
  attribute srl_name : string;
  attribute srl_name of \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3\ : label is "inst/lmb_bram_I/U0/\inst_blk_mem_gen/gnbram.gnative_mem_map_bmg.native_mem_map_blk_mem_gen/valid.cstr/ramloop[7].ram.r/SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3 ";
  attribute srl_bus_name of \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3\ : label is "inst/lmb_bram_I/U0/\inst_blk_mem_gen/gnbram.gnative_mem_map_bmg.native_mem_map_blk_mem_gen/valid.cstr/ramloop[7].ram.r/SAFETY_CKT_GEN.RSTB_SHFT_REG_reg ";
  attribute srl_name of \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3\ : label is "inst/lmb_bram_I/U0/\inst_blk_mem_gen/gnbram.gnative_mem_map_bmg.native_mem_map_blk_mem_gen/valid.cstr/ramloop[7].ram.r/SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3 ";
begin
  ram_rstram_a <= \^ram_rstram_a\;
  ram_rstram_b <= \^ram_rstram_b\;
\SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_D_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clka,
      CE => '1',
      D => ENA_dly,
      Q => ENA_dly_D,
      R => '0'
    );
\SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clka,
      CE => '1',
      D => \^ram_rstram_a\,
      Q => ENA_dly,
      R => '0'
    );
\SAFETY_CKT_GEN.ENB_NO_REG.ENB_dly_D_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clkb,
      CE => '1',
      D => ENB_dly,
      Q => ENB_dly_D,
      R => '0'
    );
\SAFETY_CKT_GEN.ENB_NO_REG.ENB_dly_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clkb,
      CE => '1',
      D => \^ram_rstram_b\,
      Q => ENB_dly,
      R => '0'
    );
\SAFETY_CKT_GEN.POR_A_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg_n_0_[0]\,
      I1 => \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg_n_0_[4]\,
      O => \SAFETY_CKT_GEN.POR_A_i_1_n_0\
    );
\SAFETY_CKT_GEN.POR_A_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clka,
      CE => '1',
      D => \SAFETY_CKT_GEN.POR_A_i_1_n_0\,
      Q => POR_A,
      R => '0'
    );
\SAFETY_CKT_GEN.POR_B_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg_n_0_[0]\,
      I1 => \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg_n_0_[4]\,
      O => \SAFETY_CKT_GEN.POR_B_i_1_n_0\
    );
\SAFETY_CKT_GEN.POR_B_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clkb,
      CE => '1',
      D => \SAFETY_CKT_GEN.POR_B_i_1_n_0\,
      Q => POR_B,
      R => '0'
    );
\SAFETY_CKT_GEN.RSTA_BUSY_NO_REG.RSTA_BUSY_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => POR_A,
      I1 => rsta,
      I2 => ENA_dly,
      I3 => ENA_dly_D,
      O => ram_rstram_a_busy
    );
\SAFETY_CKT_GEN.RSTA_BUSY_NO_REG.RSTA_BUSY_reg\: unisim.vcomponents.FDRE
     port map (
      C => clka,
      CE => '1',
      D => ram_rstram_a_busy,
      Q => rsta_busy,
      R => '0'
    );
\SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clka,
      CE => '1',
      D => '1',
      Q => \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg_n_0_[0]\,
      R => '0'
    );
\SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => '0',
      A1 => '1',
      A2 => '0',
      A3 => '0',
      CE => '1',
      CLK => clka,
      D => \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg_n_0_[0]\,
      Q => \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3_n_0\
    );
\SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clka,
      CE => '1',
      D => \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3_n_0\,
      Q => \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg_n_0_[4]\,
      R => '0'
    );
\SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clkb,
      CE => '1',
      D => '1',
      Q => \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg_n_0_[0]\,
      R => '0'
    );
\SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => '0',
      A1 => '1',
      A2 => '0',
      A3 => '0',
      CE => '1',
      CLK => clkb,
      D => \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg_n_0_[0]\,
      Q => \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3_n_0\
    );
\SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clkb,
      CE => '1',
      D => \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3_n_0\,
      Q => \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg_n_0_[4]\,
      R => '0'
    );
\SAFETY_CKT_GEN.nSPRAM_RST_BUSY.RSTB_BUSY_NO_REG.RSTB_BUSY_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => POR_B,
      I1 => rstb,
      I2 => ENB_dly,
      I3 => ENB_dly_D,
      O => ram_rstram_b_busy
    );
\SAFETY_CKT_GEN.nSPRAM_RST_BUSY.RSTB_BUSY_NO_REG.RSTB_BUSY_reg\: unisim.vcomponents.FDRE
     port map (
      C => clkb,
      CE => '1',
      D => ram_rstram_b_busy,
      Q => rstb_busy,
      R => '0'
    );
\prim_noinit.ram\: entity work.\microblaze_mcs_1_blk_mem_gen_prim_wrapper__parameterized6\
     port map (
      ENA_I => ENA_I,
      ENA_dly_D => ENA_dly_D,
      ENB_I => ENB_I,
      ENB_dly_D => ENB_dly_D,
      POR_A => POR_A,
      POR_B => POR_B,
      addra(12 downto 0) => addra(12 downto 0),
      addrb(12 downto 0) => addrb(12 downto 0),
      clka => clka,
      clkb => clkb,
      dina(3 downto 0) => dina(3 downto 0),
      dinb(3 downto 0) => dinb(3 downto 0),
      douta(3 downto 0) => douta(3 downto 0),
      doutb(3 downto 0) => doutb(3 downto 0),
      ena => ena,
      enb => enb,
      ram_rstram_a => \^ram_rstram_a\,
      ram_rstram_b => \^ram_rstram_b\,
      rsta => rsta,
      rstb => rstb,
      wea(0) => wea(0),
      web(0) => web(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_mux4_8 is
  port (
    D : out STD_LOGIC_VECTOR ( 15 downto 0 );
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 31 );
    sel_Write_Mux_MSB : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
end microblaze_mcs_1_mux4_8;

architecture STRUCTURE of microblaze_mcs_1_mux4_8 is
begin
\GEN4_LOOP[0].BYTESTEER_LUT6\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized14_759\
     port map (
      D(1) => D(15),
      D(0) => D(7),
      sel_Write_Mux_MSB(1 downto 0) => sel_Write_Mux_MSB(1 downto 0),
      \write_Addr_I_reg[0]\(3) => \write_Addr_I_reg[0]\(0),
      \write_Addr_I_reg[0]\(2) => \write_Addr_I_reg[0]\(8),
      \write_Addr_I_reg[0]\(1) => \write_Addr_I_reg[0]\(16),
      \write_Addr_I_reg[0]\(0) => \write_Addr_I_reg[0]\(24)
    );
\GEN4_LOOP[1].BYTESTEER_LUT6\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized14_760\
     port map (
      D(1) => D(14),
      D(0) => D(6),
      sel_Write_Mux_MSB(1 downto 0) => sel_Write_Mux_MSB(1 downto 0),
      \write_Addr_I_reg[0]\(3) => \write_Addr_I_reg[0]\(1),
      \write_Addr_I_reg[0]\(2) => \write_Addr_I_reg[0]\(9),
      \write_Addr_I_reg[0]\(1) => \write_Addr_I_reg[0]\(17),
      \write_Addr_I_reg[0]\(0) => \write_Addr_I_reg[0]\(25)
    );
\GEN4_LOOP[2].BYTESTEER_LUT6\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized14_761\
     port map (
      D(1) => D(13),
      D(0) => D(5),
      sel_Write_Mux_MSB(1 downto 0) => sel_Write_Mux_MSB(1 downto 0),
      \write_Addr_I_reg[0]\(3) => \write_Addr_I_reg[0]\(2),
      \write_Addr_I_reg[0]\(2) => \write_Addr_I_reg[0]\(10),
      \write_Addr_I_reg[0]\(1) => \write_Addr_I_reg[0]\(18),
      \write_Addr_I_reg[0]\(0) => \write_Addr_I_reg[0]\(26)
    );
\GEN4_LOOP[3].BYTESTEER_LUT6\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized14_762\
     port map (
      D(1) => D(12),
      D(0) => D(4),
      sel_Write_Mux_MSB(1 downto 0) => sel_Write_Mux_MSB(1 downto 0),
      \write_Addr_I_reg[0]\(3) => \write_Addr_I_reg[0]\(3),
      \write_Addr_I_reg[0]\(2) => \write_Addr_I_reg[0]\(11),
      \write_Addr_I_reg[0]\(1) => \write_Addr_I_reg[0]\(19),
      \write_Addr_I_reg[0]\(0) => \write_Addr_I_reg[0]\(27)
    );
\GEN4_LOOP[4].BYTESTEER_LUT6\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized14_763\
     port map (
      D(1) => D(11),
      D(0) => D(3),
      sel_Write_Mux_MSB(1 downto 0) => sel_Write_Mux_MSB(1 downto 0),
      \write_Addr_I_reg[0]\(3) => \write_Addr_I_reg[0]\(4),
      \write_Addr_I_reg[0]\(2) => \write_Addr_I_reg[0]\(12),
      \write_Addr_I_reg[0]\(1) => \write_Addr_I_reg[0]\(20),
      \write_Addr_I_reg[0]\(0) => \write_Addr_I_reg[0]\(28)
    );
\GEN4_LOOP[5].BYTESTEER_LUT6\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized14_764\
     port map (
      D(1) => D(10),
      D(0) => D(2),
      sel_Write_Mux_MSB(1 downto 0) => sel_Write_Mux_MSB(1 downto 0),
      \write_Addr_I_reg[0]\(3) => \write_Addr_I_reg[0]\(5),
      \write_Addr_I_reg[0]\(2) => \write_Addr_I_reg[0]\(13),
      \write_Addr_I_reg[0]\(1) => \write_Addr_I_reg[0]\(21),
      \write_Addr_I_reg[0]\(0) => \write_Addr_I_reg[0]\(29)
    );
\GEN4_LOOP[6].BYTESTEER_LUT6\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized14_765\
     port map (
      D(1) => D(9),
      D(0) => D(1),
      sel_Write_Mux_MSB(1 downto 0) => sel_Write_Mux_MSB(1 downto 0),
      \write_Addr_I_reg[0]\(3) => \write_Addr_I_reg[0]\(6),
      \write_Addr_I_reg[0]\(2) => \write_Addr_I_reg[0]\(14),
      \write_Addr_I_reg[0]\(1) => \write_Addr_I_reg[0]\(22),
      \write_Addr_I_reg[0]\(0) => \write_Addr_I_reg[0]\(30)
    );
\GEN4_LOOP[7].BYTESTEER_LUT6\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized14_766\
     port map (
      D(1) => D(8),
      D(0) => D(0),
      sel_Write_Mux_MSB(1 downto 0) => sel_Write_Mux_MSB(1 downto 0),
      \write_Addr_I_reg[0]\(3) => \write_Addr_I_reg[0]\(7),
      \write_Addr_I_reg[0]\(2) => \write_Addr_I_reg[0]\(15),
      \write_Addr_I_reg[0]\(1) => \write_Addr_I_reg[0]\(23),
      \write_Addr_I_reg[0]\(0) => \write_Addr_I_reg[0]\(31)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_FIT_Module is
  port (
    en_16x_baud : out STD_LOGIC;
    Clk : in STD_LOGIC
  );
end microblaze_mcs_1_FIT_Module;

architecture STRUCTURE of microblaze_mcs_1_FIT_Module is
  signal Clk_En_I_1 : STD_LOGIC;
begin
\Implement_FIT.Using_SRL16s.SRL16s[1].Divide_I\: entity work.microblaze_mcs_1_Divide_part
     port map (
      Clk => Clk,
      Clk_En_I_1 => Clk_En_I_1
    );
\Implement_FIT.Using_SRL16s.SRL16s[2].Divide_I\: entity work.\microblaze_mcs_1_Divide_part__parameterized0\
     port map (
      Clk => Clk,
      Clk_En_I_1 => Clk_En_I_1,
      en_16x_baud => en_16x_baud
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_proc_sys_reset is
  port (
    slowest_sync_clk : in STD_LOGIC;
    ext_reset_in : in STD_LOGIC;
    aux_reset_in : in STD_LOGIC;
    mb_debug_sys_rst : in STD_LOGIC;
    dcm_locked : in STD_LOGIC;
    mb_reset : out STD_LOGIC;
    bus_struct_reset : out STD_LOGIC_VECTOR ( 0 to 0 );
    peripheral_reset : out STD_LOGIC_VECTOR ( 0 to 0 );
    interconnect_aresetn : out STD_LOGIC_VECTOR ( 0 to 0 );
    peripheral_aresetn : out STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute C_AUX_RESET_HIGH : string;
  attribute C_AUX_RESET_HIGH of microblaze_mcs_1_proc_sys_reset : entity is "1'b0";
  attribute C_AUX_RST_WIDTH : integer;
  attribute C_AUX_RST_WIDTH of microblaze_mcs_1_proc_sys_reset : entity is 4;
  attribute C_EXT_RESET_HIGH : string;
  attribute C_EXT_RESET_HIGH of microblaze_mcs_1_proc_sys_reset : entity is "1'b1";
  attribute C_EXT_RST_WIDTH : integer;
  attribute C_EXT_RST_WIDTH of microblaze_mcs_1_proc_sys_reset : entity is 4;
  attribute C_FAMILY : string;
  attribute C_FAMILY of microblaze_mcs_1_proc_sys_reset : entity is "spartan7";
  attribute C_NUM_BUS_RST : integer;
  attribute C_NUM_BUS_RST of microblaze_mcs_1_proc_sys_reset : entity is 1;
  attribute C_NUM_INTERCONNECT_ARESETN : integer;
  attribute C_NUM_INTERCONNECT_ARESETN of microblaze_mcs_1_proc_sys_reset : entity is 1;
  attribute C_NUM_PERP_ARESETN : integer;
  attribute C_NUM_PERP_ARESETN of microblaze_mcs_1_proc_sys_reset : entity is 1;
  attribute C_NUM_PERP_RST : integer;
  attribute C_NUM_PERP_RST of microblaze_mcs_1_proc_sys_reset : entity is 1;
end microblaze_mcs_1_proc_sys_reset;

architecture STRUCTURE of microblaze_mcs_1_proc_sys_reset is
  signal Bsr_out : STD_LOGIC;
  signal MB_out : STD_LOGIC;
  signal Pr_out : STD_LOGIC;
  signal SEQ_n_3 : STD_LOGIC;
  signal SEQ_n_4 : STD_LOGIC;
  signal lpf_int : STD_LOGIC;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of \ACTIVE_LOW_BSR_OUT_DFF[0].FDRE_BSR_N\ : label is "PRIMITIVE";
  attribute BOX_TYPE of \ACTIVE_LOW_PR_OUT_DFF[0].FDRE_PER_N\ : label is "PRIMITIVE";
  attribute BOX_TYPE of \BSR_OUT_DFF[0].FDRE_BSR\ : label is "PRIMITIVE";
  attribute BOX_TYPE of FDRE_inst : label is "PRIMITIVE";
  attribute BOX_TYPE of \PR_OUT_DFF[0].FDRE_PER\ : label is "PRIMITIVE";
  attribute equivalent_register_removal : string;
  attribute equivalent_register_removal of bus_struct_reset : signal is "no";
  attribute equivalent_register_removal of interconnect_aresetn : signal is "no";
  attribute equivalent_register_removal of peripheral_aresetn : signal is "no";
  attribute equivalent_register_removal of peripheral_reset : signal is "no";
begin
\ACTIVE_LOW_BSR_OUT_DFF[0].FDRE_BSR_N\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => SEQ_n_3,
      Q => interconnect_aresetn(0),
      R => '0'
    );
\ACTIVE_LOW_PR_OUT_DFF[0].FDRE_PER_N\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => SEQ_n_4,
      Q => peripheral_aresetn(0),
      R => '0'
    );
\BSR_OUT_DFF[0].FDRE_BSR\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => Bsr_out,
      Q => bus_struct_reset(0),
      R => '0'
    );
EXT_LPF: entity work.microblaze_mcs_1_lpf
     port map (
      aux_reset_in => aux_reset_in,
      dcm_locked => dcm_locked,
      ext_reset_in => ext_reset_in,
      lpf_int => lpf_int,
      mb_debug_sys_rst => mb_debug_sys_rst,
      slowest_sync_clk => slowest_sync_clk
    );
FDRE_inst: unisim.vcomponents.FDRE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => MB_out,
      Q => mb_reset,
      R => '0'
    );
\PR_OUT_DFF[0].FDRE_PER\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => Pr_out,
      Q => peripheral_reset(0),
      R => '0'
    );
SEQ: entity work.microblaze_mcs_1_sequence_psr
     port map (
      \ACTIVE_LOW_BSR_OUT_DFF[0].FDRE_BSR_N\ => SEQ_n_3,
      \ACTIVE_LOW_PR_OUT_DFF[0].FDRE_PER_N\ => SEQ_n_4,
      Bsr_out => Bsr_out,
      MB_out => MB_out,
      Pr_out => Pr_out,
      lpf_int => lpf_int,
      slowest_sync_clk => slowest_sync_clk
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_ALU is
  port (
    LO : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 29 downto 0 );
    O : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    carry_In : in STD_LOGIC;
    Unsigned_Op : in STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 27 downto 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    Op1_Logic : in STD_LOGIC;
    compare_Instr : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC;
    EX_Op1 : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    Op1_Shift : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    \Using_FPGA.Native_9\ : in STD_LOGIC;
    \Using_FPGA.Native_10\ : in STD_LOGIC;
    \Using_FPGA.Native_11\ : in STD_LOGIC;
    \Using_FPGA.Native_12\ : in STD_LOGIC;
    \Using_FPGA.Native_13\ : in STD_LOGIC;
    \Using_FPGA.Native_14\ : in STD_LOGIC;
    \Using_FPGA.Native_15\ : in STD_LOGIC;
    \Using_FPGA.Native_16\ : in STD_LOGIC;
    \Using_FPGA.Native_17\ : in STD_LOGIC;
    \Using_FPGA.Native_18\ : in STD_LOGIC;
    \Using_FPGA.Native_19\ : in STD_LOGIC;
    \Using_FPGA.Native_20\ : in STD_LOGIC;
    \Using_FPGA.Native_21\ : in STD_LOGIC;
    \Using_FPGA.Native_22\ : in STD_LOGIC;
    \Using_FPGA.Native_23\ : in STD_LOGIC;
    \Using_FPGA.Native_24\ : in STD_LOGIC;
    \Using_FPGA.Native_25\ : in STD_LOGIC;
    \Using_FPGA.Native_26\ : in STD_LOGIC;
    \Using_FPGA.Native_27\ : in STD_LOGIC;
    \Using_FPGA.Native_28\ : in STD_LOGIC;
    \Using_FPGA.Native_29\ : in STD_LOGIC;
    \Using_FPGA.Native_30\ : in STD_LOGIC;
    \Using_FPGA.Native_31\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC
  );
end microblaze_mcs_1_ALU;

architecture STRUCTURE of microblaze_mcs_1_ALU is
  signal alu_carry_1 : STD_LOGIC;
  signal alu_carry_10 : STD_LOGIC;
  signal alu_carry_11 : STD_LOGIC;
  signal alu_carry_12 : STD_LOGIC;
  signal alu_carry_13 : STD_LOGIC;
  signal alu_carry_14 : STD_LOGIC;
  signal alu_carry_15 : STD_LOGIC;
  signal alu_carry_16 : STD_LOGIC;
  signal alu_carry_17 : STD_LOGIC;
  signal alu_carry_18 : STD_LOGIC;
  signal alu_carry_19 : STD_LOGIC;
  signal alu_carry_2 : STD_LOGIC;
  signal alu_carry_20 : STD_LOGIC;
  signal alu_carry_21 : STD_LOGIC;
  signal alu_carry_22 : STD_LOGIC;
  signal alu_carry_23 : STD_LOGIC;
  signal alu_carry_24 : STD_LOGIC;
  signal alu_carry_25 : STD_LOGIC;
  signal alu_carry_26 : STD_LOGIC;
  signal alu_carry_27 : STD_LOGIC;
  signal alu_carry_28 : STD_LOGIC;
  signal alu_carry_29 : STD_LOGIC;
  signal alu_carry_3 : STD_LOGIC;
  signal alu_carry_30 : STD_LOGIC;
  signal alu_carry_31 : STD_LOGIC;
  signal alu_carry_4 : STD_LOGIC;
  signal alu_carry_5 : STD_LOGIC;
  signal alu_carry_6 : STD_LOGIC;
  signal alu_carry_7 : STD_LOGIC;
  signal alu_carry_8 : STD_LOGIC;
  signal alu_carry_9 : STD_LOGIC;
  signal alu_carry_in : STD_LOGIC;
  signal control_carry : STD_LOGIC;
  signal \^lopt\ : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal lopt_100 : STD_LOGIC;
  signal lopt_101 : STD_LOGIC;
  signal lopt_11 : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal lopt_13 : STD_LOGIC;
  signal lopt_14 : STD_LOGIC;
  signal lopt_15 : STD_LOGIC;
  signal lopt_16 : STD_LOGIC;
  signal lopt_17 : STD_LOGIC;
  signal lopt_18 : STD_LOGIC;
  signal lopt_19 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal lopt_20 : STD_LOGIC;
  signal lopt_21 : STD_LOGIC;
  signal lopt_22 : STD_LOGIC;
  signal lopt_23 : STD_LOGIC;
  signal lopt_24 : STD_LOGIC;
  signal lopt_25 : STD_LOGIC;
  signal lopt_26 : STD_LOGIC;
  signal lopt_27 : STD_LOGIC;
  signal lopt_28 : STD_LOGIC;
  signal lopt_29 : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal lopt_30 : STD_LOGIC;
  signal lopt_31 : STD_LOGIC;
  signal lopt_32 : STD_LOGIC;
  signal lopt_33 : STD_LOGIC;
  signal lopt_34 : STD_LOGIC;
  signal lopt_35 : STD_LOGIC;
  signal lopt_36 : STD_LOGIC;
  signal lopt_37 : STD_LOGIC;
  signal lopt_38 : STD_LOGIC;
  signal lopt_39 : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal lopt_40 : STD_LOGIC;
  signal lopt_41 : STD_LOGIC;
  signal lopt_42 : STD_LOGIC;
  signal lopt_43 : STD_LOGIC;
  signal lopt_44 : STD_LOGIC;
  signal lopt_45 : STD_LOGIC;
  signal lopt_46 : STD_LOGIC;
  signal lopt_47 : STD_LOGIC;
  signal lopt_48 : STD_LOGIC;
  signal lopt_49 : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal lopt_50 : STD_LOGIC;
  signal lopt_51 : STD_LOGIC;
  signal lopt_52 : STD_LOGIC;
  signal lopt_53 : STD_LOGIC;
  signal lopt_54 : STD_LOGIC;
  signal lopt_55 : STD_LOGIC;
  signal lopt_56 : STD_LOGIC;
  signal lopt_57 : STD_LOGIC;
  signal lopt_58 : STD_LOGIC;
  signal lopt_59 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_60 : STD_LOGIC;
  signal lopt_61 : STD_LOGIC;
  signal lopt_62 : STD_LOGIC;
  signal lopt_63 : STD_LOGIC;
  signal lopt_64 : STD_LOGIC;
  signal lopt_65 : STD_LOGIC;
  signal lopt_66 : STD_LOGIC;
  signal lopt_67 : STD_LOGIC;
  signal lopt_68 : STD_LOGIC;
  signal lopt_69 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal lopt_70 : STD_LOGIC;
  signal lopt_71 : STD_LOGIC;
  signal lopt_72 : STD_LOGIC;
  signal lopt_73 : STD_LOGIC;
  signal lopt_74 : STD_LOGIC;
  signal lopt_75 : STD_LOGIC;
  signal lopt_76 : STD_LOGIC;
  signal lopt_77 : STD_LOGIC;
  signal lopt_78 : STD_LOGIC;
  signal lopt_79 : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal lopt_80 : STD_LOGIC;
  signal lopt_81 : STD_LOGIC;
  signal lopt_82 : STD_LOGIC;
  signal lopt_83 : STD_LOGIC;
  signal lopt_84 : STD_LOGIC;
  signal lopt_85 : STD_LOGIC;
  signal lopt_86 : STD_LOGIC;
  signal lopt_87 : STD_LOGIC;
  signal lopt_88 : STD_LOGIC;
  signal lopt_89 : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal lopt_90 : STD_LOGIC;
  signal lopt_91 : STD_LOGIC;
  signal lopt_92 : STD_LOGIC;
  signal lopt_93 : STD_LOGIC;
  signal lopt_94 : STD_LOGIC;
  signal lopt_95 : STD_LOGIC;
  signal lopt_96 : STD_LOGIC;
  signal lopt_97 : STD_LOGIC;
  signal lopt_98 : STD_LOGIC;
  signal lopt_99 : STD_LOGIC;
begin
  lopt <= lopt_96;
  lopt_100 <= lopt_4;
  lopt_101 <= lopt_5;
  lopt_3 <= lopt_99;
  lopt_97 <= lopt_1;
  lopt_98 <= lopt_2;
\No_Carry_Decoding.CarryIn_MUXCY\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_661
     port map (
      CI => alu_carry_in,
      carry_In => carry_In,
      control_carry => control_carry,
      lopt => \^lopt\,
      lopt_1 => \^lopt_1\,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => \^lopt_2\,
      lopt_3 => \^lopt_3\,
      lopt_4 => \^lopt_4\,
      lopt_5 => \^lopt_5\,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
\No_Carry_Decoding.alu_carry_select_LUT\: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized3\
     port map (
      carry_In => carry_In,
      control_carry => control_carry
    );
\Using_FPGA.ALL_Bits[0].ALU_Bit_I1\: entity work.\microblaze_mcs_1_ALU_Bit__parameterized2\
     port map (
      D(0) => D(29),
      LO => alu_carry_31,
      Op1_Logic => Op1_Logic,
      Unsigned_Op => Unsigned_Op,
      \Using_FPGA.Native\ => LO,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      compare_Instr => compare_Instr,
      lopt => lopt_96,
      lopt_1 => lopt_97,
      lopt_2 => lopt_98,
      lopt_3 => lopt_99,
      lopt_4 => lopt_100,
      lopt_5 => lopt_101,
      op2_C(0) => op2_C(27)
    );
\Using_FPGA.ALL_Bits[10].ALU_Bit_I1\: entity work.microblaze_mcs_1_ALU_Bit
     port map (
      D(0) => D(19),
      EX_CarryOut => alu_carry_22,
      LO => alu_carry_21,
      \Using_FPGA.Native\ => \Using_FPGA.Native_22\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_63,
      lopt_1 => lopt_64,
      lopt_2 => lopt_65,
      lopt_3 => lopt_70,
      op2_C(0) => op2_C(17)
    );
\Using_FPGA.ALL_Bits[11].ALU_Bit_I1\: entity work.microblaze_mcs_1_ALU_Bit_662
     port map (
      D(0) => D(18),
      EX_CarryOut => alu_carry_21,
      LO => alu_carry_20,
      \Using_FPGA.Native\ => \Using_FPGA.Native_21\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_60,
      lopt_1 => lopt_61,
      lopt_2 => lopt_62,
      lopt_3 => lopt_69,
      op2_C(0) => op2_C(16)
    );
\Using_FPGA.ALL_Bits[12].ALU_Bit_I1\: entity work.microblaze_mcs_1_ALU_Bit_663
     port map (
      D(0) => D(17),
      EX_CarryOut => alu_carry_20,
      LO => alu_carry_19,
      \Using_FPGA.Native\ => \Using_FPGA.Native_20\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_60,
      lopt_1 => lopt_61,
      lopt_10 => lopt_70,
      lopt_11 => lopt_71,
      lopt_2 => lopt_62,
      lopt_3 => lopt_63,
      lopt_4 => lopt_64,
      lopt_5 => lopt_65,
      lopt_6 => lopt_66,
      lopt_7 => lopt_67,
      lopt_8 => lopt_68,
      lopt_9 => lopt_69,
      op2_C(0) => op2_C(15)
    );
\Using_FPGA.ALL_Bits[13].ALU_Bit_I1\: entity work.microblaze_mcs_1_ALU_Bit_664
     port map (
      D(0) => D(16),
      EX_CarryOut => alu_carry_19,
      LO => alu_carry_18,
      \Using_FPGA.Native\ => \Using_FPGA.Native_19\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_54,
      lopt_1 => lopt_55,
      lopt_2 => lopt_56,
      lopt_3 => lopt_59,
      op2_C(0) => op2_C(14)
    );
\Using_FPGA.ALL_Bits[14].ALU_Bit_I1\: entity work.microblaze_mcs_1_ALU_Bit_665
     port map (
      D(0) => D(15),
      EX_CarryOut => alu_carry_18,
      LO => alu_carry_17,
      \Using_FPGA.Native\ => \Using_FPGA.Native_18\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_51,
      lopt_1 => lopt_52,
      lopt_2 => lopt_53,
      lopt_3 => lopt_58,
      op2_C(0) => op2_C(13)
    );
\Using_FPGA.ALL_Bits[15].ALU_Bit_I1\: entity work.microblaze_mcs_1_ALU_Bit_666
     port map (
      D(0) => D(14),
      EX_CarryOut => alu_carry_17,
      LO => alu_carry_16,
      \Using_FPGA.Native\ => \Using_FPGA.Native_17\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_48,
      lopt_1 => lopt_49,
      lopt_2 => lopt_50,
      lopt_3 => lopt_57,
      op2_C(0) => op2_C(12)
    );
\Using_FPGA.ALL_Bits[16].ALU_Bit_I1\: entity work.microblaze_mcs_1_ALU_Bit_667
     port map (
      D(0) => D(13),
      EX_CarryOut => alu_carry_16,
      LO => alu_carry_15,
      \Using_FPGA.Native\ => \Using_FPGA.Native_16\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_48,
      lopt_1 => lopt_49,
      lopt_10 => lopt_58,
      lopt_11 => lopt_59,
      lopt_2 => lopt_50,
      lopt_3 => lopt_51,
      lopt_4 => lopt_52,
      lopt_5 => lopt_53,
      lopt_6 => lopt_54,
      lopt_7 => lopt_55,
      lopt_8 => lopt_56,
      lopt_9 => lopt_57,
      op2_C(0) => op2_C(11)
    );
\Using_FPGA.ALL_Bits[17].ALU_Bit_I1\: entity work.microblaze_mcs_1_ALU_Bit_668
     port map (
      D(0) => D(12),
      EX_CarryOut => alu_carry_15,
      LO => alu_carry_14,
      \Using_FPGA.Native\ => \Using_FPGA.Native_15\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_42,
      lopt_1 => lopt_43,
      lopt_2 => lopt_44,
      lopt_3 => lopt_47,
      op2_C(0) => op2_C(10)
    );
\Using_FPGA.ALL_Bits[18].ALU_Bit_I1\: entity work.microblaze_mcs_1_ALU_Bit_669
     port map (
      D(0) => D(11),
      EX_CarryOut => alu_carry_14,
      LO => alu_carry_13,
      \Using_FPGA.Native\ => \Using_FPGA.Native_14\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_39,
      lopt_1 => lopt_40,
      lopt_2 => lopt_41,
      lopt_3 => lopt_46,
      op2_C(0) => op2_C(9)
    );
\Using_FPGA.ALL_Bits[19].ALU_Bit_I1\: entity work.microblaze_mcs_1_ALU_Bit_670
     port map (
      D(0) => D(10),
      EX_CarryOut => alu_carry_13,
      LO => alu_carry_12,
      \Using_FPGA.Native\ => \Using_FPGA.Native_13\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_36,
      lopt_1 => lopt_37,
      lopt_2 => lopt_38,
      lopt_3 => lopt_45,
      op2_C(0) => op2_C(8)
    );
\Using_FPGA.ALL_Bits[1].ALU_Bit_I1\: entity work.microblaze_mcs_1_ALU_Bit_671
     port map (
      D(0) => D(28),
      EX_CarryOut => alu_carry_31,
      LO => alu_carry_30,
      \Using_FPGA.Native\ => \Using_FPGA.Native_31\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_90,
      lopt_1 => lopt_91,
      lopt_2 => lopt_92,
      lopt_3 => lopt_95,
      op2_C(0) => op2_C(26)
    );
\Using_FPGA.ALL_Bits[20].ALU_Bit_I1\: entity work.microblaze_mcs_1_ALU_Bit_672
     port map (
      D(0) => D(9),
      EX_CarryOut => alu_carry_12,
      LO => alu_carry_11,
      \Using_FPGA.Native\ => \Using_FPGA.Native_12\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_36,
      lopt_1 => lopt_37,
      lopt_10 => lopt_46,
      lopt_11 => lopt_47,
      lopt_2 => lopt_38,
      lopt_3 => lopt_39,
      lopt_4 => lopt_40,
      lopt_5 => lopt_41,
      lopt_6 => lopt_42,
      lopt_7 => lopt_43,
      lopt_8 => lopt_44,
      lopt_9 => lopt_45,
      op2_C(0) => op2_C(7)
    );
\Using_FPGA.ALL_Bits[21].ALU_Bit_I1\: entity work.microblaze_mcs_1_ALU_Bit_673
     port map (
      D(0) => D(8),
      EX_CarryOut => alu_carry_11,
      LO => alu_carry_10,
      \Using_FPGA.Native\ => \Using_FPGA.Native_11\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_30,
      lopt_1 => lopt_31,
      lopt_2 => lopt_32,
      lopt_3 => lopt_35,
      op2_C(0) => op2_C(6)
    );
\Using_FPGA.ALL_Bits[22].ALU_Bit_I1\: entity work.microblaze_mcs_1_ALU_Bit_674
     port map (
      D(0) => D(7),
      EX_CarryOut => alu_carry_10,
      LO => alu_carry_9,
      \Using_FPGA.Native\ => \Using_FPGA.Native_10\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_27,
      lopt_1 => lopt_28,
      lopt_2 => lopt_29,
      lopt_3 => lopt_34,
      op2_C(0) => op2_C(5)
    );
\Using_FPGA.ALL_Bits[23].ALU_Bit_I1\: entity work.microblaze_mcs_1_ALU_Bit_675
     port map (
      D(0) => D(6),
      EX_CarryOut => alu_carry_9,
      LO => alu_carry_8,
      \Using_FPGA.Native\ => \Using_FPGA.Native_9\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_24,
      lopt_1 => lopt_25,
      lopt_2 => lopt_26,
      lopt_3 => lopt_33,
      op2_C(0) => op2_C(4)
    );
\Using_FPGA.ALL_Bits[24].ALU_Bit_I1\: entity work.microblaze_mcs_1_ALU_Bit_676
     port map (
      D(0) => D(5),
      EX_CarryOut => alu_carry_8,
      LO => alu_carry_7,
      \Using_FPGA.Native\ => \Using_FPGA.Native_8\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_24,
      lopt_1 => lopt_25,
      lopt_10 => lopt_34,
      lopt_11 => lopt_35,
      lopt_2 => lopt_26,
      lopt_3 => lopt_27,
      lopt_4 => lopt_28,
      lopt_5 => lopt_29,
      lopt_6 => lopt_30,
      lopt_7 => lopt_31,
      lopt_8 => lopt_32,
      lopt_9 => lopt_33,
      op2_C(0) => op2_C(3)
    );
\Using_FPGA.ALL_Bits[25].ALU_Bit_I1\: entity work.microblaze_mcs_1_ALU_Bit_677
     port map (
      D(0) => D(4),
      EX_CarryOut => alu_carry_7,
      LO => alu_carry_6,
      \Using_FPGA.Native\ => \Using_FPGA.Native_7\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_18,
      lopt_1 => lopt_19,
      lopt_2 => lopt_20,
      lopt_3 => lopt_23,
      op2_C(0) => op2_C(2)
    );
\Using_FPGA.ALL_Bits[26].ALU_Bit_I1\: entity work.microblaze_mcs_1_ALU_Bit_678
     port map (
      D(0) => D(3),
      EX_CarryOut => alu_carry_6,
      LO => alu_carry_5,
      \Using_FPGA.Native\ => \Using_FPGA.Native_6\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_15,
      lopt_1 => lopt_16,
      lopt_2 => lopt_17,
      lopt_3 => lopt_22,
      op2_C(0) => op2_C(1)
    );
\Using_FPGA.ALL_Bits[27].ALU_Bit_I1\: entity work.microblaze_mcs_1_ALU_Bit_679
     port map (
      D(0) => D(2),
      EX_CarryOut => alu_carry_5,
      LO => alu_carry_4,
      \Using_FPGA.Native\ => \Using_FPGA.Native_5\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_12,
      lopt_1 => lopt_13,
      lopt_2 => lopt_14,
      lopt_3 => lopt_21,
      op2_C(0) => op2_C(0)
    );
\Using_FPGA.ALL_Bits[28].ALU_Bit_I1\: entity work.microblaze_mcs_1_ALU_Bit_680
     port map (
      D(0) => D(1),
      EX_CarryOut => alu_carry_4,
      LO => alu_carry_3,
      Op1_Shift => Op1_Shift,
      \Using_FPGA.Native\ => \Using_FPGA.Native_4\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_12,
      lopt_1 => lopt_13,
      lopt_10 => lopt_22,
      lopt_11 => lopt_23,
      lopt_2 => lopt_14,
      lopt_3 => lopt_15,
      lopt_4 => lopt_16,
      lopt_5 => lopt_17,
      lopt_6 => lopt_18,
      lopt_7 => lopt_19,
      lopt_8 => lopt_20,
      lopt_9 => lopt_21
    );
\Using_FPGA.ALL_Bits[29].ALU_Bit_I1\: entity work.microblaze_mcs_1_ALU_Bit_681
     port map (
      D(0) => D(0),
      EX_CarryOut => alu_carry_3,
      LO => alu_carry_2,
      \Using_FPGA.Native\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_3\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_6,
      lopt_1 => lopt_7,
      lopt_2 => lopt_8,
      lopt_3 => lopt_11
    );
\Using_FPGA.ALL_Bits[2].ALU_Bit_I1\: entity work.microblaze_mcs_1_ALU_Bit_682
     port map (
      D(0) => D(27),
      EX_CarryOut => alu_carry_30,
      LO => alu_carry_29,
      \Using_FPGA.Native\ => \Using_FPGA.Native_30\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_87,
      lopt_1 => lopt_88,
      lopt_2 => lopt_89,
      lopt_3 => lopt_94,
      op2_C(0) => op2_C(25)
    );
\Using_FPGA.ALL_Bits[30].ALU_Bit_I1\: entity work.microblaze_mcs_1_ALU_Bit_683
     port map (
      EX_CarryOut => alu_carry_2,
      LO => alu_carry_1,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_1\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => \^lopt_3\,
      lopt_1 => \^lopt_4\,
      lopt_2 => \^lopt_5\,
      lopt_3 => lopt_10
    );
\Using_FPGA.ALL_Bits[31].ALU_Bit_I1\: entity work.microblaze_mcs_1_ALU_Bit_684
     port map (
      EX_CarryIn => alu_carry_in,
      EX_CarryOut => alu_carry_1,
      EX_Op1 => EX_Op1,
      EX_Op2 => EX_Op2,
      O => O,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => \^lopt\,
      lopt_1 => \^lopt_1\,
      lopt_2 => \^lopt_2\,
      lopt_3 => lopt_9
    );
\Using_FPGA.ALL_Bits[3].ALU_Bit_I1\: entity work.microblaze_mcs_1_ALU_Bit_685
     port map (
      D(0) => D(26),
      EX_CarryOut => alu_carry_29,
      LO => alu_carry_28,
      \Using_FPGA.Native\ => \Using_FPGA.Native_29\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_84,
      lopt_1 => lopt_85,
      lopt_2 => lopt_86,
      lopt_3 => lopt_93,
      op2_C(0) => op2_C(24)
    );
\Using_FPGA.ALL_Bits[4].ALU_Bit_I1\: entity work.microblaze_mcs_1_ALU_Bit_686
     port map (
      D(0) => D(25),
      EX_CarryOut => alu_carry_28,
      LO => alu_carry_27,
      \Using_FPGA.Native\ => \Using_FPGA.Native_28\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_84,
      lopt_1 => lopt_85,
      lopt_10 => lopt_94,
      lopt_11 => lopt_95,
      lopt_2 => lopt_86,
      lopt_3 => lopt_87,
      lopt_4 => lopt_88,
      lopt_5 => lopt_89,
      lopt_6 => lopt_90,
      lopt_7 => lopt_91,
      lopt_8 => lopt_92,
      lopt_9 => lopt_93,
      op2_C(0) => op2_C(23)
    );
\Using_FPGA.ALL_Bits[5].ALU_Bit_I1\: entity work.microblaze_mcs_1_ALU_Bit_687
     port map (
      D(0) => D(24),
      EX_CarryOut => alu_carry_27,
      LO => alu_carry_26,
      \Using_FPGA.Native\ => \Using_FPGA.Native_27\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_78,
      lopt_1 => lopt_79,
      lopt_2 => lopt_80,
      lopt_3 => lopt_83,
      op2_C(0) => op2_C(22)
    );
\Using_FPGA.ALL_Bits[6].ALU_Bit_I1\: entity work.microblaze_mcs_1_ALU_Bit_688
     port map (
      D(0) => D(23),
      EX_CarryOut => alu_carry_26,
      LO => alu_carry_25,
      \Using_FPGA.Native\ => \Using_FPGA.Native_26\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_75,
      lopt_1 => lopt_76,
      lopt_2 => lopt_77,
      lopt_3 => lopt_82,
      op2_C(0) => op2_C(21)
    );
\Using_FPGA.ALL_Bits[7].ALU_Bit_I1\: entity work.microblaze_mcs_1_ALU_Bit_689
     port map (
      D(0) => D(22),
      EX_CarryOut => alu_carry_25,
      LO => alu_carry_24,
      \Using_FPGA.Native\ => \Using_FPGA.Native_25\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_72,
      lopt_1 => lopt_73,
      lopt_2 => lopt_74,
      lopt_3 => lopt_81,
      op2_C(0) => op2_C(20)
    );
\Using_FPGA.ALL_Bits[8].ALU_Bit_I1\: entity work.microblaze_mcs_1_ALU_Bit_690
     port map (
      D(0) => D(21),
      EX_CarryOut => alu_carry_24,
      LO => alu_carry_23,
      \Using_FPGA.Native\ => \Using_FPGA.Native_24\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_72,
      lopt_1 => lopt_73,
      lopt_10 => lopt_82,
      lopt_11 => lopt_83,
      lopt_2 => lopt_74,
      lopt_3 => lopt_75,
      lopt_4 => lopt_76,
      lopt_5 => lopt_77,
      lopt_6 => lopt_78,
      lopt_7 => lopt_79,
      lopt_8 => lopt_80,
      lopt_9 => lopt_81,
      op2_C(0) => op2_C(19)
    );
\Using_FPGA.ALL_Bits[9].ALU_Bit_I1\: entity work.microblaze_mcs_1_ALU_Bit_691
     port map (
      D(0) => D(20),
      EX_CarryIn => alu_carry_22,
      EX_CarryOut => alu_carry_23,
      \Using_FPGA.Native\ => \Using_FPGA.Native_23\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_66,
      lopt_1 => lopt_67,
      lopt_2 => lopt_68,
      lopt_3 => lopt_71,
      op2_C(0) => op2_C(18)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Byte_Doublet_Handle is
  port (
    D : out STD_LOGIC_VECTOR ( 29 downto 0 );
    sel_LSB : out STD_LOGIC_VECTOR ( 1 downto 0 );
    EX_Op2 : in STD_LOGIC;
    Op1_Low : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    isbyte : in STD_LOGIC;
    isdoublet : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 31 )
  );
end microblaze_mcs_1_Byte_Doublet_Handle;

architecture STRUCTURE of microblaze_mcs_1_Byte_Doublet_Handle is
  signal byte_selects_0 : STD_LOGIC;
  signal byte_selects_1 : STD_LOGIC;
  signal low_addr_i_0 : STD_LOGIC;
  signal low_addr_i_1 : STD_LOGIC;
  signal sel_Write_Mux_MSB : STD_LOGIC_VECTOR ( 1 downto 0 );
begin
BYTE_0_1_I: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized8\
     port map (
      D(1 downto 0) => D(1 downto 0),
      byte_selects_0 => byte_selects_0,
      byte_selects_1 => byte_selects_1,
      isbyte => isbyte,
      isdoublet => isdoublet
    );
BYTE_2_3_I: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized10\
     port map (
      D(1 downto 0) => D(3 downto 2),
      byte_selects_0 => byte_selects_0,
      byte_selects_1 => byte_selects_1,
      isbyte => isbyte,
      isdoublet => isdoublet
    );
LOW_ADDR_OUT_LUT6: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized16\
     port map (
      D(1 downto 0) => D(29 downto 28),
      isbyte => isbyte,
      isdoublet => isdoublet,
      low_addr_i_0 => low_addr_i_0,
      low_addr_i_1 => low_addr_i_1
    );
\Use_Dynamic_Bus_Sizing.Not_Using_Reverse_Mem_Instr.EXT_DATA_WRITE_MUX_MSB_I\: entity work.microblaze_mcs_1_mux4_8
     port map (
      D(15 downto 0) => D(27 downto 12),
      sel_Write_Mux_MSB(1 downto 0) => sel_Write_Mux_MSB(1 downto 0),
      \write_Addr_I_reg[0]\(0 to 31) => \write_Addr_I_reg[0]\(0 to 31)
    );
\Use_Dynamic_Bus_Sizing.Not_Using_Reverse_Mem_Instr.GEN4_LOOP[0].BYTESTEER_LUT6\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized14\
     port map (
      D(1) => D(11),
      D(0) => D(7),
      isbyte => isbyte,
      \write_Addr_I_reg[0]\(3) => \write_Addr_I_reg[0]\(16),
      \write_Addr_I_reg[0]\(2) => \write_Addr_I_reg[0]\(20),
      \write_Addr_I_reg[0]\(1) => \write_Addr_I_reg[0]\(24),
      \write_Addr_I_reg[0]\(0) => \write_Addr_I_reg[0]\(28)
    );
\Use_Dynamic_Bus_Sizing.Not_Using_Reverse_Mem_Instr.GEN4_LOOP[1].BYTESTEER_LUT6\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized14_756\
     port map (
      D(1) => D(10),
      D(0) => D(6),
      isbyte => isbyte,
      \write_Addr_I_reg[0]\(3) => \write_Addr_I_reg[0]\(17),
      \write_Addr_I_reg[0]\(2) => \write_Addr_I_reg[0]\(21),
      \write_Addr_I_reg[0]\(1) => \write_Addr_I_reg[0]\(25),
      \write_Addr_I_reg[0]\(0) => \write_Addr_I_reg[0]\(29)
    );
\Use_Dynamic_Bus_Sizing.Not_Using_Reverse_Mem_Instr.GEN4_LOOP[2].BYTESTEER_LUT6\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized14_757\
     port map (
      D(1) => D(9),
      D(0) => D(5),
      isbyte => isbyte,
      \write_Addr_I_reg[0]\(3) => \write_Addr_I_reg[0]\(18),
      \write_Addr_I_reg[0]\(2) => \write_Addr_I_reg[0]\(22),
      \write_Addr_I_reg[0]\(1) => \write_Addr_I_reg[0]\(26),
      \write_Addr_I_reg[0]\(0) => \write_Addr_I_reg[0]\(30)
    );
\Use_Dynamic_Bus_Sizing.Not_Using_Reverse_Mem_Instr.GEN4_LOOP[3].BYTESTEER_LUT6\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized14_758\
     port map (
      D(1) => D(8),
      D(0) => D(4),
      isbyte => isbyte,
      \write_Addr_I_reg[0]\(3) => \write_Addr_I_reg[0]\(19),
      \write_Addr_I_reg[0]\(2) => \write_Addr_I_reg[0]\(23),
      \write_Addr_I_reg[0]\(1) => \write_Addr_I_reg[0]\(27),
      \write_Addr_I_reg[0]\(0) => \write_Addr_I_reg[0]\(31)
    );
\Use_Dynamic_Bus_Sizing.Not_Using_Reverse_Mem_Instr.READ_SEL_LEFT_I\: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized4\
     port map (
      byte_selects_1 => byte_selects_1,
      isbyte => isbyte,
      isdoublet => isdoublet,
      sel_LSB(0) => sel_LSB(1)
    );
\Use_Dynamic_Bus_Sizing.Not_Using_Reverse_Mem_Instr.READ_SEL_RIGHT_I\: entity work.microblaze_mcs_1_MB_LUT2
     port map (
      byte_selects_0 => byte_selects_0,
      isbyte => isbyte,
      sel_LSB(0) => sel_LSB(0)
    );
\Use_Dynamic_Bus_Sizing.Not_Using_Reverse_Mem_Instr.WRITE_MSB_SEL_I\: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized12\
     port map (
      isbyte => isbyte,
      isdoublet => isdoublet,
      sel_Write_Mux_MSB(1 downto 0) => sel_Write_Mux_MSB(1 downto 0)
    );
byte_selects_i_INST: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized6\
     port map (
      EX_Op2 => EX_Op2,
      Op1_Low(0 to 1) => Op1_Low(0 to 1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      byte_selects_0 => byte_selects_0,
      byte_selects_1 => byte_selects_1
    );
low_addr_i_INST: entity work.\microblaze_mcs_1_MB_LUT6_2__parameterized4\
     port map (
      EX_Op2 => EX_Op2,
      Op1_Low(0 to 1) => Op1_Low(0 to 1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      low_addr_i_0 => low_addr_i_0,
      low_addr_i_1 => low_addr_i_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Decode is
  port (
    IReady : out STD_LOGIC;
    Buffer_Addr : out STD_LOGIC_VECTOR ( 2 downto 0 );
    reg1_Addr : out STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : out STD_LOGIC_VECTOR ( 0 to 15 );
    jump : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 6 downto 0 );
    \^of_piperun\ : out STD_LOGIC;
    \trace_reg_addr_i_reg[0]\ : out STD_LOGIC_VECTOR ( 4 downto 0 );
    res_Forward1 : out STD_LOGIC;
    res_Forward2 : out STD_LOGIC;
    alu_Op : out STD_LOGIC_VECTOR ( 0 to 1 );
    carry_In : out STD_LOGIC;
    Reg_Test_Equal : out STD_LOGIC;
    reg_Test_Equal_N : out STD_LOGIC;
    opsel1_SPR : out STD_LOGIC;
    exception_kind : out STD_LOGIC_VECTOR ( 0 to 0 );
    Pause_Ack : out STD_LOGIC;
    compare_Instr : out STD_LOGIC;
    Unsigned_Op : out STD_LOGIC;
    Select_Logic : out STD_LOGIC;
    \trace_instruction_i_reg[0]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    Hibernate : out STD_LOGIC;
    Suspend : out STD_LOGIC;
    isbyte : out STD_LOGIC;
    isdoublet : out STD_LOGIC;
    sext8 : out STD_LOGIC;
    Sext16 : out STD_LOGIC;
    Trace_Delay_Slot_early : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    Shifted : out STD_LOGIC;
    Increment : out STD_LOGIC;
    PC_Write : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    D_0 : out STD_LOGIC;
    D_1 : out STD_LOGIC;
    D_2 : out STD_LOGIC;
    D_3 : out STD_LOGIC;
    D_4 : out STD_LOGIC;
    D_5 : out STD_LOGIC;
    D_6 : out STD_LOGIC;
    D_7 : out STD_LOGIC;
    D_8 : out STD_LOGIC;
    D_9 : out STD_LOGIC;
    D_10 : out STD_LOGIC;
    D_11 : out STD_LOGIC;
    D_12 : out STD_LOGIC;
    D_13 : out STD_LOGIC;
    D_14 : out STD_LOGIC;
    D_15 : out STD_LOGIC;
    D_16 : out STD_LOGIC;
    D_17 : out STD_LOGIC;
    D_18 : out STD_LOGIC;
    D_19 : out STD_LOGIC;
    D_20 : out STD_LOGIC;
    D_21 : out STD_LOGIC;
    D_22 : out STD_LOGIC;
    D_23 : out STD_LOGIC;
    D_24 : out STD_LOGIC;
    D_25 : out STD_LOGIC;
    D_26 : out STD_LOGIC;
    D_27 : out STD_LOGIC;
    D_28 : out STD_LOGIC;
    D_29 : out STD_LOGIC;
    D_30 : out STD_LOGIC;
    D_31 : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    mem_Strobe : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    OF_PipeRun : out STD_LOGIC;
    Sleep : out STD_LOGIC;
    Reg_Write : out STD_LOGIC;
    MSR_Rst : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    DI : out STD_LOGIC;
    Interrupt_Ack : out STD_LOGIC_VECTOR ( 0 to 1 );
    doublet_Read : out STD_LOGIC;
    quadlet_Read : out STD_LOGIC;
    Shift_Oper : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 31 );
    DReady : in STD_LOGIC;
    \No_ECC.Sl_Rdy_reg\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Op1_Low : in STD_LOGIC_VECTOR ( 0 to 1 );
    LO : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    Reg_zero : in STD_LOGIC;
    Pause : in STD_LOGIC;
    MSR : in STD_LOGIC_VECTOR ( 2 downto 0 );
    dbg_stop_instr_fetch : in STD_LOGIC;
    EX_Op1 : in STD_LOGIC;
    Op1_Shift : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_0\ : in STD_LOGIC;
    \Size_17to32.imm_Reg_reg[0]\ : in STD_LOGIC_VECTOR ( 15 downto 0 );
    \Using_FPGA.take_Intr_2nd_Phase_reg_1\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_2\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_3\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_4\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_5\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_6\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_7\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_8\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_9\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_10\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_11\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_12\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_13\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_14\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_15\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_16\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[12]\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[11]\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[10]\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[9]\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[8]\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[7]\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[6]\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[5]\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[4]\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[3]\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[2]\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[1]\ : in STD_LOGIC;
    \Using_Fast.Using_LUTRAM.intr_addr_i_reg[0]\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_17\ : in STD_LOGIC;
    \Using_FPGA.take_Intr_2nd_Phase_reg_18\ : in STD_LOGIC;
    Interrupt : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Synchronize.use_sync_reset.sync_reg[2]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \No_Master_Debug_Logic.sleep_reset_mode_reg\ : in STD_LOGIC;
    trace_reg_write_novalid : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : out STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : out STD_LOGIC
  );
end microblaze_mcs_1_Decode;

architecture STRUCTURE of microblaze_mcs_1_Decode is
  signal Blocked_Valid_Instr : STD_LOGIC;
  signal Blocked_Valid_Instr0 : STD_LOGIC;
  signal \^buffer_addr\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal \^d\ : STD_LOGIC_VECTOR ( 6 downto 0 );
  signal D_32 : STD_LOGIC;
  signal \^hibernate\ : STD_LOGIC;
  signal \^iready\ : STD_LOGIC;
  signal Pause_Ack0 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_101 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_103 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_105 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_106 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_108 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_110 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_111 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_114 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_115 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_36 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_37 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_38 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_39 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_40 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_42 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_43 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_44 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_45 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_50 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_53 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_54 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_55 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_64 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_97 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_98 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_99 : STD_LOGIC;
  signal R : STD_LOGIC;
  signal R_0 : STD_LOGIC;
  signal Reg_Test_Equal_N_i7_out : STD_LOGIC;
  signal Reg_Test_Equal_i : STD_LOGIC;
  signal S1_out : STD_LOGIC;
  signal S92_out : STD_LOGIC;
  signal Select_Logic0 : STD_LOGIC;
  signal \^sext16\ : STD_LOGIC;
  signal \^shift_oper\ : STD_LOGIC;
  signal Sign_Extend_i_1_n_0 : STD_LOGIC;
  signal Sleep_Decode : STD_LOGIC;
  signal \^suspend\ : STD_LOGIC;
  signal \^trace_delay_slot_early\ : STD_LOGIC;
  signal \Using_FPGA.MUXCY_JUMP_CARRY3_n_1\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_2__4_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_4_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_5_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Using_Breakable_Pipe.Take_Intr_MUXCY_3_n_1\ : STD_LOGIC;
  signal \Using_FPGA.Using_Breakable_Pipe.Take_Intr_MUXCY_3_n_2\ : STD_LOGIC;
  signal \Using_FPGA.Using_Breakable_Pipe.Take_Intr_MUXCY_3_n_6\ : STD_LOGIC;
  signal \Using_FPGA.enable_Interrupts_I_reg_n_0\ : STD_LOGIC;
  signal \Using_FPGA.iFetch_MuxCY_2_n_1\ : STD_LOGIC;
  signal \Using_FPGA.iFetch_MuxCY_2_n_2\ : STD_LOGIC;
  signal \Using_FPGA.of_PipeRun_MuxCY_1_n_1\ : STD_LOGIC;
  signal \Using_FPGA.of_PipeRun_MuxCY_1_n_10\ : STD_LOGIC;
  signal \Using_FPGA.of_PipeRun_MuxCY_1_n_11\ : STD_LOGIC;
  signal \Using_FPGA.of_PipeRun_MuxCY_1_n_12\ : STD_LOGIC;
  signal \Using_FPGA.of_PipeRun_MuxCY_1_n_13\ : STD_LOGIC;
  signal \Using_FPGA.of_PipeRun_MuxCY_1_n_2\ : STD_LOGIC;
  signal \Using_FPGA.of_PipeRun_MuxCY_1_n_3\ : STD_LOGIC;
  signal \Using_FPGA.of_PipeRun_MuxCY_1_n_4\ : STD_LOGIC;
  signal \Using_FPGA.of_PipeRun_MuxCY_1_n_5\ : STD_LOGIC;
  signal \Using_FPGA.of_PipeRun_MuxCY_1_n_6\ : STD_LOGIC;
  signal \Using_FPGA.of_PipeRun_MuxCY_1_n_7\ : STD_LOGIC;
  signal \Using_FPGA.of_PipeRun_MuxCY_1_n_9\ : STD_LOGIC;
  signal \Using_FPGA.reset_BIP_I_reg_n_0\ : STD_LOGIC;
  signal \Using_FPGA.set_BIP_I_reg_n_0\ : STD_LOGIC;
  signal \Using_LWX_SWX_instr.reservation_reg_n_0\ : STD_LOGIC;
  signal \Using_dynamic_instr_Address.Interrupt_Ack[0]_i_1_n_0\ : STD_LOGIC;
  signal \Using_dynamic_instr_Address.Interrupt_Ack[1]_i_1_n_0\ : STD_LOGIC;
  signal active_wakeup : STD_LOGIC;
  signal active_wakeup0 : STD_LOGIC;
  signal break_Pipe_i_reg0 : STD_LOGIC;
  signal \break_Pipe_i_reg__0\ : STD_LOGIC;
  signal buffer_Full : STD_LOGIC;
  signal byte_i12_out : STD_LOGIC;
  signal correct_Carry : STD_LOGIC;
  signal correct_Carry_I : STD_LOGIC;
  signal correct_Carry_II : STD_LOGIC;
  signal correct_Carry_Select : STD_LOGIC;
  signal d_AS_I : STD_LOGIC;
  signal d_AS_I15_out : STD_LOGIC;
  signal \^doublet_read\ : STD_LOGIC;
  signal doublet_Read_i_i_1_n_0 : STD_LOGIC;
  signal enable_Interrupts_I : STD_LOGIC;
  signal ex_Valid : STD_LOGIC;
  signal ex_Valid_1st_cycle_reg_n_0 : STD_LOGIC;
  signal ex_first_cycle : STD_LOGIC;
  signal \^exception_kind\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal force1 : STD_LOGIC;
  signal force1_i29_out : STD_LOGIC;
  signal force2 : STD_LOGIC;
  signal force2_i : STD_LOGIC;
  signal force_DI1 : STD_LOGIC;
  signal force_DI2 : STD_LOGIC;
  signal force_Val1 : STD_LOGIC;
  signal force_Val1_i27_out : STD_LOGIC;
  signal force_Val2_N : STD_LOGIC;
  signal force_jump1 : STD_LOGIC;
  signal force_jump2 : STD_LOGIC;
  signal hibernate_i_i_1_n_0 : STD_LOGIC;
  signal iFetch_In_Progress : STD_LOGIC;
  signal ifetch_carry1 : STD_LOGIC;
  signal ifetch_carry2 : STD_LOGIC;
  signal \^imm_value\ : STD_LOGIC_VECTOR ( 0 to 15 );
  signal inHibit_EX : STD_LOGIC;
  signal inHibit_EX1 : STD_LOGIC;
  signal inHibit_EX_i_3_n_0 : STD_LOGIC;
  signal instr_OF : STD_LOGIC_VECTOR ( 0 to 10 );
  signal is_lwx_I : STD_LOGIC;
  signal is_swx_I_reg_n_0 : STD_LOGIC;
  signal \^isbyte\ : STD_LOGIC;
  signal \^isdoublet\ : STD_LOGIC;
  signal \^jump\ : STD_LOGIC;
  signal jump2_I_1 : STD_LOGIC;
  signal jump2_I_reg_n_0 : STD_LOGIC;
  signal jump_Carry1 : STD_LOGIC;
  signal jump_Carry2 : STD_LOGIC;
  signal load_Store_i : STD_LOGIC;
  signal load_Store_i2 : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal lopt_11 : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal lopt_13 : STD_LOGIC;
  signal lopt_14 : STD_LOGIC;
  signal lopt_15 : STD_LOGIC;
  signal lopt_16 : STD_LOGIC;
  signal lopt_17 : STD_LOGIC;
  signal lopt_18 : STD_LOGIC;
  signal lopt_19 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal lopt_20 : STD_LOGIC;
  signal lopt_21 : STD_LOGIC;
  signal lopt_22 : STD_LOGIC;
  signal lopt_23 : STD_LOGIC;
  signal lopt_24 : STD_LOGIC;
  signal lopt_25 : STD_LOGIC;
  signal lopt_26 : STD_LOGIC;
  signal lopt_27 : STD_LOGIC;
  signal lopt_28 : STD_LOGIC;
  signal lopt_29 : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal mbar_decode_I : STD_LOGIC;
  signal mbar_first : STD_LOGIC;
  signal mbar_first_i_3_n_0 : STD_LOGIC;
  signal mbar_first_reg_n_0 : STD_LOGIC;
  signal mbar_hold_I_reg_n_0 : STD_LOGIC;
  signal mbar_is_sleep : STD_LOGIC;
  signal mbar_is_sleep0 : STD_LOGIC;
  signal mbar_sleep : STD_LOGIC;
  signal mbar_sleep_i_1_n_0 : STD_LOGIC;
  signal missed_IFetch : STD_LOGIC;
  signal mtsmsr_write_i_reg_n_0 : STD_LOGIC;
  signal mul_Executing : STD_LOGIC;
  signal mul_Executing_delayed : STD_LOGIC;
  signal mul_Executing_done : STD_LOGIC;
  signal mul_Executing_done0 : STD_LOGIC;
  signal new_Carry : STD_LOGIC;
  signal nonvalid_IFetch_n_reg_n_0 : STD_LOGIC;
  signal of_Pause : STD_LOGIC;
  signal \^of_piperun_1\ : STD_LOGIC;
  signal of_PipeRun_Select : STD_LOGIC;
  signal of_PipeRun_without_dready : STD_LOGIC;
  signal of_Valid_Raw : STD_LOGIC;
  signal of_mbar_decode : STD_LOGIC;
  signal old_IE_value : STD_LOGIC;
  signal opsel1_SPR_Select : STD_LOGIC;
  signal opsel1_SPR_Select_1 : STD_LOGIC;
  signal opsel1_SPR_Select_2_1 : STD_LOGIC;
  signal opsel1_SPR_Select_2_2 : STD_LOGIC;
  signal p_1_in : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal p_69_in : STD_LOGIC;
  signal \^quadlet_read\ : STD_LOGIC;
  signal quadlet_Read_i_i_1_n_0 : STD_LOGIC;
  signal \^reg1_addr\ : STD_LOGIC_VECTOR ( 0 to 4 );
  signal res_forward1_1 : STD_LOGIC;
  signal res_forward1_2 : STD_LOGIC;
  signal res_forward1_3 : STD_LOGIC;
  signal res_forward2_1 : STD_LOGIC;
  signal res_forward2_2 : STD_LOGIC;
  signal res_forward2_3 : STD_LOGIC;
  signal reset_BIP_I8_out : STD_LOGIC;
  signal reset_delay : STD_LOGIC;
  signal select_ALU_Carry : STD_LOGIC;
  signal \^sext8\ : STD_LOGIC;
  signal shift_Carry_In : STD_LOGIC;
  signal sleep_i0 : STD_LOGIC;
  signal sleep_i00_in : STD_LOGIC;
  signal sleep_i_i_1_n_0 : STD_LOGIC;
  signal sub_Carry : STD_LOGIC;
  signal suspend_i_i_1_n_0 : STD_LOGIC;
  signal swx_ready : STD_LOGIC;
  signal take_Intr_Now_I : STD_LOGIC;
  signal take_Intr_Now_II : STD_LOGIC;
  signal take_Intr_Now_III : STD_LOGIC;
  signal take_intr_2nd_cycle_reg_n_0 : STD_LOGIC;
  signal take_intr_Done : STD_LOGIC;
  signal \^trace_instruction_i_reg[0]\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \^trace_reg_addr_i_reg[0]\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal trace_valid_instr_part1 : STD_LOGIC;
  signal trace_valid_instr_part10 : STD_LOGIC;
  signal use_Imm_Reg : STD_LOGIC;
  signal use_Reg_Neg_DI : STD_LOGIC;
  signal use_Reg_Neg_DI_i26_out : STD_LOGIC;
  signal use_Reg_Neg_S : STD_LOGIC;
  signal use_Reg_Neg_S_i28_out : STD_LOGIC;
  signal using_Imm0 : STD_LOGIC;
  signal \write_Addr_I[3]_i_1_n_0\ : STD_LOGIC;
  signal write_Carry : STD_LOGIC;
  signal write_Carry_I_reg_n_0 : STD_LOGIC;
  signal write_Reg_I_S : STD_LOGIC;
  signal write_Reg_reg_n_0 : STD_LOGIC;
  signal writing : STD_LOGIC;
  signal writing_reg_n_0 : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of D_AS_INST_0 : label is "soft_lutpair38";
  attribute SOFT_HLUTNM of Read_Strobe_INST_0 : label is "soft_lutpair35";
  attribute SOFT_HLUTNM of Trace_Reg_Write_INST_0 : label is "soft_lutpair34";
  attribute SOFT_HLUTNM of Trace_Valid_Instr : label is "soft_lutpair34";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__64\ : label is "soft_lutpair37";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__37\ : label is "soft_lutpair33";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_3__0\ : label is "soft_lutpair37";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_4\ : label is "soft_lutpair35";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_5\ : label is "soft_lutpair38";
  attribute SOFT_HLUTNM of \Using_dynamic_instr_Address.Interrupt_Ack[0]_i_1\ : label is "soft_lutpair36";
  attribute SOFT_HLUTNM of \Using_dynamic_instr_Address.Interrupt_Ack[1]_i_1\ : label is "soft_lutpair36";
  attribute SOFT_HLUTNM of Write_Strobe_INST_0 : label is "soft_lutpair31";
  attribute SOFT_HLUTNM of break_Pipe_i_i_2 : label is "soft_lutpair33";
  attribute SOFT_HLUTNM of mbar_first_i_3 : label is "soft_lutpair32";
  attribute SOFT_HLUTNM of suspend_i_i_2 : label is "soft_lutpair32";
  attribute SOFT_HLUTNM of trace_data_access_i_i_1 : label is "soft_lutpair31";
begin
  Buffer_Addr(2 downto 0) <= \^buffer_addr\(2 downto 0);
  D(6 downto 0) <= \^d\(6 downto 0);
  Hibernate <= \^hibernate\;
  IReady <= \^iready\;
  Sext16 <= \^sext16\;
  Shift_Oper <= \^shift_oper\;
  Suspend <= \^suspend\;
  Trace_Delay_Slot_early <= \^trace_delay_slot_early\;
  \^lopt_1\ <= lopt_2;
  \^lopt_4\ <= lopt_5;
  \^of_piperun\ <= \^of_piperun_1\;
  doublet_Read <= \^doublet_read\;
  exception_kind(0) <= \^exception_kind\(0);
  imm_Value(0 to 15) <= \^imm_value\(0 to 15);
  isbyte <= \^isbyte\;
  isdoublet <= \^isdoublet\;
  jump <= \^jump\;
  lopt_1 <= select_ALU_Carry;
  lopt_3 <= \^lopt_2\;
  lopt_4 <= \^lopt_3\;
  lopt_6 <= force_DI1;
  lopt_7 <= force_jump1;
  quadlet_Read <= \^quadlet_read\;
  reg1_Addr(0 to 4) <= \^reg1_addr\(0 to 4);
  sext8 <= \^sext8\;
  \trace_instruction_i_reg[0]\(31 downto 0) <= \^trace_instruction_i_reg[0]\(31 downto 0);
  \trace_reg_addr_i_reg[0]\(4 downto 0) <= \^trace_reg_addr_i_reg[0]\(4 downto 0);
Blocked_Valid_Instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Blocked_Valid_Instr0,
      Q => Blocked_Valid_Instr,
      R => sync_reset
    );
Compare_Instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => PreFetch_Buffer_I_n_115,
      Q => compare_Instr,
      R => \Using_FPGA.of_PipeRun_MuxCY_1_n_11\
    );
D_AS_INST_0: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8A"
    )
        port map (
      I0 => d_AS_I,
      I1 => \Using_LWX_SWX_instr.reservation_reg_n_0\,
      I2 => is_swx_I_reg_n_0,
      O => \^d\(4)
    );
Pause_Ack_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0202000200020002"
    )
        port map (
      I0 => of_Pause,
      I1 => iFetch_In_Progress,
      I2 => load_Store_i,
      I3 => mul_Executing,
      I4 => mbar_decode_I,
      I5 => mbar_is_sleep,
      O => Pause_Ack0
    );
Pause_Ack_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Pause_Ack0,
      Q => Pause_Ack,
      R => sync_reset
    );
PreFetch_Buffer_I: entity work.microblaze_mcs_1_PreFetch_Buffer
     port map (
      CI => \^iready\,
      Clk => Clk,
      Compare_Instr_reg => PreFetch_Buffer_I_n_115,
      D(18) => \^reg1_addr\(0),
      D(17) => \^reg1_addr\(1),
      D(16) => \^reg1_addr\(2),
      D(15) => \^reg1_addr\(3),
      D(14) => \^reg1_addr\(4),
      D(13) => \^imm_value\(0),
      D(12) => \^imm_value\(1),
      D(11) => \^imm_value\(2),
      D(10) => \^imm_value\(3),
      D(9) => \^imm_value\(4),
      D(8) => \^imm_value\(5),
      D(7) => \^imm_value\(6),
      D(6) => \^imm_value\(7),
      D(5) => \^imm_value\(8),
      D(4) => \^imm_value\(11),
      D(3) => \^imm_value\(12),
      D(2) => \^imm_value\(13),
      D(1) => \^imm_value\(14),
      D(0) => \^imm_value\(15),
      DI => DI,
      DReady => DReady,
      D_0 => D_0,
      D_1 => D_1,
      D_10 => D_10,
      D_11 => D_11,
      D_12 => D_12,
      D_13 => D_13,
      D_14 => D_14,
      D_15 => D_15,
      D_16 => D_16,
      D_17 => D_17,
      D_18 => D_18,
      D_19 => D_19,
      D_2 => D_2,
      D_20 => D_20,
      D_21 => D_21,
      D_22 => D_22,
      D_23 => D_23,
      D_24 => D_24,
      D_25 => D_25,
      D_26 => D_26,
      D_27 => D_27,
      D_28 => D_28,
      D_29 => D_29,
      D_3 => D_3,
      D_30 => D_30,
      D_31 => D_31,
      D_32 => D_32,
      D_4 => D_4,
      D_5 => D_5,
      D_6 => D_6,
      D_7 => D_7,
      D_8 => D_8,
      D_9 => D_9,
      E(0) => E(0),
      Increment => Increment,
      Instr(0 to 31) => Instr(0 to 31),
      \No_ECC.Sl_Rdy_reg\ => \No_ECC.Sl_Rdy_reg\,
      R => R_0,
      Reg_Test_Equal_N_i7_out => Reg_Test_Equal_N_i7_out,
      Reg_Test_Equal_i => Reg_Test_Equal_i,
      S => S1_out,
      S92_out => S92_out,
      Sext16 => \^sext16\,
      Sext16_reg => PreFetch_Buffer_I_n_38,
      Sext8_reg => PreFetch_Buffer_I_n_39,
      \Size_17to32.imm_Reg_reg[0]\(15 downto 0) => \Size_17to32.imm_Reg_reg[0]\(15 downto 0),
      \Size_17to32.imm_Reg_reg[15]\ => PreFetch_Buffer_I_n_103,
      \Use_Async_Reset.sync_reset_reg\ => \Using_FPGA.of_PipeRun_MuxCY_1_n_9\,
      \Use_Async_Reset.sync_reset_reg_0\ => \Using_FPGA.of_PipeRun_MuxCY_1_n_11\,
      \Using_FPGA.Native\ => PreFetch_Buffer_I_n_37,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_1\ => PreFetch_Buffer_I_n_97,
      \Using_FPGA.Native_2\ => PreFetch_Buffer_I_n_98,
      \Using_FPGA.Native_3\ => PreFetch_Buffer_I_n_99,
      \Using_FPGA.Native_4\ => PreFetch_Buffer_I_n_114,
      \Using_FPGA.set_BIP_I_reg\ => PreFetch_Buffer_I_n_43,
      \Using_FPGA.set_BIP_I_reg_0\ => \Using_FPGA.set_BIP_I_reg_n_0\,
      \Using_FPGA.take_Intr_2nd_Phase_reg\ => \Using_FPGA.take_Intr_2nd_Phase_reg_0\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_0\ => \Using_FPGA.take_Intr_2nd_Phase_reg_1\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_1\ => \Using_FPGA.take_Intr_2nd_Phase_reg_2\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_10\ => \Using_FPGA.take_Intr_2nd_Phase_reg_11\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_11\ => \Using_FPGA.take_Intr_2nd_Phase_reg_12\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_12\ => \Using_FPGA.take_Intr_2nd_Phase_reg_13\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_13\ => \Using_FPGA.take_Intr_2nd_Phase_reg_14\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_14\ => \Using_FPGA.take_Intr_2nd_Phase_reg_15\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_15\ => \Using_FPGA.take_Intr_2nd_Phase_reg_16\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_16\ => \Using_FPGA.take_Intr_2nd_Phase_reg_17\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_17\ => \Using_FPGA.take_Intr_2nd_Phase_reg_18\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_18\ => \^exception_kind\(0),
      \Using_FPGA.take_Intr_2nd_Phase_reg_2\ => \Using_FPGA.take_Intr_2nd_Phase_reg_3\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_3\ => \Using_FPGA.take_Intr_2nd_Phase_reg_4\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_4\ => \Using_FPGA.take_Intr_2nd_Phase_reg_5\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_5\ => \Using_FPGA.take_Intr_2nd_Phase_reg_6\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_6\ => \Using_FPGA.take_Intr_2nd_Phase_reg_7\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_7\ => \Using_FPGA.take_Intr_2nd_Phase_reg_8\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_8\ => \Using_FPGA.take_Intr_2nd_Phase_reg_9\,
      \Using_FPGA.take_Intr_2nd_Phase_reg_9\ => \Using_FPGA.take_Intr_2nd_Phase_reg_10\,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[0]\ => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[0]\,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[10]\ => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[10]\,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[11]\ => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[11]\,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[12]\ => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[12]\,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[1]\ => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[1]\,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[2]\ => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[2]\,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[3]\ => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[3]\,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[4]\ => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[4]\,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[5]\ => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[5]\,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[6]\ => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[6]\,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[7]\ => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[7]\,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[8]\ => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[8]\,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[9]\ => \Using_Fast.Using_LUTRAM.intr_addr_i_reg[9]\,
      buffer_Full => buffer_Full,
      byte_i12_out => byte_i12_out,
      byte_i_reg => PreFetch_Buffer_I_n_42,
      d_AS_I15_out => d_AS_I15_out,
      doublet_i_reg => PreFetch_Buffer_I_n_40,
      enable_Interrupts_I => enable_Interrupts_I,
      ex_Valid => ex_Valid,
      ex_Valid_reg => PreFetch_Buffer_I_n_106,
      force1_i29_out => force1_i29_out,
      force2_i => force2_i,
      force_Val1_i27_out => force_Val1_i27_out,
      force_Val2_N => force_Val2_N,
      inHibit_EX => inHibit_EX,
      inHibit_EX_reg => PreFetch_Buffer_I_n_50,
      \instr_EX_i_reg[25]\ => \^imm_value\(9),
      \instr_EX_i_reg[26]\ => \^imm_value\(10),
      \instr_EX_i_reg[9]\ => \^buffer_addr\(0),
      \instr_EX_i_reg[9]_0\ => \^buffer_addr\(1),
      \instr_EX_i_reg[9]_1\ => \^buffer_addr\(2),
      instr_OF(10) => instr_OF(0),
      instr_OF(9) => instr_OF(1),
      instr_OF(8) => instr_OF(2),
      instr_OF(7) => instr_OF(3),
      instr_OF(6) => instr_OF(4),
      instr_OF(5) => instr_OF(5),
      instr_OF(4) => instr_OF(6),
      instr_OF(3) => instr_OF(7),
      instr_OF(2) => instr_OF(8),
      instr_OF(1) => instr_OF(9),
      instr_OF(0) => instr_OF(10),
      is_swx_I_reg => PreFetch_Buffer_I_n_108,
      isbyte => \^isbyte\,
      isdoublet => \^isdoublet\,
      jump2_I_reg => PreFetch_Buffer_I_n_101,
      jump2_I_reg_0 => jump2_I_reg_n_0,
      jump_Carry2 => jump_Carry2,
      load_Store_i => load_Store_i,
      load_Store_i_reg => PreFetch_Buffer_I_n_110,
      lopt => \^lopt_5\,
      lopt_1 => \^lopt_6\,
      lopt_2 => \^lopt_7\,
      lopt_3 => lopt_8,
      lopt_4 => lopt_9,
      lopt_5 => lopt_10,
      lopt_6 => lopt_11,
      mbar_first => mbar_first,
      mbar_first_reg => mbar_first_i_3_n_0,
      mbar_hold_I_reg => PreFetch_Buffer_I_n_45,
      mbar_hold_I_reg_0 => mbar_hold_I_reg_n_0,
      mbar_is_sleep0 => mbar_is_sleep0,
      missed_IFetch => missed_IFetch,
      mtsmsr_write_i_reg => PreFetch_Buffer_I_n_44,
      mtsmsr_write_i_reg_0 => \Using_FPGA.of_PipeRun_MuxCY_1_n_7\,
      mul_Executing => mul_Executing,
      mul_Executing_reg => \^d\(5),
      mul_Executing_reg_0 => \^of_piperun_1\,
      nonvalid_IFetch_n_reg => PreFetch_Buffer_I_n_36,
      nonvalid_IFetch_n_reg_0 => nonvalid_IFetch_n_reg_n_0,
      of_Pause => of_Pause,
      of_Pause_reg => \^jump\,
      of_Valid_Raw => of_Valid_Raw,
      of_mbar_decode => of_mbar_decode,
      reset_BIP_I8_out => reset_BIP_I8_out,
      select_ALU_Carry_reg => PreFetch_Buffer_I_n_105,
      sext8 => \^sext8\,
      sync_reset => sync_reset,
      take_Intr_Now_II => take_Intr_Now_II,
      take_Intr_Now_III => take_Intr_Now_III,
      trace_jump_taken_i_reg => PreFetch_Buffer_I_n_111,
      use_Imm_Reg => use_Imm_Reg,
      use_Reg_Neg_DI_i26_out => use_Reg_Neg_DI_i26_out,
      use_Reg_Neg_S_i28_out => use_Reg_Neg_S_i28_out,
      \write_Addr_I_reg[0]\(1) => p_1_in(4),
      \write_Addr_I_reg[0]\(0) => p_1_in(0),
      write_Carry_I_reg => PreFetch_Buffer_I_n_54,
      write_Carry_I_reg_0 => PreFetch_Buffer_I_n_64,
      write_Reg_reg => PreFetch_Buffer_I_n_53,
      write_Reg_reg_0 => PreFetch_Buffer_I_n_55,
      writing => writing
    );
Read_Strobe_INST_0: unisim.vcomponents.LUT3
    generic map(
      INIT => X"08"
    )
        port map (
      I0 => load_Store_i,
      I1 => ex_Valid,
      I2 => writing_reg_n_0,
      O => \^d\(3)
    );
\Result_Sel_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => instr_OF(0),
      Q => Q(1),
      R => \Using_FPGA.of_PipeRun_MuxCY_1_n_11\
    );
\Result_Sel_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => instr_OF(1),
      Q => Q(0),
      R => \Using_FPGA.of_PipeRun_MuxCY_1_n_11\
    );
Select_Logic_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => Select_Logic0,
      Q => Select_Logic,
      R => sync_reset
    );
Sext16_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I_n_38,
      Q => \^sext16\,
      R => '0'
    );
Sext8_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I_n_39,
      Q => \^sext8\,
      R => '0'
    );
Shift_Carry_In_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => correct_Carry,
      Q => shift_Carry_In,
      R => sync_reset
    );
Sign_Extend_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF8FFFFFF080F0F0"
    )
        port map (
      I0 => \^imm_value\(9),
      I1 => \^imm_value\(10),
      I2 => \^of_piperun_1\,
      I3 => \^exception_kind\(0),
      I4 => PreFetch_Buffer_I_n_54,
      I5 => \^shift_oper\,
      O => Sign_Extend_i_1_n_0
    );
Sign_Extend_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Sign_Extend_i_1_n_0,
      Q => \^shift_oper\,
      R => sync_reset
    );
Sleep_INST_0: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \No_Master_Debug_Logic.sleep_reset_mode_reg\,
      I1 => Sleep_Decode,
      O => Sleep
    );
Trace_Delay_Slot_early_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.MUXCY_JUMP_CARRY3_n_1\,
      Q => \^trace_delay_slot_early\,
      R => sync_reset
    );
Trace_Reg_Write_INST_0: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAA82220"
    )
        port map (
      I0 => trace_reg_write_novalid,
      I1 => jump2_I_1,
      I2 => trace_valid_instr_part1,
      I3 => mul_Executing_done,
      I4 => Blocked_Valid_Instr,
      O => \^d\(0)
    );
Trace_Valid_Instr: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAFC"
    )
        port map (
      I0 => Blocked_Valid_Instr,
      I1 => mul_Executing_done,
      I2 => trace_valid_instr_part1,
      I3 => jump2_I_1,
      O => \^d\(1)
    );
Unsigned_Op_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => \^imm_value\(14),
      Q => Unsigned_Op,
      R => \Using_FPGA.of_PipeRun_MuxCY_1_n_5\
    );
\Using_FPGA.ALU_Carry_FDRE\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE
     port map (
      Clk => Clk,
      carry_In => carry_In,
      correct_Carry_II => correct_Carry_II,
      mul_Executing_reg => \^of_piperun_1\,
      sync_reset => sync_reset
    );
\Using_FPGA.ALU_Carry_MUXCY\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY
     port map (
      correct_Carry => correct_Carry,
      correct_Carry_I => correct_Carry_I,
      correct_Carry_Select => correct_Carry_Select,
      lopt => lopt_12,
      lopt_1 => lopt_13,
      lopt_2 => load_Store_i2,
      sub_Carry => sub_Carry
    );
\Using_FPGA.ALU_OP0_FDRE\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_3
     port map (
      Clk => Clk,
      D_32 => D_32,
      alu_Op(0) => alu_Op(0),
      mul_Executing_reg => \^of_piperun_1\,
      sync_reset => sync_reset
    );
\Using_FPGA.ALU_OP1_FDRE\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_4
     port map (
      Clk => Clk,
      \Using_FPGA.take_Intr_2nd_Phase_reg\ => PreFetch_Buffer_I_n_97,
      alu_Op(0) => alu_Op(1),
      mul_Executing_reg => \^of_piperun_1\,
      sync_reset => sync_reset
    );
\Using_FPGA.Correct_Carry_MUXCY\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_5
     port map (
      MSR(0) => MSR(1),
      \Using_LWX_SWX_instr.reservation_reg\ => \Using_LWX_SWX_instr.reservation_reg_n_0\,
      correct_Carry => correct_Carry,
      ex_Valid => ex_Valid,
      is_lwx_I => is_lwx_I,
      is_swx_I_reg => is_swx_I_reg_n_0,
      load_Store_i => load_Store_i,
      lopt => \^lopt_1\,
      lopt_1 => \^lopt_2\,
      lopt_2 => \^lopt_3\,
      new_Carry => new_Carry,
      write_Carry_I_reg => write_Carry_I_reg_n_0
    );
\Using_FPGA.Force1_FDRE\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_6
     port map (
      Clk => Clk,
      R => R,
      force1 => force1,
      force1_i29_out => force1_i29_out,
      mul_Executing_reg => \^of_piperun_1\
    );
\Using_FPGA.Force2_FDRE\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_7
     port map (
      Clk => Clk,
      R => R,
      force2 => force2,
      force2_i => force2_i,
      mul_Executing_reg => \^of_piperun_1\
    );
\Using_FPGA.Force_Val1_FDRE\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_8
     port map (
      Clk => Clk,
      R => R,
      force_Val1 => force_Val1,
      force_Val1_i27_out => force_Val1_i27_out,
      mul_Executing_reg => \^of_piperun_1\
    );
\Using_FPGA.Force_Val2_FDRSE\: entity work.microblaze_mcs_1_MB_FDRSE
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => PreFetch_Buffer_I_n_37,
      \Using_FPGA.take_Intr_2nd_Phase_reg\ => \^exception_kind\(0),
      force_Val2_N => force_Val2_N
    );
\Using_FPGA.I_correct_Carry_Select\: entity work.\microblaze_mcs_1_MB_LUT4__parameterized9\
     port map (
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => PreFetch_Buffer_I_n_99,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ => PreFetch_Buffer_I_n_98,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\ => PreFetch_Buffer_I_n_114,
      correct_Carry_Select => correct_Carry_Select
    );
\Using_FPGA.Intr_Carry_MUXCY\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_9
     port map (
      correct_Carry_I => correct_Carry_I,
      correct_Carry_II => correct_Carry_II,
      load_Store_i2 => load_Store_i2,
      lopt => lopt_12,
      lopt_1 => lopt_13
    );
\Using_FPGA.MULT_AND_I\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MULT_AND
     port map (
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => PreFetch_Buffer_I_n_99,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ => PreFetch_Buffer_I_n_98,
      sub_Carry => sub_Carry
    );
\Using_FPGA.MUXCY_JUMP_CARRY\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_10
     port map (
      Reg_zero => Reg_zero,
      force_DI1 => force_DI1,
      force_jump1 => force_jump1,
      jump_Carry1 => jump_Carry1,
      lopt => \^lopt_4\
    );
\Using_FPGA.MUXCY_JUMP_CARRY2\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_11
     port map (
      force_DI2 => force_DI2,
      force_jump2 => force_jump2,
      jump_Carry1 => jump_Carry1,
      jump_Carry2 => jump_Carry2,
      lopt => lopt_14,
      lopt_1 => lopt_15,
      lopt_2 => PreFetch_Buffer_I_n_111,
      lopt_3 => lopt_16,
      lopt_4 => lopt_17,
      lopt_5 => buffer_Full,
      lopt_6 => lopt_18,
      lopt_7 => lopt_19,
      lopt_8 => lopt_20
    );
\Using_FPGA.MUXCY_JUMP_CARRY3\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_12
     port map (
      Interrupt => Interrupt,
      MSR(1) => MSR(2),
      MSR(0) => MSR(0),
      PC_Write => PC_Write,
      R => R,
      R_0 => R_0,
      S92_out => S92_out,
      Trace_Delay_Slot_early => \^trace_delay_slot_early\,
      Trace_Delay_Slot_early_reg => \Using_FPGA.MUXCY_JUMP_CARRY3_n_1\,
      \Using_FPGA.take_Intr_2nd_Phase_reg\ => \^exception_kind\(0),
      break_Pipe_i_reg0 => break_Pipe_i_reg0,
      dbg_stop_instr_fetch => dbg_stop_instr_fetch,
      inHibit_EX => inHibit_EX,
      jump2_I_reg => jump2_I_reg_n_0,
      jump_Carry2 => jump_Carry2,
      lopt => lopt_14,
      lopt_1 => lopt_15,
      mul_Executing_reg => \^of_piperun_1\,
      mul_Executing_reg_0 => \^d\(5),
      of_Pause_reg => PreFetch_Buffer_I_n_111,
      p_69_in => p_69_in,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => \^jump\
    );
\Using_FPGA.Native_i_1__62\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF88A80000"
    )
        port map (
      I0 => \Using_FPGA.Native_i_2__4_n_0\,
      I1 => write_Reg_reg_n_0,
      I2 => DReady,
      I3 => writing_reg_n_0,
      I4 => ex_Valid,
      I5 => reset_delay,
      O => Reg_Write
    );
\Using_FPGA.Native_i_1__64\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F8"
    )
        port map (
      I0 => \Using_FPGA.reset_BIP_I_reg_n_0\,
      I1 => ex_Valid,
      I2 => sync_reset,
      O => MSR_Rst
    );
\Using_FPGA.Native_i_1__68\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00E2"
    )
        port map (
      I0 => \Using_FPGA.Native_6\,
      I1 => \^trace_instruction_i_reg[0]\(5),
      I2 => shift_Carry_In,
      I3 => \^trace_instruction_i_reg[0]\(6),
      O => Shifted
    );
\Using_FPGA.Native_i_2__37\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FECCAECC"
    )
        port map (
      I0 => \Using_FPGA.set_BIP_I_reg_n_0\,
      I1 => MSR(2),
      I2 => mtsmsr_write_i_reg_n_0,
      I3 => ex_Valid,
      I4 => EX_Op1,
      O => \Using_FPGA.Native\
    );
\Using_FPGA.Native_i_2__38\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFEFFAEAAFEFAAEA"
    )
        port map (
      I0 => write_Carry,
      I1 => MSR(1),
      I2 => \Using_FPGA.Native_i_4_n_0\,
      I3 => p_69_in,
      I4 => \Using_FPGA.Native_i_5_n_0\,
      I5 => Op1_Shift,
      O => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__39\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FECCAECC"
    )
        port map (
      I0 => \Using_FPGA.enable_Interrupts_I_reg_n_0\,
      I1 => MSR(0),
      I2 => mtsmsr_write_i_reg_n_0,
      I3 => ex_Valid,
      I4 => Op1_Low(0),
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_2__4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => \^trace_reg_addr_i_reg[0]\(2),
      I1 => \^trace_reg_addr_i_reg[0]\(3),
      I2 => \^trace_reg_addr_i_reg[0]\(4),
      I3 => \^trace_reg_addr_i_reg[0]\(1),
      I4 => \^trace_reg_addr_i_reg[0]\(0),
      O => \Using_FPGA.Native_i_2__4_n_0\
    );
\Using_FPGA.Native_i_3__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => ex_Valid,
      I1 => write_Carry_I_reg_n_0,
      O => write_Carry
    );
\Using_FPGA.Native_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3F7F"
    )
        port map (
      I0 => is_swx_I_reg_n_0,
      I1 => ex_Valid,
      I2 => load_Store_i,
      I3 => is_lwx_I,
      O => \Using_FPGA.Native_i_4_n_0\
    );
\Using_FPGA.Native_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => is_swx_I_reg_n_0,
      I1 => \Using_LWX_SWX_instr.reservation_reg_n_0\,
      O => \Using_FPGA.Native_i_5_n_0\
    );
\Using_FPGA.New_Carry_MUXCY\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_13
     port map (
      LO => LO,
      Op1_Low(0) => Op1_Low(1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_4\,
      ex_Valid => ex_Valid,
      lopt => lopt,
      new_Carry => new_Carry,
      select_ALU_Carry => select_ALU_Carry,
      sync_reset => sync_reset,
      write_Carry_I_reg => write_Carry_I_reg_n_0
    );
\Using_FPGA.OpSel1_SPR_Select_LUT_1\: entity work.\microblaze_mcs_1_MB_LUT4__parameterized1\
     port map (
      instr_OF(3) => instr_OF(0),
      instr_OF(2) => instr_OF(1),
      instr_OF(1) => instr_OF(3),
      instr_OF(0) => instr_OF(4),
      opsel1_SPR_Select_1 => opsel1_SPR_Select_1
    );
\Using_FPGA.OpSel1_SPR_Select_LUT_2\: entity work.\microblaze_mcs_1_MB_LUT4__parameterized3\
     port map (
      D(3) => instr_OF(0),
      D(2) => instr_OF(1),
      D(1) => instr_OF(2),
      D(0) => instr_OF(3),
      opsel1_SPR_Select_2_1 => opsel1_SPR_Select_2_1
    );
\Using_FPGA.OpSel1_SPR_Select_LUT_3\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3
     port map (
      D(0) => \^imm_value\(1),
      instr_OF(1) => instr_OF(4),
      instr_OF(0) => instr_OF(5),
      opsel1_SPR_Select_2_2 => opsel1_SPR_Select_2_2
    );
\Using_FPGA.OpSel1_SPR_Select_LUT_4\: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized0\
     port map (
      opsel1_SPR_Select => opsel1_SPR_Select,
      opsel1_SPR_Select_1 => opsel1_SPR_Select_1,
      opsel1_SPR_Select_2_1 => opsel1_SPR_Select_2_1,
      opsel1_SPR_Select_2_2 => opsel1_SPR_Select_2_2
    );
\Using_FPGA.Reg_Test_Equal_FDSE\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDSE
     port map (
      Clk => Clk,
      R => R,
      Reg_Test_Equal => Reg_Test_Equal,
      Reg_Test_Equal_i => Reg_Test_Equal_i,
      mul_Executing_reg => \^of_piperun_1\
    );
\Using_FPGA.Reg_Test_Equal_N_FDRE\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_14
     port map (
      Clk => Clk,
      R => R,
      Reg_Test_Equal_N_i7_out => Reg_Test_Equal_N_i7_out,
      mul_Executing_reg => \^of_piperun_1\,
      reg_Test_Equal_N => reg_Test_Equal_N
    );
\Using_FPGA.Res_Forward1_LUT1\: entity work.\microblaze_mcs_1_MB_LUT4__parameterized5\
     port map (
      Q(1 downto 0) => \^trace_reg_addr_i_reg[0]\(4 downto 3),
      reg1_Addr(1) => \^reg1_addr\(0),
      reg1_Addr(0) => \^reg1_addr\(1),
      res_forward1_1 => res_forward1_1
    );
\Using_FPGA.Res_Forward1_LUT2\: entity work.\microblaze_mcs_1_MB_LUT4__parameterized5_15\
     port map (
      Q(0) => \^trace_reg_addr_i_reg[0]\(2),
      reg1_Addr(1) => \^reg1_addr\(2),
      reg1_Addr(0) => \^reg1_addr\(3),
      res_forward1_2 => res_forward1_2,
      \write_Addr_I_reg[3]\ => \^trace_reg_addr_i_reg[0]\(1)
    );
\Using_FPGA.Res_Forward1_LUT3\: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized1\
     port map (
      Q(0) => \^trace_reg_addr_i_reg[0]\(0),
      ex_Valid => ex_Valid,
      reg1_Addr(0) => \^reg1_addr\(4),
      res_forward1_3 => res_forward1_3
    );
\Using_FPGA.Res_Forward1_LUT4\: entity work.\microblaze_mcs_1_MB_LUT4__parameterized7\
     port map (
      res_Forward1 => res_Forward1,
      res_forward1_1 => res_forward1_1,
      res_forward1_2 => res_forward1_2,
      res_forward1_3 => res_forward1_3,
      write_Reg_I_S => write_Reg_I_S
    );
\Using_FPGA.Res_Forward2_LUT1\: entity work.\microblaze_mcs_1_MB_LUT4__parameterized5_16\
     port map (
      Q(1 downto 0) => \^trace_reg_addr_i_reg[0]\(4 downto 3),
      imm_Value(1) => \^imm_value\(0),
      imm_Value(0) => \^imm_value\(1),
      res_forward2_1 => res_forward2_1
    );
\Using_FPGA.Res_Forward2_LUT2\: entity work.\microblaze_mcs_1_MB_LUT4__parameterized5_17\
     port map (
      Q(0) => \^trace_reg_addr_i_reg[0]\(2),
      imm_Value(1) => \^imm_value\(2),
      imm_Value(0) => \^imm_value\(3),
      res_forward2_2 => res_forward2_2,
      \write_Addr_I_reg[3]\ => \^trace_reg_addr_i_reg[0]\(1)
    );
\Using_FPGA.Res_Forward2_LUT3\: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized1_18\
     port map (
      Q(0) => \^trace_reg_addr_i_reg[0]\(0),
      ex_Valid => ex_Valid,
      imm_Value(0) => \^imm_value\(4),
      res_forward2_3 => res_forward2_3
    );
\Using_FPGA.Res_Forward2_LUT4\: entity work.\microblaze_mcs_1_MB_LUT4__parameterized7_19\
     port map (
      res_Forward2 => res_Forward2,
      res_forward2_1 => res_forward2_1,
      res_forward2_2 => res_forward2_2,
      res_forward2_3 => res_forward2_3,
      write_Reg_I_S => write_Reg_I_S
    );
\Using_FPGA.Use_Reg_Neg_DI_FDRE\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_20
     port map (
      Clk => Clk,
      R => R,
      mul_Executing_reg => \^of_piperun_1\,
      use_Reg_Neg_DI => use_Reg_Neg_DI,
      use_Reg_Neg_DI_i26_out => use_Reg_Neg_DI_i26_out
    );
\Using_FPGA.Use_Reg_Neg_S_FDRE\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_FDRE_21
     port map (
      Clk => Clk,
      R => R,
      mul_Executing_reg => \^of_piperun_1\,
      use_Reg_Neg_S => use_Reg_Neg_S,
      use_Reg_Neg_S_i28_out => use_Reg_Neg_S_i28_out
    );
\Using_FPGA.Using_Breakable_Pipe.OpSel1_SPR_MUXCY_1\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_22
     port map (
      opsel1_SPR => opsel1_SPR,
      opsel1_SPR_Select => opsel1_SPR_Select,
      take_Intr_Now_III => take_Intr_Now_III
    );
\Using_FPGA.Using_Breakable_Pipe.Take_Intr_MUXCY_1\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_23
     port map (
      \Using_FPGA.take_Intr_2nd_Phase_reg\ => \^exception_kind\(0),
      inHibit_EX => inHibit_EX,
      jump2_I_reg => jump2_I_reg_n_0,
      lopt => lopt_21,
      lopt_1 => lopt_22,
      lopt_2 => lopt_23,
      mul_Executing_reg => \^of_piperun_1\,
      take_Intr_Now_I => take_Intr_Now_I,
      use_Imm_Reg => use_Imm_Reg
    );
\Using_FPGA.Using_Breakable_Pipe.Take_Intr_MUXCY_2\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_24
     port map (
      \Using_FPGA.take_Intr_2nd_Phase_reg\ => \^exception_kind\(0),
      \break_Pipe_i_reg__0\ => \break_Pipe_i_reg__0\,
      ex_Valid => ex_Valid,
      lopt => lopt_24,
      lopt_1 => lopt_25,
      lopt_2 => lopt_26,
      mtsmsr_write_i_reg => mtsmsr_write_i_reg_n_0,
      take_Intr_Now_I => take_Intr_Now_I,
      take_Intr_Now_II => take_Intr_Now_II
    );
\Using_FPGA.Using_Breakable_Pipe.Take_Intr_MUXCY_3\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_25
     port map (
      D(1 downto 0) => p_1_in(3 downto 2),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => PreFetch_Buffer_I_n_50,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ => PreFetch_Buffer_I_n_103,
      DReady => DReady,
      Select_Logic0 => Select_Logic0,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_3\,
      \Using_FPGA.set_BIP_I_reg\ => \Using_FPGA.set_BIP_I_reg_n_0\,
      \Using_FPGA.take_Intr_2nd_Phase_reg\ => \^exception_kind\(0),
      \Using_LWX_SWX_instr.reservation_reg\ => \Using_FPGA.Using_Breakable_Pipe.Take_Intr_MUXCY_3_n_6\,
      \break_Pipe_i_reg__0\ => \break_Pipe_i_reg__0\,
      ex_Valid => ex_Valid,
      inHibit_EX => inHibit_EX,
      inHibit_EX1 => inHibit_EX1,
      inHibit_EX_reg => \Using_FPGA.Using_Breakable_Pipe.Take_Intr_MUXCY_3_n_1\,
      instr_OF(2) => instr_OF(3),
      instr_OF(1) => instr_OF(7),
      instr_OF(0) => instr_OF(8),
      is_lwx_I_reg => \Using_FPGA.of_PipeRun_MuxCY_1_n_6\,
      is_swx_I_reg => is_swx_I_reg_n_0,
      load_Store_i => load_Store_i,
      load_Store_i2 => load_Store_i2,
      lopt => lopt_27,
      lopt_1 => lopt_28,
      lopt_2 => lopt_29,
      mul_Executing_reg => \^of_piperun_1\,
      nonvalid_IFetch_n_reg => inHibit_EX_i_3_n_0,
      of_Pause_reg => \^jump\,
      sync_reset => sync_reset,
      take_Intr_Now_II => take_Intr_Now_II,
      take_Intr_Now_III => take_Intr_Now_III,
      take_intr_2nd_cycle_reg => \Using_FPGA.Using_Breakable_Pipe.Take_Intr_MUXCY_3_n_2\,
      take_intr_2nd_cycle_reg_0 => take_intr_2nd_cycle_reg_n_0,
      using_Imm0 => using_Imm0
    );
\Using_FPGA.clean_iReady_MuxCY\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_26
     port map (
      IReady => \^iready\,
      \No_ECC.Sl_Rdy_reg\ => \No_ECC.Sl_Rdy_reg\,
      lopt => \^lopt_5\,
      lopt_1 => \^of_piperun_1\,
      lopt_2 => S1_out,
      lopt_3 => \^lopt_6\,
      lopt_4 => \^lopt_7\,
      lopt_5 => lopt_8,
      lopt_6 => lopt_9,
      lopt_7 => lopt_10,
      lopt_8 => lopt_11,
      nonvalid_IFetch_n_reg => nonvalid_IFetch_n_reg_n_0
    );
\Using_FPGA.enable_Interrupts_I_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => enable_Interrupts_I,
      Q => \Using_FPGA.enable_Interrupts_I_reg_n_0\,
      R => sync_reset
    );
\Using_FPGA.force_di1_LUT3\: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized2\
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_5\,
      force_DI1 => force_DI1,
      force_Val1 => force_Val1,
      use_Reg_Neg_DI => use_Reg_Neg_DI
    );
\Using_FPGA.force_di2_LUT4\: entity work.\microblaze_mcs_1_MB_LUT4__parameterized11\
     port map (
      ex_Valid => ex_Valid,
      force_DI2 => force_DI2,
      force_Val2_N => force_Val2_N
    );
\Using_FPGA.force_jump1_LUT3\: entity work.\microblaze_mcs_1_microblaze_v10_0_7_MB_LUT3__parameterized2_27\
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_5\,
      force1 => force1,
      force_jump1 => force_jump1,
      use_Reg_Neg_S => use_Reg_Neg_S
    );
\Using_FPGA.force_jump2_LUT4\: entity work.\microblaze_mcs_1_MB_LUT4__parameterized3_28\
     port map (
      ex_Valid => ex_Valid,
      force2 => force2,
      force_jump2 => force_jump2
    );
\Using_FPGA.iFetch_MuxCY_1\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_29
     port map (
      buffer_Full => buffer_Full,
      ifetch_carry1 => ifetch_carry1,
      lopt => lopt_16,
      lopt_1 => lopt_17,
      of_Pause_reg => \^jump\
    );
\Using_FPGA.iFetch_MuxCY_2\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_30
     port map (
      \LOCKSTEP_Out_reg[3]\ => \^d\(5),
      \No_ECC.Sl_Rdy_reg\ => \No_ECC.Sl_Rdy_reg\,
      dbg_stop_instr_fetch => dbg_stop_instr_fetch,
      ex_Valid => ex_Valid,
      iFetch_In_Progress => iFetch_In_Progress,
      iFetch_In_Progress_reg => \Using_FPGA.iFetch_MuxCY_2_n_1\,
      ifetch_carry1 => ifetch_carry1,
      ifetch_carry2 => ifetch_carry2,
      lopt => lopt_18,
      lopt_1 => lopt_19,
      lopt_2 => lopt_20,
      mbar_decode_I => mbar_decode_I,
      missed_IFetch => missed_IFetch,
      missed_IFetch_reg => \Using_FPGA.iFetch_MuxCY_2_n_2\,
      mul_Executing => mul_Executing,
      of_Pause_reg => \^jump\,
      sync_reset => sync_reset
    );
\Using_FPGA.iFetch_MuxCY_3\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_31
     port map (
      D(0) => \^d\(6),
      iFetch_In_Progress => iFetch_In_Progress,
      ifetch_carry2 => ifetch_carry2
    );
\Using_FPGA.of_PipeRun_MuxCY_1\: entity work.microblaze_mcs_1_microblaze_v10_0_7_MB_MUXCY_32
     port map (
      Blocked_Valid_Instr0 => Blocked_Valid_Instr0,
      Buffer_Addr(0) => \^buffer_addr\(0),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => PreFetch_Buffer_I_n_110,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0\ => PreFetch_Buffer_I_n_108,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_1\ => PreFetch_Buffer_I_n_55,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_2\ => PreFetch_Buffer_I_n_53,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_3\ => PreFetch_Buffer_I_n_54,
      DReady => DReady,
      E(0) => \Using_FPGA.of_PipeRun_MuxCY_1_n_12\,
      OF_PipeRun => OF_PipeRun,
      S => S1_out,
      Sext8_reg => \Using_FPGA.of_PipeRun_MuxCY_1_n_9\,
      Unsigned_Op_reg => \Using_FPGA.of_PipeRun_MuxCY_1_n_5\,
      \Using_FPGA.Native_0\ => \^of_piperun_1\,
      \Using_FPGA.take_Intr_2nd_Phase_reg\ => \^exception_kind\(0),
      \Using_LWX_SWX_instr.reservation_reg\ => \Using_FPGA.of_PipeRun_MuxCY_1_n_6\,
      \Using_LWX_SWX_instr.reservation_reg_0\ => \Using_LWX_SWX_instr.reservation_reg_n_0\,
      dbg_stop_instr_fetch => dbg_stop_instr_fetch,
      ex_Valid => ex_Valid,
      ex_Valid_1st_cycle_reg => \Using_FPGA.of_PipeRun_MuxCY_1_n_13\,
      inHibit_EX => inHibit_EX,
      instr_OF(0) => instr_OF(3),
      is_lwx_I => is_lwx_I,
      is_lwx_I_reg => \Using_FPGA.of_PipeRun_MuxCY_1_n_3\,
      is_swx_I_reg => \Using_FPGA.of_PipeRun_MuxCY_1_n_2\,
      is_swx_I_reg_0 => is_swx_I_reg_n_0,
      jump2_I_reg => jump2_I_reg_n_0,
      load_Store_i => load_Store_i,
      load_Store_i_reg => \Using_FPGA.of_PipeRun_MuxCY_1_n_1\,
      lopt => lopt_21,
      lopt_1 => lopt_22,
      lopt_2 => lopt_23,
      lopt_3 => lopt_24,
      lopt_4 => lopt_25,
      lopt_5 => lopt_26,
      lopt_6 => lopt_27,
      lopt_7 => lopt_28,
      lopt_8 => lopt_29,
      mtsmsr_write_i_reg => \Using_FPGA.of_PipeRun_MuxCY_1_n_7\,
      mtsmsr_write_i_reg_0 => mtsmsr_write_i_reg_n_0,
      of_Pause_reg => \^jump\,
      of_PipeRun_Select => of_PipeRun_Select,
      of_PipeRun_without_dready => of_PipeRun_without_dready,
      select_ALU_Carry_reg => \Using_FPGA.of_PipeRun_MuxCY_1_n_11\,
      swx_ready => swx_ready,
      swx_ready_reg => \Using_FPGA.of_PipeRun_MuxCY_1_n_10\,
      sync_reset => sync_reset,
      take_Intr_Now_III => take_Intr_Now_III,
      take_intr_Done => take_intr_Done,
      write_Reg_reg => \Using_FPGA.of_PipeRun_MuxCY_1_n_4\,
      write_Reg_reg_0 => write_Reg_reg_n_0
    );
\Using_FPGA.of_PipeRun_Select_LUT5\: entity work.microblaze_mcs_1_MB_LUT5
     port map (
      load_Store_i => load_Store_i,
      mul_Executing => mul_Executing,
      of_Pause => of_Pause,
      of_PipeRun_Select => of_PipeRun_Select,
      of_Valid_Raw => of_Valid_Raw
    );
\Using_FPGA.of_PipeRun_without_dready_LUT5\: entity work.\microblaze_mcs_1_MB_LUT5__parameterized1\
     port map (
      load_Store_i => load_Store_i,
      mul_Executing => mul_Executing,
      of_Pause => of_Pause,
      of_PipeRun_without_dready => of_PipeRun_without_dready,
      of_Valid_Raw => of_Valid_Raw
    );
\Using_FPGA.reset_BIP_I_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => reset_BIP_I8_out,
      Q => \Using_FPGA.reset_BIP_I_reg_n_0\,
      R => sync_reset
    );
\Using_FPGA.set_BIP_I_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I_n_43,
      Q => \Using_FPGA.set_BIP_I_reg_n_0\,
      R => '0'
    );
\Using_FPGA.take_Intr_2nd_Phase_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => inHibit_EX1,
      Q => \^exception_kind\(0),
      R => sync_reset
    );
\Using_LWX_SWX_instr.reservation_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Using_Breakable_Pipe.Take_Intr_MUXCY_3_n_6\,
      Q => \Using_LWX_SWX_instr.reservation_reg_n_0\,
      R => '0'
    );
\Using_dynamic_instr_Address.Interrupt_Ack[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F4"
    )
        port map (
      I0 => old_IE_value,
      I1 => MSR(0),
      I2 => \Using_FPGA.enable_Interrupts_I_reg_n_0\,
      O => \Using_dynamic_instr_Address.Interrupt_Ack[0]_i_1_n_0\
    );
\Using_dynamic_instr_Address.Interrupt_Ack[1]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => old_IE_value,
      I1 => MSR(0),
      I2 => \Using_FPGA.enable_Interrupts_I_reg_n_0\,
      I3 => take_intr_2nd_cycle_reg_n_0,
      O => \Using_dynamic_instr_Address.Interrupt_Ack[1]_i_1_n_0\
    );
\Using_dynamic_instr_Address.Interrupt_Ack_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => \Using_dynamic_instr_Address.Interrupt_Ack[0]_i_1_n_0\,
      Q => Interrupt_Ack(0),
      R => sync_reset
    );
\Using_dynamic_instr_Address.Interrupt_Ack_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => \Using_dynamic_instr_Address.Interrupt_Ack[1]_i_1_n_0\,
      Q => Interrupt_Ack(1),
      R => sync_reset
    );
\Using_dynamic_instr_Address.old_IE_value_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => MSR(0),
      Q => old_IE_value,
      R => sync_reset
    );
Write_Strobe_INST_0: unisim.vcomponents.LUT5
    generic map(
      INIT => X"D0000000"
    )
        port map (
      I0 => is_swx_I_reg_n_0,
      I1 => \Using_LWX_SWX_instr.reservation_reg_n_0\,
      I2 => writing_reg_n_0,
      I3 => load_Store_i,
      I4 => ex_Valid,
      O => \^d\(2)
    );
active_wakeup_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"EEEEEEE0"
    )
        port map (
      I0 => \out\(0),
      I1 => \Synchronize.use_sync_reset.sync_reg[2]\(0),
      I2 => \^hibernate\,
      I3 => \^suspend\,
      I4 => Sleep_Decode,
      O => active_wakeup0
    );
active_wakeup_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => active_wakeup0,
      Q => active_wakeup,
      R => sync_reset
    );
break_Pipe_i_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => ex_Valid,
      I1 => mtsmsr_write_i_reg_n_0,
      O => p_69_in
    );
break_Pipe_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => break_Pipe_i_reg0,
      Q => \break_Pipe_i_reg__0\,
      R => sync_reset
    );
byte_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I_n_42,
      Q => \^isbyte\,
      R => '0'
    );
d_AS_I_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => d_AS_I15_out,
      Q => d_AS_I,
      R => sync_reset
    );
doublet_Read_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFEFFFE0"
    )
        port map (
      I0 => instr_OF(4),
      I1 => instr_OF(5),
      I2 => \^of_piperun_1\,
      I3 => byte_i12_out,
      I4 => \^doublet_read\,
      O => doublet_Read_i_i_1_n_0
    );
doublet_Read_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => doublet_Read_i_i_1_n_0,
      Q => \^doublet_read\,
      R => sync_reset
    );
doublet_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I_n_40,
      Q => \^isdoublet\,
      R => '0'
    );
ex_Valid_1st_cycle_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.of_PipeRun_MuxCY_1_n_13\,
      Q => ex_Valid_1st_cycle_reg_n_0,
      R => sync_reset
    );
ex_Valid_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I_n_106,
      Q => ex_Valid,
      R => sync_reset
    );
ex_first_cycle_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^of_piperun_1\,
      Q => ex_first_cycle,
      R => sync_reset
    );
hibernate_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000008AAFBAA"
    )
        port map (
      I0 => \^hibernate\,
      I1 => iFetch_In_Progress,
      I2 => \^trace_reg_addr_i_reg[0]\(0),
      I3 => mbar_sleep,
      I4 => \^trace_instruction_i_reg[0]\(25),
      I5 => sleep_i0,
      O => hibernate_i_i_1_n_0
    );
hibernate_i_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => sync_reset,
      I1 => active_wakeup,
      O => sleep_i0
    );
hibernate_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => hibernate_i_i_1_n_0,
      Q => \^hibernate\,
      R => '0'
    );
iFetch_In_Progress_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.iFetch_MuxCY_2_n_1\,
      Q => iFetch_In_Progress,
      R => sync_reset
    );
inHibit_EX_i_3: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \No_ECC.Sl_Rdy_reg\,
      I1 => nonvalid_IFetch_n_reg_n_0,
      O => inHibit_EX_i_3_n_0
    );
inHibit_EX_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Using_Breakable_Pipe.Take_Intr_MUXCY_3_n_1\,
      Q => inHibit_EX,
      R => '0'
    );
\instr_EX_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => instr_OF(0),
      Q => \^trace_instruction_i_reg[0]\(31),
      R => sync_reset
    );
\instr_EX_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => instr_OF(10),
      Q => \^trace_instruction_i_reg[0]\(21),
      R => sync_reset
    );
\instr_EX_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => \^reg1_addr\(0),
      Q => \^trace_instruction_i_reg[0]\(20),
      R => sync_reset
    );
\instr_EX_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => \^reg1_addr\(1),
      Q => \^trace_instruction_i_reg[0]\(19),
      R => sync_reset
    );
\instr_EX_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => \^reg1_addr\(2),
      Q => \^trace_instruction_i_reg[0]\(18),
      R => sync_reset
    );
\instr_EX_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => \^reg1_addr\(3),
      Q => \^trace_instruction_i_reg[0]\(17),
      R => sync_reset
    );
\instr_EX_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => \^reg1_addr\(4),
      Q => \^trace_instruction_i_reg[0]\(16),
      R => sync_reset
    );
\instr_EX_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => \^imm_value\(0),
      Q => \^trace_instruction_i_reg[0]\(15),
      R => sync_reset
    );
\instr_EX_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => \^imm_value\(1),
      Q => \^trace_instruction_i_reg[0]\(14),
      R => sync_reset
    );
\instr_EX_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => \^imm_value\(2),
      Q => \^trace_instruction_i_reg[0]\(13),
      R => sync_reset
    );
\instr_EX_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => \^imm_value\(3),
      Q => \^trace_instruction_i_reg[0]\(12),
      R => sync_reset
    );
\instr_EX_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => instr_OF(1),
      Q => \^trace_instruction_i_reg[0]\(30),
      R => sync_reset
    );
\instr_EX_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => \^imm_value\(4),
      Q => \^trace_instruction_i_reg[0]\(11),
      R => sync_reset
    );
\instr_EX_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => \^imm_value\(5),
      Q => \^trace_instruction_i_reg[0]\(10),
      R => sync_reset
    );
\instr_EX_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => \^imm_value\(6),
      Q => \^trace_instruction_i_reg[0]\(9),
      R => sync_reset
    );
\instr_EX_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => \^imm_value\(7),
      Q => \^trace_instruction_i_reg[0]\(8),
      R => sync_reset
    );
\instr_EX_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => \^imm_value\(8),
      Q => \^trace_instruction_i_reg[0]\(7),
      R => sync_reset
    );
\instr_EX_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => \^imm_value\(9),
      Q => \^trace_instruction_i_reg[0]\(6),
      R => sync_reset
    );
\instr_EX_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => \^imm_value\(10),
      Q => \^trace_instruction_i_reg[0]\(5),
      R => sync_reset
    );
\instr_EX_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => \^imm_value\(11),
      Q => \^trace_instruction_i_reg[0]\(4),
      R => sync_reset
    );
\instr_EX_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => \^imm_value\(12),
      Q => \^trace_instruction_i_reg[0]\(3),
      R => sync_reset
    );
\instr_EX_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => \^imm_value\(13),
      Q => \^trace_instruction_i_reg[0]\(2),
      R => sync_reset
    );
\instr_EX_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => instr_OF(2),
      Q => \^trace_instruction_i_reg[0]\(29),
      R => sync_reset
    );
\instr_EX_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => \^imm_value\(14),
      Q => \^trace_instruction_i_reg[0]\(1),
      R => sync_reset
    );
\instr_EX_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => \^imm_value\(15),
      Q => \^trace_instruction_i_reg[0]\(0),
      R => sync_reset
    );
\instr_EX_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => instr_OF(3),
      Q => \^trace_instruction_i_reg[0]\(28),
      R => sync_reset
    );
\instr_EX_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => instr_OF(4),
      Q => \^trace_instruction_i_reg[0]\(27),
      R => sync_reset
    );
\instr_EX_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => instr_OF(5),
      Q => \^trace_instruction_i_reg[0]\(26),
      R => sync_reset
    );
\instr_EX_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => instr_OF(6),
      Q => \^trace_instruction_i_reg[0]\(25),
      R => sync_reset
    );
\instr_EX_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => instr_OF(7),
      Q => \^trace_instruction_i_reg[0]\(24),
      R => sync_reset
    );
\instr_EX_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => instr_OF(8),
      Q => \^trace_instruction_i_reg[0]\(23),
      R => sync_reset
    );
\instr_EX_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => instr_OF(9),
      Q => \^trace_instruction_i_reg[0]\(22),
      R => sync_reset
    );
is_lwx_I_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.of_PipeRun_MuxCY_1_n_3\,
      Q => is_lwx_I,
      R => '0'
    );
is_swx_I_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.of_PipeRun_MuxCY_1_n_2\,
      Q => is_swx_I_reg_n_0,
      R => '0'
    );
jump2_I_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => jump2_I_reg_n_0,
      Q => jump2_I_1,
      R => sync_reset
    );
jump2_I_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => PreFetch_Buffer_I_n_101,
      Q => jump2_I_reg_n_0,
      R => sync_reset
    );
load_Store_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.of_PipeRun_MuxCY_1_n_1\,
      Q => load_Store_i,
      R => '0'
    );
mbar_decode_I_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => of_mbar_decode,
      Q => mbar_decode_I,
      R => sync_reset
    );
mbar_first_i_3: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAAAA08"
    )
        port map (
      I0 => mbar_first_reg_n_0,
      I1 => iFetch_In_Progress,
      I2 => \^trace_reg_addr_i_reg[0]\(0),
      I3 => ex_first_cycle,
      I4 => mbar_sleep,
      O => mbar_first_i_3_n_0
    );
mbar_first_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => mbar_first,
      Q => mbar_first_reg_n_0,
      R => sync_reset
    );
mbar_hold_I_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I_n_45,
      Q => mbar_hold_I_reg_n_0,
      R => '0'
    );
mbar_is_sleep_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => mbar_is_sleep0,
      Q => mbar_is_sleep,
      R => sync_reset
    );
mbar_sleep_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000EAAAAAAA"
    )
        port map (
      I0 => mbar_sleep,
      I1 => ex_first_cycle,
      I2 => mbar_is_sleep,
      I3 => ex_Valid,
      I4 => mbar_decode_I,
      I5 => sleep_i0,
      O => mbar_sleep_i_1_n_0
    );
mbar_sleep_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mbar_sleep_i_1_n_0,
      Q => mbar_sleep,
      R => '0'
    );
missed_IFetch_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.iFetch_MuxCY_2_n_2\,
      Q => missed_IFetch,
      R => sync_reset
    );
mtsmsr_write_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I_n_44,
      Q => mtsmsr_write_i_reg_n_0,
      R => '0'
    );
mul_Executing_delayed_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mul_Executing,
      Q => mul_Executing_delayed,
      R => sync_reset
    );
mul_Executing_done_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => mul_Executing_delayed,
      I1 => mul_Executing,
      O => mul_Executing_done0
    );
mul_Executing_done_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mul_Executing_done0,
      Q => mul_Executing_done,
      R => sync_reset
    );
mul_Executing_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mbar_first,
      Q => mul_Executing,
      R => sync_reset
    );
nonvalid_IFetch_n_reg: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I_n_36,
      Q => nonvalid_IFetch_n_reg_n_0,
      S => sync_reset
    );
of_Pause_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Pause,
      Q => of_Pause,
      R => sync_reset
    );
quadlet_Read_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FF4FFF40"
    )
        port map (
      I0 => instr_OF(5),
      I1 => instr_OF(4),
      I2 => \^of_piperun_1\,
      I3 => byte_i12_out,
      I4 => \^quadlet_read\,
      O => quadlet_Read_i_i_1_n_0
    );
quadlet_Read_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => quadlet_Read_i_i_1_n_0,
      Q => \^quadlet_read\,
      R => sync_reset
    );
reset_delay_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync_reset,
      Q => reset_delay,
      R => '0'
    );
select_ALU_Carry_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => PreFetch_Buffer_I_n_105,
      Q => select_ALU_Carry,
      R => \Using_FPGA.of_PipeRun_MuxCY_1_n_11\
    );
sleep_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000008AAFBAA"
    )
        port map (
      I0 => Sleep_Decode,
      I1 => iFetch_In_Progress,
      I2 => \^trace_reg_addr_i_reg[0]\(0),
      I3 => mbar_sleep,
      I4 => \^trace_instruction_i_reg[0]\(24),
      I5 => sleep_i0,
      O => sleep_i_i_1_n_0
    );
sleep_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sleep_i_i_1_n_0,
      Q => Sleep_Decode,
      R => '0'
    );
suspend_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000000E222"
    )
        port map (
      I0 => \^suspend\,
      I1 => sleep_i00_in,
      I2 => \^trace_instruction_i_reg[0]\(25),
      I3 => \^trace_instruction_i_reg[0]\(24),
      I4 => active_wakeup,
      I5 => sync_reset,
      O => suspend_i_i_1_n_0
    );
suspend_i_i_2: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8A"
    )
        port map (
      I0 => mbar_sleep,
      I1 => \^trace_reg_addr_i_reg[0]\(0),
      I2 => iFetch_In_Progress,
      O => sleep_i00_in
    );
suspend_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => suspend_i_i_1_n_0,
      Q => \^suspend\,
      R => '0'
    );
swx_ready_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.of_PipeRun_MuxCY_1_n_10\,
      Q => swx_ready,
      R => '0'
    );
take_intr_2nd_cycle_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Using_Breakable_Pipe.Take_Intr_MUXCY_3_n_2\,
      Q => take_intr_2nd_cycle_reg_n_0,
      R => '0'
    );
take_intr_Done_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => take_intr_2nd_cycle_reg_n_0,
      Q => take_intr_Done,
      R => sync_reset
    );
trace_data_access_i_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B000"
    )
        port map (
      I0 => \Using_LWX_SWX_instr.reservation_reg_n_0\,
      I1 => is_swx_I_reg_n_0,
      I2 => load_Store_i,
      I3 => ex_Valid,
      O => mem_Strobe
    );
trace_valid_instr_part1_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF04FF04FF040004"
    )
        port map (
      I0 => mul_Executing,
      I1 => ex_Valid_1st_cycle_reg_n_0,
      I2 => take_intr_Done,
      I3 => load_Store_i,
      I4 => swx_ready,
      I5 => DReady,
      O => trace_valid_instr_part10
    );
trace_valid_instr_part1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_valid_instr_part10,
      Q => trace_valid_instr_part1,
      R => sync_reset
    );
using_Imm_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => using_Imm0,
      Q => use_Imm_Reg,
      R => sync_reset
    );
\write_Addr_I[3]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00FC00AA"
    )
        port map (
      I0 => \^trace_reg_addr_i_reg[0]\(1),
      I1 => take_Intr_Now_III,
      I2 => instr_OF(9),
      I3 => sync_reset,
      I4 => \^of_piperun_1\,
      O => \write_Addr_I[3]_i_1_n_0\
    );
\write_Addr_I_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.of_PipeRun_MuxCY_1_n_12\,
      D => p_1_in(4),
      Q => \^trace_reg_addr_i_reg[0]\(4),
      R => '0'
    );
\write_Addr_I_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.of_PipeRun_MuxCY_1_n_12\,
      D => p_1_in(3),
      Q => \^trace_reg_addr_i_reg[0]\(3),
      R => '0'
    );
\write_Addr_I_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.of_PipeRun_MuxCY_1_n_12\,
      D => p_1_in(2),
      Q => \^trace_reg_addr_i_reg[0]\(2),
      R => '0'
    );
\write_Addr_I_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \write_Addr_I[3]_i_1_n_0\,
      Q => \^trace_reg_addr_i_reg[0]\(1),
      R => '0'
    );
\write_Addr_I_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.of_PipeRun_MuxCY_1_n_12\,
      D => p_1_in(0),
      Q => \^trace_reg_addr_i_reg[0]\(0),
      R => '0'
    );
write_Carry_I_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => PreFetch_Buffer_I_n_64,
      Q => write_Carry_I_reg_n_0,
      R => \Using_FPGA.of_PipeRun_MuxCY_1_n_11\
    );
write_Reg_I_LUT: entity work.microblaze_mcs_1_MB_LUT4
     port map (
      DReady => DReady,
      \write_Addr_I_reg[2]\ => \Using_FPGA.Native_i_2__4_n_0\,
      write_Reg_I_S => write_Reg_I_S,
      write_Reg_reg => write_Reg_reg_n_0,
      writing_reg => writing_reg_n_0
    );
write_Reg_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.of_PipeRun_MuxCY_1_n_4\,
      Q => write_Reg_reg_n_0,
      R => '0'
    );
writing_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun_1\,
      D => writing,
      Q => writing_reg_n_0,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MSR_Reg is
  port (
    MSR : out STD_LOGIC_VECTOR ( 2 downto 0 );
    I3 : out STD_LOGIC;
    I3_0 : out STD_LOGIC;
    I3_1 : out STD_LOGIC;
    I3_2 : out STD_LOGIC;
    MSR_Rst : in STD_LOGIC;
    \Using_FPGA.set_BIP_I_reg\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    write_Carry_I_reg : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : in STD_LOGIC;
    \Using_FPGA.enable_Interrupts_I_reg\ : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    PC_OF : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
end microblaze_mcs_1_MSR_Reg;

architecture STRUCTURE of microblaze_mcs_1_MSR_Reg is
begin
\MSR_Bits[28].Using_MSR_Reg_Bit.MSR_Reg_Bit_I\: entity work.microblaze_mcs_1_MSR_Reg_Bit
     port map (
      Clk => Clk,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I3_1 => I3_1,
      MSR(0) => MSR(2),
      MSR_Rst => MSR_Rst,
      PC_OF => PC_OF,
      \Using_FPGA.set_BIP_I_reg\ => \Using_FPGA.set_BIP_I_reg\
    );
\MSR_Bits[29].Using_MSR_Reg_Bit.MSR_Reg_Bit_I\: entity work.microblaze_mcs_1_MSR_Reg_Bit_656
     port map (
      Clk => Clk,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I3 => I3,
      I3_2 => I3_2,
      MSR(0) => MSR(1),
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      write_Carry_I_reg => write_Carry_I_reg
    );
\MSR_Bits[30].Using_MSR_Reg_Bit.MSR_Reg_Bit_I\: entity work.microblaze_mcs_1_MSR_Reg_Bit_657
     port map (
      Clk => Clk,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I3_0 => I3_0,
      MSR(0) => MSR(0),
      \Use_Async_Reset.sync_reset_reg\ => \Use_Async_Reset.sync_reset_reg\,
      \Using_FPGA.enable_Interrupts_I_reg\ => \Using_FPGA.enable_Interrupts_I_reg\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Operand_Select is
  port (
    Op1_Logic : out STD_LOGIC;
    EX_Op2 : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    \trace_data_address_i_reg[31]\ : out STD_LOGIC;
    Shifted : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    Op2 : out STD_LOGIC;
    Op1_Shift : out STD_LOGIC;
    trace_jump_taken_i_reg_0 : out STD_LOGIC;
    \trace_data_address_i_reg[28]\ : out STD_LOGIC;
    \trace_data_address_i_reg[27]\ : out STD_LOGIC;
    trace_jump_taken_i_reg_1 : out STD_LOGIC;
    op2_C : out STD_LOGIC_VECTOR ( 27 downto 0 );
    \trace_data_address_i_reg[26]\ : out STD_LOGIC;
    trace_jump_taken_i_reg_2 : out STD_LOGIC;
    \trace_data_address_i_reg[25]\ : out STD_LOGIC;
    trace_jump_taken_i_reg_3 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    trace_jump_taken_i_reg_4 : out STD_LOGIC;
    \trace_data_address_i_reg[23]\ : out STD_LOGIC;
    trace_jump_taken_i_reg_5 : out STD_LOGIC;
    \trace_data_address_i_reg[22]\ : out STD_LOGIC;
    trace_jump_taken_i_reg_6 : out STD_LOGIC;
    \trace_data_address_i_reg[21]\ : out STD_LOGIC;
    trace_jump_taken_i_reg_7 : out STD_LOGIC;
    \trace_data_address_i_reg[20]\ : out STD_LOGIC;
    trace_jump_taken_i_reg_8 : out STD_LOGIC;
    \trace_data_address_i_reg[19]\ : out STD_LOGIC;
    trace_jump_taken_i_reg_9 : out STD_LOGIC;
    \trace_data_address_i_reg[18]\ : out STD_LOGIC;
    trace_jump_taken_i_reg_10 : out STD_LOGIC;
    \trace_data_address_i_reg[17]\ : out STD_LOGIC;
    trace_jump_taken_i_reg_11 : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    trace_jump_taken_i_reg_12 : out STD_LOGIC;
    \trace_data_address_i_reg[15]\ : out STD_LOGIC;
    trace_jump_taken_i_reg_13 : out STD_LOGIC;
    \trace_data_address_i_reg[14]\ : out STD_LOGIC;
    trace_jump_taken_i_reg_14 : out STD_LOGIC;
    \trace_data_address_i_reg[13]\ : out STD_LOGIC;
    trace_jump_taken_i_reg_15 : out STD_LOGIC;
    \trace_data_address_i_reg[12]\ : out STD_LOGIC;
    trace_jump_taken_i_reg_16 : out STD_LOGIC;
    \trace_data_address_i_reg[11]\ : out STD_LOGIC;
    trace_jump_taken_i_reg_17 : out STD_LOGIC;
    \trace_data_address_i_reg[10]\ : out STD_LOGIC;
    trace_jump_taken_i_reg_18 : out STD_LOGIC;
    \trace_data_address_i_reg[9]\ : out STD_LOGIC;
    trace_jump_taken_i_reg_19 : out STD_LOGIC;
    \trace_data_address_i_reg[8]\ : out STD_LOGIC;
    trace_jump_taken_i_reg_20 : out STD_LOGIC;
    \trace_data_address_i_reg[7]\ : out STD_LOGIC;
    trace_jump_taken_i_reg_21 : out STD_LOGIC;
    \trace_data_address_i_reg[6]\ : out STD_LOGIC;
    trace_jump_taken_i_reg_22 : out STD_LOGIC;
    \trace_data_address_i_reg[5]\ : out STD_LOGIC;
    trace_jump_taken_i_reg_23 : out STD_LOGIC;
    \trace_data_address_i_reg[4]\ : out STD_LOGIC;
    trace_jump_taken_i_reg_24 : out STD_LOGIC;
    \trace_data_address_i_reg[3]\ : out STD_LOGIC;
    trace_jump_taken_i_reg_25 : out STD_LOGIC;
    \trace_data_address_i_reg[2]\ : out STD_LOGIC;
    trace_jump_taken_i_reg_26 : out STD_LOGIC;
    \trace_data_address_i_reg[1]\ : out STD_LOGIC;
    trace_jump_taken_i_reg_27 : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    trace_jump_taken_i_reg_28 : out STD_LOGIC;
    \Zero_Detecting[0].nibble_Zero_reg\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC_VECTOR ( 15 downto 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_0 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 31 );
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 31 );
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC;
    D_1 : in STD_LOGIC;
    I3 : in STD_LOGIC;
    D_2 : in STD_LOGIC;
    I3_0 : in STD_LOGIC;
    D_3 : in STD_LOGIC;
    I3_1 : in STD_LOGIC;
    D_4 : in STD_LOGIC;
    I3_2 : in STD_LOGIC;
    D_5 : in STD_LOGIC;
    I3_3 : in STD_LOGIC;
    D_6 : in STD_LOGIC;
    I3_4 : in STD_LOGIC;
    D_7 : in STD_LOGIC;
    I3_5 : in STD_LOGIC;
    D_8 : in STD_LOGIC;
    PC_OF : in STD_LOGIC;
    D_9 : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    D_10 : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    D_11 : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    D_12 : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    D_13 : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    D_14 : in STD_LOGIC;
    \Using_FPGA.Native_9\ : in STD_LOGIC;
    D_15 : in STD_LOGIC;
    D_16 : in STD_LOGIC;
    D_17 : in STD_LOGIC;
    D_18 : in STD_LOGIC;
    D_19 : in STD_LOGIC;
    D_20 : in STD_LOGIC;
    D_21 : in STD_LOGIC;
    D_22 : in STD_LOGIC;
    D_23 : in STD_LOGIC;
    D_24 : in STD_LOGIC;
    D_25 : in STD_LOGIC;
    D_26 : in STD_LOGIC;
    D_27 : in STD_LOGIC;
    D_28 : in STD_LOGIC;
    D_29 : in STD_LOGIC;
    D_30 : in STD_LOGIC;
    D_31 : in STD_LOGIC;
    I3_6 : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 0 to 15 )
  );
end microblaze_mcs_1_Operand_Select;

architecture STRUCTURE of microblaze_mcs_1_Operand_Select is
  signal \OpSelect_Bits[31].Operand_Select_Bit_I_n_1\ : STD_LOGIC;
begin
\OpSelect_Bits[0].Operand_Select_Bit_I\: entity work.\microblaze_mcs_1_Operand_Select_Bit__parameterized12\
     port map (
      Clk => Clk,
      D_31 => D_31,
      I3_6 => I3_6,
      Reg1_Data(0) => Reg1_Data(0),
      \Using_FPGA.Native\ => \Using_FPGA.Native_2\,
      ex_Result(0) => ex_Result(0),
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(27),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg_28
    );
\OpSelect_Bits[10].Operand_Select_Bit_I\: entity work.\microblaze_mcs_1_Operand_Select_Bit__parameterized10\
     port map (
      Clk => Clk,
      D_21 => D_21,
      Reg1_Data(0) => Reg1_Data(10),
      ex_Result(0) => ex_Result(10),
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(17),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[10]\ => \trace_data_address_i_reg[10]\,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg_18
    );
\OpSelect_Bits[11].Operand_Select_Bit_I\: entity work.\microblaze_mcs_1_Operand_Select_Bit__parameterized10_504\
     port map (
      Clk => Clk,
      D_20 => D_20,
      Reg1_Data(0) => Reg1_Data(11),
      ex_Result(0) => ex_Result(11),
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(16),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[11]\ => \trace_data_address_i_reg[11]\,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg_17
    );
\OpSelect_Bits[12].Operand_Select_Bit_I\: entity work.\microblaze_mcs_1_Operand_Select_Bit__parameterized10_505\
     port map (
      Clk => Clk,
      D_19 => D_19,
      Reg1_Data(0) => Reg1_Data(12),
      ex_Result(0) => ex_Result(12),
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(15),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[12]\ => \trace_data_address_i_reg[12]\,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg_16
    );
\OpSelect_Bits[13].Operand_Select_Bit_I\: entity work.\microblaze_mcs_1_Operand_Select_Bit__parameterized10_506\
     port map (
      Clk => Clk,
      D_18 => D_18,
      Reg1_Data(0) => Reg1_Data(13),
      ex_Result(0) => ex_Result(13),
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(14),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[13]\ => \trace_data_address_i_reg[13]\,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg_15
    );
\OpSelect_Bits[14].Operand_Select_Bit_I\: entity work.\microblaze_mcs_1_Operand_Select_Bit__parameterized10_507\
     port map (
      Clk => Clk,
      D_17 => D_17,
      Reg1_Data(0) => Reg1_Data(14),
      ex_Result(0) => ex_Result(14),
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(13),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[14]\ => \trace_data_address_i_reg[14]\,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg_14
    );
\OpSelect_Bits[15].Operand_Select_Bit_I\: entity work.\microblaze_mcs_1_Operand_Select_Bit__parameterized10_508\
     port map (
      Clk => Clk,
      D_16 => D_16,
      Reg1_Data(0) => Reg1_Data(15),
      ex_Result(0) => ex_Result(15),
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(12),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[15]\ => \trace_data_address_i_reg[15]\,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg_13
    );
\OpSelect_Bits[16].Operand_Select_Bit_I\: entity work.\microblaze_mcs_1_Operand_Select_Bit__parameterized8\
     port map (
      Clk => Clk,
      D_15 => D_15,
      Reg1_Data(0) => Reg1_Data(16),
      \Using_FPGA.Native\ => \Using_FPGA.Native_1\,
      ex_Result(0) => ex_Result(16),
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(11),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg_12
    );
\OpSelect_Bits[17].Operand_Select_Bit_I\: entity work.\microblaze_mcs_1_Operand_Select_Bit__parameterized8_509\
     port map (
      Clk => Clk,
      D_14 => D_14,
      Reg1_Data(0) => Reg1_Data(17),
      \Using_FPGA.Native\ => \Using_FPGA.Native_9\,
      ex_Result(0) => ex_Result(17),
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(10),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[17]\ => \trace_data_address_i_reg[17]\,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg_11
    );
\OpSelect_Bits[18].Operand_Select_Bit_I\: entity work.\microblaze_mcs_1_Operand_Select_Bit__parameterized8_510\
     port map (
      Clk => Clk,
      D_13 => D_13,
      Reg1_Data(0) => Reg1_Data(18),
      \Using_FPGA.Native\ => \Using_FPGA.Native_8\,
      ex_Result(0) => ex_Result(18),
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(9),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[18]\ => \trace_data_address_i_reg[18]\,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg_10
    );
\OpSelect_Bits[19].Operand_Select_Bit_I\: entity work.\microblaze_mcs_1_Operand_Select_Bit__parameterized8_511\
     port map (
      Clk => Clk,
      D_12 => D_12,
      Reg1_Data(0) => Reg1_Data(19),
      \Using_FPGA.Native\ => \Using_FPGA.Native_7\,
      ex_Result(0) => ex_Result(19),
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(8),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[19]\ => \trace_data_address_i_reg[19]\,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg_9
    );
\OpSelect_Bits[1].Operand_Select_Bit_I\: entity work.\microblaze_mcs_1_Operand_Select_Bit__parameterized10_512\
     port map (
      Clk => Clk,
      D_30 => D_30,
      Reg1_Data(0) => Reg1_Data(1),
      ex_Result(0) => ex_Result(1),
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(26),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[1]\ => \trace_data_address_i_reg[1]\,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg_27
    );
\OpSelect_Bits[20].Operand_Select_Bit_I\: entity work.\microblaze_mcs_1_Operand_Select_Bit__parameterized8_513\
     port map (
      Clk => Clk,
      D_11 => D_11,
      Reg1_Data(0) => Reg1_Data(20),
      \Using_FPGA.Native\ => \Using_FPGA.Native_6\,
      ex_Result(0) => ex_Result(20),
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(7),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[20]\ => \trace_data_address_i_reg[20]\,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg_8
    );
\OpSelect_Bits[21].Operand_Select_Bit_I\: entity work.\microblaze_mcs_1_Operand_Select_Bit__parameterized8_514\
     port map (
      Clk => Clk,
      D_10 => D_10,
      Reg1_Data(0) => Reg1_Data(21),
      \Using_FPGA.Native\ => \Using_FPGA.Native_5\,
      ex_Result(0) => ex_Result(21),
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(6),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[21]\ => \trace_data_address_i_reg[21]\,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg_7
    );
\OpSelect_Bits[22].Operand_Select_Bit_I\: entity work.\microblaze_mcs_1_Operand_Select_Bit__parameterized8_515\
     port map (
      Clk => Clk,
      D_9 => D_9,
      Reg1_Data(0) => Reg1_Data(22),
      \Using_FPGA.Native\ => \Using_FPGA.Native_4\,
      ex_Result(0) => ex_Result(22),
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(5),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[22]\ => \trace_data_address_i_reg[22]\,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg_6
    );
\OpSelect_Bits[23].Operand_Select_Bit_I\: entity work.\microblaze_mcs_1_Operand_Select_Bit__parameterized8_516\
     port map (
      Clk => Clk,
      D_8 => D_8,
      PC_OF => PC_OF,
      Reg1_Data(0) => Reg1_Data(23),
      ex_Result(0) => ex_Result(23),
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(4),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[23]\ => \trace_data_address_i_reg[23]\,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg_5
    );
\OpSelect_Bits[24].Operand_Select_Bit_I\: entity work.microblaze_mcs_1_Operand_Select_Bit
     port map (
      Clk => Clk,
      D_7 => D_7,
      I3_5 => I3_5,
      Reg1_Data(0) => Reg1_Data(24),
      \Using_FPGA.Native\ => \Using_FPGA.Native_0\,
      ex_Result(0) => ex_Result(24),
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(3),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg_4
    );
\OpSelect_Bits[25].Operand_Select_Bit_I\: entity work.microblaze_mcs_1_Operand_Select_Bit_517
     port map (
      Clk => Clk,
      D_6 => D_6,
      I3_4 => I3_4,
      Reg1_Data(0) => Reg1_Data(25),
      ex_Result(0) => ex_Result(25),
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(2),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[25]\ => \trace_data_address_i_reg[25]\,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg_3
    );
\OpSelect_Bits[26].Operand_Select_Bit_I\: entity work.\microblaze_mcs_1_Operand_Select_Bit__parameterized6\
     port map (
      Clk => Clk,
      D_5 => D_5,
      I3_3 => I3_3,
      Reg1_Data(0) => Reg1_Data(26),
      ex_Result(0) => ex_Result(26),
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(1),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[26]\ => \trace_data_address_i_reg[26]\,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg_2
    );
\OpSelect_Bits[27].Operand_Select_Bit_I\: entity work.\microblaze_mcs_1_Operand_Select_Bit__parameterized4\
     port map (
      Clk => Clk,
      D_4 => D_4,
      I3_2 => I3_2,
      Reg1_Data(0) => Reg1_Data(27),
      ex_Result(0) => ex_Result(27),
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(0),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[27]\ => \trace_data_address_i_reg[27]\,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg_1
    );
\OpSelect_Bits[28].Operand_Select_Bit_I\: entity work.\microblaze_mcs_1_Operand_Select_Bit__parameterized2\
     port map (
      Clk => Clk,
      D_3 => D_3,
      I3_1 => I3_1,
      Op1_Shift => Op1_Shift,
      Reg1_Data(0) => Reg1_Data(28),
      ex_Result(0) => ex_Result(28),
      of_PipeRun => of_PipeRun,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[28]\ => \trace_data_address_i_reg[28]\,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg_0
    );
\OpSelect_Bits[29].Operand_Select_Bit_I\: entity work.microblaze_mcs_1_Operand_Select_Bit_518
     port map (
      Clk => Clk,
      D_2 => D_2,
      I3_0 => I3_0,
      Op2 => Op2,
      Reg1_Data(0) => Reg1_Data(29),
      Shifted => Shifted,
      ex_Result(0) => ex_Result(29),
      of_PipeRun => of_PipeRun,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
\OpSelect_Bits[2].Operand_Select_Bit_I\: entity work.\microblaze_mcs_1_Operand_Select_Bit__parameterized10_519\
     port map (
      Clk => Clk,
      D_29 => D_29,
      Reg1_Data(0) => Reg1_Data(2),
      ex_Result(0) => ex_Result(2),
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(25),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[2]\ => \trace_data_address_i_reg[2]\,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg_26
    );
\OpSelect_Bits[30].Operand_Select_Bit_I\: entity work.microblaze_mcs_1_Operand_Select_Bit_520
     port map (
      Clk => Clk,
      D_1 => D_1,
      I3 => I3,
      Reg1_Data(0) => Reg1_Data(30),
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \OpSelect_Bits[31].Operand_Select_Bit_I_n_1\,
      \Zero_Detecting[0].nibble_Zero_reg\ => \Zero_Detecting[0].nibble_Zero_reg\,
      ex_Result(0) => ex_Result(30),
      of_PipeRun => of_PipeRun,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[31]\ => \trace_data_address_i_reg[31]\
    );
\OpSelect_Bits[31].Operand_Select_Bit_I\: entity work.microblaze_mcs_1_Operand_Select_Bit_521
     port map (
      Clk => Clk,
      D_0 => D_0,
      EX_Op2 => EX_Op2,
      Op1_Logic => Op1_Logic,
      Reg1_Data(0) => Reg1_Data(31),
      ex_Result(0) => ex_Result(31),
      of_PipeRun => of_PipeRun,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => \OpSelect_Bits[31].Operand_Select_Bit_I_n_1\
    );
\OpSelect_Bits[3].Operand_Select_Bit_I\: entity work.\microblaze_mcs_1_Operand_Select_Bit__parameterized10_522\
     port map (
      Clk => Clk,
      D_28 => D_28,
      Reg1_Data(0) => Reg1_Data(3),
      ex_Result(0) => ex_Result(3),
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(24),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[3]\ => \trace_data_address_i_reg[3]\,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg_25
    );
\OpSelect_Bits[4].Operand_Select_Bit_I\: entity work.\microblaze_mcs_1_Operand_Select_Bit__parameterized10_523\
     port map (
      Clk => Clk,
      D_27 => D_27,
      Reg1_Data(0) => Reg1_Data(4),
      ex_Result(0) => ex_Result(4),
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(23),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[4]\ => \trace_data_address_i_reg[4]\,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg_24
    );
\OpSelect_Bits[5].Operand_Select_Bit_I\: entity work.\microblaze_mcs_1_Operand_Select_Bit__parameterized10_524\
     port map (
      Clk => Clk,
      D_26 => D_26,
      Reg1_Data(0) => Reg1_Data(5),
      ex_Result(0) => ex_Result(5),
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(22),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[5]\ => \trace_data_address_i_reg[5]\,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg_23
    );
\OpSelect_Bits[6].Operand_Select_Bit_I\: entity work.\microblaze_mcs_1_Operand_Select_Bit__parameterized10_525\
     port map (
      Clk => Clk,
      D_25 => D_25,
      Reg1_Data(0) => Reg1_Data(6),
      ex_Result(0) => ex_Result(6),
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(21),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[6]\ => \trace_data_address_i_reg[6]\,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg_22
    );
\OpSelect_Bits[7].Operand_Select_Bit_I\: entity work.\microblaze_mcs_1_Operand_Select_Bit__parameterized10_526\
     port map (
      Clk => Clk,
      D_24 => D_24,
      Reg1_Data(0) => Reg1_Data(7),
      ex_Result(0) => ex_Result(7),
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(20),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[7]\ => \trace_data_address_i_reg[7]\,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg_21
    );
\OpSelect_Bits[8].Operand_Select_Bit_I\: entity work.\microblaze_mcs_1_Operand_Select_Bit__parameterized10_527\
     port map (
      Clk => Clk,
      D_23 => D_23,
      Reg1_Data(0) => Reg1_Data(8),
      ex_Result(0) => ex_Result(8),
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(19),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[8]\ => \trace_data_address_i_reg[8]\,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg_20
    );
\OpSelect_Bits[9].Operand_Select_Bit_I\: entity work.\microblaze_mcs_1_Operand_Select_Bit__parameterized10_528\
     port map (
      Clk => Clk,
      D_22 => D_22,
      Reg1_Data(0) => Reg1_Data(9),
      ex_Result(0) => ex_Result(9),
      of_PipeRun => of_PipeRun,
      op2_C(0) => op2_C(18),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[9]\ => \trace_data_address_i_reg[9]\,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg_19
    );
\Size_17to32.imm_Reg_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => imm_Value(0),
      Q => \Using_FPGA.Native_3\(15),
      R => sync_reset
    );
\Size_17to32.imm_Reg_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => imm_Value(10),
      Q => \Using_FPGA.Native_3\(5),
      R => sync_reset
    );
\Size_17to32.imm_Reg_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => imm_Value(11),
      Q => \Using_FPGA.Native_3\(4),
      R => sync_reset
    );
\Size_17to32.imm_Reg_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => imm_Value(12),
      Q => \Using_FPGA.Native_3\(3),
      R => sync_reset
    );
\Size_17to32.imm_Reg_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => imm_Value(13),
      Q => \Using_FPGA.Native_3\(2),
      R => sync_reset
    );
\Size_17to32.imm_Reg_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => imm_Value(14),
      Q => \Using_FPGA.Native_3\(1),
      R => sync_reset
    );
\Size_17to32.imm_Reg_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => imm_Value(15),
      Q => \Using_FPGA.Native_3\(0),
      R => sync_reset
    );
\Size_17to32.imm_Reg_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => imm_Value(1),
      Q => \Using_FPGA.Native_3\(14),
      R => sync_reset
    );
\Size_17to32.imm_Reg_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => imm_Value(2),
      Q => \Using_FPGA.Native_3\(13),
      R => sync_reset
    );
\Size_17to32.imm_Reg_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => imm_Value(3),
      Q => \Using_FPGA.Native_3\(12),
      R => sync_reset
    );
\Size_17to32.imm_Reg_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => imm_Value(4),
      Q => \Using_FPGA.Native_3\(11),
      R => sync_reset
    );
\Size_17to32.imm_Reg_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => imm_Value(5),
      Q => \Using_FPGA.Native_3\(10),
      R => sync_reset
    );
\Size_17to32.imm_Reg_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => imm_Value(6),
      Q => \Using_FPGA.Native_3\(9),
      R => sync_reset
    );
\Size_17to32.imm_Reg_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => imm_Value(7),
      Q => \Using_FPGA.Native_3\(8),
      R => sync_reset
    );
\Size_17to32.imm_Reg_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => imm_Value(8),
      Q => \Using_FPGA.Native_3\(7),
      R => sync_reset
    );
\Size_17to32.imm_Reg_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => imm_Value(9),
      Q => \Using_FPGA.Native_3\(6),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_PC_Module is
  port (
    I3 : out STD_LOGIC;
    I3_0 : out STD_LOGIC;
    I3_1 : out STD_LOGIC;
    I3_2 : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 12 downto 0 );
    PC_OF : out STD_LOGIC;
    \trace_pc_i_reg[17]\ : out STD_LOGIC_VECTOR ( 12 downto 0 );
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    \Using_FPGA.Native_6\ : out STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC_VECTOR ( 12 downto 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    OF_PipeRun : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    Increment : in STD_LOGIC;
    DI : in STD_LOGIC
  );
end microblaze_mcs_1_PC_Module;

architecture STRUCTURE of microblaze_mcs_1_PC_Module is
  signal Carry_10 : STD_LOGIC;
  signal Carry_11 : STD_LOGIC;
  signal Carry_12 : STD_LOGIC;
  signal Carry_13 : STD_LOGIC;
  signal Carry_14 : STD_LOGIC;
  signal Carry_3 : STD_LOGIC;
  signal Carry_4 : STD_LOGIC;
  signal Carry_5 : STD_LOGIC;
  signal Carry_6 : STD_LOGIC;
  signal Carry_7 : STD_LOGIC;
  signal Carry_8 : STD_LOGIC;
  signal Carry_9 : STD_LOGIC;
  signal lopt : STD_LOGIC;
  signal lopt_1 : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal lopt_11 : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal lopt_13 : STD_LOGIC;
  signal lopt_14 : STD_LOGIC;
  signal lopt_15 : STD_LOGIC;
  signal lopt_16 : STD_LOGIC;
  signal lopt_17 : STD_LOGIC;
  signal lopt_18 : STD_LOGIC;
  signal lopt_19 : STD_LOGIC;
  signal lopt_2 : STD_LOGIC;
  signal lopt_20 : STD_LOGIC;
  signal lopt_21 : STD_LOGIC;
  signal lopt_22 : STD_LOGIC;
  signal lopt_23 : STD_LOGIC;
  signal lopt_24 : STD_LOGIC;
  signal lopt_25 : STD_LOGIC;
  signal lopt_26 : STD_LOGIC;
  signal lopt_27 : STD_LOGIC;
  signal lopt_28 : STD_LOGIC;
  signal lopt_29 : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_30 : STD_LOGIC;
  signal lopt_31 : STD_LOGIC;
  signal lopt_32 : STD_LOGIC;
  signal lopt_33 : STD_LOGIC;
  signal lopt_34 : STD_LOGIC;
  signal lopt_35 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
begin
\Not_All_Bits.Using_FPGA.PC_GEN[17].PC_Bit_I\: entity work.microblaze_mcs_1_PC_Bit
     port map (
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      D(0) => D(12),
      IReady => IReady,
      LO => Carry_14,
      OF_PipeRun => OF_PipeRun,
      PC_OF => PC_OF,
      PC_Write => PC_Write,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_7\(12),
      jump => jump,
      sync_reset => sync_reset,
      \trace_pc_i_reg[17]\(0) => \trace_pc_i_reg[17]\(12)
    );
\Not_All_Bits.Using_FPGA.PC_GEN[18].PC_Bit_I\: entity work.microblaze_mcs_1_PC_Bit_417
     port map (
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_14,
      Clk => Clk,
      D(0) => D(11),
      IReady => IReady,
      LO => Carry_13,
      OF_PipeRun => OF_PipeRun,
      PC_Write => PC_Write,
      \Using_FPGA.Native\ => \Using_FPGA.Native_6\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_7\(11),
      jump => jump,
      lopt => lopt_30,
      lopt_1 => lopt_31,
      lopt_2 => lopt_32,
      lopt_3 => lopt_35,
      sync_reset => sync_reset,
      \trace_pc_i_reg[18]\(0) => \trace_pc_i_reg[17]\(11)
    );
\Not_All_Bits.Using_FPGA.PC_GEN[19].PC_Bit_I\: entity work.microblaze_mcs_1_PC_Bit_418
     port map (
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_13,
      Clk => Clk,
      D(0) => D(10),
      IReady => IReady,
      LO => Carry_12,
      OF_PipeRun => OF_PipeRun,
      PC_Write => PC_Write,
      \Using_FPGA.Native\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_7\(10),
      jump => jump,
      lopt => lopt_27,
      lopt_1 => lopt_28,
      lopt_2 => lopt_29,
      lopt_3 => lopt_34,
      sync_reset => sync_reset,
      \trace_pc_i_reg[19]\(0) => \trace_pc_i_reg[17]\(10)
    );
\Not_All_Bits.Using_FPGA.PC_GEN[20].PC_Bit_I\: entity work.microblaze_mcs_1_PC_Bit_419
     port map (
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_12,
      Clk => Clk,
      D(0) => D(9),
      IReady => IReady,
      LO => Carry_11,
      OF_PipeRun => OF_PipeRun,
      PC_Write => PC_Write,
      \Using_FPGA.Native\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_7\(9),
      jump => jump,
      lopt => lopt_24,
      lopt_1 => lopt_25,
      lopt_2 => lopt_26,
      lopt_3 => lopt_33,
      sync_reset => sync_reset,
      \trace_pc_i_reg[20]\(0) => \trace_pc_i_reg[17]\(9)
    );
\Not_All_Bits.Using_FPGA.PC_GEN[21].PC_Bit_I\: entity work.microblaze_mcs_1_PC_Bit_420
     port map (
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_11,
      Clk => Clk,
      D(0) => D(8),
      IReady => IReady,
      LO => Carry_10,
      OF_PipeRun => OF_PipeRun,
      PC_Write => PC_Write,
      \Using_FPGA.Native\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_7\(8),
      jump => jump,
      lopt => lopt_24,
      lopt_1 => lopt_25,
      lopt_10 => lopt_34,
      lopt_11 => lopt_35,
      lopt_2 => lopt_26,
      lopt_3 => lopt_27,
      lopt_4 => lopt_28,
      lopt_5 => lopt_29,
      lopt_6 => lopt_30,
      lopt_7 => lopt_31,
      lopt_8 => lopt_32,
      lopt_9 => lopt_33,
      sync_reset => sync_reset,
      \trace_pc_i_reg[21]\(0) => \trace_pc_i_reg[17]\(8)
    );
\Not_All_Bits.Using_FPGA.PC_GEN[22].PC_Bit_I\: entity work.microblaze_mcs_1_PC_Bit_421
     port map (
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_10,
      Clk => Clk,
      D(0) => D(7),
      IReady => IReady,
      LO => Carry_9,
      OF_PipeRun => OF_PipeRun,
      PC_Write => PC_Write,
      \Using_FPGA.Native\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_7\(7),
      jump => jump,
      lopt => lopt_18,
      lopt_1 => lopt_19,
      lopt_2 => lopt_20,
      lopt_3 => lopt_23,
      sync_reset => sync_reset,
      \trace_pc_i_reg[22]\(0) => \trace_pc_i_reg[17]\(7)
    );
\Not_All_Bits.Using_FPGA.PC_GEN[23].PC_Bit_I\: entity work.microblaze_mcs_1_PC_Bit_422
     port map (
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_9,
      Clk => Clk,
      D(0) => D(6),
      IReady => IReady,
      LO => Carry_8,
      OF_PipeRun => OF_PipeRun,
      PC_Write => PC_Write,
      \Using_FPGA.Native\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_7\(6),
      jump => jump,
      lopt => lopt_15,
      lopt_1 => lopt_16,
      lopt_2 => lopt_17,
      lopt_3 => lopt_22,
      sync_reset => sync_reset,
      \trace_pc_i_reg[23]\(0) => \trace_pc_i_reg[17]\(6)
    );
\Not_All_Bits.Using_FPGA.PC_GEN[24].PC_Bit_I\: entity work.microblaze_mcs_1_PC_Bit_423
     port map (
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_8,
      Clk => Clk,
      D(0) => D(5),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I3 => I3,
      IReady => IReady,
      LO => Carry_7,
      OF_PipeRun => OF_PipeRun,
      PC_Write => PC_Write,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_7\(5),
      jump => jump,
      lopt => lopt_12,
      lopt_1 => lopt_13,
      lopt_2 => lopt_14,
      lopt_3 => lopt_21,
      sync_reset => sync_reset,
      \trace_pc_i_reg[24]\(0) => \trace_pc_i_reg[17]\(5)
    );
\Not_All_Bits.Using_FPGA.PC_GEN[25].PC_Bit_I\: entity work.microblaze_mcs_1_PC_Bit_424
     port map (
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_7,
      Clk => Clk,
      D(0) => D(4),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I3_0 => I3_0,
      IReady => IReady,
      LO => Carry_6,
      OF_PipeRun => OF_PipeRun,
      PC_Write => PC_Write,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_7\(4),
      jump => jump,
      lopt => lopt_12,
      lopt_1 => lopt_13,
      lopt_10 => lopt_22,
      lopt_11 => lopt_23,
      lopt_2 => lopt_14,
      lopt_3 => lopt_15,
      lopt_4 => lopt_16,
      lopt_5 => lopt_17,
      lopt_6 => lopt_18,
      lopt_7 => lopt_19,
      lopt_8 => lopt_20,
      lopt_9 => lopt_21,
      sync_reset => sync_reset,
      \trace_pc_i_reg[25]\(0) => \trace_pc_i_reg[17]\(4)
    );
\Not_All_Bits.Using_FPGA.PC_GEN[26].PC_Bit_I\: entity work.microblaze_mcs_1_PC_Bit_425
     port map (
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_6,
      Clk => Clk,
      D(0) => D(3),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I3_1 => I3_1,
      IReady => IReady,
      LO => Carry_5,
      OF_PipeRun => OF_PipeRun,
      PC_Write => PC_Write,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_7\(3),
      jump => jump,
      lopt => lopt_6,
      lopt_1 => lopt_7,
      lopt_2 => lopt_8,
      lopt_3 => lopt_11,
      sync_reset => sync_reset,
      \trace_pc_i_reg[26]\(0) => \trace_pc_i_reg[17]\(3)
    );
\Not_All_Bits.Using_FPGA.PC_GEN[27].PC_Bit_I\: entity work.microblaze_mcs_1_PC_Bit_426
     port map (
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_5,
      Clk => Clk,
      D(0) => D(2),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I3_2 => I3_2,
      IReady => IReady,
      LO => Carry_4,
      OF_PipeRun => OF_PipeRun,
      PC_Write => PC_Write,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_7\(2),
      jump => jump,
      lopt => lopt_3,
      lopt_1 => lopt_4,
      lopt_2 => lopt_5,
      lopt_3 => lopt_10,
      sync_reset => sync_reset,
      \trace_pc_i_reg[27]\(0) => \trace_pc_i_reg[17]\(2)
    );
\Not_All_Bits.Using_FPGA.PC_GEN[28].PC_Bit_I\: entity work.microblaze_mcs_1_PC_Bit_427
     port map (
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_4,
      Clk => Clk,
      D(0) => D(1),
      IReady => IReady,
      LO => Carry_3,
      OF_PipeRun => OF_PipeRun,
      PC_Write => PC_Write,
      \Using_FPGA.Native\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_7\(1),
      jump => jump,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_9,
      sync_reset => sync_reset,
      \trace_pc_i_reg[28]\(0) => \trace_pc_i_reg[17]\(1)
    );
\Not_All_Bits.Using_FPGA.PC_GEN[29].PC_Bit_I\: entity work.microblaze_mcs_1_PC_Bit_428
     port map (
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_3,
      Clk => Clk,
      D(0) => D(0),
      DI => DI,
      IReady => IReady,
      Increment => Increment,
      OF_PipeRun => OF_PipeRun,
      PC_Write => PC_Write,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_7\(0),
      jump => jump,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9,
      sync_reset => sync_reset,
      \trace_pc_i_reg[29]\(0) => \trace_pc_i_reg[17]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Register_File is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 31 );
    D : out STD_LOGIC_VECTOR ( 7 downto 0 );
    reg2_Data : out STD_LOGIC_VECTOR ( 0 to 31 );
    Data_Write : out STD_LOGIC_VECTOR ( 23 downto 0 );
    Clk : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 31 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
end microblaze_mcs_1_Register_File;

architecture STRUCTURE of microblaze_mcs_1_Register_File is
begin
\Using_FPGA.Gen_RegFile[0].Register_File_Bit_I\: entity work.microblaze_mcs_1_Register_File_Bit
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(23),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(0),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0) => reg2_Data(0),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
\Using_FPGA.Gen_RegFile[10].Register_File_Bit_I\: entity work.microblaze_mcs_1_Register_File_Bit_323
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(13),
      Reg1_Data(0) => Reg1_Data(10),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(10),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0) => reg2_Data(10),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
\Using_FPGA.Gen_RegFile[11].Register_File_Bit_I\: entity work.microblaze_mcs_1_Register_File_Bit_324
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(12),
      Reg1_Data(0) => Reg1_Data(11),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(11),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0) => reg2_Data(11),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
\Using_FPGA.Gen_RegFile[12].Register_File_Bit_I\: entity work.microblaze_mcs_1_Register_File_Bit_325
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(11),
      Reg1_Data(0) => Reg1_Data(12),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(12),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0) => reg2_Data(12),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
\Using_FPGA.Gen_RegFile[13].Register_File_Bit_I\: entity work.microblaze_mcs_1_Register_File_Bit_326
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(10),
      Reg1_Data(0) => Reg1_Data(13),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(13),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0) => reg2_Data(13),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
\Using_FPGA.Gen_RegFile[14].Register_File_Bit_I\: entity work.microblaze_mcs_1_Register_File_Bit_327
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(9),
      Reg1_Data(0) => Reg1_Data(14),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(14),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0) => reg2_Data(14),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
\Using_FPGA.Gen_RegFile[15].Register_File_Bit_I\: entity work.microblaze_mcs_1_Register_File_Bit_328
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(8),
      Reg1_Data(0) => Reg1_Data(15),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(15),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0) => reg2_Data(15),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
\Using_FPGA.Gen_RegFile[16].Register_File_Bit_I\: entity work.microblaze_mcs_1_Register_File_Bit_329
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(7),
      Reg1_Data(0) => Reg1_Data(16),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(16),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0) => reg2_Data(16),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
\Using_FPGA.Gen_RegFile[17].Register_File_Bit_I\: entity work.microblaze_mcs_1_Register_File_Bit_330
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(6),
      Reg1_Data(0) => Reg1_Data(17),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(17),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0) => reg2_Data(17),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
\Using_FPGA.Gen_RegFile[18].Register_File_Bit_I\: entity work.microblaze_mcs_1_Register_File_Bit_331
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(5),
      Reg1_Data(0) => Reg1_Data(18),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(18),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0) => reg2_Data(18),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
\Using_FPGA.Gen_RegFile[19].Register_File_Bit_I\: entity work.microblaze_mcs_1_Register_File_Bit_332
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(4),
      Reg1_Data(0) => Reg1_Data(19),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(19),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0) => reg2_Data(19),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
\Using_FPGA.Gen_RegFile[1].Register_File_Bit_I\: entity work.microblaze_mcs_1_Register_File_Bit_333
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(22),
      Reg1_Data(0) => Reg1_Data(1),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(1),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0) => reg2_Data(1),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
\Using_FPGA.Gen_RegFile[20].Register_File_Bit_I\: entity work.microblaze_mcs_1_Register_File_Bit_334
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(3),
      Reg1_Data(0) => Reg1_Data(20),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(20),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0) => reg2_Data(20),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
\Using_FPGA.Gen_RegFile[21].Register_File_Bit_I\: entity work.microblaze_mcs_1_Register_File_Bit_335
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(2),
      Reg1_Data(0) => Reg1_Data(21),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(21),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0) => reg2_Data(21),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
\Using_FPGA.Gen_RegFile[22].Register_File_Bit_I\: entity work.microblaze_mcs_1_Register_File_Bit_336
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(1),
      Reg1_Data(0) => Reg1_Data(22),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(22),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0) => reg2_Data(22),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
\Using_FPGA.Gen_RegFile[23].Register_File_Bit_I\: entity work.microblaze_mcs_1_Register_File_Bit_337
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      Reg1_Data(0) => Reg1_Data(23),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(23),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0) => reg2_Data(23),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
\Using_FPGA.Gen_RegFile[24].Register_File_Bit_I\: entity work.microblaze_mcs_1_Register_File_Bit_338
     port map (
      Clk => Clk,
      D(0) => D(7),
      Reg1_Data(0) => Reg1_Data(24),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(24),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0) => reg2_Data(24),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
\Using_FPGA.Gen_RegFile[25].Register_File_Bit_I\: entity work.microblaze_mcs_1_Register_File_Bit_339
     port map (
      Clk => Clk,
      D(0) => D(6),
      Reg1_Data(0) => Reg1_Data(25),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(25),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0) => reg2_Data(25),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
\Using_FPGA.Gen_RegFile[26].Register_File_Bit_I\: entity work.microblaze_mcs_1_Register_File_Bit_340
     port map (
      Clk => Clk,
      D(0) => D(5),
      Reg1_Data(0) => Reg1_Data(26),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(26),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0) => reg2_Data(26),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
\Using_FPGA.Gen_RegFile[27].Register_File_Bit_I\: entity work.microblaze_mcs_1_Register_File_Bit_341
     port map (
      Clk => Clk,
      D(0) => D(4),
      Reg1_Data(0) => Reg1_Data(27),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(27),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0) => reg2_Data(27),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
\Using_FPGA.Gen_RegFile[28].Register_File_Bit_I\: entity work.microblaze_mcs_1_Register_File_Bit_342
     port map (
      Clk => Clk,
      D(0) => D(3),
      Reg1_Data(0) => Reg1_Data(28),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(28),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0) => reg2_Data(28),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
\Using_FPGA.Gen_RegFile[29].Register_File_Bit_I\: entity work.microblaze_mcs_1_Register_File_Bit_343
     port map (
      Clk => Clk,
      D(0) => D(2),
      Reg1_Data(0) => Reg1_Data(29),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(29),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0) => reg2_Data(29),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
\Using_FPGA.Gen_RegFile[2].Register_File_Bit_I\: entity work.microblaze_mcs_1_Register_File_Bit_344
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(21),
      Reg1_Data(0) => Reg1_Data(2),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(2),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0) => reg2_Data(2),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
\Using_FPGA.Gen_RegFile[30].Register_File_Bit_I\: entity work.microblaze_mcs_1_Register_File_Bit_345
     port map (
      Clk => Clk,
      D(0) => D(1),
      Reg1_Data(0) => Reg1_Data(30),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(30),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0) => reg2_Data(30),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
\Using_FPGA.Gen_RegFile[31].Register_File_Bit_I\: entity work.microblaze_mcs_1_Register_File_Bit_346
     port map (
      Clk => Clk,
      D(0) => D(0),
      Reg1_Data(0) => Reg1_Data(31),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(31),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0) => reg2_Data(31),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
\Using_FPGA.Gen_RegFile[3].Register_File_Bit_I\: entity work.microblaze_mcs_1_Register_File_Bit_347
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(20),
      Reg1_Data(0) => Reg1_Data(3),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(3),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0) => reg2_Data(3),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
\Using_FPGA.Gen_RegFile[4].Register_File_Bit_I\: entity work.microblaze_mcs_1_Register_File_Bit_348
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(19),
      Reg1_Data(0) => Reg1_Data(4),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0) => reg2_Data(4),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
\Using_FPGA.Gen_RegFile[5].Register_File_Bit_I\: entity work.microblaze_mcs_1_Register_File_Bit_349
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(18),
      Reg1_Data(0) => Reg1_Data(5),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(5),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0) => reg2_Data(5),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
\Using_FPGA.Gen_RegFile[6].Register_File_Bit_I\: entity work.microblaze_mcs_1_Register_File_Bit_350
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(17),
      Reg1_Data(0) => Reg1_Data(6),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(6),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0) => reg2_Data(6),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
\Using_FPGA.Gen_RegFile[7].Register_File_Bit_I\: entity work.microblaze_mcs_1_Register_File_Bit_351
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(16),
      Reg1_Data(0) => Reg1_Data(7),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(7),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0) => reg2_Data(7),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
\Using_FPGA.Gen_RegFile[8].Register_File_Bit_I\: entity work.microblaze_mcs_1_Register_File_Bit_352
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(15),
      Reg1_Data(0) => Reg1_Data(8),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(8),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0) => reg2_Data(8),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
\Using_FPGA.Gen_RegFile[9].Register_File_Bit_I\: entity work.microblaze_mcs_1_Register_File_Bit_353
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(14),
      Reg1_Data(0) => Reg1_Data(9),
      Reg_Write => Reg_Write,
      ex_Result(0) => ex_Result(9),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0) => reg2_Data(9),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Result_Mux is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 31 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    \Using_FPGA.Native_6\ : out STD_LOGIC;
    \Using_FPGA.Native_7\ : out STD_LOGIC;
    \Using_FPGA.Native_8\ : out STD_LOGIC;
    \Using_FPGA.Native_9\ : out STD_LOGIC;
    \Using_FPGA.Native_10\ : out STD_LOGIC;
    \Using_FPGA.Native_11\ : out STD_LOGIC;
    \Using_FPGA.Native_12\ : out STD_LOGIC;
    \Using_FPGA.Native_13\ : out STD_LOGIC;
    \Using_FPGA.Native_14\ : out STD_LOGIC;
    \Using_FPGA.Native_15\ : out STD_LOGIC;
    \Using_FPGA.Native_16\ : out STD_LOGIC;
    \Using_FPGA.Native_17\ : out STD_LOGIC;
    \Using_FPGA.Native_18\ : out STD_LOGIC;
    \Using_FPGA.Native_19\ : out STD_LOGIC;
    \Using_FPGA.Native_20\ : out STD_LOGIC;
    \Using_FPGA.Native_21\ : out STD_LOGIC;
    \Using_FPGA.Native_22\ : out STD_LOGIC;
    \Using_FPGA.Native_23\ : out STD_LOGIC;
    \Using_FPGA.Native_24\ : out STD_LOGIC;
    \Using_FPGA.Native_25\ : out STD_LOGIC;
    \Using_FPGA.Native_26\ : out STD_LOGIC;
    \Using_FPGA.Native_27\ : out STD_LOGIC;
    \Using_FPGA.Native_28\ : out STD_LOGIC;
    \Using_FPGA.Native_29\ : out STD_LOGIC;
    \Using_FPGA.Native_30\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 31 downto 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 31 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    reg2_Data : in STD_LOGIC_VECTOR ( 0 to 31 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ALU_Result : in STD_LOGIC;
    Shift_Logic_Res : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 15 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_31\ : in STD_LOGIC;
    Select_Logic_reg : in STD_LOGIC;
    \Using_FPGA.Native_32\ : in STD_LOGIC_VECTOR ( 29 downto 0 );
    Select_Logic_reg_0 : in STD_LOGIC;
    Select_Logic_reg_1 : in STD_LOGIC;
    Select_Logic_reg_2 : in STD_LOGIC;
    Select_Logic_reg_3 : in STD_LOGIC;
    Select_Logic_reg_4 : in STD_LOGIC;
    Select_Logic_reg_5 : in STD_LOGIC;
    Select_Logic_reg_6 : in STD_LOGIC;
    Select_Logic_reg_7 : in STD_LOGIC;
    Select_Logic_reg_8 : in STD_LOGIC;
    Select_Logic_reg_9 : in STD_LOGIC;
    Select_Logic_reg_10 : in STD_LOGIC;
    Select_Logic_reg_11 : in STD_LOGIC;
    Select_Logic_reg_12 : in STD_LOGIC;
    Select_Logic_reg_13 : in STD_LOGIC;
    Select_Logic_reg_14 : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 15 downto 0 );
    Select_Logic_reg_15 : in STD_LOGIC;
    Select_Logic_reg_16 : in STD_LOGIC;
    Select_Logic_reg_17 : in STD_LOGIC;
    Select_Logic_reg_18 : in STD_LOGIC;
    Select_Logic_reg_19 : in STD_LOGIC;
    Select_Logic_reg_20 : in STD_LOGIC;
    Select_Logic_reg_21 : in STD_LOGIC;
    Select_Logic_reg_22 : in STD_LOGIC;
    Select_Logic_reg_23 : in STD_LOGIC;
    Select_Logic_reg_24 : in STD_LOGIC;
    Select_Logic_reg_25 : in STD_LOGIC;
    Select_Logic_reg_26 : in STD_LOGIC;
    Select_Logic_reg_27 : in STD_LOGIC;
    Select_Logic_reg_28 : in STD_LOGIC;
    Select_Logic_reg_29 : in STD_LOGIC;
    \Using_FPGA.Native_33\ : in STD_LOGIC;
    sext8 : in STD_LOGIC;
    doublet_Read : in STD_LOGIC;
    \Using_FPGA.Native_34\ : in STD_LOGIC;
    Sext16 : in STD_LOGIC;
    quadlet_Read : in STD_LOGIC
  );
end microblaze_mcs_1_Result_Mux;

architecture STRUCTURE of microblaze_mcs_1_Result_Mux is
  signal data_Read_Mask : STD_LOGIC_VECTOR ( 0 to 16 );
begin
\Result_Mux_Bits[0].Result_Mux_Bit_I\: entity work.microblaze_mcs_1_Result_Mux_Bit
     port map (
      Clk => Clk,
      D(0) => D(31),
      Data_Read(0) => Data_Read(15),
      Data_Read_Mask => data_Read_Mask(0),
      Interrupt_Address(0) => Interrupt_Address(0),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg_29,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_32\(29),
      ex_Result(0) => ex_Result(0),
      exception_kind(0) => exception_kind(0),
      reg2_Data(0) => reg2_Data(0),
      res_Forward2 => res_Forward2
    );
\Result_Mux_Bits[10].Result_Mux_Bit_I\: entity work.microblaze_mcs_1_Result_Mux_Bit_199
     port map (
      Clk => Clk,
      D(0) => D(21),
      Data_Read(0) => Data_Read(5),
      Data_Read_Mask => data_Read_Mask(0),
      Interrupt_Address(0) => Interrupt_Address(10),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg_19,
      \Using_FPGA.Native\ => \Using_FPGA.Native_9\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_32\(19),
      ex_Result(0) => ex_Result(10),
      exception_kind(0) => exception_kind(0),
      reg2_Data(0) => reg2_Data(10),
      res_Forward2 => res_Forward2
    );
\Result_Mux_Bits[11].Result_Mux_Bit_I\: entity work.microblaze_mcs_1_Result_Mux_Bit_200
     port map (
      Clk => Clk,
      D(0) => D(20),
      Data_Read(0) => Data_Read(4),
      Data_Read_Mask => data_Read_Mask(0),
      Interrupt_Address(0) => Interrupt_Address(11),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg_18,
      \Using_FPGA.Native\ => \Using_FPGA.Native_10\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_32\(18),
      ex_Result(0) => ex_Result(11),
      exception_kind(0) => exception_kind(0),
      reg2_Data(0) => reg2_Data(11),
      res_Forward2 => res_Forward2
    );
\Result_Mux_Bits[12].Result_Mux_Bit_I\: entity work.microblaze_mcs_1_Result_Mux_Bit_201
     port map (
      Clk => Clk,
      D(0) => D(19),
      Data_Read(0) => Data_Read(3),
      Data_Read_Mask => data_Read_Mask(0),
      Interrupt_Address(0) => Interrupt_Address(12),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg_17,
      \Using_FPGA.Native\ => \Using_FPGA.Native_11\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_32\(17),
      ex_Result(0) => ex_Result(12),
      exception_kind(0) => exception_kind(0),
      reg2_Data(0) => reg2_Data(12),
      res_Forward2 => res_Forward2
    );
\Result_Mux_Bits[13].Result_Mux_Bit_I\: entity work.microblaze_mcs_1_Result_Mux_Bit_202
     port map (
      Clk => Clk,
      D(0) => D(18),
      Data_Read(0) => Data_Read(2),
      Data_Read_Mask => data_Read_Mask(0),
      Interrupt_Address(0) => Interrupt_Address(13),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg_16,
      \Using_FPGA.Native\ => \Using_FPGA.Native_12\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_32\(16),
      ex_Result(0) => ex_Result(13),
      exception_kind(0) => exception_kind(0),
      reg2_Data(0) => reg2_Data(13),
      res_Forward2 => res_Forward2
    );
\Result_Mux_Bits[14].Result_Mux_Bit_I\: entity work.microblaze_mcs_1_Result_Mux_Bit_203
     port map (
      Clk => Clk,
      D(0) => D(17),
      Data_Read(0) => Data_Read(1),
      Data_Read_Mask => data_Read_Mask(0),
      Interrupt_Address(0) => Interrupt_Address(14),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg_15,
      \Using_FPGA.Native\ => \Using_FPGA.Native_13\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_32\(15),
      ex_Result(0) => ex_Result(14),
      exception_kind(0) => exception_kind(0),
      reg2_Data(0) => reg2_Data(14),
      res_Forward2 => res_Forward2
    );
\Result_Mux_Bits[15].Result_Mux_Bit_I\: entity work.microblaze_mcs_1_Result_Mux_Bit_204
     port map (
      Clk => Clk,
      D(0) => D(16),
      Data_Read(0) => Data_Read(0),
      Data_Read_Mask => data_Read_Mask(0),
      Interrupt_Address(0) => Interrupt_Address(15),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg_14,
      \Using_FPGA.Native\ => \Using_FPGA.Native_14\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_32\(14),
      ex_Result(0) => ex_Result(15),
      exception_kind(0) => exception_kind(0),
      reg2_Data(0) => reg2_Data(15),
      res_Forward2 => res_Forward2
    );
\Result_Mux_Bits[16].Result_Mux_Bit_I\: entity work.microblaze_mcs_1_Result_Mux_Bit_205
     port map (
      Clk => Clk,
      D(0) => D(15),
      Data_Read_Mask => data_Read_Mask(16),
      Interrupt_Address(0) => Interrupt_Address(16),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg_13,
      \Using_FPGA.Native\ => \Using_FPGA.Native_15\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_32\(13),
      ex_Result(0) => ex_Result(16),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(0) => extend_Data_Read(15),
      reg2_Data(0) => reg2_Data(16),
      res_Forward2 => res_Forward2
    );
\Result_Mux_Bits[17].Result_Mux_Bit_I\: entity work.microblaze_mcs_1_Result_Mux_Bit_206
     port map (
      Clk => Clk,
      D(0) => D(14),
      Data_Read_Mask => data_Read_Mask(16),
      Interrupt_Address(0) => Interrupt_Address(17),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg_12,
      \Using_FPGA.Native\ => \Using_FPGA.Native_16\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_32\(12),
      ex_Result(0) => ex_Result(17),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(0) => extend_Data_Read(14),
      reg2_Data(0) => reg2_Data(17),
      res_Forward2 => res_Forward2
    );
\Result_Mux_Bits[18].Result_Mux_Bit_I\: entity work.microblaze_mcs_1_Result_Mux_Bit_207
     port map (
      Clk => Clk,
      D(0) => D(13),
      Data_Read_Mask => data_Read_Mask(16),
      Interrupt_Address(0) => Interrupt_Address(18),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg_11,
      \Using_FPGA.Native\ => \Using_FPGA.Native_17\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_32\(11),
      ex_Result(0) => ex_Result(18),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(0) => extend_Data_Read(13),
      reg2_Data(0) => reg2_Data(18),
      res_Forward2 => res_Forward2
    );
\Result_Mux_Bits[19].Result_Mux_Bit_I\: entity work.microblaze_mcs_1_Result_Mux_Bit_208
     port map (
      Clk => Clk,
      D(0) => D(12),
      Data_Read_Mask => data_Read_Mask(16),
      Interrupt_Address(0) => Interrupt_Address(19),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg_10,
      \Using_FPGA.Native\ => \Using_FPGA.Native_18\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_32\(10),
      ex_Result(0) => ex_Result(19),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(0) => extend_Data_Read(12),
      reg2_Data(0) => reg2_Data(19),
      res_Forward2 => res_Forward2
    );
\Result_Mux_Bits[1].Result_Mux_Bit_I\: entity work.microblaze_mcs_1_Result_Mux_Bit_209
     port map (
      Clk => Clk,
      D(0) => D(30),
      Data_Read(0) => Data_Read(14),
      Data_Read_Mask => data_Read_Mask(0),
      Interrupt_Address(0) => Interrupt_Address(1),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg_28,
      \Using_FPGA.Native\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_32\(28),
      ex_Result(0) => ex_Result(1),
      exception_kind(0) => exception_kind(0),
      reg2_Data(0) => reg2_Data(1),
      res_Forward2 => res_Forward2
    );
\Result_Mux_Bits[20].Result_Mux_Bit_I\: entity work.microblaze_mcs_1_Result_Mux_Bit_210
     port map (
      Clk => Clk,
      D(0) => D(11),
      Data_Read_Mask => data_Read_Mask(16),
      Interrupt_Address(0) => Interrupt_Address(20),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg_9,
      \Using_FPGA.Native\ => \Using_FPGA.Native_19\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_32\(9),
      ex_Result(0) => ex_Result(20),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(0) => extend_Data_Read(11),
      reg2_Data(0) => reg2_Data(20),
      res_Forward2 => res_Forward2
    );
\Result_Mux_Bits[21].Result_Mux_Bit_I\: entity work.microblaze_mcs_1_Result_Mux_Bit_211
     port map (
      Clk => Clk,
      D(0) => D(10),
      Data_Read_Mask => data_Read_Mask(16),
      Interrupt_Address(0) => Interrupt_Address(21),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg_8,
      \Using_FPGA.Native\ => \Using_FPGA.Native_20\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_32\(8),
      ex_Result(0) => ex_Result(21),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(0) => extend_Data_Read(10),
      reg2_Data(0) => reg2_Data(21),
      res_Forward2 => res_Forward2
    );
\Result_Mux_Bits[22].Result_Mux_Bit_I\: entity work.microblaze_mcs_1_Result_Mux_Bit_212
     port map (
      Clk => Clk,
      D(0) => D(9),
      Data_Read_Mask => data_Read_Mask(16),
      Interrupt_Address(0) => Interrupt_Address(22),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg_7,
      \Using_FPGA.Native\ => \Using_FPGA.Native_21\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_32\(7),
      ex_Result(0) => ex_Result(22),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(0) => extend_Data_Read(9),
      reg2_Data(0) => reg2_Data(22),
      res_Forward2 => res_Forward2
    );
\Result_Mux_Bits[23].Result_Mux_Bit_I\: entity work.microblaze_mcs_1_Result_Mux_Bit_213
     port map (
      Clk => Clk,
      D(0) => D(8),
      Data_Read_Mask => data_Read_Mask(16),
      Interrupt_Address(0) => Interrupt_Address(23),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg_6,
      \Using_FPGA.Native\ => \Using_FPGA.Native_22\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_32\(6),
      ex_Result(0) => ex_Result(23),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(0) => extend_Data_Read(8),
      reg2_Data(0) => reg2_Data(23),
      res_Forward2 => res_Forward2
    );
\Result_Mux_Bits[24].Result_Mux_Bit_I\: entity work.microblaze_mcs_1_Result_Mux_Bit_214
     port map (
      Clk => Clk,
      D(0) => D(7),
      Interrupt_Address(0) => Interrupt_Address(24),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg_5,
      \Using_FPGA.Native\ => \Using_FPGA.Native_23\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_32\(5),
      ex_Result(0) => ex_Result(24),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(0) => extend_Data_Read(7),
      reg2_Data(0) => reg2_Data(24),
      res_Forward2 => res_Forward2
    );
\Result_Mux_Bits[25].Result_Mux_Bit_I\: entity work.microblaze_mcs_1_Result_Mux_Bit_215
     port map (
      Clk => Clk,
      D(0) => D(6),
      Interrupt_Address(0) => Interrupt_Address(25),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg_4,
      \Using_FPGA.Native\ => \Using_FPGA.Native_24\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_32\(4),
      ex_Result(0) => ex_Result(25),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(0) => extend_Data_Read(6),
      reg2_Data(0) => reg2_Data(25),
      res_Forward2 => res_Forward2
    );
\Result_Mux_Bits[26].Result_Mux_Bit_I\: entity work.microblaze_mcs_1_Result_Mux_Bit_216
     port map (
      Clk => Clk,
      D(0) => D(5),
      Interrupt_Address(0) => Interrupt_Address(26),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg_3,
      \Using_FPGA.Native\ => \Using_FPGA.Native_25\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_32\(3),
      ex_Result(0) => ex_Result(26),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(0) => extend_Data_Read(5),
      reg2_Data(0) => reg2_Data(26),
      res_Forward2 => res_Forward2
    );
\Result_Mux_Bits[27].Result_Mux_Bit_I\: entity work.microblaze_mcs_1_Result_Mux_Bit_217
     port map (
      Clk => Clk,
      D(0) => D(4),
      Interrupt_Address(0) => Interrupt_Address(27),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg_2,
      \Using_FPGA.Native\ => \Using_FPGA.Native_26\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_32\(2),
      ex_Result(0) => ex_Result(27),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(0) => extend_Data_Read(4),
      reg2_Data(0) => reg2_Data(27),
      res_Forward2 => res_Forward2
    );
\Result_Mux_Bits[28].Result_Mux_Bit_I\: entity work.microblaze_mcs_1_Result_Mux_Bit_218
     port map (
      Clk => Clk,
      D(0) => D(3),
      Interrupt_Address(0) => Interrupt_Address(28),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg_1,
      \Using_FPGA.Native\ => \Using_FPGA.Native_27\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_32\(1),
      ex_Result(0) => ex_Result(28),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(0) => extend_Data_Read(3),
      reg2_Data(0) => reg2_Data(28),
      res_Forward2 => res_Forward2
    );
\Result_Mux_Bits[29].Result_Mux_Bit_I\: entity work.microblaze_mcs_1_Result_Mux_Bit_219
     port map (
      Clk => Clk,
      D(0) => D(2),
      Interrupt_Address(0) => Interrupt_Address(29),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg_0,
      \Using_FPGA.Native\ => \Using_FPGA.Native_28\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_32\(0),
      ex_Result(0) => ex_Result(29),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(0) => extend_Data_Read(2),
      reg2_Data(0) => reg2_Data(29),
      res_Forward2 => res_Forward2
    );
\Result_Mux_Bits[2].Result_Mux_Bit_I\: entity work.microblaze_mcs_1_Result_Mux_Bit_220
     port map (
      Clk => Clk,
      D(0) => D(29),
      Data_Read(0) => Data_Read(13),
      Data_Read_Mask => data_Read_Mask(0),
      Interrupt_Address(0) => Interrupt_Address(2),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg_27,
      \Using_FPGA.Native\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_32\(27),
      ex_Result(0) => ex_Result(2),
      exception_kind(0) => exception_kind(0),
      reg2_Data(0) => reg2_Data(2),
      res_Forward2 => res_Forward2
    );
\Result_Mux_Bits[30].Result_Mux_Bit_I\: entity work.microblaze_mcs_1_Result_Mux_Bit_221
     port map (
      Clk => Clk,
      D(0) => D(1),
      Interrupt_Address(0) => Interrupt_Address(30),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg,
      \Using_FPGA.Native\ => \Using_FPGA.Native_29\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_31\,
      ex_Result(0) => ex_Result(30),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(0) => extend_Data_Read(1),
      reg2_Data(0) => reg2_Data(30),
      res_Forward2 => res_Forward2
    );
\Result_Mux_Bits[31].Result_Mux_Bit_I\: entity work.microblaze_mcs_1_Result_Mux_Bit_222
     port map (
      ALU_Result => ALU_Result,
      Clk => Clk,
      D(0) => D(0),
      Interrupt_Address(0) => Interrupt_Address(31),
      Q(1 downto 0) => Q(1 downto 0),
      Shift_Logic_Res => Shift_Logic_Res,
      \Using_FPGA.Native\ => \Using_FPGA.Native_30\,
      ex_Result(0) => ex_Result(31),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      reg2_Data(0) => reg2_Data(31),
      res_Forward2 => res_Forward2
    );
\Result_Mux_Bits[3].Result_Mux_Bit_I\: entity work.microblaze_mcs_1_Result_Mux_Bit_223
     port map (
      Clk => Clk,
      D(0) => D(28),
      Data_Read(0) => Data_Read(12),
      Data_Read_Mask => data_Read_Mask(0),
      Interrupt_Address(0) => Interrupt_Address(3),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg_26,
      \Using_FPGA.Native\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_32\(26),
      ex_Result(0) => ex_Result(3),
      exception_kind(0) => exception_kind(0),
      reg2_Data(0) => reg2_Data(3),
      res_Forward2 => res_Forward2
    );
\Result_Mux_Bits[4].Result_Mux_Bit_I\: entity work.microblaze_mcs_1_Result_Mux_Bit_224
     port map (
      Clk => Clk,
      D(0) => D(27),
      Data_Read(0) => Data_Read(11),
      Data_Read_Mask => data_Read_Mask(0),
      Interrupt_Address(0) => Interrupt_Address(4),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg_25,
      \Using_FPGA.Native\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_32\(25),
      ex_Result(0) => ex_Result(4),
      exception_kind(0) => exception_kind(0),
      reg2_Data(0) => reg2_Data(4),
      res_Forward2 => res_Forward2
    );
\Result_Mux_Bits[5].Result_Mux_Bit_I\: entity work.microblaze_mcs_1_Result_Mux_Bit_225
     port map (
      Clk => Clk,
      D(0) => D(26),
      Data_Read(0) => Data_Read(10),
      Data_Read_Mask => data_Read_Mask(0),
      Interrupt_Address(0) => Interrupt_Address(5),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg_24,
      \Using_FPGA.Native\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_32\(24),
      ex_Result(0) => ex_Result(5),
      exception_kind(0) => exception_kind(0),
      reg2_Data(0) => reg2_Data(5),
      res_Forward2 => res_Forward2
    );
\Result_Mux_Bits[6].Result_Mux_Bit_I\: entity work.microblaze_mcs_1_Result_Mux_Bit_226
     port map (
      Clk => Clk,
      D(0) => D(25),
      Data_Read(0) => Data_Read(9),
      Data_Read_Mask => data_Read_Mask(0),
      Interrupt_Address(0) => Interrupt_Address(6),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg_23,
      \Using_FPGA.Native\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_32\(23),
      ex_Result(0) => ex_Result(6),
      exception_kind(0) => exception_kind(0),
      reg2_Data(0) => reg2_Data(6),
      res_Forward2 => res_Forward2
    );
\Result_Mux_Bits[7].Result_Mux_Bit_I\: entity work.microblaze_mcs_1_Result_Mux_Bit_227
     port map (
      Clk => Clk,
      D(0) => D(24),
      Data_Read(0) => Data_Read(8),
      Data_Read_Mask => data_Read_Mask(0),
      Interrupt_Address(0) => Interrupt_Address(7),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg_22,
      \Using_FPGA.Native\ => \Using_FPGA.Native_6\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_32\(22),
      ex_Result(0) => ex_Result(7),
      exception_kind(0) => exception_kind(0),
      reg2_Data(0) => reg2_Data(7),
      res_Forward2 => res_Forward2
    );
\Result_Mux_Bits[8].Result_Mux_Bit_I\: entity work.microblaze_mcs_1_Result_Mux_Bit_228
     port map (
      Clk => Clk,
      D(0) => D(23),
      Data_Read(0) => Data_Read(7),
      Data_Read_Mask => data_Read_Mask(0),
      Interrupt_Address(0) => Interrupt_Address(8),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg_21,
      \Using_FPGA.Native\ => \Using_FPGA.Native_7\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_32\(21),
      ex_Result(0) => ex_Result(8),
      exception_kind(0) => exception_kind(0),
      reg2_Data(0) => reg2_Data(8),
      res_Forward2 => res_Forward2
    );
\Result_Mux_Bits[9].Result_Mux_Bit_I\: entity work.microblaze_mcs_1_Result_Mux_Bit_229
     port map (
      Clk => Clk,
      D(0) => D(22),
      Data_Read(0) => Data_Read(6),
      Data_Read_Mask => data_Read_Mask(0),
      Interrupt_Address(0) => Interrupt_Address(9),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Select_Logic_reg_20,
      \Using_FPGA.Native\ => \Using_FPGA.Native_8\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_32\(20),
      ex_Result(0) => ex_Result(9),
      exception_kind(0) => exception_kind(0),
      reg2_Data(0) => reg2_Data(9),
      res_Forward2 => res_Forward2
    );
\Using_FPGA.Native_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_33\,
      I1 => sext8,
      I2 => doublet_Read,
      O => data_Read_Mask(16)
    );
\Using_FPGA.Native_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \Using_FPGA.Native_33\,
      I1 => sext8,
      I2 => \Using_FPGA.Native_34\,
      I3 => Sext16,
      I4 => quadlet_Read,
      O => data_Read_Mask(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Shift_Logic_Module is
  port (
    Shift_Logic_Res : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    \Using_FPGA.Native_6\ : out STD_LOGIC;
    \Using_FPGA.Native_7\ : out STD_LOGIC;
    \Using_FPGA.Native_8\ : out STD_LOGIC;
    \Using_FPGA.Native_9\ : out STD_LOGIC;
    \Using_FPGA.Native_10\ : out STD_LOGIC;
    \Using_FPGA.Native_11\ : out STD_LOGIC;
    \Using_FPGA.Native_12\ : out STD_LOGIC;
    \Using_FPGA.Native_13\ : out STD_LOGIC;
    \Using_FPGA.Native_14\ : out STD_LOGIC;
    \Using_FPGA.Native_15\ : out STD_LOGIC;
    \Using_FPGA.Native_16\ : out STD_LOGIC;
    \Using_FPGA.Native_17\ : out STD_LOGIC;
    \Using_FPGA.Native_18\ : out STD_LOGIC;
    \Using_FPGA.Native_19\ : out STD_LOGIC;
    \Using_FPGA.Native_20\ : out STD_LOGIC;
    \Using_FPGA.Native_21\ : out STD_LOGIC;
    \Using_FPGA.Native_22\ : out STD_LOGIC;
    \Using_FPGA.Native_23\ : out STD_LOGIC;
    \Using_FPGA.Native_24\ : out STD_LOGIC;
    \Using_FPGA.Native_25\ : out STD_LOGIC;
    \Using_FPGA.Native_26\ : out STD_LOGIC;
    \Using_FPGA.Native_27\ : out STD_LOGIC;
    \Using_FPGA.Native_28\ : out STD_LOGIC;
    \Using_FPGA.Native_29\ : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC;
    Op1_Logic : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_30\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    \Using_FPGA.Native_31\ : in STD_LOGIC;
    Shifted : in STD_LOGIC;
    Op2 : in STD_LOGIC;
    Op1_Shift : in STD_LOGIC;
    \Using_FPGA.Native_32\ : in STD_LOGIC;
    \Using_FPGA.Native_33\ : in STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 27 downto 0 );
    \Using_FPGA.Native_34\ : in STD_LOGIC;
    \Using_FPGA.Native_35\ : in STD_LOGIC;
    \Using_FPGA.Native_36\ : in STD_LOGIC;
    \Using_FPGA.Native_37\ : in STD_LOGIC;
    \Using_FPGA.Native_38\ : in STD_LOGIC;
    \Using_FPGA.Native_39\ : in STD_LOGIC;
    \Using_FPGA.Native_40\ : in STD_LOGIC;
    \Using_FPGA.Native_41\ : in STD_LOGIC;
    \Using_FPGA.Native_42\ : in STD_LOGIC;
    \Using_FPGA.Native_43\ : in STD_LOGIC;
    \Using_FPGA.Native_44\ : in STD_LOGIC;
    \Using_FPGA.Native_45\ : in STD_LOGIC;
    \Using_FPGA.Native_46\ : in STD_LOGIC;
    \Using_FPGA.Native_47\ : in STD_LOGIC;
    \Using_FPGA.Native_48\ : in STD_LOGIC;
    \Using_FPGA.Native_49\ : in STD_LOGIC;
    \Using_FPGA.Native_50\ : in STD_LOGIC;
    \Using_FPGA.Native_51\ : in STD_LOGIC;
    \Using_FPGA.Native_52\ : in STD_LOGIC;
    \Using_FPGA.Native_53\ : in STD_LOGIC;
    \Using_FPGA.Native_54\ : in STD_LOGIC;
    \Using_FPGA.Native_55\ : in STD_LOGIC;
    \Using_FPGA.Native_56\ : in STD_LOGIC;
    \Using_FPGA.Native_57\ : in STD_LOGIC;
    \Using_FPGA.Native_58\ : in STD_LOGIC;
    \Using_FPGA.Native_59\ : in STD_LOGIC;
    \Using_FPGA.Native_60\ : in STD_LOGIC;
    \Using_FPGA.Native_61\ : in STD_LOGIC;
    Sext16 : in STD_LOGIC;
    sext8 : in STD_LOGIC
  );
end microblaze_mcs_1_Shift_Logic_Module;

architecture STRUCTURE of microblaze_mcs_1_Shift_Logic_Module is
  signal \Using_FPGA.Native_i_1__0_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_1_n_0\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1\ : label is "soft_lutpair14";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__0\ : label is "soft_lutpair14";
begin
\Shift_Logic_Bits[0].Shift_Logic_Bit_I\: entity work.microblaze_mcs_1_Shift_Logic_Bit
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Select_Logic => Select_Logic,
      Sext => \Using_FPGA.Native_i_1_n_0\,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_29\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_60\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_61\,
      op2_C(0) => op2_C(27)
    );
\Shift_Logic_Bits[10].Shift_Logic_Bit_I\: entity work.microblaze_mcs_1_Shift_Logic_Bit_75
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Select_Logic => Select_Logic,
      Sext => \Using_FPGA.Native_i_1_n_0\,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_19\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_50\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_51\,
      op2_C(0) => op2_C(17)
    );
\Shift_Logic_Bits[11].Shift_Logic_Bit_I\: entity work.microblaze_mcs_1_Shift_Logic_Bit_76
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Select_Logic => Select_Logic,
      Sext => \Using_FPGA.Native_i_1_n_0\,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_18\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_49\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_50\,
      op2_C(0) => op2_C(16)
    );
\Shift_Logic_Bits[12].Shift_Logic_Bit_I\: entity work.microblaze_mcs_1_Shift_Logic_Bit_77
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Select_Logic => Select_Logic,
      Sext => \Using_FPGA.Native_i_1_n_0\,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_17\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_48\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_49\,
      op2_C(0) => op2_C(15)
    );
\Shift_Logic_Bits[13].Shift_Logic_Bit_I\: entity work.microblaze_mcs_1_Shift_Logic_Bit_78
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Select_Logic => Select_Logic,
      Sext => \Using_FPGA.Native_i_1_n_0\,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_16\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_47\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_48\,
      op2_C(0) => op2_C(14)
    );
\Shift_Logic_Bits[14].Shift_Logic_Bit_I\: entity work.microblaze_mcs_1_Shift_Logic_Bit_79
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Select_Logic => Select_Logic,
      Sext => \Using_FPGA.Native_i_1_n_0\,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_15\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_46\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_47\,
      op2_C(0) => op2_C(13)
    );
\Shift_Logic_Bits[15].Shift_Logic_Bit_I\: entity work.microblaze_mcs_1_Shift_Logic_Bit_80
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Select_Logic => Select_Logic,
      Sext => \Using_FPGA.Native_i_1_n_0\,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_14\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_45\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_46\,
      op2_C(0) => op2_C(12)
    );
\Shift_Logic_Bits[16].Shift_Logic_Bit_I\: entity work.microblaze_mcs_1_Shift_Logic_Bit_81
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Select_Logic => Select_Logic,
      Sext => \Using_FPGA.Native_i_1__0_n_0\,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_13\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_44\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_45\,
      op2_C(0) => op2_C(11)
    );
\Shift_Logic_Bits[17].Shift_Logic_Bit_I\: entity work.microblaze_mcs_1_Shift_Logic_Bit_82
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Select_Logic => Select_Logic,
      Sext => \Using_FPGA.Native_i_1__0_n_0\,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_12\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_43\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_44\,
      op2_C(0) => op2_C(10)
    );
\Shift_Logic_Bits[18].Shift_Logic_Bit_I\: entity work.microblaze_mcs_1_Shift_Logic_Bit_83
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Select_Logic => Select_Logic,
      Sext => \Using_FPGA.Native_i_1__0_n_0\,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_11\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_42\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_43\,
      op2_C(0) => op2_C(9)
    );
\Shift_Logic_Bits[19].Shift_Logic_Bit_I\: entity work.microblaze_mcs_1_Shift_Logic_Bit_84
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Select_Logic => Select_Logic,
      Sext => \Using_FPGA.Native_i_1__0_n_0\,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_10\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_41\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_42\,
      op2_C(0) => op2_C(8)
    );
\Shift_Logic_Bits[1].Shift_Logic_Bit_I\: entity work.microblaze_mcs_1_Shift_Logic_Bit_85
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Select_Logic => Select_Logic,
      Sext => \Using_FPGA.Native_i_1_n_0\,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_28\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_59\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_60\,
      op2_C(0) => op2_C(26)
    );
\Shift_Logic_Bits[20].Shift_Logic_Bit_I\: entity work.microblaze_mcs_1_Shift_Logic_Bit_86
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Select_Logic => Select_Logic,
      Sext => \Using_FPGA.Native_i_1__0_n_0\,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_9\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_40\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_41\,
      op2_C(0) => op2_C(7)
    );
\Shift_Logic_Bits[21].Shift_Logic_Bit_I\: entity work.microblaze_mcs_1_Shift_Logic_Bit_87
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Select_Logic => Select_Logic,
      Sext => \Using_FPGA.Native_i_1__0_n_0\,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_8\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_39\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_40\,
      op2_C(0) => op2_C(6)
    );
\Shift_Logic_Bits[22].Shift_Logic_Bit_I\: entity work.microblaze_mcs_1_Shift_Logic_Bit_88
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Select_Logic => Select_Logic,
      Sext => \Using_FPGA.Native_i_1__0_n_0\,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_7\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_38\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_39\,
      op2_C(0) => op2_C(5)
    );
\Shift_Logic_Bits[23].Shift_Logic_Bit_I\: entity work.microblaze_mcs_1_Shift_Logic_Bit_89
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Select_Logic => Select_Logic,
      Sext => \Using_FPGA.Native_i_1__0_n_0\,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_6\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_37\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_38\,
      op2_C(0) => op2_C(4)
    );
\Shift_Logic_Bits[24].Shift_Logic_Bit_I\: entity work.microblaze_mcs_1_Shift_Logic_Bit_90
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Select_Logic => Select_Logic,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_36\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_37\,
      op2_C(0) => op2_C(3)
    );
\Shift_Logic_Bits[25].Shift_Logic_Bit_I\: entity work.microblaze_mcs_1_Shift_Logic_Bit_91
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Select_Logic => Select_Logic,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_35\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_36\,
      op2_C(0) => op2_C(2)
    );
\Shift_Logic_Bits[26].Shift_Logic_Bit_I\: entity work.microblaze_mcs_1_Shift_Logic_Bit_92
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Select_Logic => Select_Logic,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_34\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_35\,
      op2_C(0) => op2_C(1)
    );
\Shift_Logic_Bits[27].Shift_Logic_Bit_I\: entity work.microblaze_mcs_1_Shift_Logic_Bit_93
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Select_Logic => Select_Logic,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_33\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_34\,
      op2_C(0) => op2_C(0)
    );
\Shift_Logic_Bits[28].Shift_Logic_Bit_I\: entity work.microblaze_mcs_1_Shift_Logic_Bit_94
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Op1_Shift => Op1_Shift,
      Select_Logic => Select_Logic,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_33\
    );
\Shift_Logic_Bits[29].Shift_Logic_Bit_I\: entity work.microblaze_mcs_1_Shift_Logic_Bit_95
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Op1_Shift => Op1_Shift,
      Op2 => Op2,
      Select_Logic => Select_Logic,
      Shift_Oper => Shift_Oper,
      Shifted => Shifted,
      \Using_FPGA.Native\ => \Using_FPGA.Native_0\
    );
\Shift_Logic_Bits[2].Shift_Logic_Bit_I\: entity work.microblaze_mcs_1_Shift_Logic_Bit_96
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Select_Logic => Select_Logic,
      Sext => \Using_FPGA.Native_i_1_n_0\,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_27\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_58\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_59\,
      op2_C(0) => op2_C(25)
    );
\Shift_Logic_Bits[30].Shift_Logic_Bit_I\: entity work.microblaze_mcs_1_Shift_Logic_Bit_97
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Select_Logic => Select_Logic,
      Shift_Oper => Shift_Oper,
      Shifted => Shifted,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_31\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_30\
    );
\Shift_Logic_Bits[31].Shift_Logic_Bit_I\: entity work.microblaze_mcs_1_Shift_Logic_Bit_98
     port map (
      EX_Op2 => EX_Op2,
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Op1_Logic => Op1_Logic,
      Select_Logic => Select_Logic,
      Shift_Logic_Res => Shift_Logic_Res,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_30\
    );
\Shift_Logic_Bits[3].Shift_Logic_Bit_I\: entity work.microblaze_mcs_1_Shift_Logic_Bit_99
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Select_Logic => Select_Logic,
      Sext => \Using_FPGA.Native_i_1_n_0\,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_26\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_57\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_58\,
      op2_C(0) => op2_C(24)
    );
\Shift_Logic_Bits[4].Shift_Logic_Bit_I\: entity work.microblaze_mcs_1_Shift_Logic_Bit_100
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Select_Logic => Select_Logic,
      Sext => \Using_FPGA.Native_i_1_n_0\,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_25\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_56\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_57\,
      op2_C(0) => op2_C(23)
    );
\Shift_Logic_Bits[5].Shift_Logic_Bit_I\: entity work.microblaze_mcs_1_Shift_Logic_Bit_101
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Select_Logic => Select_Logic,
      Sext => \Using_FPGA.Native_i_1_n_0\,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_24\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_55\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_56\,
      op2_C(0) => op2_C(22)
    );
\Shift_Logic_Bits[6].Shift_Logic_Bit_I\: entity work.microblaze_mcs_1_Shift_Logic_Bit_102
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Select_Logic => Select_Logic,
      Sext => \Using_FPGA.Native_i_1_n_0\,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_23\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_54\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_55\,
      op2_C(0) => op2_C(21)
    );
\Shift_Logic_Bits[7].Shift_Logic_Bit_I\: entity work.microblaze_mcs_1_Shift_Logic_Bit_103
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Select_Logic => Select_Logic,
      Sext => \Using_FPGA.Native_i_1_n_0\,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_22\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_53\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_54\,
      op2_C(0) => op2_C(20)
    );
\Shift_Logic_Bits[8].Shift_Logic_Bit_I\: entity work.microblaze_mcs_1_Shift_Logic_Bit_104
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Select_Logic => Select_Logic,
      Sext => \Using_FPGA.Native_i_1_n_0\,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_21\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_52\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_53\,
      op2_C(0) => op2_C(19)
    );
\Shift_Logic_Bits[9].Shift_Logic_Bit_I\: entity work.microblaze_mcs_1_Shift_Logic_Bit_105
     port map (
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Select_Logic => Select_Logic,
      Sext => \Using_FPGA.Native_i_1_n_0\,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_20\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_52\,
      op2_C(0) => op2_C(18)
    );
\Using_FPGA.Native_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \Using_FPGA.Native_44\,
      I1 => Sext16,
      I2 => sext8,
      I3 => \Using_FPGA.Native_36\,
      O => \Using_FPGA.Native_i_1_n_0\
    );
\Using_FPGA.Native_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"08"
    )
        port map (
      I0 => \Using_FPGA.Native_36\,
      I1 => sext8,
      I2 => Sext16,
      O => \Using_FPGA.Native_i_1__0_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_blk_mem_gen_generic_cstr is
  port (
    douta : out STD_LOGIC_VECTOR ( 31 downto 0 );
    doutb : out STD_LOGIC_VECTOR ( 31 downto 0 );
    rsta_busy : out STD_LOGIC;
    rstb_busy : out STD_LOGIC;
    clkb : in STD_LOGIC;
    clka : in STD_LOGIC;
    addra : in STD_LOGIC_VECTOR ( 12 downto 0 );
    addrb : in STD_LOGIC_VECTOR ( 12 downto 0 );
    dina : in STD_LOGIC_VECTOR ( 31 downto 0 );
    dinb : in STD_LOGIC_VECTOR ( 31 downto 0 );
    wea : in STD_LOGIC_VECTOR ( 3 downto 0 );
    web : in STD_LOGIC_VECTOR ( 3 downto 0 );
    rsta : in STD_LOGIC;
    ena : in STD_LOGIC;
    rstb : in STD_LOGIC;
    enb : in STD_LOGIC
  );
end microblaze_mcs_1_blk_mem_gen_generic_cstr;

architecture STRUCTURE of microblaze_mcs_1_blk_mem_gen_generic_cstr is
  signal ENA_I : STD_LOGIC;
  signal ENB_I : STD_LOGIC;
  signal ram_rstram_a : STD_LOGIC;
  signal ram_rstram_b : STD_LOGIC;
begin
\ramloop[0].ram.r\: entity work.microblaze_mcs_1_blk_mem_gen_prim_width
     port map (
      ENA_I => ENA_I,
      ENB_I => ENB_I,
      addra(12 downto 0) => addra(12 downto 0),
      addrb(12 downto 0) => addrb(12 downto 0),
      clka => clka,
      clkb => clkb,
      dina(3 downto 0) => dina(3 downto 0),
      dinb(3 downto 0) => dinb(3 downto 0),
      douta(3 downto 0) => douta(3 downto 0),
      doutb(3 downto 0) => doutb(3 downto 0),
      ram_rstram_a => ram_rstram_a,
      ram_rstram_b => ram_rstram_b,
      wea(0) => wea(0),
      web(0) => web(0)
    );
\ramloop[1].ram.r\: entity work.\microblaze_mcs_1_blk_mem_gen_prim_width__parameterized0\
     port map (
      ENA_I => ENA_I,
      ENB_I => ENB_I,
      addra(12 downto 0) => addra(12 downto 0),
      addrb(12 downto 0) => addrb(12 downto 0),
      clka => clka,
      clkb => clkb,
      dina(3 downto 0) => dina(7 downto 4),
      dinb(3 downto 0) => dinb(7 downto 4),
      douta(3 downto 0) => douta(7 downto 4),
      doutb(3 downto 0) => doutb(7 downto 4),
      ram_rstram_a => ram_rstram_a,
      ram_rstram_b => ram_rstram_b,
      wea(0) => wea(0),
      web(0) => web(0)
    );
\ramloop[2].ram.r\: entity work.\microblaze_mcs_1_blk_mem_gen_prim_width__parameterized1\
     port map (
      ENA_I => ENA_I,
      ENB_I => ENB_I,
      addra(12 downto 0) => addra(12 downto 0),
      addrb(12 downto 0) => addrb(12 downto 0),
      clka => clka,
      clkb => clkb,
      dina(3 downto 0) => dina(11 downto 8),
      dinb(3 downto 0) => dinb(11 downto 8),
      douta(3 downto 0) => douta(11 downto 8),
      doutb(3 downto 0) => doutb(11 downto 8),
      ram_rstram_a => ram_rstram_a,
      ram_rstram_b => ram_rstram_b,
      wea(0) => wea(1),
      web(0) => web(1)
    );
\ramloop[3].ram.r\: entity work.\microblaze_mcs_1_blk_mem_gen_prim_width__parameterized2\
     port map (
      ENA_I => ENA_I,
      ENB_I => ENB_I,
      addra(12 downto 0) => addra(12 downto 0),
      addrb(12 downto 0) => addrb(12 downto 0),
      clka => clka,
      clkb => clkb,
      dina(3 downto 0) => dina(15 downto 12),
      dinb(3 downto 0) => dinb(15 downto 12),
      douta(3 downto 0) => douta(15 downto 12),
      doutb(3 downto 0) => doutb(15 downto 12),
      ram_rstram_a => ram_rstram_a,
      ram_rstram_b => ram_rstram_b,
      wea(0) => wea(1),
      web(0) => web(1)
    );
\ramloop[4].ram.r\: entity work.\microblaze_mcs_1_blk_mem_gen_prim_width__parameterized3\
     port map (
      ENA_I => ENA_I,
      ENB_I => ENB_I,
      addra(12 downto 0) => addra(12 downto 0),
      addrb(12 downto 0) => addrb(12 downto 0),
      clka => clka,
      clkb => clkb,
      dina(3 downto 0) => dina(19 downto 16),
      dinb(3 downto 0) => dinb(19 downto 16),
      douta(3 downto 0) => douta(19 downto 16),
      doutb(3 downto 0) => doutb(19 downto 16),
      ram_rstram_a => ram_rstram_a,
      ram_rstram_b => ram_rstram_b,
      wea(0) => wea(2),
      web(0) => web(2)
    );
\ramloop[5].ram.r\: entity work.\microblaze_mcs_1_blk_mem_gen_prim_width__parameterized4\
     port map (
      ENA_I => ENA_I,
      ENB_I => ENB_I,
      addra(12 downto 0) => addra(12 downto 0),
      addrb(12 downto 0) => addrb(12 downto 0),
      clka => clka,
      clkb => clkb,
      dina(3 downto 0) => dina(23 downto 20),
      dinb(3 downto 0) => dinb(23 downto 20),
      douta(3 downto 0) => douta(23 downto 20),
      doutb(3 downto 0) => doutb(23 downto 20),
      ram_rstram_a => ram_rstram_a,
      ram_rstram_b => ram_rstram_b,
      wea(0) => wea(2),
      web(0) => web(2)
    );
\ramloop[6].ram.r\: entity work.\microblaze_mcs_1_blk_mem_gen_prim_width__parameterized5\
     port map (
      ENA_I => ENA_I,
      ENB_I => ENB_I,
      addra(12 downto 0) => addra(12 downto 0),
      addrb(12 downto 0) => addrb(12 downto 0),
      clka => clka,
      clkb => clkb,
      dina(3 downto 0) => dina(27 downto 24),
      dinb(3 downto 0) => dinb(27 downto 24),
      douta(3 downto 0) => douta(27 downto 24),
      doutb(3 downto 0) => doutb(27 downto 24),
      ram_rstram_a => ram_rstram_a,
      ram_rstram_b => ram_rstram_b,
      wea(0) => wea(3),
      web(0) => web(3)
    );
\ramloop[7].ram.r\: entity work.\microblaze_mcs_1_blk_mem_gen_prim_width__parameterized6\
     port map (
      ENA_I => ENA_I,
      ENB_I => ENB_I,
      addra(12 downto 0) => addra(12 downto 0),
      addrb(12 downto 0) => addrb(12 downto 0),
      clka => clka,
      clkb => clkb,
      dina(3 downto 0) => dina(31 downto 28),
      dinb(3 downto 0) => dinb(31 downto 28),
      douta(3 downto 0) => douta(31 downto 28),
      doutb(3 downto 0) => doutb(31 downto 28),
      ena => ena,
      enb => enb,
      ram_rstram_a => ram_rstram_a,
      ram_rstram_b => ram_rstram_b,
      rsta => rsta,
      rsta_busy => rsta_busy,
      rstb => rstb,
      rstb_busy => rstb_busy,
      wea(0) => wea(3),
      web(0) => web(3)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Iomodule_core is
  port (
    UART_Tx : out STD_LOGIC;
    GPI1_Interrupt : out STD_LOGIC;
    INTC_IRQ : out STD_LOGIC;
    UART_Interrupt : out STD_LOGIC;
    GPO1 : out STD_LOGIC_VECTOR ( 7 downto 0 );
    Sl_DBus : out STD_LOGIC_VECTOR ( 8 downto 0 );
    INTC_Interrupt_Address : out STD_LOGIC_VECTOR ( 12 downto 0 );
    Clk : in STD_LOGIC;
    Rst : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 14 downto 0 );
    UART_Rx : in STD_LOGIC;
    INTC_Processor_Ack : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 5 downto 0 );
    lmb_reg_write : in STD_LOGIC;
    lmb_reg_read : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    GPI1 : in STD_LOGIC_VECTOR ( 7 downto 0 );
    io_bus_read_data : in STD_LOGIC_VECTOR ( 8 downto 0 )
  );
end microblaze_mcs_1_Iomodule_core;

architecture STRUCTURE of microblaze_mcs_1_Iomodule_core is
  signal \^gpi1_interrupt\ : STD_LOGIC;
  signal GPI_In : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal RX_Data : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal UART_Error_Interrupt : STD_LOGIC;
  signal UART_Status : STD_LOGIC_VECTOR ( 6 downto 0 );
  signal UART_Status_Read : STD_LOGIC;
  signal \Using_UART_RX.UART_RX_I1_n_4\ : STD_LOGIC;
  signal \Using_UART_RX.UART_RX_I1_n_5\ : STD_LOGIC;
  signal en_16x_baud : STD_LOGIC;
  signal frame_error : STD_LOGIC;
  signal overrun_error : STD_LOGIC;
  signal p_0_out : STD_LOGIC_VECTOR ( 3 to 3 );
  signal rx_data_exists : STD_LOGIC;
  signal rx_data_received : STD_LOGIC;
  signal rx_frame_error : STD_LOGIC;
  signal tx_data_transmitted : STD_LOGIC;
begin
  GPI1_Interrupt <= \^gpi1_interrupt\;
GPI_I1: entity work.microblaze_mcs_1_GPI_Module
     port map (
      Clk => Clk,
      GPI1(7 downto 0) => GPI1(7 downto 0),
      GPI1_Interrupt => \^gpi1_interrupt\,
      Q(4 downto 0) => Q(4 downto 0),
      Rst => Rst,
      Sl_DBus(4 downto 0) => Sl_DBus(7 downto 3),
      \TMR_No.RX_Data_reg[7]\(4 downto 0) => RX_Data(7 downto 3),
      \UART_Status_reg[6]\(2 downto 1) => UART_Status(6 downto 5),
      \UART_Status_reg[6]\(0) => UART_Status(3),
      \Using_FPGA.Native\(2 downto 0) => GPI_In(2 downto 0),
      io_bus_read_data(4 downto 0) => io_bus_read_data(7 downto 3),
      lmb_reg_read => lmb_reg_read
    );
GPO_I1: entity work.microblaze_mcs_1_GPO_Module
     port map (
      Clk => Clk,
      GPO1(7 downto 0) => GPO1(7 downto 0),
      Q(5 downto 0) => Q(5 downto 0),
      Rst => Rst,
      lmb_reg_write => lmb_reg_write,
      \out\(7 downto 0) => \out\(7 downto 0)
    );
\Using_UART.No_Dynamic_BaudRate.UART_FIT_I\: entity work.microblaze_mcs_1_FIT_Module
     port map (
      Clk => Clk,
      en_16x_baud => en_16x_baud
    );
\Using_UART.Uart_Control_Status_I1\: entity work.microblaze_mcs_1_Uart_Control_Status
     port map (
      \All_INTR_Bits[0].Using_Intr.CISR_CIER_TMR_No.cisr_reg[0]\ => UART_Error_Interrupt,
      Clk => Clk,
      D(1) => frame_error,
      D(0) => overrun_error,
      Q(4 downto 0) => Q(4 downto 0),
      Rst => Rst,
      \TMR_No.frame_error_reg_0\ => \Using_UART_RX.UART_RX_I1_n_5\,
      \TMR_No.new_rx_data_write_reg\ => rx_data_received,
      \TMR_No.rx_data_exists_i_reg\ => \Using_UART_RX.UART_RX_I1_n_4\,
      \TMR_No.tx_buffer_empty_i_reg\(0) => p_0_out(3),
      UART_Status_Read => UART_Status_Read,
      \Using_FPGA.Native\(3 downto 2) => UART_Status(6 downto 5),
      \Using_FPGA.Native\(1) => UART_Status(3),
      \Using_FPGA.Native\(0) => UART_Status(0),
      lmb_reg_read => lmb_reg_read,
      \out\ => rx_frame_error,
      rx_data_exists => rx_data_exists
    );
\Using_UART_RX.UART_RX_I1\: entity work.microblaze_mcs_1_UART_Receive
     port map (
      Clk => Clk,
      D(1) => frame_error,
      D(0) => overrun_error,
      Q(4 downto 0) => Q(4 downto 0),
      Rst => Rst,
      \TMR_No.error_interrupt_reg\ => UART_Error_Interrupt,
      \TMR_No.frame_error_reg\ => rx_frame_error,
      \TMR_No.frame_error_reg_0\ => \Using_UART_RX.UART_RX_I1_n_5\,
      \TMR_No.overrun_error_reg\ => \Using_UART_RX.UART_RX_I1_n_4\,
      UART_Interrupt => UART_Interrupt,
      UART_Rx => UART_Rx,
      UART_Status_Read => UART_Status_Read,
      \Using_FPGA.Native\(7 downto 0) => RX_Data(7 downto 0),
      en_16x_baud => en_16x_baud,
      lmb_reg_read => lmb_reg_read,
      \out\ => rx_data_received,
      rx_data_exists => rx_data_exists,
      tx_data_transmitted => tx_data_transmitted
    );
\Using_UART_TX.UART_TX_I1\: entity work.microblaze_mcs_1_UART_Transmit
     port map (
      Clk => Clk,
      E(0) => E(0),
      Rst => Rst,
      \UART_Status_reg[3]\(0) => p_0_out(3),
      UART_Tx => UART_Tx,
      en_16x_baud => en_16x_baud,
      \out\(7 downto 0) => \out\(7 downto 0),
      tx_data_transmitted => tx_data_transmitted
    );
intr_ctrl_I1: entity work.microblaze_mcs_1_intr_ctrl
     port map (
      Clk => Clk,
      GPI1_Interrupt => \^gpi1_interrupt\,
      INTC_IRQ => INTC_IRQ,
      INTC_Interrupt_Address(12 downto 0) => INTC_Interrupt_Address(12 downto 0),
      INTC_Processor_Ack(1 downto 0) => INTC_Processor_Ack(1 downto 0),
      Q(5 downto 0) => Q(5 downto 0),
      Rst => Rst,
      Sl_DBus(3) => Sl_DBus(8),
      Sl_DBus(2 downto 0) => Sl_DBus(2 downto 0),
      \TMR_No.RX_Data_reg[2]\(2 downto 0) => RX_Data(2 downto 0),
      \TMR_No.error_interrupt_reg\ => UART_Error_Interrupt,
      \TMR_No.new_rx_data_write_reg\ => rx_data_received,
      \UART_Status_reg[0]\(0) => UART_Status(0),
      \Using_GPI.GPI_In_reg[2]\(2 downto 0) => GPI_In(2 downto 0),
      io_bus_read_data(3) => io_bus_read_data(8),
      io_bus_read_data(2 downto 0) => io_bus_read_data(2 downto 0),
      lmb_reg_read => lmb_reg_read,
      lmb_reg_write => lmb_reg_write,
      \out\(14 downto 0) => \out\(14 downto 0),
      tx_data_transmitted => tx_data_transmitted
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_bd_3c9d_0_rst_0_0 is
  port (
    slowest_sync_clk : in STD_LOGIC;
    ext_reset_in : in STD_LOGIC;
    aux_reset_in : in STD_LOGIC;
    mb_debug_sys_rst : in STD_LOGIC;
    dcm_locked : in STD_LOGIC;
    mb_reset : out STD_LOGIC;
    bus_struct_reset : out STD_LOGIC_VECTOR ( 0 to 0 );
    peripheral_reset : out STD_LOGIC_VECTOR ( 0 to 0 );
    interconnect_aresetn : out STD_LOGIC_VECTOR ( 0 to 0 );
    peripheral_aresetn : out STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute CHECK_LICENSE_TYPE : string;
  attribute CHECK_LICENSE_TYPE of microblaze_mcs_1_bd_3c9d_0_rst_0_0 : entity is "bd_3c9d_0_rst_0_0,proc_sys_reset,{}";
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of microblaze_mcs_1_bd_3c9d_0_rst_0_0 : entity is "yes";
  attribute X_CORE_INFO : string;
  attribute X_CORE_INFO of microblaze_mcs_1_bd_3c9d_0_rst_0_0 : entity is "proc_sys_reset,Vivado 2018.2";
end microblaze_mcs_1_bd_3c9d_0_rst_0_0;

architecture STRUCTURE of microblaze_mcs_1_bd_3c9d_0_rst_0_0 is
  attribute C_AUX_RESET_HIGH : string;
  attribute C_AUX_RESET_HIGH of U0 : label is "1'b0";
  attribute C_AUX_RST_WIDTH : integer;
  attribute C_AUX_RST_WIDTH of U0 : label is 4;
  attribute C_EXT_RESET_HIGH : string;
  attribute C_EXT_RESET_HIGH of U0 : label is "1'b1";
  attribute C_EXT_RST_WIDTH : integer;
  attribute C_EXT_RST_WIDTH of U0 : label is 4;
  attribute C_FAMILY : string;
  attribute C_FAMILY of U0 : label is "spartan7";
  attribute C_NUM_BUS_RST : integer;
  attribute C_NUM_BUS_RST of U0 : label is 1;
  attribute C_NUM_INTERCONNECT_ARESETN : integer;
  attribute C_NUM_INTERCONNECT_ARESETN of U0 : label is 1;
  attribute C_NUM_PERP_ARESETN : integer;
  attribute C_NUM_PERP_ARESETN of U0 : label is 1;
  attribute C_NUM_PERP_RST : integer;
  attribute C_NUM_PERP_RST of U0 : label is 1;
  attribute X_INTERFACE_INFO : string;
  attribute X_INTERFACE_INFO of aux_reset_in : signal is "xilinx.com:signal:reset:1.0 aux_reset RST";
  attribute X_INTERFACE_PARAMETER : string;
  attribute X_INTERFACE_PARAMETER of aux_reset_in : signal is "XIL_INTERFACENAME aux_reset, POLARITY ACTIVE_LOW";
  attribute X_INTERFACE_INFO of ext_reset_in : signal is "xilinx.com:signal:reset:1.0 ext_reset RST";
  attribute X_INTERFACE_PARAMETER of ext_reset_in : signal is "XIL_INTERFACENAME ext_reset, BOARD.ASSOCIATED_PARAM RESET_BOARD_INTERFACE, POLARITY ACTIVE_HIGH";
  attribute X_INTERFACE_INFO of mb_debug_sys_rst : signal is "xilinx.com:signal:reset:1.0 dbg_reset RST";
  attribute X_INTERFACE_PARAMETER of mb_debug_sys_rst : signal is "XIL_INTERFACENAME dbg_reset, POLARITY ACTIVE_HIGH";
  attribute X_INTERFACE_INFO of mb_reset : signal is "xilinx.com:signal:reset:1.0 mb_rst RST";
  attribute X_INTERFACE_PARAMETER of mb_reset : signal is "XIL_INTERFACENAME mb_rst, POLARITY ACTIVE_HIGH, TYPE PROCESSOR";
  attribute X_INTERFACE_INFO of slowest_sync_clk : signal is "xilinx.com:signal:clock:1.0 clock CLK";
  attribute X_INTERFACE_PARAMETER of slowest_sync_clk : signal is "XIL_INTERFACENAME clock, ASSOCIATED_RESET mb_reset:bus_struct_reset:interconnect_aresetn:peripheral_aresetn:peripheral_reset, FREQ_HZ 100000000, PHASE 0.000";
  attribute X_INTERFACE_INFO of bus_struct_reset : signal is "xilinx.com:signal:reset:1.0 bus_struct_reset RST";
  attribute X_INTERFACE_PARAMETER of bus_struct_reset : signal is "XIL_INTERFACENAME bus_struct_reset, POLARITY ACTIVE_HIGH, TYPE INTERCONNECT";
  attribute X_INTERFACE_INFO of interconnect_aresetn : signal is "xilinx.com:signal:reset:1.0 interconnect_low_rst RST";
  attribute X_INTERFACE_PARAMETER of interconnect_aresetn : signal is "XIL_INTERFACENAME interconnect_low_rst, POLARITY ACTIVE_LOW, TYPE INTERCONNECT";
  attribute X_INTERFACE_INFO of peripheral_aresetn : signal is "xilinx.com:signal:reset:1.0 peripheral_low_rst RST";
  attribute X_INTERFACE_PARAMETER of peripheral_aresetn : signal is "XIL_INTERFACENAME peripheral_low_rst, POLARITY ACTIVE_LOW, TYPE PERIPHERAL";
  attribute X_INTERFACE_INFO of peripheral_reset : signal is "xilinx.com:signal:reset:1.0 peripheral_high_rst RST";
  attribute X_INTERFACE_PARAMETER of peripheral_reset : signal is "XIL_INTERFACENAME peripheral_high_rst, POLARITY ACTIVE_HIGH, TYPE PERIPHERAL";
begin
U0: entity work.microblaze_mcs_1_proc_sys_reset
     port map (
      aux_reset_in => aux_reset_in,
      bus_struct_reset(0) => bus_struct_reset(0),
      dcm_locked => dcm_locked,
      ext_reset_in => ext_reset_in,
      interconnect_aresetn(0) => interconnect_aresetn(0),
      mb_debug_sys_rst => mb_debug_sys_rst,
      mb_reset => mb_reset,
      peripheral_aresetn(0) => peripheral_aresetn(0),
      peripheral_reset(0) => peripheral_reset(0),
      slowest_sync_clk => slowest_sync_clk
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_Data_Flow is
  port (
    Op1_Low : out STD_LOGIC_VECTOR ( 0 to 1 );
    EX_Op2 : out STD_LOGIC;
    \trace_data_address_i_reg[31]\ : out STD_LOGIC;
    Op1_Shift : out STD_LOGIC;
    EX_Op1 : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    trace_jump_taken_i_reg : out STD_LOGIC;
    MSR : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    \Using_FPGA.Native_6\ : out STD_LOGIC;
    \Using_FPGA.Native_7\ : out STD_LOGIC;
    \Using_FPGA.Native_8\ : out STD_LOGIC;
    \Using_FPGA.Native_9\ : out STD_LOGIC;
    \Using_FPGA.Native_10\ : out STD_LOGIC;
    \Using_FPGA.Native_11\ : out STD_LOGIC;
    \Using_FPGA.Native_12\ : out STD_LOGIC;
    \Using_FPGA.Native_13\ : out STD_LOGIC;
    \Using_FPGA.Native_14\ : out STD_LOGIC;
    \Using_FPGA.Native_15\ : out STD_LOGIC;
    \Using_FPGA.Native_16\ : out STD_LOGIC;
    \Using_FPGA.Native_17\ : out STD_LOGIC;
    \Using_FPGA.Native_18\ : out STD_LOGIC;
    \Using_FPGA.Native_19\ : out STD_LOGIC;
    \Using_FPGA.Native_20\ : out STD_LOGIC;
    \Using_FPGA.Native_21\ : out STD_LOGIC;
    \Using_FPGA.Native_22\ : out STD_LOGIC;
    \Using_FPGA.Native_23\ : out STD_LOGIC;
    \Using_FPGA.Native_24\ : out STD_LOGIC;
    \Using_FPGA.Native_25\ : out STD_LOGIC;
    \Using_FPGA.Native_26\ : out STD_LOGIC;
    \Using_FPGA.Native_27\ : out STD_LOGIC;
    \Using_FPGA.Native_28\ : out STD_LOGIC;
    \Using_FPGA.Native_29\ : out STD_LOGIC;
    \Using_FPGA.Native_30\ : out STD_LOGIC;
    \Using_FPGA.Native_31\ : out STD_LOGIC;
    LO : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 82 downto 0 );
    Reg_zero : out STD_LOGIC;
    \trace_pc_i_reg[17]\ : out STD_LOGIC_VECTOR ( 12 downto 0 );
    \Using_FPGA.Native_32\ : out STD_LOGIC_VECTOR ( 15 downto 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 23 downto 0 );
    sync_reset : in STD_LOGIC;
    \^of_piperun\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_0 : in STD_LOGIC;
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC;
    D_1 : in STD_LOGIC;
    D_2 : in STD_LOGIC;
    D_3 : in STD_LOGIC;
    D_4 : in STD_LOGIC;
    D_5 : in STD_LOGIC;
    D_6 : in STD_LOGIC;
    D_7 : in STD_LOGIC;
    D_8 : in STD_LOGIC;
    D_9 : in STD_LOGIC;
    D_10 : in STD_LOGIC;
    D_11 : in STD_LOGIC;
    D_12 : in STD_LOGIC;
    D_13 : in STD_LOGIC;
    D_14 : in STD_LOGIC;
    D_15 : in STD_LOGIC;
    D_16 : in STD_LOGIC;
    D_17 : in STD_LOGIC;
    D_18 : in STD_LOGIC;
    D_19 : in STD_LOGIC;
    D_20 : in STD_LOGIC;
    D_21 : in STD_LOGIC;
    D_22 : in STD_LOGIC;
    D_23 : in STD_LOGIC;
    D_24 : in STD_LOGIC;
    D_25 : in STD_LOGIC;
    D_26 : in STD_LOGIC;
    D_27 : in STD_LOGIC;
    D_28 : in STD_LOGIC;
    D_29 : in STD_LOGIC;
    D_30 : in STD_LOGIC;
    D_31 : in STD_LOGIC;
    carry_In : in STD_LOGIC;
    Unsigned_Op : in STD_LOGIC;
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    MSR_Rst : in STD_LOGIC;
    \Using_FPGA.set_BIP_I_reg\ : in STD_LOGIC;
    write_Carry_I_reg : in STD_LOGIC;
    \Using_FPGA.Native_33\ : in STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : in STD_LOGIC;
    \Using_FPGA.enable_Interrupts_I_reg\ : in STD_LOGIC;
    compare_Instr : in STD_LOGIC;
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 31 );
    exception_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward2 : in STD_LOGIC;
    Logic_Oper : in STD_LOGIC_VECTOR ( 0 to 1 );
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    Shifted : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 15 downto 0 );
    Data_Read : in STD_LOGIC_VECTOR ( 15 downto 0 );
    Reg_Test_Equal : in STD_LOGIC;
    reg_Test_Equal_N : in STD_LOGIC;
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    OF_PipeRun : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 0 to 15 );
    Reg_Write : in STD_LOGIC;
    \write_Addr_I_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    Increment : in STD_LOGIC;
    DI : in STD_LOGIC;
    Sext16 : in STD_LOGIC;
    sext8 : in STD_LOGIC;
    doublet_Read : in STD_LOGIC;
    quadlet_Read : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
end microblaze_mcs_1_Data_Flow;

architecture STRUCTURE of microblaze_mcs_1_Data_Flow is
  signal ALU_I_n_31 : STD_LOGIC;
  signal ALU_I_n_32 : STD_LOGIC;
  signal \^d\ : STD_LOGIC_VECTOR ( 82 downto 0 );
  signal \^ex_op1\ : STD_LOGIC;
  signal \^ex_op2\ : STD_LOGIC;
  signal \^op1_low\ : STD_LOGIC_VECTOR ( 0 to 1 );
  signal \^op1_shift\ : STD_LOGIC;
  signal \OpSelect_Bits[0].Operand_Select_Bit_I/I3\ : STD_LOGIC;
  signal \OpSelect_Bits[24].Operand_Select_Bit_I/I3\ : STD_LOGIC;
  signal \OpSelect_Bits[25].Operand_Select_Bit_I/I3\ : STD_LOGIC;
  signal \OpSelect_Bits[26].Operand_Select_Bit_I/I3\ : STD_LOGIC;
  signal \OpSelect_Bits[27].Operand_Select_Bit_I/I3\ : STD_LOGIC;
  signal \OpSelect_Bits[28].Operand_Select_Bit_I/I3\ : STD_LOGIC;
  signal \OpSelect_Bits[29].Operand_Select_Bit_I/I3\ : STD_LOGIC;
  signal \OpSelect_Bits[30].Operand_Select_Bit_I/I3\ : STD_LOGIC;
  signal Operand_Select_I_n_10 : STD_LOGIC;
  signal Operand_Select_I_n_11 : STD_LOGIC;
  signal Operand_Select_I_n_40 : STD_LOGIC;
  signal Operand_Select_I_n_41 : STD_LOGIC;
  signal Operand_Select_I_n_42 : STD_LOGIC;
  signal Operand_Select_I_n_43 : STD_LOGIC;
  signal Operand_Select_I_n_44 : STD_LOGIC;
  signal Operand_Select_I_n_45 : STD_LOGIC;
  signal Operand_Select_I_n_46 : STD_LOGIC;
  signal Operand_Select_I_n_47 : STD_LOGIC;
  signal Operand_Select_I_n_48 : STD_LOGIC;
  signal Operand_Select_I_n_49 : STD_LOGIC;
  signal Operand_Select_I_n_5 : STD_LOGIC;
  signal Operand_Select_I_n_50 : STD_LOGIC;
  signal Operand_Select_I_n_51 : STD_LOGIC;
  signal Operand_Select_I_n_52 : STD_LOGIC;
  signal Operand_Select_I_n_53 : STD_LOGIC;
  signal Operand_Select_I_n_54 : STD_LOGIC;
  signal Operand_Select_I_n_55 : STD_LOGIC;
  signal Operand_Select_I_n_56 : STD_LOGIC;
  signal Operand_Select_I_n_57 : STD_LOGIC;
  signal Operand_Select_I_n_58 : STD_LOGIC;
  signal Operand_Select_I_n_59 : STD_LOGIC;
  signal Operand_Select_I_n_6 : STD_LOGIC;
  signal Operand_Select_I_n_60 : STD_LOGIC;
  signal Operand_Select_I_n_61 : STD_LOGIC;
  signal Operand_Select_I_n_62 : STD_LOGIC;
  signal Operand_Select_I_n_63 : STD_LOGIC;
  signal Operand_Select_I_n_64 : STD_LOGIC;
  signal Operand_Select_I_n_65 : STD_LOGIC;
  signal Operand_Select_I_n_66 : STD_LOGIC;
  signal Operand_Select_I_n_67 : STD_LOGIC;
  signal Operand_Select_I_n_68 : STD_LOGIC;
  signal Operand_Select_I_n_69 : STD_LOGIC;
  signal Operand_Select_I_n_70 : STD_LOGIC;
  signal Operand_Select_I_n_71 : STD_LOGIC;
  signal Operand_Select_I_n_72 : STD_LOGIC;
  signal Operand_Select_I_n_73 : STD_LOGIC;
  signal Operand_Select_I_n_74 : STD_LOGIC;
  signal Operand_Select_I_n_75 : STD_LOGIC;
  signal Operand_Select_I_n_76 : STD_LOGIC;
  signal Operand_Select_I_n_77 : STD_LOGIC;
  signal Operand_Select_I_n_78 : STD_LOGIC;
  signal Operand_Select_I_n_79 : STD_LOGIC;
  signal Operand_Select_I_n_8 : STD_LOGIC;
  signal Operand_Select_I_n_80 : STD_LOGIC;
  signal Operand_Select_I_n_81 : STD_LOGIC;
  signal Operand_Select_I_n_82 : STD_LOGIC;
  signal Operand_Select_I_n_83 : STD_LOGIC;
  signal Operand_Select_I_n_84 : STD_LOGIC;
  signal Operand_Select_I_n_85 : STD_LOGIC;
  signal Operand_Select_I_n_86 : STD_LOGIC;
  signal Operand_Select_I_n_87 : STD_LOGIC;
  signal Operand_Select_I_n_88 : STD_LOGIC;
  signal Operand_Select_I_n_89 : STD_LOGIC;
  signal Operand_Select_I_n_9 : STD_LOGIC;
  signal Operand_Select_I_n_90 : STD_LOGIC;
  signal Operand_Select_I_n_91 : STD_LOGIC;
  signal PC_Module_I_n_17 : STD_LOGIC;
  signal PC_Module_I_n_31 : STD_LOGIC;
  signal PC_Module_I_n_32 : STD_LOGIC;
  signal PC_Module_I_n_33 : STD_LOGIC;
  signal PC_Module_I_n_34 : STD_LOGIC;
  signal PC_Module_I_n_35 : STD_LOGIC;
  signal PC_Module_I_n_36 : STD_LOGIC;
  signal PC_Module_I_n_37 : STD_LOGIC;
  signal PC_Module_I_n_38 : STD_LOGIC;
  signal Shift_Logic_Module_I_n_31 : STD_LOGIC;
  signal Shift_Logic_Res : STD_LOGIC;
  signal Shift_Logic_Res0_out : STD_LOGIC;
  signal Shift_Logic_Res10_out : STD_LOGIC;
  signal Shift_Logic_Res11_out : STD_LOGIC;
  signal Shift_Logic_Res12_out : STD_LOGIC;
  signal Shift_Logic_Res13_out : STD_LOGIC;
  signal Shift_Logic_Res14_out : STD_LOGIC;
  signal Shift_Logic_Res15_out : STD_LOGIC;
  signal Shift_Logic_Res17_out : STD_LOGIC;
  signal Shift_Logic_Res18_out : STD_LOGIC;
  signal Shift_Logic_Res19_out : STD_LOGIC;
  signal Shift_Logic_Res1_out : STD_LOGIC;
  signal Shift_Logic_Res20_out : STD_LOGIC;
  signal Shift_Logic_Res21_out : STD_LOGIC;
  signal Shift_Logic_Res22_out : STD_LOGIC;
  signal Shift_Logic_Res23_out : STD_LOGIC;
  signal Shift_Logic_Res24_out : STD_LOGIC;
  signal Shift_Logic_Res26_out : STD_LOGIC;
  signal Shift_Logic_Res27_out : STD_LOGIC;
  signal Shift_Logic_Res28_out : STD_LOGIC;
  signal Shift_Logic_Res29_out : STD_LOGIC;
  signal Shift_Logic_Res2_out : STD_LOGIC;
  signal Shift_Logic_Res30_out : STD_LOGIC;
  signal Shift_Logic_Res31_out : STD_LOGIC;
  signal Shift_Logic_Res3_out : STD_LOGIC;
  signal Shift_Logic_Res4_out : STD_LOGIC;
  signal Shift_Logic_Res5_out : STD_LOGIC;
  signal Shift_Logic_Res6_out : STD_LOGIC;
  signal Shift_Logic_Res7_out : STD_LOGIC;
  signal Shift_Logic_Res8_out : STD_LOGIC;
  signal Shift_Logic_Res9_out : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC;
  signal \Zero_Detecting[0].nibble_Zero_reg\ : STD_LOGIC;
  signal ex_Result : STD_LOGIC_VECTOR ( 0 to 31 );
  signal op2_C : STD_LOGIC_VECTOR ( 0 to 27 );
  signal reg1_Data : STD_LOGIC_VECTOR ( 0 to 31 );
  signal reg2_Data : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^trace_data_address_i_reg[31]\ : STD_LOGIC;
  signal \^trace_jump_taken_i_reg\ : STD_LOGIC;
begin
  D(82 downto 0) <= \^d\(82 downto 0);
  EX_Op1 <= \^ex_op1\;
  EX_Op2 <= \^ex_op2\;
  Op1_Low(0 to 1) <= \^op1_low\(0 to 1);
  Op1_Shift <= \^op1_shift\;
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \trace_data_address_i_reg[31]\ <= \^trace_data_address_i_reg[31]\;
  trace_jump_taken_i_reg <= \^trace_jump_taken_i_reg\;
ALU_I: entity work.microblaze_mcs_1_ALU
     port map (
      D(29 downto 0) => \^d\(69 downto 40),
      EX_Op1 => \^op1_low\(1),
      EX_Op2 => \^ex_op2\,
      LO => LO,
      O => ALU_I_n_31,
      Op1_Logic => \^using_fpga.native\,
      Op1_Shift => \^ex_op1\,
      Unsigned_Op => Unsigned_Op,
      \Using_FPGA.Native\ => ALU_I_n_32,
      \Using_FPGA.Native_0\ => \^trace_data_address_i_reg[31]\,
      \Using_FPGA.Native_1\ => \^op1_low\(0),
      \Using_FPGA.Native_10\ => Operand_Select_I_n_48,
      \Using_FPGA.Native_11\ => Operand_Select_I_n_50,
      \Using_FPGA.Native_12\ => Operand_Select_I_n_52,
      \Using_FPGA.Native_13\ => Operand_Select_I_n_54,
      \Using_FPGA.Native_14\ => Operand_Select_I_n_56,
      \Using_FPGA.Native_15\ => Operand_Select_I_n_58,
      \Using_FPGA.Native_16\ => Operand_Select_I_n_60,
      \Using_FPGA.Native_17\ => Operand_Select_I_n_62,
      \Using_FPGA.Native_18\ => Operand_Select_I_n_64,
      \Using_FPGA.Native_19\ => Operand_Select_I_n_66,
      \Using_FPGA.Native_2\ => Operand_Select_I_n_6,
      \Using_FPGA.Native_20\ => Operand_Select_I_n_68,
      \Using_FPGA.Native_21\ => Operand_Select_I_n_70,
      \Using_FPGA.Native_22\ => Operand_Select_I_n_72,
      \Using_FPGA.Native_23\ => Operand_Select_I_n_74,
      \Using_FPGA.Native_24\ => Operand_Select_I_n_76,
      \Using_FPGA.Native_25\ => Operand_Select_I_n_78,
      \Using_FPGA.Native_26\ => Operand_Select_I_n_80,
      \Using_FPGA.Native_27\ => Operand_Select_I_n_82,
      \Using_FPGA.Native_28\ => Operand_Select_I_n_84,
      \Using_FPGA.Native_29\ => Operand_Select_I_n_86,
      \Using_FPGA.Native_3\ => \^op1_shift\,
      \Using_FPGA.Native_30\ => Operand_Select_I_n_88,
      \Using_FPGA.Native_31\ => Operand_Select_I_n_90,
      \Using_FPGA.Native_4\ => Operand_Select_I_n_9,
      \Using_FPGA.Native_5\ => Operand_Select_I_n_10,
      \Using_FPGA.Native_6\ => Operand_Select_I_n_40,
      \Using_FPGA.Native_7\ => Operand_Select_I_n_42,
      \Using_FPGA.Native_8\ => Operand_Select_I_n_44,
      \Using_FPGA.Native_9\ => Operand_Select_I_n_46,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      carry_In => carry_In,
      compare_Instr => compare_Instr,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      op2_C(27) => op2_C(0),
      op2_C(26) => op2_C(1),
      op2_C(25) => op2_C(2),
      op2_C(24) => op2_C(3),
      op2_C(23) => op2_C(4),
      op2_C(22) => op2_C(5),
      op2_C(21) => op2_C(6),
      op2_C(20) => op2_C(7),
      op2_C(19) => op2_C(8),
      op2_C(18) => op2_C(9),
      op2_C(17) => op2_C(10),
      op2_C(16) => op2_C(11),
      op2_C(15) => op2_C(12),
      op2_C(14) => op2_C(13),
      op2_C(13) => op2_C(14),
      op2_C(12) => op2_C(15),
      op2_C(11) => op2_C(16),
      op2_C(10) => op2_C(17),
      op2_C(9) => op2_C(18),
      op2_C(8) => op2_C(19),
      op2_C(7) => op2_C(20),
      op2_C(6) => op2_C(21),
      op2_C(5) => op2_C(22),
      op2_C(4) => op2_C(23),
      op2_C(3) => op2_C(24),
      op2_C(2) => op2_C(25),
      op2_C(1) => op2_C(26),
      op2_C(0) => op2_C(27)
    );
MSR_Reg_I: entity work.microblaze_mcs_1_MSR_Reg
     port map (
      Clk => Clk,
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      I3 => \OpSelect_Bits[0].Operand_Select_Bit_I/I3\,
      I3_0 => \OpSelect_Bits[30].Operand_Select_Bit_I/I3\,
      I3_1 => \OpSelect_Bits[28].Operand_Select_Bit_I/I3\,
      I3_2 => \OpSelect_Bits[29].Operand_Select_Bit_I/I3\,
      MSR(2 downto 0) => MSR(2 downto 0),
      MSR_Rst => MSR_Rst,
      PC_OF => PC_Module_I_n_32,
      \Use_Async_Reset.sync_reset_reg\ => \Use_Async_Reset.sync_reset_reg\,
      \Using_FPGA.Native\ => \Using_FPGA.Native_33\,
      \Using_FPGA.Native_0\ => PC_Module_I_n_31,
      \Using_FPGA.enable_Interrupts_I_reg\ => \Using_FPGA.enable_Interrupts_I_reg\,
      \Using_FPGA.set_BIP_I_reg\ => \Using_FPGA.set_BIP_I_reg\,
      write_Carry_I_reg => write_Carry_I_reg
    );
Operand_Select_I: entity work.microblaze_mcs_1_Operand_Select
     port map (
      Clk => Clk,
      D_0 => D_0,
      D_1 => D_1,
      D_10 => D_10,
      D_11 => D_11,
      D_12 => D_12,
      D_13 => D_13,
      D_14 => D_14,
      D_15 => D_15,
      D_16 => D_16,
      D_17 => D_17,
      D_18 => D_18,
      D_19 => D_19,
      D_2 => D_2,
      D_20 => D_20,
      D_21 => D_21,
      D_22 => D_22,
      D_23 => D_23,
      D_24 => D_24,
      D_25 => D_25,
      D_26 => D_26,
      D_27 => D_27,
      D_28 => D_28,
      D_29 => D_29,
      D_3 => D_3,
      D_30 => D_30,
      D_31 => D_31,
      D_4 => D_4,
      D_5 => D_5,
      D_6 => D_6,
      D_7 => D_7,
      D_8 => D_8,
      D_9 => D_9,
      E(0) => E(0),
      EX_Op2 => \^ex_op2\,
      I3 => \OpSelect_Bits[30].Operand_Select_Bit_I/I3\,
      I3_0 => \OpSelect_Bits[29].Operand_Select_Bit_I/I3\,
      I3_1 => \OpSelect_Bits[28].Operand_Select_Bit_I/I3\,
      I3_2 => \OpSelect_Bits[27].Operand_Select_Bit_I/I3\,
      I3_3 => \OpSelect_Bits[26].Operand_Select_Bit_I/I3\,
      I3_4 => \OpSelect_Bits[25].Operand_Select_Bit_I/I3\,
      I3_5 => \OpSelect_Bits[24].Operand_Select_Bit_I/I3\,
      I3_6 => \OpSelect_Bits[0].Operand_Select_Bit_I/I3\,
      Op1_Logic => \^op1_low\(1),
      Op1_Shift => \^ex_op1\,
      Op2 => Operand_Select_I_n_6,
      PC_OF => PC_Module_I_n_33,
      Reg1_Data(0 to 31) => reg1_Data(0 to 31),
      Shifted => \^op1_shift\,
      \Using_FPGA.Native\ => \^op1_low\(0),
      \Using_FPGA.Native_0\ => Operand_Select_I_n_44,
      \Using_FPGA.Native_1\ => Operand_Select_I_n_60,
      \Using_FPGA.Native_2\ => \^using_fpga.native\,
      \Using_FPGA.Native_3\(15 downto 0) => \Using_FPGA.Native_32\(15 downto 0),
      \Using_FPGA.Native_4\ => PC_Module_I_n_34,
      \Using_FPGA.Native_5\ => PC_Module_I_n_35,
      \Using_FPGA.Native_6\ => PC_Module_I_n_36,
      \Using_FPGA.Native_7\ => PC_Module_I_n_37,
      \Using_FPGA.Native_8\ => PC_Module_I_n_38,
      \Using_FPGA.Native_9\ => PC_Module_I_n_17,
      \Zero_Detecting[0].nibble_Zero_reg\ => \Zero_Detecting[0].nibble_Zero_reg\,
      ex_Result(0 to 31) => ex_Result(0 to 31),
      imm_Value(0 to 15) => imm_Value(0 to 15),
      of_PipeRun => \^of_piperun\,
      op2_C(27) => op2_C(0),
      op2_C(26) => op2_C(1),
      op2_C(25) => op2_C(2),
      op2_C(24) => op2_C(3),
      op2_C(23) => op2_C(4),
      op2_C(22) => op2_C(5),
      op2_C(21) => op2_C(6),
      op2_C(20) => op2_C(7),
      op2_C(19) => op2_C(8),
      op2_C(18) => op2_C(9),
      op2_C(17) => op2_C(10),
      op2_C(16) => op2_C(11),
      op2_C(15) => op2_C(12),
      op2_C(14) => op2_C(13),
      op2_C(13) => op2_C(14),
      op2_C(12) => op2_C(15),
      op2_C(11) => op2_C(16),
      op2_C(10) => op2_C(17),
      op2_C(9) => op2_C(18),
      op2_C(8) => op2_C(19),
      op2_C(7) => op2_C(20),
      op2_C(6) => op2_C(21),
      op2_C(5) => op2_C(22),
      op2_C(4) => op2_C(23),
      op2_C(3) => op2_C(24),
      op2_C(2) => op2_C(25),
      op2_C(1) => op2_C(26),
      op2_C(0) => op2_C(27),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[10]\ => Operand_Select_I_n_72,
      \trace_data_address_i_reg[11]\ => Operand_Select_I_n_70,
      \trace_data_address_i_reg[12]\ => Operand_Select_I_n_68,
      \trace_data_address_i_reg[13]\ => Operand_Select_I_n_66,
      \trace_data_address_i_reg[14]\ => Operand_Select_I_n_64,
      \trace_data_address_i_reg[15]\ => Operand_Select_I_n_62,
      \trace_data_address_i_reg[17]\ => Operand_Select_I_n_58,
      \trace_data_address_i_reg[18]\ => Operand_Select_I_n_56,
      \trace_data_address_i_reg[19]\ => Operand_Select_I_n_54,
      \trace_data_address_i_reg[1]\ => Operand_Select_I_n_90,
      \trace_data_address_i_reg[20]\ => Operand_Select_I_n_52,
      \trace_data_address_i_reg[21]\ => Operand_Select_I_n_50,
      \trace_data_address_i_reg[22]\ => Operand_Select_I_n_48,
      \trace_data_address_i_reg[23]\ => Operand_Select_I_n_46,
      \trace_data_address_i_reg[25]\ => Operand_Select_I_n_42,
      \trace_data_address_i_reg[26]\ => Operand_Select_I_n_40,
      \trace_data_address_i_reg[27]\ => Operand_Select_I_n_10,
      \trace_data_address_i_reg[28]\ => Operand_Select_I_n_9,
      \trace_data_address_i_reg[2]\ => Operand_Select_I_n_88,
      \trace_data_address_i_reg[31]\ => \^trace_data_address_i_reg[31]\,
      \trace_data_address_i_reg[3]\ => Operand_Select_I_n_86,
      \trace_data_address_i_reg[4]\ => Operand_Select_I_n_84,
      \trace_data_address_i_reg[5]\ => Operand_Select_I_n_82,
      \trace_data_address_i_reg[6]\ => Operand_Select_I_n_80,
      \trace_data_address_i_reg[7]\ => Operand_Select_I_n_78,
      \trace_data_address_i_reg[8]\ => Operand_Select_I_n_76,
      \trace_data_address_i_reg[9]\ => Operand_Select_I_n_74,
      trace_jump_taken_i_reg => Operand_Select_I_n_5,
      trace_jump_taken_i_reg_0 => Operand_Select_I_n_8,
      trace_jump_taken_i_reg_1 => Operand_Select_I_n_11,
      trace_jump_taken_i_reg_10 => Operand_Select_I_n_57,
      trace_jump_taken_i_reg_11 => Operand_Select_I_n_59,
      trace_jump_taken_i_reg_12 => Operand_Select_I_n_61,
      trace_jump_taken_i_reg_13 => Operand_Select_I_n_63,
      trace_jump_taken_i_reg_14 => Operand_Select_I_n_65,
      trace_jump_taken_i_reg_15 => Operand_Select_I_n_67,
      trace_jump_taken_i_reg_16 => Operand_Select_I_n_69,
      trace_jump_taken_i_reg_17 => Operand_Select_I_n_71,
      trace_jump_taken_i_reg_18 => Operand_Select_I_n_73,
      trace_jump_taken_i_reg_19 => Operand_Select_I_n_75,
      trace_jump_taken_i_reg_2 => Operand_Select_I_n_41,
      trace_jump_taken_i_reg_20 => Operand_Select_I_n_77,
      trace_jump_taken_i_reg_21 => Operand_Select_I_n_79,
      trace_jump_taken_i_reg_22 => Operand_Select_I_n_81,
      trace_jump_taken_i_reg_23 => Operand_Select_I_n_83,
      trace_jump_taken_i_reg_24 => Operand_Select_I_n_85,
      trace_jump_taken_i_reg_25 => Operand_Select_I_n_87,
      trace_jump_taken_i_reg_26 => Operand_Select_I_n_89,
      trace_jump_taken_i_reg_27 => Operand_Select_I_n_91,
      trace_jump_taken_i_reg_28 => \^trace_jump_taken_i_reg\,
      trace_jump_taken_i_reg_3 => Operand_Select_I_n_43,
      trace_jump_taken_i_reg_4 => Operand_Select_I_n_45,
      trace_jump_taken_i_reg_5 => Operand_Select_I_n_47,
      trace_jump_taken_i_reg_6 => Operand_Select_I_n_49,
      trace_jump_taken_i_reg_7 => Operand_Select_I_n_51,
      trace_jump_taken_i_reg_8 => Operand_Select_I_n_53,
      trace_jump_taken_i_reg_9 => Operand_Select_I_n_55
    );
PC_Module_I: entity work.microblaze_mcs_1_PC_Module
     port map (
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      D(12 downto 0) => \^d\(82 downto 70),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\,
      DI => DI,
      I3 => \OpSelect_Bits[24].Operand_Select_Bit_I/I3\,
      I3_0 => \OpSelect_Bits[25].Operand_Select_Bit_I/I3\,
      I3_1 => \OpSelect_Bits[26].Operand_Select_Bit_I/I3\,
      I3_2 => \OpSelect_Bits[27].Operand_Select_Bit_I/I3\,
      IReady => IReady,
      Increment => Increment,
      OF_PipeRun => OF_PipeRun,
      PC_OF => PC_Module_I_n_17,
      PC_Write => PC_Write,
      \Using_FPGA.Native\ => PC_Module_I_n_31,
      \Using_FPGA.Native_0\ => PC_Module_I_n_32,
      \Using_FPGA.Native_1\ => PC_Module_I_n_33,
      \Using_FPGA.Native_2\ => PC_Module_I_n_34,
      \Using_FPGA.Native_3\ => PC_Module_I_n_35,
      \Using_FPGA.Native_4\ => PC_Module_I_n_36,
      \Using_FPGA.Native_5\ => PC_Module_I_n_37,
      \Using_FPGA.Native_6\ => PC_Module_I_n_38,
      \Using_FPGA.Native_7\(12 downto 0) => \^d\(52 downto 40),
      jump => jump,
      sync_reset => sync_reset,
      \trace_pc_i_reg[17]\(12 downto 0) => \trace_pc_i_reg[17]\(12 downto 0)
    );
Register_File_I: entity work.microblaze_mcs_1_Register_File
     port map (
      Clk => Clk,
      D(7 downto 0) => \^d\(39 downto 32),
      Data_Write(23 downto 0) => Data_Write(23 downto 0),
      Reg1_Data(0 to 31) => reg1_Data(0 to 31),
      Reg_Write => Reg_Write,
      ex_Result(0 to 31) => ex_Result(0 to 31),
      imm_Value(4) => imm_Value(0),
      imm_Value(3) => imm_Value(1),
      imm_Value(2) => imm_Value(2),
      imm_Value(1) => imm_Value(3),
      imm_Value(0) => imm_Value(4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg2_Data(0 to 31) => reg2_Data(0 to 31),
      \write_Addr_I_reg[0]\(4 downto 0) => \write_Addr_I_reg[0]\(4 downto 0)
    );
Result_Mux_I: entity work.microblaze_mcs_1_Result_Mux
     port map (
      ALU_Result => ALU_I_n_31,
      Clk => Clk,
      D(31 downto 0) => \^d\(31 downto 0),
      Data_Read(15 downto 0) => Data_Read(15 downto 0),
      Interrupt_Address(0 to 31) => Interrupt_Address(0 to 31),
      Q(1 downto 0) => Q(1 downto 0),
      Select_Logic_reg => Shift_Logic_Res31_out,
      Select_Logic_reg_0 => Shift_Logic_Res30_out,
      Select_Logic_reg_1 => Shift_Logic_Res29_out,
      Select_Logic_reg_10 => Shift_Logic_Res19_out,
      Select_Logic_reg_11 => Shift_Logic_Res18_out,
      Select_Logic_reg_12 => Shift_Logic_Res17_out,
      Select_Logic_reg_13 => Shift_Logic_Res15_out,
      Select_Logic_reg_14 => Shift_Logic_Res14_out,
      Select_Logic_reg_15 => Shift_Logic_Res13_out,
      Select_Logic_reg_16 => Shift_Logic_Res12_out,
      Select_Logic_reg_17 => Shift_Logic_Res11_out,
      Select_Logic_reg_18 => Shift_Logic_Res10_out,
      Select_Logic_reg_19 => Shift_Logic_Res9_out,
      Select_Logic_reg_2 => Shift_Logic_Res28_out,
      Select_Logic_reg_20 => Shift_Logic_Res8_out,
      Select_Logic_reg_21 => Shift_Logic_Res7_out,
      Select_Logic_reg_22 => Shift_Logic_Res6_out,
      Select_Logic_reg_23 => Shift_Logic_Res5_out,
      Select_Logic_reg_24 => Shift_Logic_Res4_out,
      Select_Logic_reg_25 => Shift_Logic_Res3_out,
      Select_Logic_reg_26 => Shift_Logic_Res2_out,
      Select_Logic_reg_27 => Shift_Logic_Res1_out,
      Select_Logic_reg_28 => Shift_Logic_Res0_out,
      Select_Logic_reg_29 => Shift_Logic_Module_I_n_31,
      Select_Logic_reg_3 => Shift_Logic_Res27_out,
      Select_Logic_reg_4 => Shift_Logic_Res26_out,
      Select_Logic_reg_5 => Shift_Logic_Res24_out,
      Select_Logic_reg_6 => Shift_Logic_Res23_out,
      Select_Logic_reg_7 => Shift_Logic_Res22_out,
      Select_Logic_reg_8 => Shift_Logic_Res21_out,
      Select_Logic_reg_9 => Shift_Logic_Res20_out,
      Sext16 => Sext16,
      Shift_Logic_Res => Shift_Logic_Res,
      \Using_FPGA.Native\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_10\ => \Using_FPGA.Native_11\,
      \Using_FPGA.Native_11\ => \Using_FPGA.Native_12\,
      \Using_FPGA.Native_12\ => \Using_FPGA.Native_13\,
      \Using_FPGA.Native_13\ => \Using_FPGA.Native_14\,
      \Using_FPGA.Native_14\ => \Using_FPGA.Native_15\,
      \Using_FPGA.Native_15\ => \Using_FPGA.Native_16\,
      \Using_FPGA.Native_16\ => \Using_FPGA.Native_17\,
      \Using_FPGA.Native_17\ => \Using_FPGA.Native_18\,
      \Using_FPGA.Native_18\ => \Using_FPGA.Native_19\,
      \Using_FPGA.Native_19\ => \Using_FPGA.Native_20\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_20\ => \Using_FPGA.Native_21\,
      \Using_FPGA.Native_21\ => \Using_FPGA.Native_22\,
      \Using_FPGA.Native_22\ => \Using_FPGA.Native_23\,
      \Using_FPGA.Native_23\ => \Using_FPGA.Native_24\,
      \Using_FPGA.Native_24\ => \Using_FPGA.Native_25\,
      \Using_FPGA.Native_25\ => \Using_FPGA.Native_26\,
      \Using_FPGA.Native_26\ => \Using_FPGA.Native_27\,
      \Using_FPGA.Native_27\ => \Using_FPGA.Native_28\,
      \Using_FPGA.Native_28\ => \Using_FPGA.Native_29\,
      \Using_FPGA.Native_29\ => \Using_FPGA.Native_30\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_30\ => \Using_FPGA.Native_31\,
      \Using_FPGA.Native_31\ => ALU_I_n_32,
      \Using_FPGA.Native_32\(29 downto 0) => \^d\(69 downto 40),
      \Using_FPGA.Native_33\ => Operand_Select_I_n_44,
      \Using_FPGA.Native_34\ => Operand_Select_I_n_60,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_6\,
      \Using_FPGA.Native_6\ => \Using_FPGA.Native_7\,
      \Using_FPGA.Native_7\ => \Using_FPGA.Native_8\,
      \Using_FPGA.Native_8\ => \Using_FPGA.Native_9\,
      \Using_FPGA.Native_9\ => \Using_FPGA.Native_10\,
      doublet_Read => doublet_Read,
      ex_Result(0 to 31) => ex_Result(0 to 31),
      exception_kind(0) => exception_kind(0),
      extend_Data_Read(15 downto 0) => extend_Data_Read(15 downto 0),
      quadlet_Read => quadlet_Read,
      reg2_Data(0 to 31) => reg2_Data(0 to 31),
      res_Forward2 => res_Forward2,
      sext8 => sext8
    );
Shift_Logic_Module_I: entity work.microblaze_mcs_1_Shift_Logic_Module
     port map (
      EX_Op2 => \^ex_op2\,
      Logic_Oper(0 to 1) => Logic_Oper(0 to 1),
      Op1_Logic => \^op1_low\(1),
      Op1_Shift => \^ex_op1\,
      Op2 => Operand_Select_I_n_6,
      Select_Logic => Select_Logic,
      Sext16 => Sext16,
      Shift_Logic_Res => Shift_Logic_Res,
      Shift_Oper => Shift_Oper,
      Shifted => \^op1_shift\,
      \Using_FPGA.Native\ => Shift_Logic_Res31_out,
      \Using_FPGA.Native_0\ => Shift_Logic_Res30_out,
      \Using_FPGA.Native_1\ => Shift_Logic_Res29_out,
      \Using_FPGA.Native_10\ => Shift_Logic_Res19_out,
      \Using_FPGA.Native_11\ => Shift_Logic_Res18_out,
      \Using_FPGA.Native_12\ => Shift_Logic_Res17_out,
      \Using_FPGA.Native_13\ => Shift_Logic_Res15_out,
      \Using_FPGA.Native_14\ => Shift_Logic_Res14_out,
      \Using_FPGA.Native_15\ => Shift_Logic_Res13_out,
      \Using_FPGA.Native_16\ => Shift_Logic_Res12_out,
      \Using_FPGA.Native_17\ => Shift_Logic_Res11_out,
      \Using_FPGA.Native_18\ => Shift_Logic_Res10_out,
      \Using_FPGA.Native_19\ => Shift_Logic_Res9_out,
      \Using_FPGA.Native_2\ => Shift_Logic_Res28_out,
      \Using_FPGA.Native_20\ => Shift_Logic_Res8_out,
      \Using_FPGA.Native_21\ => Shift_Logic_Res7_out,
      \Using_FPGA.Native_22\ => Shift_Logic_Res6_out,
      \Using_FPGA.Native_23\ => Shift_Logic_Res5_out,
      \Using_FPGA.Native_24\ => Shift_Logic_Res4_out,
      \Using_FPGA.Native_25\ => Shift_Logic_Res3_out,
      \Using_FPGA.Native_26\ => Shift_Logic_Res2_out,
      \Using_FPGA.Native_27\ => Shift_Logic_Res1_out,
      \Using_FPGA.Native_28\ => Shift_Logic_Res0_out,
      \Using_FPGA.Native_29\ => Shift_Logic_Module_I_n_31,
      \Using_FPGA.Native_3\ => Shift_Logic_Res27_out,
      \Using_FPGA.Native_30\ => \^op1_low\(0),
      \Using_FPGA.Native_31\ => \^trace_data_address_i_reg[31]\,
      \Using_FPGA.Native_32\ => Operand_Select_I_n_9,
      \Using_FPGA.Native_33\ => Operand_Select_I_n_10,
      \Using_FPGA.Native_34\ => Operand_Select_I_n_40,
      \Using_FPGA.Native_35\ => Operand_Select_I_n_42,
      \Using_FPGA.Native_36\ => Operand_Select_I_n_44,
      \Using_FPGA.Native_37\ => Operand_Select_I_n_46,
      \Using_FPGA.Native_38\ => Operand_Select_I_n_48,
      \Using_FPGA.Native_39\ => Operand_Select_I_n_50,
      \Using_FPGA.Native_4\ => Shift_Logic_Res26_out,
      \Using_FPGA.Native_40\ => Operand_Select_I_n_52,
      \Using_FPGA.Native_41\ => Operand_Select_I_n_54,
      \Using_FPGA.Native_42\ => Operand_Select_I_n_56,
      \Using_FPGA.Native_43\ => Operand_Select_I_n_58,
      \Using_FPGA.Native_44\ => Operand_Select_I_n_60,
      \Using_FPGA.Native_45\ => Operand_Select_I_n_62,
      \Using_FPGA.Native_46\ => Operand_Select_I_n_64,
      \Using_FPGA.Native_47\ => Operand_Select_I_n_66,
      \Using_FPGA.Native_48\ => Operand_Select_I_n_68,
      \Using_FPGA.Native_49\ => Operand_Select_I_n_70,
      \Using_FPGA.Native_5\ => Shift_Logic_Res24_out,
      \Using_FPGA.Native_50\ => Operand_Select_I_n_72,
      \Using_FPGA.Native_51\ => Operand_Select_I_n_74,
      \Using_FPGA.Native_52\ => Operand_Select_I_n_76,
      \Using_FPGA.Native_53\ => Operand_Select_I_n_78,
      \Using_FPGA.Native_54\ => Operand_Select_I_n_80,
      \Using_FPGA.Native_55\ => Operand_Select_I_n_82,
      \Using_FPGA.Native_56\ => Operand_Select_I_n_84,
      \Using_FPGA.Native_57\ => Operand_Select_I_n_86,
      \Using_FPGA.Native_58\ => Operand_Select_I_n_88,
      \Using_FPGA.Native_59\ => Operand_Select_I_n_90,
      \Using_FPGA.Native_6\ => Shift_Logic_Res23_out,
      \Using_FPGA.Native_60\ => \^using_fpga.native\,
      \Using_FPGA.Native_61\ => Shifted,
      \Using_FPGA.Native_7\ => Shift_Logic_Res22_out,
      \Using_FPGA.Native_8\ => Shift_Logic_Res21_out,
      \Using_FPGA.Native_9\ => Shift_Logic_Res20_out,
      op2_C(27) => op2_C(0),
      op2_C(26) => op2_C(1),
      op2_C(25) => op2_C(2),
      op2_C(24) => op2_C(3),
      op2_C(23) => op2_C(4),
      op2_C(22) => op2_C(5),
      op2_C(21) => op2_C(6),
      op2_C(20) => op2_C(7),
      op2_C(19) => op2_C(8),
      op2_C(18) => op2_C(9),
      op2_C(17) => op2_C(10),
      op2_C(16) => op2_C(11),
      op2_C(15) => op2_C(12),
      op2_C(14) => op2_C(13),
      op2_C(13) => op2_C(14),
      op2_C(12) => op2_C(15),
      op2_C(11) => op2_C(16),
      op2_C(10) => op2_C(17),
      op2_C(9) => op2_C(18),
      op2_C(8) => op2_C(19),
      op2_C(7) => op2_C(20),
      op2_C(6) => op2_C(21),
      op2_C(5) => op2_C(22),
      op2_C(4) => op2_C(23),
      op2_C(3) => op2_C(24),
      op2_C(2) => op2_C(25),
      op2_C(1) => op2_C(26),
      op2_C(0) => op2_C(27),
      sext8 => sext8
    );
Zero_Detect_I: entity work.microblaze_mcs_1_Zero_Detect
     port map (
      Reg_Test_Equal => Reg_Test_Equal,
      Reg_zero => Reg_zero,
      \Using_FPGA.Native\ => Operand_Select_I_n_45,
      \Using_FPGA.Native_0\ => Operand_Select_I_n_5,
      \Using_FPGA.Native_1\ => Operand_Select_I_n_11,
      \Using_FPGA.Native_10\ => Operand_Select_I_n_53,
      \Using_FPGA.Native_11\ => Operand_Select_I_n_69,
      \Using_FPGA.Native_12\ => Operand_Select_I_n_59,
      \Using_FPGA.Native_13\ => Operand_Select_I_n_63,
      \Using_FPGA.Native_14\ => Operand_Select_I_n_61,
      \Using_FPGA.Native_15\ => Operand_Select_I_n_67,
      \Using_FPGA.Native_16\ => Operand_Select_I_n_65,
      \Using_FPGA.Native_17\ => Operand_Select_I_n_81,
      \Using_FPGA.Native_18\ => Operand_Select_I_n_71,
      \Using_FPGA.Native_19\ => Operand_Select_I_n_75,
      \Using_FPGA.Native_2\ => Operand_Select_I_n_8,
      \Using_FPGA.Native_20\ => Operand_Select_I_n_73,
      \Using_FPGA.Native_21\ => Operand_Select_I_n_79,
      \Using_FPGA.Native_22\ => Operand_Select_I_n_77,
      \Using_FPGA.Native_23\ => \^trace_jump_taken_i_reg\,
      \Using_FPGA.Native_24\ => Operand_Select_I_n_83,
      \Using_FPGA.Native_25\ => Operand_Select_I_n_87,
      \Using_FPGA.Native_26\ => Operand_Select_I_n_85,
      \Using_FPGA.Native_27\ => Operand_Select_I_n_91,
      \Using_FPGA.Native_28\ => Operand_Select_I_n_89,
      \Using_FPGA.Native_3\ => Operand_Select_I_n_43,
      \Using_FPGA.Native_4\ => Operand_Select_I_n_41,
      \Using_FPGA.Native_5\ => Operand_Select_I_n_57,
      \Using_FPGA.Native_6\ => Operand_Select_I_n_47,
      \Using_FPGA.Native_7\ => Operand_Select_I_n_51,
      \Using_FPGA.Native_8\ => Operand_Select_I_n_49,
      \Using_FPGA.Native_9\ => Operand_Select_I_n_55,
      \Zero_Detecting[0].nibble_Zero_reg\ => \Zero_Detecting[0].nibble_Zero_reg\,
      lopt => lopt_6,
      lopt_1 => lopt_7,
      lopt_2 => lopt_8,
      reg_Test_Equal_N => reg_Test_Equal_N
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_blk_mem_gen_top is
  port (
    douta : out STD_LOGIC_VECTOR ( 31 downto 0 );
    doutb : out STD_LOGIC_VECTOR ( 31 downto 0 );
    rsta_busy : out STD_LOGIC;
    rstb_busy : out STD_LOGIC;
    clkb : in STD_LOGIC;
    clka : in STD_LOGIC;
    addra : in STD_LOGIC_VECTOR ( 12 downto 0 );
    addrb : in STD_LOGIC_VECTOR ( 12 downto 0 );
    dina : in STD_LOGIC_VECTOR ( 31 downto 0 );
    dinb : in STD_LOGIC_VECTOR ( 31 downto 0 );
    wea : in STD_LOGIC_VECTOR ( 3 downto 0 );
    web : in STD_LOGIC_VECTOR ( 3 downto 0 );
    rsta : in STD_LOGIC;
    ena : in STD_LOGIC;
    rstb : in STD_LOGIC;
    enb : in STD_LOGIC
  );
end microblaze_mcs_1_blk_mem_gen_top;

architecture STRUCTURE of microblaze_mcs_1_blk_mem_gen_top is
begin
\valid.cstr\: entity work.microblaze_mcs_1_blk_mem_gen_generic_cstr
     port map (
      addra(12 downto 0) => addra(12 downto 0),
      addrb(12 downto 0) => addrb(12 downto 0),
      clka => clka,
      clkb => clkb,
      dina(31 downto 0) => dina(31 downto 0),
      dinb(31 downto 0) => dinb(31 downto 0),
      douta(31 downto 0) => douta(31 downto 0),
      doutb(31 downto 0) => doutb(31 downto 0),
      ena => ena,
      enb => enb,
      rsta => rsta,
      rsta_busy => rsta_busy,
      rstb => rstb,
      rstb_busy => rstb_busy,
      wea(3 downto 0) => wea(3 downto 0),
      web(3 downto 0) => web(3 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_iomodule is
  port (
    Clk : in STD_LOGIC;
    Rst : in STD_LOGIC;
    Config_Reset : in STD_LOGIC;
    TMR_Rst : in STD_LOGIC;
    TMR_Disable : in STD_LOGIC;
    ToVote : out STD_LOGIC_VECTOR ( 1023 downto 0 );
    FromAVote : in STD_LOGIC_VECTOR ( 1023 downto 0 );
    FromBVote : in STD_LOGIC_VECTOR ( 1023 downto 0 );
    IO_Addr_Strobe : out STD_LOGIC;
    IO_Read_Strobe : out STD_LOGIC;
    IO_Write_Strobe : out STD_LOGIC;
    IO_Address : out STD_LOGIC_VECTOR ( 31 downto 0 );
    IO_Byte_Enable : out STD_LOGIC_VECTOR ( 3 downto 0 );
    IO_Write_Data : out STD_LOGIC_VECTOR ( 31 downto 0 );
    IO_Read_Data : in STD_LOGIC_VECTOR ( 31 downto 0 );
    IO_Ready : in STD_LOGIC;
    UART_Rx : in STD_LOGIC;
    UART_Tx : out STD_LOGIC;
    UART_Interrupt : out STD_LOGIC;
    FIT1_Interrupt : out STD_LOGIC;
    FIT1_Toggle : out STD_LOGIC;
    FIT2_Interrupt : out STD_LOGIC;
    FIT2_Toggle : out STD_LOGIC;
    FIT3_Interrupt : out STD_LOGIC;
    FIT3_Toggle : out STD_LOGIC;
    FIT4_Interrupt : out STD_LOGIC;
    FIT4_Toggle : out STD_LOGIC;
    PIT1_Enable : in STD_LOGIC;
    PIT1_Interrupt : out STD_LOGIC;
    PIT1_Toggle : out STD_LOGIC;
    PIT2_Enable : in STD_LOGIC;
    PIT2_Interrupt : out STD_LOGIC;
    PIT2_Toggle : out STD_LOGIC;
    PIT3_Enable : in STD_LOGIC;
    PIT3_Interrupt : out STD_LOGIC;
    PIT3_Toggle : out STD_LOGIC;
    PIT4_Enable : in STD_LOGIC;
    PIT4_Interrupt : out STD_LOGIC;
    PIT4_Toggle : out STD_LOGIC;
    GPO1 : out STD_LOGIC_VECTOR ( 7 downto 0 );
    GPO2 : out STD_LOGIC_VECTOR ( 31 downto 0 );
    GPO3 : out STD_LOGIC_VECTOR ( 31 downto 0 );
    GPO4 : out STD_LOGIC_VECTOR ( 31 downto 0 );
    GPI1 : in STD_LOGIC_VECTOR ( 7 downto 0 );
    GPI1_Interrupt : out STD_LOGIC;
    GPI2 : in STD_LOGIC_VECTOR ( 31 downto 0 );
    GPI2_Interrupt : out STD_LOGIC;
    GPI3 : in STD_LOGIC_VECTOR ( 31 downto 0 );
    GPI3_Interrupt : out STD_LOGIC;
    GPI4 : in STD_LOGIC_VECTOR ( 31 downto 0 );
    GPI4_Interrupt : out STD_LOGIC;
    INTC_Interrupt : in STD_LOGIC_VECTOR ( 0 to 0 );
    INTC_IRQ : out STD_LOGIC;
    INTC_Processor_Ack : in STD_LOGIC_VECTOR ( 1 downto 0 );
    INTC_Interrupt_Address : out STD_LOGIC_VECTOR ( 31 downto 0 );
    INTC_IRQ_OUT : out STD_LOGIC;
    LMB_ABus : in STD_LOGIC_VECTOR ( 0 to 31 );
    LMB_WriteDBus : in STD_LOGIC_VECTOR ( 0 to 31 );
    LMB_AddrStrobe : in STD_LOGIC;
    LMB_ReadStrobe : in STD_LOGIC;
    LMB_WriteStrobe : in STD_LOGIC;
    LMB_BE : in STD_LOGIC_VECTOR ( 0 to 3 );
    Sl_DBus : out STD_LOGIC_VECTOR ( 0 to 31 );
    Sl_Ready : out STD_LOGIC;
    Sl_Wait : out STD_LOGIC;
    Sl_UE : out STD_LOGIC;
    Sl_CE : out STD_LOGIC
  );
  attribute C_AVOID_PRIMITIVES : integer;
  attribute C_AVOID_PRIMITIVES of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_BASEADDR : string;
  attribute C_BASEADDR of microblaze_mcs_1_iomodule : entity is "64'b0000000000000000000000000000000010000000000000000000000000000000";
  attribute C_FAMILY : string;
  attribute C_FAMILY of microblaze_mcs_1_iomodule : entity is "spartan7";
  attribute C_FIT1_INTERRUPT : integer;
  attribute C_FIT1_INTERRUPT of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_FIT1_No_CLOCKS : integer;
  attribute C_FIT1_No_CLOCKS of microblaze_mcs_1_iomodule : entity is 6216;
  attribute C_FIT2_INTERRUPT : integer;
  attribute C_FIT2_INTERRUPT of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_FIT2_No_CLOCKS : integer;
  attribute C_FIT2_No_CLOCKS of microblaze_mcs_1_iomodule : entity is 6216;
  attribute C_FIT3_INTERRUPT : integer;
  attribute C_FIT3_INTERRUPT of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_FIT3_No_CLOCKS : integer;
  attribute C_FIT3_No_CLOCKS of microblaze_mcs_1_iomodule : entity is 6216;
  attribute C_FIT4_INTERRUPT : integer;
  attribute C_FIT4_INTERRUPT of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_FIT4_No_CLOCKS : integer;
  attribute C_FIT4_No_CLOCKS of microblaze_mcs_1_iomodule : entity is 6216;
  attribute C_FREQ : integer;
  attribute C_FREQ of microblaze_mcs_1_iomodule : entity is 100000000;
  attribute C_GPI1_INTERRUPT : integer;
  attribute C_GPI1_INTERRUPT of microblaze_mcs_1_iomodule : entity is 2;
  attribute C_GPI1_SIZE : integer;
  attribute C_GPI1_SIZE of microblaze_mcs_1_iomodule : entity is 8;
  attribute C_GPI2_INTERRUPT : integer;
  attribute C_GPI2_INTERRUPT of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_GPI2_SIZE : integer;
  attribute C_GPI2_SIZE of microblaze_mcs_1_iomodule : entity is 32;
  attribute C_GPI3_INTERRUPT : integer;
  attribute C_GPI3_INTERRUPT of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_GPI3_SIZE : integer;
  attribute C_GPI3_SIZE of microblaze_mcs_1_iomodule : entity is 32;
  attribute C_GPI4_INTERRUPT : integer;
  attribute C_GPI4_INTERRUPT of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_GPI4_SIZE : integer;
  attribute C_GPI4_SIZE of microblaze_mcs_1_iomodule : entity is 32;
  attribute C_GPO1_INIT : integer;
  attribute C_GPO1_INIT of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_GPO1_SIZE : integer;
  attribute C_GPO1_SIZE of microblaze_mcs_1_iomodule : entity is 8;
  attribute C_GPO2_INIT : integer;
  attribute C_GPO2_INIT of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_GPO2_SIZE : integer;
  attribute C_GPO2_SIZE of microblaze_mcs_1_iomodule : entity is 32;
  attribute C_GPO3_INIT : integer;
  attribute C_GPO3_INIT of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_GPO3_SIZE : integer;
  attribute C_GPO3_SIZE of microblaze_mcs_1_iomodule : entity is 32;
  attribute C_GPO4_INIT : integer;
  attribute C_GPO4_INIT of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_GPO4_SIZE : integer;
  attribute C_GPO4_SIZE of microblaze_mcs_1_iomodule : entity is 32;
  attribute C_HIGHADDR : string;
  attribute C_HIGHADDR of microblaze_mcs_1_iomodule : entity is "64'b0000000000000000000000000000000010000000000000001111111111111111";
  attribute C_INSTANCE : string;
  attribute C_INSTANCE of microblaze_mcs_1_iomodule : entity is "iomodule";
  attribute C_INTC_ADDR_WIDTH : integer;
  attribute C_INTC_ADDR_WIDTH of microblaze_mcs_1_iomodule : entity is 15;
  attribute C_INTC_ASYNC_INTR : string;
  attribute C_INTC_ASYNC_INTR of microblaze_mcs_1_iomodule : entity is "16'b1111111111111111";
  attribute C_INTC_BASE_VECTORS : integer;
  attribute C_INTC_BASE_VECTORS of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_INTC_HAS_FAST : integer;
  attribute C_INTC_HAS_FAST of microblaze_mcs_1_iomodule : entity is 1;
  attribute C_INTC_INTR_SIZE : integer;
  attribute C_INTC_INTR_SIZE of microblaze_mcs_1_iomodule : entity is 1;
  attribute C_INTC_LEVEL_EDGE : string;
  attribute C_INTC_LEVEL_EDGE of microblaze_mcs_1_iomodule : entity is "16'b0000000000000000";
  attribute C_INTC_NUM_SYNC_FF : integer;
  attribute C_INTC_NUM_SYNC_FF of microblaze_mcs_1_iomodule : entity is 2;
  attribute C_INTC_POSITIVE : string;
  attribute C_INTC_POSITIVE of microblaze_mcs_1_iomodule : entity is "16'b1111111111111111";
  attribute C_INTC_USE_EXT_INTR : integer;
  attribute C_INTC_USE_EXT_INTR of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_IO_BASEADDR : string;
  attribute C_IO_BASEADDR of microblaze_mcs_1_iomodule : entity is "64'b0000000000000000000000000000000011000000000000000000000000000000";
  attribute C_IO_HIGHADDR : string;
  attribute C_IO_HIGHADDR of microblaze_mcs_1_iomodule : entity is "64'b0000000000000000000000000000000011111111111111111111111111111111";
  attribute C_IO_MASK : string;
  attribute C_IO_MASK of microblaze_mcs_1_iomodule : entity is "64'b0000000000000000000000000000000011000000000000000000000000000000";
  attribute C_LMB_AWIDTH : integer;
  attribute C_LMB_AWIDTH of microblaze_mcs_1_iomodule : entity is 32;
  attribute C_LMB_DWIDTH : integer;
  attribute C_LMB_DWIDTH of microblaze_mcs_1_iomodule : entity is 32;
  attribute C_MASK : string;
  attribute C_MASK of microblaze_mcs_1_iomodule : entity is "64'b0000000000000000000000000000000011000000000000000000000000000000";
  attribute C_PIT1_INTERRUPT : integer;
  attribute C_PIT1_INTERRUPT of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_PIT1_PRESCALER : integer;
  attribute C_PIT1_PRESCALER of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_PIT1_READABLE : integer;
  attribute C_PIT1_READABLE of microblaze_mcs_1_iomodule : entity is 1;
  attribute C_PIT1_SIZE : integer;
  attribute C_PIT1_SIZE of microblaze_mcs_1_iomodule : entity is 32;
  attribute C_PIT2_INTERRUPT : integer;
  attribute C_PIT2_INTERRUPT of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_PIT2_PRESCALER : integer;
  attribute C_PIT2_PRESCALER of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_PIT2_READABLE : integer;
  attribute C_PIT2_READABLE of microblaze_mcs_1_iomodule : entity is 1;
  attribute C_PIT2_SIZE : integer;
  attribute C_PIT2_SIZE of microblaze_mcs_1_iomodule : entity is 32;
  attribute C_PIT3_INTERRUPT : integer;
  attribute C_PIT3_INTERRUPT of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_PIT3_PRESCALER : integer;
  attribute C_PIT3_PRESCALER of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_PIT3_READABLE : integer;
  attribute C_PIT3_READABLE of microblaze_mcs_1_iomodule : entity is 1;
  attribute C_PIT3_SIZE : integer;
  attribute C_PIT3_SIZE of microblaze_mcs_1_iomodule : entity is 32;
  attribute C_PIT4_INTERRUPT : integer;
  attribute C_PIT4_INTERRUPT of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_PIT4_PRESCALER : integer;
  attribute C_PIT4_PRESCALER of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_PIT4_READABLE : integer;
  attribute C_PIT4_READABLE of microblaze_mcs_1_iomodule : entity is 1;
  attribute C_PIT4_SIZE : integer;
  attribute C_PIT4_SIZE of microblaze_mcs_1_iomodule : entity is 32;
  attribute C_TMR : integer;
  attribute C_TMR of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_UART_BAUDRATE : integer;
  attribute C_UART_BAUDRATE of microblaze_mcs_1_iomodule : entity is 115200;
  attribute C_UART_DATA_BITS : integer;
  attribute C_UART_DATA_BITS of microblaze_mcs_1_iomodule : entity is 8;
  attribute C_UART_ERROR_INTERRUPT : integer;
  attribute C_UART_ERROR_INTERRUPT of microblaze_mcs_1_iomodule : entity is 1;
  attribute C_UART_ODD_PARITY : integer;
  attribute C_UART_ODD_PARITY of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_UART_PROG_BAUDRATE : integer;
  attribute C_UART_PROG_BAUDRATE of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_UART_RX_INTERRUPT : integer;
  attribute C_UART_RX_INTERRUPT of microblaze_mcs_1_iomodule : entity is 1;
  attribute C_UART_TX_INTERRUPT : integer;
  attribute C_UART_TX_INTERRUPT of microblaze_mcs_1_iomodule : entity is 1;
  attribute C_UART_USE_PARITY : integer;
  attribute C_UART_USE_PARITY of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_USE_CONFIG_RESET : integer;
  attribute C_USE_CONFIG_RESET of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_USE_FIT1 : integer;
  attribute C_USE_FIT1 of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_USE_FIT2 : integer;
  attribute C_USE_FIT2 of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_USE_FIT3 : integer;
  attribute C_USE_FIT3 of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_USE_FIT4 : integer;
  attribute C_USE_FIT4 of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_USE_GPI1 : integer;
  attribute C_USE_GPI1 of microblaze_mcs_1_iomodule : entity is 1;
  attribute C_USE_GPI2 : integer;
  attribute C_USE_GPI2 of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_USE_GPI3 : integer;
  attribute C_USE_GPI3 of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_USE_GPI4 : integer;
  attribute C_USE_GPI4 of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_USE_GPO1 : integer;
  attribute C_USE_GPO1 of microblaze_mcs_1_iomodule : entity is 1;
  attribute C_USE_GPO2 : integer;
  attribute C_USE_GPO2 of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_USE_GPO3 : integer;
  attribute C_USE_GPO3 of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_USE_GPO4 : integer;
  attribute C_USE_GPO4 of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_USE_IO_BUS : integer;
  attribute C_USE_IO_BUS of microblaze_mcs_1_iomodule : entity is 1;
  attribute C_USE_PIT1 : integer;
  attribute C_USE_PIT1 of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_USE_PIT2 : integer;
  attribute C_USE_PIT2 of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_USE_PIT3 : integer;
  attribute C_USE_PIT3 of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_USE_PIT4 : integer;
  attribute C_USE_PIT4 of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_USE_TMR_DISABLE : integer;
  attribute C_USE_TMR_DISABLE of microblaze_mcs_1_iomodule : entity is 0;
  attribute C_USE_UART_RX : integer;
  attribute C_USE_UART_RX of microblaze_mcs_1_iomodule : entity is 1;
  attribute C_USE_UART_TX : integer;
  attribute C_USE_UART_TX of microblaze_mcs_1_iomodule : entity is 1;
end microblaze_mcs_1_iomodule;

architecture STRUCTURE of microblaze_mcs_1_iomodule is
  signal \<const0>\ : STD_LOGIC;
  signal \^intc_irq\ : STD_LOGIC;
  signal \^intc_interrupt_address\ : STD_LOGIC_VECTOR ( 14 downto 2 );
  signal \IO_Read_Strobe__0\ : STD_LOGIC;
  signal \IO_Write_Strobe__0\ : STD_LOGIC;
  signal \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\ : STD_LOGIC;
  signal \Using_IO_Bus.io_read_keep_i_1_n_0\ : STD_LOGIC;
  signal \Using_IO_Bus.io_read_keep_reg_n_0\ : STD_LOGIC;
  signal \Using_IO_Bus.lmb_io_select_keep_i_1_n_0\ : STD_LOGIC;
  signal io_bus_read_data : STD_LOGIC_VECTOR ( 11 downto 0 );
  signal io_ready_Q : STD_LOGIC;
  signal \lmb_abus_Q_reg_n_0_[1]\ : STD_LOGIC;
  signal \lmb_abus_Q_reg_n_0_[2]\ : STD_LOGIC;
  signal \lmb_abus_Q_reg_n_0_[3]\ : STD_LOGIC;
  signal \lmb_abus_Q_reg_n_0_[4]\ : STD_LOGIC;
  signal \lmb_abus_Q_reg_n_0_[5]\ : STD_LOGIC;
  signal lmb_io_select_keep : STD_LOGIC;
  signal lmb_reg_read : STD_LOGIC;
  signal lmb_reg_read0 : STD_LOGIC;
  signal lmb_reg_read_Q : STD_LOGIC;
  signal lmb_reg_write : STD_LOGIC;
  signal lmb_reg_write0 : STD_LOGIC;
  signal p_0_in19_in : STD_LOGIC;
  signal p_0_out : STD_LOGIC;
  signal p_21_out : STD_LOGIC;
  signal p_22_out : STD_LOGIC;
  signal uart_tx_write : STD_LOGIC;
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of uart_tx_write : signal is "true";
  signal uart_tx_write_inferred_i_2_n_0 : STD_LOGIC;
  signal write_data : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute RTL_KEEP of write_data : signal is "true";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of Sl_Wait_INST_0 : label is "soft_lutpair12";
  attribute SOFT_HLUTNM of \Using_IO_Bus.IO_Read_Strobe_i_1\ : label is "soft_lutpair11";
  attribute SOFT_HLUTNM of \Using_IO_Bus.IO_Write_Strobe_i_1\ : label is "soft_lutpair11";
  attribute SOFT_HLUTNM of \Using_IO_Bus.io_ready_Q_i_1\ : label is "soft_lutpair12";
  attribute SOFT_HLUTNM of lmb_reg_read_i_1 : label is "soft_lutpair10";
  attribute SOFT_HLUTNM of lmb_reg_write_i_1 : label is "soft_lutpair10";
  attribute KEEP : string;
  attribute KEEP of \write_data_reg[0]\ : label is "yes";
  attribute equivalent_register_removal : string;
  attribute equivalent_register_removal of \write_data_reg[0]\ : label is "no";
  attribute KEEP of \write_data_reg[10]\ : label is "yes";
  attribute equivalent_register_removal of \write_data_reg[10]\ : label is "no";
  attribute KEEP of \write_data_reg[11]\ : label is "yes";
  attribute equivalent_register_removal of \write_data_reg[11]\ : label is "no";
  attribute KEEP of \write_data_reg[12]\ : label is "yes";
  attribute equivalent_register_removal of \write_data_reg[12]\ : label is "no";
  attribute KEEP of \write_data_reg[13]\ : label is "yes";
  attribute equivalent_register_removal of \write_data_reg[13]\ : label is "no";
  attribute KEEP of \write_data_reg[14]\ : label is "yes";
  attribute equivalent_register_removal of \write_data_reg[14]\ : label is "no";
  attribute KEEP of \write_data_reg[15]\ : label is "yes";
  attribute equivalent_register_removal of \write_data_reg[15]\ : label is "no";
  attribute KEEP of \write_data_reg[16]\ : label is "yes";
  attribute equivalent_register_removal of \write_data_reg[16]\ : label is "no";
  attribute KEEP of \write_data_reg[17]\ : label is "yes";
  attribute equivalent_register_removal of \write_data_reg[17]\ : label is "no";
  attribute KEEP of \write_data_reg[18]\ : label is "yes";
  attribute equivalent_register_removal of \write_data_reg[18]\ : label is "no";
  attribute KEEP of \write_data_reg[19]\ : label is "yes";
  attribute equivalent_register_removal of \write_data_reg[19]\ : label is "no";
  attribute KEEP of \write_data_reg[1]\ : label is "yes";
  attribute equivalent_register_removal of \write_data_reg[1]\ : label is "no";
  attribute KEEP of \write_data_reg[20]\ : label is "yes";
  attribute equivalent_register_removal of \write_data_reg[20]\ : label is "no";
  attribute KEEP of \write_data_reg[21]\ : label is "yes";
  attribute equivalent_register_removal of \write_data_reg[21]\ : label is "no";
  attribute KEEP of \write_data_reg[22]\ : label is "yes";
  attribute equivalent_register_removal of \write_data_reg[22]\ : label is "no";
  attribute KEEP of \write_data_reg[23]\ : label is "yes";
  attribute equivalent_register_removal of \write_data_reg[23]\ : label is "no";
  attribute KEEP of \write_data_reg[24]\ : label is "yes";
  attribute equivalent_register_removal of \write_data_reg[24]\ : label is "no";
  attribute KEEP of \write_data_reg[25]\ : label is "yes";
  attribute equivalent_register_removal of \write_data_reg[25]\ : label is "no";
  attribute KEEP of \write_data_reg[26]\ : label is "yes";
  attribute equivalent_register_removal of \write_data_reg[26]\ : label is "no";
  attribute KEEP of \write_data_reg[27]\ : label is "yes";
  attribute equivalent_register_removal of \write_data_reg[27]\ : label is "no";
  attribute KEEP of \write_data_reg[28]\ : label is "yes";
  attribute equivalent_register_removal of \write_data_reg[28]\ : label is "no";
  attribute KEEP of \write_data_reg[29]\ : label is "yes";
  attribute equivalent_register_removal of \write_data_reg[29]\ : label is "no";
  attribute KEEP of \write_data_reg[2]\ : label is "yes";
  attribute equivalent_register_removal of \write_data_reg[2]\ : label is "no";
  attribute KEEP of \write_data_reg[30]\ : label is "yes";
  attribute equivalent_register_removal of \write_data_reg[30]\ : label is "no";
  attribute KEEP of \write_data_reg[31]\ : label is "yes";
  attribute equivalent_register_removal of \write_data_reg[31]\ : label is "no";
  attribute KEEP of \write_data_reg[3]\ : label is "yes";
  attribute equivalent_register_removal of \write_data_reg[3]\ : label is "no";
  attribute KEEP of \write_data_reg[4]\ : label is "yes";
  attribute equivalent_register_removal of \write_data_reg[4]\ : label is "no";
  attribute KEEP of \write_data_reg[5]\ : label is "yes";
  attribute equivalent_register_removal of \write_data_reg[5]\ : label is "no";
  attribute KEEP of \write_data_reg[6]\ : label is "yes";
  attribute equivalent_register_removal of \write_data_reg[6]\ : label is "no";
  attribute KEEP of \write_data_reg[7]\ : label is "yes";
  attribute equivalent_register_removal of \write_data_reg[7]\ : label is "no";
  attribute KEEP of \write_data_reg[8]\ : label is "yes";
  attribute equivalent_register_removal of \write_data_reg[8]\ : label is "no";
  attribute KEEP of \write_data_reg[9]\ : label is "yes";
  attribute equivalent_register_removal of \write_data_reg[9]\ : label is "no";
begin
  FIT1_Interrupt <= \<const0>\;
  FIT1_Toggle <= \<const0>\;
  FIT2_Interrupt <= \<const0>\;
  FIT2_Toggle <= \<const0>\;
  FIT3_Interrupt <= \<const0>\;
  FIT3_Toggle <= \<const0>\;
  FIT4_Interrupt <= \<const0>\;
  FIT4_Toggle <= \<const0>\;
  GPI2_Interrupt <= \<const0>\;
  GPI3_Interrupt <= \<const0>\;
  GPI4_Interrupt <= \<const0>\;
  GPO2(31) <= \<const0>\;
  GPO2(30) <= \<const0>\;
  GPO2(29) <= \<const0>\;
  GPO2(28) <= \<const0>\;
  GPO2(27) <= \<const0>\;
  GPO2(26) <= \<const0>\;
  GPO2(25) <= \<const0>\;
  GPO2(24) <= \<const0>\;
  GPO2(23) <= \<const0>\;
  GPO2(22) <= \<const0>\;
  GPO2(21) <= \<const0>\;
  GPO2(20) <= \<const0>\;
  GPO2(19) <= \<const0>\;
  GPO2(18) <= \<const0>\;
  GPO2(17) <= \<const0>\;
  GPO2(16) <= \<const0>\;
  GPO2(15) <= \<const0>\;
  GPO2(14) <= \<const0>\;
  GPO2(13) <= \<const0>\;
  GPO2(12) <= \<const0>\;
  GPO2(11) <= \<const0>\;
  GPO2(10) <= \<const0>\;
  GPO2(9) <= \<const0>\;
  GPO2(8) <= \<const0>\;
  GPO2(7) <= \<const0>\;
  GPO2(6) <= \<const0>\;
  GPO2(5) <= \<const0>\;
  GPO2(4) <= \<const0>\;
  GPO2(3) <= \<const0>\;
  GPO2(2) <= \<const0>\;
  GPO2(1) <= \<const0>\;
  GPO2(0) <= \<const0>\;
  GPO3(31) <= \<const0>\;
  GPO3(30) <= \<const0>\;
  GPO3(29) <= \<const0>\;
  GPO3(28) <= \<const0>\;
  GPO3(27) <= \<const0>\;
  GPO3(26) <= \<const0>\;
  GPO3(25) <= \<const0>\;
  GPO3(24) <= \<const0>\;
  GPO3(23) <= \<const0>\;
  GPO3(22) <= \<const0>\;
  GPO3(21) <= \<const0>\;
  GPO3(20) <= \<const0>\;
  GPO3(19) <= \<const0>\;
  GPO3(18) <= \<const0>\;
  GPO3(17) <= \<const0>\;
  GPO3(16) <= \<const0>\;
  GPO3(15) <= \<const0>\;
  GPO3(14) <= \<const0>\;
  GPO3(13) <= \<const0>\;
  GPO3(12) <= \<const0>\;
  GPO3(11) <= \<const0>\;
  GPO3(10) <= \<const0>\;
  GPO3(9) <= \<const0>\;
  GPO3(8) <= \<const0>\;
  GPO3(7) <= \<const0>\;
  GPO3(6) <= \<const0>\;
  GPO3(5) <= \<const0>\;
  GPO3(4) <= \<const0>\;
  GPO3(3) <= \<const0>\;
  GPO3(2) <= \<const0>\;
  GPO3(1) <= \<const0>\;
  GPO3(0) <= \<const0>\;
  GPO4(31) <= \<const0>\;
  GPO4(30) <= \<const0>\;
  GPO4(29) <= \<const0>\;
  GPO4(28) <= \<const0>\;
  GPO4(27) <= \<const0>\;
  GPO4(26) <= \<const0>\;
  GPO4(25) <= \<const0>\;
  GPO4(24) <= \<const0>\;
  GPO4(23) <= \<const0>\;
  GPO4(22) <= \<const0>\;
  GPO4(21) <= \<const0>\;
  GPO4(20) <= \<const0>\;
  GPO4(19) <= \<const0>\;
  GPO4(18) <= \<const0>\;
  GPO4(17) <= \<const0>\;
  GPO4(16) <= \<const0>\;
  GPO4(15) <= \<const0>\;
  GPO4(14) <= \<const0>\;
  GPO4(13) <= \<const0>\;
  GPO4(12) <= \<const0>\;
  GPO4(11) <= \<const0>\;
  GPO4(10) <= \<const0>\;
  GPO4(9) <= \<const0>\;
  GPO4(8) <= \<const0>\;
  GPO4(7) <= \<const0>\;
  GPO4(6) <= \<const0>\;
  GPO4(5) <= \<const0>\;
  GPO4(4) <= \<const0>\;
  GPO4(3) <= \<const0>\;
  GPO4(2) <= \<const0>\;
  GPO4(1) <= \<const0>\;
  GPO4(0) <= \<const0>\;
  INTC_IRQ <= \^intc_irq\;
  INTC_IRQ_OUT <= \^intc_irq\;
  INTC_Interrupt_Address(31) <= \<const0>\;
  INTC_Interrupt_Address(30) <= \<const0>\;
  INTC_Interrupt_Address(29) <= \<const0>\;
  INTC_Interrupt_Address(28) <= \<const0>\;
  INTC_Interrupt_Address(27) <= \<const0>\;
  INTC_Interrupt_Address(26) <= \<const0>\;
  INTC_Interrupt_Address(25) <= \<const0>\;
  INTC_Interrupt_Address(24) <= \<const0>\;
  INTC_Interrupt_Address(23) <= \<const0>\;
  INTC_Interrupt_Address(22) <= \<const0>\;
  INTC_Interrupt_Address(21) <= \<const0>\;
  INTC_Interrupt_Address(20) <= \<const0>\;
  INTC_Interrupt_Address(19) <= \<const0>\;
  INTC_Interrupt_Address(18) <= \<const0>\;
  INTC_Interrupt_Address(17) <= \<const0>\;
  INTC_Interrupt_Address(16) <= \<const0>\;
  INTC_Interrupt_Address(15) <= \<const0>\;
  INTC_Interrupt_Address(14 downto 2) <= \^intc_interrupt_address\(14 downto 2);
  INTC_Interrupt_Address(1) <= \<const0>\;
  INTC_Interrupt_Address(0) <= \<const0>\;
  PIT1_Interrupt <= \<const0>\;
  PIT1_Toggle <= \<const0>\;
  PIT2_Interrupt <= \<const0>\;
  PIT2_Toggle <= \<const0>\;
  PIT3_Interrupt <= \<const0>\;
  PIT3_Toggle <= \<const0>\;
  PIT4_Interrupt <= \<const0>\;
  PIT4_Toggle <= \<const0>\;
  Sl_CE <= \<const0>\;
  Sl_UE <= \<const0>\;
  ToVote(1023) <= \<const0>\;
  ToVote(1022) <= \<const0>\;
  ToVote(1021) <= \<const0>\;
  ToVote(1020) <= \<const0>\;
  ToVote(1019) <= \<const0>\;
  ToVote(1018) <= \<const0>\;
  ToVote(1017) <= \<const0>\;
  ToVote(1016) <= \<const0>\;
  ToVote(1015) <= \<const0>\;
  ToVote(1014) <= \<const0>\;
  ToVote(1013) <= \<const0>\;
  ToVote(1012) <= \<const0>\;
  ToVote(1011) <= \<const0>\;
  ToVote(1010) <= \<const0>\;
  ToVote(1009) <= \<const0>\;
  ToVote(1008) <= \<const0>\;
  ToVote(1007) <= \<const0>\;
  ToVote(1006) <= \<const0>\;
  ToVote(1005) <= \<const0>\;
  ToVote(1004) <= \<const0>\;
  ToVote(1003) <= \<const0>\;
  ToVote(1002) <= \<const0>\;
  ToVote(1001) <= \<const0>\;
  ToVote(1000) <= \<const0>\;
  ToVote(999) <= \<const0>\;
  ToVote(998) <= \<const0>\;
  ToVote(997) <= \<const0>\;
  ToVote(996) <= \<const0>\;
  ToVote(995) <= \<const0>\;
  ToVote(994) <= \<const0>\;
  ToVote(993) <= \<const0>\;
  ToVote(992) <= \<const0>\;
  ToVote(991) <= \<const0>\;
  ToVote(990) <= \<const0>\;
  ToVote(989) <= \<const0>\;
  ToVote(988) <= \<const0>\;
  ToVote(987) <= \<const0>\;
  ToVote(986) <= \<const0>\;
  ToVote(985) <= \<const0>\;
  ToVote(984) <= \<const0>\;
  ToVote(983) <= \<const0>\;
  ToVote(982) <= \<const0>\;
  ToVote(981) <= \<const0>\;
  ToVote(980) <= \<const0>\;
  ToVote(979) <= \<const0>\;
  ToVote(978) <= \<const0>\;
  ToVote(977) <= \<const0>\;
  ToVote(976) <= \<const0>\;
  ToVote(975) <= \<const0>\;
  ToVote(974) <= \<const0>\;
  ToVote(973) <= \<const0>\;
  ToVote(972) <= \<const0>\;
  ToVote(971) <= \<const0>\;
  ToVote(970) <= \<const0>\;
  ToVote(969) <= \<const0>\;
  ToVote(968) <= \<const0>\;
  ToVote(967) <= \<const0>\;
  ToVote(966) <= \<const0>\;
  ToVote(965) <= \<const0>\;
  ToVote(964) <= \<const0>\;
  ToVote(963) <= \<const0>\;
  ToVote(962) <= \<const0>\;
  ToVote(961) <= \<const0>\;
  ToVote(960) <= \<const0>\;
  ToVote(959) <= \<const0>\;
  ToVote(958) <= \<const0>\;
  ToVote(957) <= \<const0>\;
  ToVote(956) <= \<const0>\;
  ToVote(955) <= \<const0>\;
  ToVote(954) <= \<const0>\;
  ToVote(953) <= \<const0>\;
  ToVote(952) <= \<const0>\;
  ToVote(951) <= \<const0>\;
  ToVote(950) <= \<const0>\;
  ToVote(949) <= \<const0>\;
  ToVote(948) <= \<const0>\;
  ToVote(947) <= \<const0>\;
  ToVote(946) <= \<const0>\;
  ToVote(945) <= \<const0>\;
  ToVote(944) <= \<const0>\;
  ToVote(943) <= \<const0>\;
  ToVote(942) <= \<const0>\;
  ToVote(941) <= \<const0>\;
  ToVote(940) <= \<const0>\;
  ToVote(939) <= \<const0>\;
  ToVote(938) <= \<const0>\;
  ToVote(937) <= \<const0>\;
  ToVote(936) <= \<const0>\;
  ToVote(935) <= \<const0>\;
  ToVote(934) <= \<const0>\;
  ToVote(933) <= \<const0>\;
  ToVote(932) <= \<const0>\;
  ToVote(931) <= \<const0>\;
  ToVote(930) <= \<const0>\;
  ToVote(929) <= \<const0>\;
  ToVote(928) <= \<const0>\;
  ToVote(927) <= \<const0>\;
  ToVote(926) <= \<const0>\;
  ToVote(925) <= \<const0>\;
  ToVote(924) <= \<const0>\;
  ToVote(923) <= \<const0>\;
  ToVote(922) <= \<const0>\;
  ToVote(921) <= \<const0>\;
  ToVote(920) <= \<const0>\;
  ToVote(919) <= \<const0>\;
  ToVote(918) <= \<const0>\;
  ToVote(917) <= \<const0>\;
  ToVote(916) <= \<const0>\;
  ToVote(915) <= \<const0>\;
  ToVote(914) <= \<const0>\;
  ToVote(913) <= \<const0>\;
  ToVote(912) <= \<const0>\;
  ToVote(911) <= \<const0>\;
  ToVote(910) <= \<const0>\;
  ToVote(909) <= \<const0>\;
  ToVote(908) <= \<const0>\;
  ToVote(907) <= \<const0>\;
  ToVote(906) <= \<const0>\;
  ToVote(905) <= \<const0>\;
  ToVote(904) <= \<const0>\;
  ToVote(903) <= \<const0>\;
  ToVote(902) <= \<const0>\;
  ToVote(901) <= \<const0>\;
  ToVote(900) <= \<const0>\;
  ToVote(899) <= \<const0>\;
  ToVote(898) <= \<const0>\;
  ToVote(897) <= \<const0>\;
  ToVote(896) <= \<const0>\;
  ToVote(895) <= \<const0>\;
  ToVote(894) <= \<const0>\;
  ToVote(893) <= \<const0>\;
  ToVote(892) <= \<const0>\;
  ToVote(891) <= \<const0>\;
  ToVote(890) <= \<const0>\;
  ToVote(889) <= \<const0>\;
  ToVote(888) <= \<const0>\;
  ToVote(887) <= \<const0>\;
  ToVote(886) <= \<const0>\;
  ToVote(885) <= \<const0>\;
  ToVote(884) <= \<const0>\;
  ToVote(883) <= \<const0>\;
  ToVote(882) <= \<const0>\;
  ToVote(881) <= \<const0>\;
  ToVote(880) <= \<const0>\;
  ToVote(879) <= \<const0>\;
  ToVote(878) <= \<const0>\;
  ToVote(877) <= \<const0>\;
  ToVote(876) <= \<const0>\;
  ToVote(875) <= \<const0>\;
  ToVote(874) <= \<const0>\;
  ToVote(873) <= \<const0>\;
  ToVote(872) <= \<const0>\;
  ToVote(871) <= \<const0>\;
  ToVote(870) <= \<const0>\;
  ToVote(869) <= \<const0>\;
  ToVote(868) <= \<const0>\;
  ToVote(867) <= \<const0>\;
  ToVote(866) <= \<const0>\;
  ToVote(865) <= \<const0>\;
  ToVote(864) <= \<const0>\;
  ToVote(863) <= \<const0>\;
  ToVote(862) <= \<const0>\;
  ToVote(861) <= \<const0>\;
  ToVote(860) <= \<const0>\;
  ToVote(859) <= \<const0>\;
  ToVote(858) <= \<const0>\;
  ToVote(857) <= \<const0>\;
  ToVote(856) <= \<const0>\;
  ToVote(855) <= \<const0>\;
  ToVote(854) <= \<const0>\;
  ToVote(853) <= \<const0>\;
  ToVote(852) <= \<const0>\;
  ToVote(851) <= \<const0>\;
  ToVote(850) <= \<const0>\;
  ToVote(849) <= \<const0>\;
  ToVote(848) <= \<const0>\;
  ToVote(847) <= \<const0>\;
  ToVote(846) <= \<const0>\;
  ToVote(845) <= \<const0>\;
  ToVote(844) <= \<const0>\;
  ToVote(843) <= \<const0>\;
  ToVote(842) <= \<const0>\;
  ToVote(841) <= \<const0>\;
  ToVote(840) <= \<const0>\;
  ToVote(839) <= \<const0>\;
  ToVote(838) <= \<const0>\;
  ToVote(837) <= \<const0>\;
  ToVote(836) <= \<const0>\;
  ToVote(835) <= \<const0>\;
  ToVote(834) <= \<const0>\;
  ToVote(833) <= \<const0>\;
  ToVote(832) <= \<const0>\;
  ToVote(831) <= \<const0>\;
  ToVote(830) <= \<const0>\;
  ToVote(829) <= \<const0>\;
  ToVote(828) <= \<const0>\;
  ToVote(827) <= \<const0>\;
  ToVote(826) <= \<const0>\;
  ToVote(825) <= \<const0>\;
  ToVote(824) <= \<const0>\;
  ToVote(823) <= \<const0>\;
  ToVote(822) <= \<const0>\;
  ToVote(821) <= \<const0>\;
  ToVote(820) <= \<const0>\;
  ToVote(819) <= \<const0>\;
  ToVote(818) <= \<const0>\;
  ToVote(817) <= \<const0>\;
  ToVote(816) <= \<const0>\;
  ToVote(815) <= \<const0>\;
  ToVote(814) <= \<const0>\;
  ToVote(813) <= \<const0>\;
  ToVote(812) <= \<const0>\;
  ToVote(811) <= \<const0>\;
  ToVote(810) <= \<const0>\;
  ToVote(809) <= \<const0>\;
  ToVote(808) <= \<const0>\;
  ToVote(807) <= \<const0>\;
  ToVote(806) <= \<const0>\;
  ToVote(805) <= \<const0>\;
  ToVote(804) <= \<const0>\;
  ToVote(803) <= \<const0>\;
  ToVote(802) <= \<const0>\;
  ToVote(801) <= \<const0>\;
  ToVote(800) <= \<const0>\;
  ToVote(799) <= \<const0>\;
  ToVote(798) <= \<const0>\;
  ToVote(797) <= \<const0>\;
  ToVote(796) <= \<const0>\;
  ToVote(795) <= \<const0>\;
  ToVote(794) <= \<const0>\;
  ToVote(793) <= \<const0>\;
  ToVote(792) <= \<const0>\;
  ToVote(791) <= \<const0>\;
  ToVote(790) <= \<const0>\;
  ToVote(789) <= \<const0>\;
  ToVote(788) <= \<const0>\;
  ToVote(787) <= \<const0>\;
  ToVote(786) <= \<const0>\;
  ToVote(785) <= \<const0>\;
  ToVote(784) <= \<const0>\;
  ToVote(783) <= \<const0>\;
  ToVote(782) <= \<const0>\;
  ToVote(781) <= \<const0>\;
  ToVote(780) <= \<const0>\;
  ToVote(779) <= \<const0>\;
  ToVote(778) <= \<const0>\;
  ToVote(777) <= \<const0>\;
  ToVote(776) <= \<const0>\;
  ToVote(775) <= \<const0>\;
  ToVote(774) <= \<const0>\;
  ToVote(773) <= \<const0>\;
  ToVote(772) <= \<const0>\;
  ToVote(771) <= \<const0>\;
  ToVote(770) <= \<const0>\;
  ToVote(769) <= \<const0>\;
  ToVote(768) <= \<const0>\;
  ToVote(767) <= \<const0>\;
  ToVote(766) <= \<const0>\;
  ToVote(765) <= \<const0>\;
  ToVote(764) <= \<const0>\;
  ToVote(763) <= \<const0>\;
  ToVote(762) <= \<const0>\;
  ToVote(761) <= \<const0>\;
  ToVote(760) <= \<const0>\;
  ToVote(759) <= \<const0>\;
  ToVote(758) <= \<const0>\;
  ToVote(757) <= \<const0>\;
  ToVote(756) <= \<const0>\;
  ToVote(755) <= \<const0>\;
  ToVote(754) <= \<const0>\;
  ToVote(753) <= \<const0>\;
  ToVote(752) <= \<const0>\;
  ToVote(751) <= \<const0>\;
  ToVote(750) <= \<const0>\;
  ToVote(749) <= \<const0>\;
  ToVote(748) <= \<const0>\;
  ToVote(747) <= \<const0>\;
  ToVote(746) <= \<const0>\;
  ToVote(745) <= \<const0>\;
  ToVote(744) <= \<const0>\;
  ToVote(743) <= \<const0>\;
  ToVote(742) <= \<const0>\;
  ToVote(741) <= \<const0>\;
  ToVote(740) <= \<const0>\;
  ToVote(739) <= \<const0>\;
  ToVote(738) <= \<const0>\;
  ToVote(737) <= \<const0>\;
  ToVote(736) <= \<const0>\;
  ToVote(735) <= \<const0>\;
  ToVote(734) <= \<const0>\;
  ToVote(733) <= \<const0>\;
  ToVote(732) <= \<const0>\;
  ToVote(731) <= \<const0>\;
  ToVote(730) <= \<const0>\;
  ToVote(729) <= \<const0>\;
  ToVote(728) <= \<const0>\;
  ToVote(727) <= \<const0>\;
  ToVote(726) <= \<const0>\;
  ToVote(725) <= \<const0>\;
  ToVote(724) <= \<const0>\;
  ToVote(723) <= \<const0>\;
  ToVote(722) <= \<const0>\;
  ToVote(721) <= \<const0>\;
  ToVote(720) <= \<const0>\;
  ToVote(719) <= \<const0>\;
  ToVote(718) <= \<const0>\;
  ToVote(717) <= \<const0>\;
  ToVote(716) <= \<const0>\;
  ToVote(715) <= \<const0>\;
  ToVote(714) <= \<const0>\;
  ToVote(713) <= \<const0>\;
  ToVote(712) <= \<const0>\;
  ToVote(711) <= \<const0>\;
  ToVote(710) <= \<const0>\;
  ToVote(709) <= \<const0>\;
  ToVote(708) <= \<const0>\;
  ToVote(707) <= \<const0>\;
  ToVote(706) <= \<const0>\;
  ToVote(705) <= \<const0>\;
  ToVote(704) <= \<const0>\;
  ToVote(703) <= \<const0>\;
  ToVote(702) <= \<const0>\;
  ToVote(701) <= \<const0>\;
  ToVote(700) <= \<const0>\;
  ToVote(699) <= \<const0>\;
  ToVote(698) <= \<const0>\;
  ToVote(697) <= \<const0>\;
  ToVote(696) <= \<const0>\;
  ToVote(695) <= \<const0>\;
  ToVote(694) <= \<const0>\;
  ToVote(693) <= \<const0>\;
  ToVote(692) <= \<const0>\;
  ToVote(691) <= \<const0>\;
  ToVote(690) <= \<const0>\;
  ToVote(689) <= \<const0>\;
  ToVote(688) <= \<const0>\;
  ToVote(687) <= \<const0>\;
  ToVote(686) <= \<const0>\;
  ToVote(685) <= \<const0>\;
  ToVote(684) <= \<const0>\;
  ToVote(683) <= \<const0>\;
  ToVote(682) <= \<const0>\;
  ToVote(681) <= \<const0>\;
  ToVote(680) <= \<const0>\;
  ToVote(679) <= \<const0>\;
  ToVote(678) <= \<const0>\;
  ToVote(677) <= \<const0>\;
  ToVote(676) <= \<const0>\;
  ToVote(675) <= \<const0>\;
  ToVote(674) <= \<const0>\;
  ToVote(673) <= \<const0>\;
  ToVote(672) <= \<const0>\;
  ToVote(671) <= \<const0>\;
  ToVote(670) <= \<const0>\;
  ToVote(669) <= \<const0>\;
  ToVote(668) <= \<const0>\;
  ToVote(667) <= \<const0>\;
  ToVote(666) <= \<const0>\;
  ToVote(665) <= \<const0>\;
  ToVote(664) <= \<const0>\;
  ToVote(663) <= \<const0>\;
  ToVote(662) <= \<const0>\;
  ToVote(661) <= \<const0>\;
  ToVote(660) <= \<const0>\;
  ToVote(659) <= \<const0>\;
  ToVote(658) <= \<const0>\;
  ToVote(657) <= \<const0>\;
  ToVote(656) <= \<const0>\;
  ToVote(655) <= \<const0>\;
  ToVote(654) <= \<const0>\;
  ToVote(653) <= \<const0>\;
  ToVote(652) <= \<const0>\;
  ToVote(651) <= \<const0>\;
  ToVote(650) <= \<const0>\;
  ToVote(649) <= \<const0>\;
  ToVote(648) <= \<const0>\;
  ToVote(647) <= \<const0>\;
  ToVote(646) <= \<const0>\;
  ToVote(645) <= \<const0>\;
  ToVote(644) <= \<const0>\;
  ToVote(643) <= \<const0>\;
  ToVote(642) <= \<const0>\;
  ToVote(641) <= \<const0>\;
  ToVote(640) <= \<const0>\;
  ToVote(639) <= \<const0>\;
  ToVote(638) <= \<const0>\;
  ToVote(637) <= \<const0>\;
  ToVote(636) <= \<const0>\;
  ToVote(635) <= \<const0>\;
  ToVote(634) <= \<const0>\;
  ToVote(633) <= \<const0>\;
  ToVote(632) <= \<const0>\;
  ToVote(631) <= \<const0>\;
  ToVote(630) <= \<const0>\;
  ToVote(629) <= \<const0>\;
  ToVote(628) <= \<const0>\;
  ToVote(627) <= \<const0>\;
  ToVote(626) <= \<const0>\;
  ToVote(625) <= \<const0>\;
  ToVote(624) <= \<const0>\;
  ToVote(623) <= \<const0>\;
  ToVote(622) <= \<const0>\;
  ToVote(621) <= \<const0>\;
  ToVote(620) <= \<const0>\;
  ToVote(619) <= \<const0>\;
  ToVote(618) <= \<const0>\;
  ToVote(617) <= \<const0>\;
  ToVote(616) <= \<const0>\;
  ToVote(615) <= \<const0>\;
  ToVote(614) <= \<const0>\;
  ToVote(613) <= \<const0>\;
  ToVote(612) <= \<const0>\;
  ToVote(611) <= \<const0>\;
  ToVote(610) <= \<const0>\;
  ToVote(609) <= \<const0>\;
  ToVote(608) <= \<const0>\;
  ToVote(607) <= \<const0>\;
  ToVote(606) <= \<const0>\;
  ToVote(605) <= \<const0>\;
  ToVote(604) <= \<const0>\;
  ToVote(603) <= \<const0>\;
  ToVote(602) <= \<const0>\;
  ToVote(601) <= \<const0>\;
  ToVote(600) <= \<const0>\;
  ToVote(599) <= \<const0>\;
  ToVote(598) <= \<const0>\;
  ToVote(597) <= \<const0>\;
  ToVote(596) <= \<const0>\;
  ToVote(595) <= \<const0>\;
  ToVote(594) <= \<const0>\;
  ToVote(593) <= \<const0>\;
  ToVote(592) <= \<const0>\;
  ToVote(591) <= \<const0>\;
  ToVote(590) <= \<const0>\;
  ToVote(589) <= \<const0>\;
  ToVote(588) <= \<const0>\;
  ToVote(587) <= \<const0>\;
  ToVote(586) <= \<const0>\;
  ToVote(585) <= \<const0>\;
  ToVote(584) <= \<const0>\;
  ToVote(583) <= \<const0>\;
  ToVote(582) <= \<const0>\;
  ToVote(581) <= \<const0>\;
  ToVote(580) <= \<const0>\;
  ToVote(579) <= \<const0>\;
  ToVote(578) <= \<const0>\;
  ToVote(577) <= \<const0>\;
  ToVote(576) <= \<const0>\;
  ToVote(575) <= \<const0>\;
  ToVote(574) <= \<const0>\;
  ToVote(573) <= \<const0>\;
  ToVote(572) <= \<const0>\;
  ToVote(571) <= \<const0>\;
  ToVote(570) <= \<const0>\;
  ToVote(569) <= \<const0>\;
  ToVote(568) <= \<const0>\;
  ToVote(567) <= \<const0>\;
  ToVote(566) <= \<const0>\;
  ToVote(565) <= \<const0>\;
  ToVote(564) <= \<const0>\;
  ToVote(563) <= \<const0>\;
  ToVote(562) <= \<const0>\;
  ToVote(561) <= \<const0>\;
  ToVote(560) <= \<const0>\;
  ToVote(559) <= \<const0>\;
  ToVote(558) <= \<const0>\;
  ToVote(557) <= \<const0>\;
  ToVote(556) <= \<const0>\;
  ToVote(555) <= \<const0>\;
  ToVote(554) <= \<const0>\;
  ToVote(553) <= \<const0>\;
  ToVote(552) <= \<const0>\;
  ToVote(551) <= \<const0>\;
  ToVote(550) <= \<const0>\;
  ToVote(549) <= \<const0>\;
  ToVote(548) <= \<const0>\;
  ToVote(547) <= \<const0>\;
  ToVote(546) <= \<const0>\;
  ToVote(545) <= \<const0>\;
  ToVote(544) <= \<const0>\;
  ToVote(543) <= \<const0>\;
  ToVote(542) <= \<const0>\;
  ToVote(541) <= \<const0>\;
  ToVote(540) <= \<const0>\;
  ToVote(539) <= \<const0>\;
  ToVote(538) <= \<const0>\;
  ToVote(537) <= \<const0>\;
  ToVote(536) <= \<const0>\;
  ToVote(535) <= \<const0>\;
  ToVote(534) <= \<const0>\;
  ToVote(533) <= \<const0>\;
  ToVote(532) <= \<const0>\;
  ToVote(531) <= \<const0>\;
  ToVote(530) <= \<const0>\;
  ToVote(529) <= \<const0>\;
  ToVote(528) <= \<const0>\;
  ToVote(527) <= \<const0>\;
  ToVote(526) <= \<const0>\;
  ToVote(525) <= \<const0>\;
  ToVote(524) <= \<const0>\;
  ToVote(523) <= \<const0>\;
  ToVote(522) <= \<const0>\;
  ToVote(521) <= \<const0>\;
  ToVote(520) <= \<const0>\;
  ToVote(519) <= \<const0>\;
  ToVote(518) <= \<const0>\;
  ToVote(517) <= \<const0>\;
  ToVote(516) <= \<const0>\;
  ToVote(515) <= \<const0>\;
  ToVote(514) <= \<const0>\;
  ToVote(513) <= \<const0>\;
  ToVote(512) <= \<const0>\;
  ToVote(511) <= \<const0>\;
  ToVote(510) <= \<const0>\;
  ToVote(509) <= \<const0>\;
  ToVote(508) <= \<const0>\;
  ToVote(507) <= \<const0>\;
  ToVote(506) <= \<const0>\;
  ToVote(505) <= \<const0>\;
  ToVote(504) <= \<const0>\;
  ToVote(503) <= \<const0>\;
  ToVote(502) <= \<const0>\;
  ToVote(501) <= \<const0>\;
  ToVote(500) <= \<const0>\;
  ToVote(499) <= \<const0>\;
  ToVote(498) <= \<const0>\;
  ToVote(497) <= \<const0>\;
  ToVote(496) <= \<const0>\;
  ToVote(495) <= \<const0>\;
  ToVote(494) <= \<const0>\;
  ToVote(493) <= \<const0>\;
  ToVote(492) <= \<const0>\;
  ToVote(491) <= \<const0>\;
  ToVote(490) <= \<const0>\;
  ToVote(489) <= \<const0>\;
  ToVote(488) <= \<const0>\;
  ToVote(487) <= \<const0>\;
  ToVote(486) <= \<const0>\;
  ToVote(485) <= \<const0>\;
  ToVote(484) <= \<const0>\;
  ToVote(483) <= \<const0>\;
  ToVote(482) <= \<const0>\;
  ToVote(481) <= \<const0>\;
  ToVote(480) <= \<const0>\;
  ToVote(479) <= \<const0>\;
  ToVote(478) <= \<const0>\;
  ToVote(477) <= \<const0>\;
  ToVote(476) <= \<const0>\;
  ToVote(475) <= \<const0>\;
  ToVote(474) <= \<const0>\;
  ToVote(473) <= \<const0>\;
  ToVote(472) <= \<const0>\;
  ToVote(471) <= \<const0>\;
  ToVote(470) <= \<const0>\;
  ToVote(469) <= \<const0>\;
  ToVote(468) <= \<const0>\;
  ToVote(467) <= \<const0>\;
  ToVote(466) <= \<const0>\;
  ToVote(465) <= \<const0>\;
  ToVote(464) <= \<const0>\;
  ToVote(463) <= \<const0>\;
  ToVote(462) <= \<const0>\;
  ToVote(461) <= \<const0>\;
  ToVote(460) <= \<const0>\;
  ToVote(459) <= \<const0>\;
  ToVote(458) <= \<const0>\;
  ToVote(457) <= \<const0>\;
  ToVote(456) <= \<const0>\;
  ToVote(455) <= \<const0>\;
  ToVote(454) <= \<const0>\;
  ToVote(453) <= \<const0>\;
  ToVote(452) <= \<const0>\;
  ToVote(451) <= \<const0>\;
  ToVote(450) <= \<const0>\;
  ToVote(449) <= \<const0>\;
  ToVote(448) <= \<const0>\;
  ToVote(447) <= \<const0>\;
  ToVote(446) <= \<const0>\;
  ToVote(445) <= \<const0>\;
  ToVote(444) <= \<const0>\;
  ToVote(443) <= \<const0>\;
  ToVote(442) <= \<const0>\;
  ToVote(441) <= \<const0>\;
  ToVote(440) <= \<const0>\;
  ToVote(439) <= \<const0>\;
  ToVote(438) <= \<const0>\;
  ToVote(437) <= \<const0>\;
  ToVote(436) <= \<const0>\;
  ToVote(435) <= \<const0>\;
  ToVote(434) <= \<const0>\;
  ToVote(433) <= \<const0>\;
  ToVote(432) <= \<const0>\;
  ToVote(431) <= \<const0>\;
  ToVote(430) <= \<const0>\;
  ToVote(429) <= \<const0>\;
  ToVote(428) <= \<const0>\;
  ToVote(427) <= \<const0>\;
  ToVote(426) <= \<const0>\;
  ToVote(425) <= \<const0>\;
  ToVote(424) <= \<const0>\;
  ToVote(423) <= \<const0>\;
  ToVote(422) <= \<const0>\;
  ToVote(421) <= \<const0>\;
  ToVote(420) <= \<const0>\;
  ToVote(419) <= \<const0>\;
  ToVote(418) <= \<const0>\;
  ToVote(417) <= \<const0>\;
  ToVote(416) <= \<const0>\;
  ToVote(415) <= \<const0>\;
  ToVote(414) <= \<const0>\;
  ToVote(413) <= \<const0>\;
  ToVote(412) <= \<const0>\;
  ToVote(411) <= \<const0>\;
  ToVote(410) <= \<const0>\;
  ToVote(409) <= \<const0>\;
  ToVote(408) <= \<const0>\;
  ToVote(407) <= \<const0>\;
  ToVote(406) <= \<const0>\;
  ToVote(405) <= \<const0>\;
  ToVote(404) <= \<const0>\;
  ToVote(403) <= \<const0>\;
  ToVote(402) <= \<const0>\;
  ToVote(401) <= \<const0>\;
  ToVote(400) <= \<const0>\;
  ToVote(399) <= \<const0>\;
  ToVote(398) <= \<const0>\;
  ToVote(397) <= \<const0>\;
  ToVote(396) <= \<const0>\;
  ToVote(395) <= \<const0>\;
  ToVote(394) <= \<const0>\;
  ToVote(393) <= \<const0>\;
  ToVote(392) <= \<const0>\;
  ToVote(391) <= \<const0>\;
  ToVote(390) <= \<const0>\;
  ToVote(389) <= \<const0>\;
  ToVote(388) <= \<const0>\;
  ToVote(387) <= \<const0>\;
  ToVote(386) <= \<const0>\;
  ToVote(385) <= \<const0>\;
  ToVote(384) <= \<const0>\;
  ToVote(383) <= \<const0>\;
  ToVote(382) <= \<const0>\;
  ToVote(381) <= \<const0>\;
  ToVote(380) <= \<const0>\;
  ToVote(379) <= \<const0>\;
  ToVote(378) <= \<const0>\;
  ToVote(377) <= \<const0>\;
  ToVote(376) <= \<const0>\;
  ToVote(375) <= \<const0>\;
  ToVote(374) <= \<const0>\;
  ToVote(373) <= \<const0>\;
  ToVote(372) <= \<const0>\;
  ToVote(371) <= \<const0>\;
  ToVote(370) <= \<const0>\;
  ToVote(369) <= \<const0>\;
  ToVote(368) <= \<const0>\;
  ToVote(367) <= \<const0>\;
  ToVote(366) <= \<const0>\;
  ToVote(365) <= \<const0>\;
  ToVote(364) <= \<const0>\;
  ToVote(363) <= \<const0>\;
  ToVote(362) <= \<const0>\;
  ToVote(361) <= \<const0>\;
  ToVote(360) <= \<const0>\;
  ToVote(359) <= \<const0>\;
  ToVote(358) <= \<const0>\;
  ToVote(357) <= \<const0>\;
  ToVote(356) <= \<const0>\;
  ToVote(355) <= \<const0>\;
  ToVote(354) <= \<const0>\;
  ToVote(353) <= \<const0>\;
  ToVote(352) <= \<const0>\;
  ToVote(351) <= \<const0>\;
  ToVote(350) <= \<const0>\;
  ToVote(349) <= \<const0>\;
  ToVote(348) <= \<const0>\;
  ToVote(347) <= \<const0>\;
  ToVote(346) <= \<const0>\;
  ToVote(345) <= \<const0>\;
  ToVote(344) <= \<const0>\;
  ToVote(343) <= \<const0>\;
  ToVote(342) <= \<const0>\;
  ToVote(341) <= \<const0>\;
  ToVote(340) <= \<const0>\;
  ToVote(339) <= \<const0>\;
  ToVote(338) <= \<const0>\;
  ToVote(337) <= \<const0>\;
  ToVote(336) <= \<const0>\;
  ToVote(335) <= \<const0>\;
  ToVote(334) <= \<const0>\;
  ToVote(333) <= \<const0>\;
  ToVote(332) <= \<const0>\;
  ToVote(331) <= \<const0>\;
  ToVote(330) <= \<const0>\;
  ToVote(329) <= \<const0>\;
  ToVote(328) <= \<const0>\;
  ToVote(327) <= \<const0>\;
  ToVote(326) <= \<const0>\;
  ToVote(325) <= \<const0>\;
  ToVote(324) <= \<const0>\;
  ToVote(323) <= \<const0>\;
  ToVote(322) <= \<const0>\;
  ToVote(321) <= \<const0>\;
  ToVote(320) <= \<const0>\;
  ToVote(319) <= \<const0>\;
  ToVote(318) <= \<const0>\;
  ToVote(317) <= \<const0>\;
  ToVote(316) <= \<const0>\;
  ToVote(315) <= \<const0>\;
  ToVote(314) <= \<const0>\;
  ToVote(313) <= \<const0>\;
  ToVote(312) <= \<const0>\;
  ToVote(311) <= \<const0>\;
  ToVote(310) <= \<const0>\;
  ToVote(309) <= \<const0>\;
  ToVote(308) <= \<const0>\;
  ToVote(307) <= \<const0>\;
  ToVote(306) <= \<const0>\;
  ToVote(305) <= \<const0>\;
  ToVote(304) <= \<const0>\;
  ToVote(303) <= \<const0>\;
  ToVote(302) <= \<const0>\;
  ToVote(301) <= \<const0>\;
  ToVote(300) <= \<const0>\;
  ToVote(299) <= \<const0>\;
  ToVote(298) <= \<const0>\;
  ToVote(297) <= \<const0>\;
  ToVote(296) <= \<const0>\;
  ToVote(295) <= \<const0>\;
  ToVote(294) <= \<const0>\;
  ToVote(293) <= \<const0>\;
  ToVote(292) <= \<const0>\;
  ToVote(291) <= \<const0>\;
  ToVote(290) <= \<const0>\;
  ToVote(289) <= \<const0>\;
  ToVote(288) <= \<const0>\;
  ToVote(287) <= \<const0>\;
  ToVote(286) <= \<const0>\;
  ToVote(285) <= \<const0>\;
  ToVote(284) <= \<const0>\;
  ToVote(283) <= \<const0>\;
  ToVote(282) <= \<const0>\;
  ToVote(281) <= \<const0>\;
  ToVote(280) <= \<const0>\;
  ToVote(279) <= \<const0>\;
  ToVote(278) <= \<const0>\;
  ToVote(277) <= \<const0>\;
  ToVote(276) <= \<const0>\;
  ToVote(275) <= \<const0>\;
  ToVote(274) <= \<const0>\;
  ToVote(273) <= \<const0>\;
  ToVote(272) <= \<const0>\;
  ToVote(271) <= \<const0>\;
  ToVote(270) <= \<const0>\;
  ToVote(269) <= \<const0>\;
  ToVote(268) <= \<const0>\;
  ToVote(267) <= \<const0>\;
  ToVote(266) <= \<const0>\;
  ToVote(265) <= \<const0>\;
  ToVote(264) <= \<const0>\;
  ToVote(263) <= \<const0>\;
  ToVote(262) <= \<const0>\;
  ToVote(261) <= \<const0>\;
  ToVote(260) <= \<const0>\;
  ToVote(259) <= \<const0>\;
  ToVote(258) <= \<const0>\;
  ToVote(257) <= \<const0>\;
  ToVote(256) <= \<const0>\;
  ToVote(255) <= \<const0>\;
  ToVote(254) <= \<const0>\;
  ToVote(253) <= \<const0>\;
  ToVote(252) <= \<const0>\;
  ToVote(251) <= \<const0>\;
  ToVote(250) <= \<const0>\;
  ToVote(249) <= \<const0>\;
  ToVote(248) <= \<const0>\;
  ToVote(247) <= \<const0>\;
  ToVote(246) <= \<const0>\;
  ToVote(245) <= \<const0>\;
  ToVote(244) <= \<const0>\;
  ToVote(243) <= \<const0>\;
  ToVote(242) <= \<const0>\;
  ToVote(241) <= \<const0>\;
  ToVote(240) <= \<const0>\;
  ToVote(239) <= \<const0>\;
  ToVote(238) <= \<const0>\;
  ToVote(237) <= \<const0>\;
  ToVote(236) <= \<const0>\;
  ToVote(235) <= \<const0>\;
  ToVote(234) <= \<const0>\;
  ToVote(233) <= \<const0>\;
  ToVote(232) <= \<const0>\;
  ToVote(231) <= \<const0>\;
  ToVote(230) <= \<const0>\;
  ToVote(229) <= \<const0>\;
  ToVote(228) <= \<const0>\;
  ToVote(227) <= \<const0>\;
  ToVote(226) <= \<const0>\;
  ToVote(225) <= \<const0>\;
  ToVote(224) <= \<const0>\;
  ToVote(223) <= \<const0>\;
  ToVote(222) <= \<const0>\;
  ToVote(221) <= \<const0>\;
  ToVote(220) <= \<const0>\;
  ToVote(219) <= \<const0>\;
  ToVote(218) <= \<const0>\;
  ToVote(217) <= \<const0>\;
  ToVote(216) <= \<const0>\;
  ToVote(215) <= \<const0>\;
  ToVote(214) <= \<const0>\;
  ToVote(213) <= \<const0>\;
  ToVote(212) <= \<const0>\;
  ToVote(211) <= \<const0>\;
  ToVote(210) <= \<const0>\;
  ToVote(209) <= \<const0>\;
  ToVote(208) <= \<const0>\;
  ToVote(207) <= \<const0>\;
  ToVote(206) <= \<const0>\;
  ToVote(205) <= \<const0>\;
  ToVote(204) <= \<const0>\;
  ToVote(203) <= \<const0>\;
  ToVote(202) <= \<const0>\;
  ToVote(201) <= \<const0>\;
  ToVote(200) <= \<const0>\;
  ToVote(199) <= \<const0>\;
  ToVote(198) <= \<const0>\;
  ToVote(197) <= \<const0>\;
  ToVote(196) <= \<const0>\;
  ToVote(195) <= \<const0>\;
  ToVote(194) <= \<const0>\;
  ToVote(193) <= \<const0>\;
  ToVote(192) <= \<const0>\;
  ToVote(191) <= \<const0>\;
  ToVote(190) <= \<const0>\;
  ToVote(189) <= \<const0>\;
  ToVote(188) <= \<const0>\;
  ToVote(187) <= \<const0>\;
  ToVote(186) <= \<const0>\;
  ToVote(185) <= \<const0>\;
  ToVote(184) <= \<const0>\;
  ToVote(183) <= \<const0>\;
  ToVote(182) <= \<const0>\;
  ToVote(181) <= \<const0>\;
  ToVote(180) <= \<const0>\;
  ToVote(179) <= \<const0>\;
  ToVote(178) <= \<const0>\;
  ToVote(177) <= \<const0>\;
  ToVote(176) <= \<const0>\;
  ToVote(175) <= \<const0>\;
  ToVote(174) <= \<const0>\;
  ToVote(173) <= \<const0>\;
  ToVote(172) <= \<const0>\;
  ToVote(171) <= \<const0>\;
  ToVote(170) <= \<const0>\;
  ToVote(169) <= \<const0>\;
  ToVote(168) <= \<const0>\;
  ToVote(167) <= \<const0>\;
  ToVote(166) <= \<const0>\;
  ToVote(165) <= \<const0>\;
  ToVote(164) <= \<const0>\;
  ToVote(163) <= \<const0>\;
  ToVote(162) <= \<const0>\;
  ToVote(161) <= \<const0>\;
  ToVote(160) <= \<const0>\;
  ToVote(159) <= \<const0>\;
  ToVote(158) <= \<const0>\;
  ToVote(157) <= \<const0>\;
  ToVote(156) <= \<const0>\;
  ToVote(155) <= \<const0>\;
  ToVote(154) <= \<const0>\;
  ToVote(153) <= \<const0>\;
  ToVote(152) <= \<const0>\;
  ToVote(151) <= \<const0>\;
  ToVote(150) <= \<const0>\;
  ToVote(149) <= \<const0>\;
  ToVote(148) <= \<const0>\;
  ToVote(147) <= \<const0>\;
  ToVote(146) <= \<const0>\;
  ToVote(145) <= \<const0>\;
  ToVote(144) <= \<const0>\;
  ToVote(143) <= \<const0>\;
  ToVote(142) <= \<const0>\;
  ToVote(141) <= \<const0>\;
  ToVote(140) <= \<const0>\;
  ToVote(139) <= \<const0>\;
  ToVote(138) <= \<const0>\;
  ToVote(137) <= \<const0>\;
  ToVote(136) <= \<const0>\;
  ToVote(135) <= \<const0>\;
  ToVote(134) <= \<const0>\;
  ToVote(133) <= \<const0>\;
  ToVote(132) <= \<const0>\;
  ToVote(131) <= \<const0>\;
  ToVote(130) <= \<const0>\;
  ToVote(129) <= \<const0>\;
  ToVote(128) <= \<const0>\;
  ToVote(127) <= \<const0>\;
  ToVote(126) <= \<const0>\;
  ToVote(125) <= \<const0>\;
  ToVote(124) <= \<const0>\;
  ToVote(123) <= \<const0>\;
  ToVote(122) <= \<const0>\;
  ToVote(121) <= \<const0>\;
  ToVote(120) <= \<const0>\;
  ToVote(119) <= \<const0>\;
  ToVote(118) <= \<const0>\;
  ToVote(117) <= \<const0>\;
  ToVote(116) <= \<const0>\;
  ToVote(115) <= \<const0>\;
  ToVote(114) <= \<const0>\;
  ToVote(113) <= \<const0>\;
  ToVote(112) <= \<const0>\;
  ToVote(111) <= \<const0>\;
  ToVote(110) <= \<const0>\;
  ToVote(109) <= \<const0>\;
  ToVote(108) <= \<const0>\;
  ToVote(107) <= \<const0>\;
  ToVote(106) <= \<const0>\;
  ToVote(105) <= \<const0>\;
  ToVote(104) <= \<const0>\;
  ToVote(103) <= \<const0>\;
  ToVote(102) <= \<const0>\;
  ToVote(101) <= \<const0>\;
  ToVote(100) <= \<const0>\;
  ToVote(99) <= \<const0>\;
  ToVote(98) <= \<const0>\;
  ToVote(97) <= \<const0>\;
  ToVote(96) <= \<const0>\;
  ToVote(95) <= \<const0>\;
  ToVote(94) <= \<const0>\;
  ToVote(93) <= \<const0>\;
  ToVote(92) <= \<const0>\;
  ToVote(91) <= \<const0>\;
  ToVote(90) <= \<const0>\;
  ToVote(89) <= \<const0>\;
  ToVote(88) <= \<const0>\;
  ToVote(87) <= \<const0>\;
  ToVote(86) <= \<const0>\;
  ToVote(85) <= \<const0>\;
  ToVote(84) <= \<const0>\;
  ToVote(83) <= \<const0>\;
  ToVote(82) <= \<const0>\;
  ToVote(81) <= \<const0>\;
  ToVote(80) <= \<const0>\;
  ToVote(79) <= \<const0>\;
  ToVote(78) <= \<const0>\;
  ToVote(77) <= \<const0>\;
  ToVote(76) <= \<const0>\;
  ToVote(75) <= \<const0>\;
  ToVote(74) <= \<const0>\;
  ToVote(73) <= \<const0>\;
  ToVote(72) <= \<const0>\;
  ToVote(71) <= \<const0>\;
  ToVote(70) <= \<const0>\;
  ToVote(69) <= \<const0>\;
  ToVote(68) <= \<const0>\;
  ToVote(67) <= \<const0>\;
  ToVote(66) <= \<const0>\;
  ToVote(65) <= \<const0>\;
  ToVote(64) <= \<const0>\;
  ToVote(63) <= \<const0>\;
  ToVote(62) <= \<const0>\;
  ToVote(61) <= \<const0>\;
  ToVote(60) <= \<const0>\;
  ToVote(59) <= \<const0>\;
  ToVote(58) <= \<const0>\;
  ToVote(57) <= \<const0>\;
  ToVote(56) <= \<const0>\;
  ToVote(55) <= \<const0>\;
  ToVote(54) <= \<const0>\;
  ToVote(53) <= \<const0>\;
  ToVote(52) <= \<const0>\;
  ToVote(51) <= \<const0>\;
  ToVote(50) <= \<const0>\;
  ToVote(49) <= \<const0>\;
  ToVote(48) <= \<const0>\;
  ToVote(47) <= \<const0>\;
  ToVote(46) <= \<const0>\;
  ToVote(45) <= \<const0>\;
  ToVote(44) <= \<const0>\;
  ToVote(43) <= \<const0>\;
  ToVote(42) <= \<const0>\;
  ToVote(41) <= \<const0>\;
  ToVote(40) <= \<const0>\;
  ToVote(39) <= \<const0>\;
  ToVote(38) <= \<const0>\;
  ToVote(37) <= \<const0>\;
  ToVote(36) <= \<const0>\;
  ToVote(35) <= \<const0>\;
  ToVote(34) <= \<const0>\;
  ToVote(33) <= \<const0>\;
  ToVote(32) <= \<const0>\;
  ToVote(31) <= \<const0>\;
  ToVote(30) <= \<const0>\;
  ToVote(29) <= \<const0>\;
  ToVote(28) <= \<const0>\;
  ToVote(27) <= \<const0>\;
  ToVote(26) <= \<const0>\;
  ToVote(25) <= \<const0>\;
  ToVote(24) <= \<const0>\;
  ToVote(23) <= \<const0>\;
  ToVote(22) <= \<const0>\;
  ToVote(21) <= \<const0>\;
  ToVote(20) <= \<const0>\;
  ToVote(19) <= \<const0>\;
  ToVote(18) <= \<const0>\;
  ToVote(17) <= \<const0>\;
  ToVote(16) <= \<const0>\;
  ToVote(15) <= \<const0>\;
  ToVote(14) <= \<const0>\;
  ToVote(13) <= \<const0>\;
  ToVote(12) <= \<const0>\;
  ToVote(11) <= \<const0>\;
  ToVote(10) <= \<const0>\;
  ToVote(9) <= \<const0>\;
  ToVote(8) <= \<const0>\;
  ToVote(7) <= \<const0>\;
  ToVote(6) <= \<const0>\;
  ToVote(5) <= \<const0>\;
  ToVote(4) <= \<const0>\;
  ToVote(3) <= \<const0>\;
  ToVote(2) <= \<const0>\;
  ToVote(1) <= \<const0>\;
  ToVote(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
IOModule_Core_I1: entity work.microblaze_mcs_1_Iomodule_core
     port map (
      Clk => Clk,
      E(0) => uart_tx_write,
      GPI1(7 downto 0) => GPI1(7 downto 0),
      GPI1_Interrupt => GPI1_Interrupt,
      GPO1(7 downto 0) => GPO1(7 downto 0),
      INTC_IRQ => \^intc_irq\,
      INTC_Interrupt_Address(12 downto 0) => \^intc_interrupt_address\(14 downto 2),
      INTC_Processor_Ack(1 downto 0) => INTC_Processor_Ack(1 downto 0),
      Q(5) => p_0_in19_in,
      Q(4) => \lmb_abus_Q_reg_n_0_[1]\,
      Q(3) => \lmb_abus_Q_reg_n_0_[2]\,
      Q(2) => \lmb_abus_Q_reg_n_0_[3]\,
      Q(1) => \lmb_abus_Q_reg_n_0_[4]\,
      Q(0) => \lmb_abus_Q_reg_n_0_[5]\,
      Rst => Rst,
      Sl_DBus(8) => Sl_DBus(20),
      Sl_DBus(7) => Sl_DBus(24),
      Sl_DBus(6) => Sl_DBus(25),
      Sl_DBus(5) => Sl_DBus(26),
      Sl_DBus(4) => Sl_DBus(27),
      Sl_DBus(3) => Sl_DBus(28),
      Sl_DBus(2) => Sl_DBus(29),
      Sl_DBus(1) => Sl_DBus(30),
      Sl_DBus(0) => Sl_DBus(31),
      UART_Interrupt => UART_Interrupt,
      UART_Rx => UART_Rx,
      UART_Tx => UART_Tx,
      io_bus_read_data(8) => io_bus_read_data(11),
      io_bus_read_data(7 downto 0) => io_bus_read_data(7 downto 0),
      lmb_reg_read => lmb_reg_read,
      lmb_reg_write => lmb_reg_write,
      \out\(14 downto 0) => write_data(14 downto 0)
    );
Sl_Ready_INST_0: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => lmb_reg_read_Q,
      I1 => io_ready_Q,
      I2 => lmb_reg_write,
      O => Sl_Ready
    );
Sl_Wait_INST_0: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => lmb_reg_read,
      I1 => lmb_io_select_keep,
      O => Sl_Wait
    );
\Using_IO_Bus.IO_Addr_Strobe_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => Rst,
      I1 => TMR_Rst,
      O => p_0_out
    );
\Using_IO_Bus.IO_Addr_Strobe_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => LMB_ABus(0),
      I1 => LMB_AddrStrobe,
      I2 => LMB_ABus(1),
      O => p_22_out
    );
\Using_IO_Bus.IO_Addr_Strobe_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => p_22_out,
      Q => IO_Addr_Strobe,
      R => p_0_out
    );
\Using_IO_Bus.IO_Address_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_ABus(31),
      Q => IO_Address(0),
      R => p_0_out
    );
\Using_IO_Bus.IO_Address_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_ABus(21),
      Q => IO_Address(10),
      R => p_0_out
    );
\Using_IO_Bus.IO_Address_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_ABus(20),
      Q => IO_Address(11),
      R => p_0_out
    );
\Using_IO_Bus.IO_Address_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_ABus(19),
      Q => IO_Address(12),
      R => p_0_out
    );
\Using_IO_Bus.IO_Address_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_ABus(18),
      Q => IO_Address(13),
      R => p_0_out
    );
\Using_IO_Bus.IO_Address_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_ABus(17),
      Q => IO_Address(14),
      R => p_0_out
    );
\Using_IO_Bus.IO_Address_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_ABus(16),
      Q => IO_Address(15),
      R => p_0_out
    );
\Using_IO_Bus.IO_Address_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_ABus(15),
      Q => IO_Address(16),
      R => p_0_out
    );
\Using_IO_Bus.IO_Address_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_ABus(14),
      Q => IO_Address(17),
      R => p_0_out
    );
\Using_IO_Bus.IO_Address_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_ABus(13),
      Q => IO_Address(18),
      R => p_0_out
    );
\Using_IO_Bus.IO_Address_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_ABus(12),
      Q => IO_Address(19),
      R => p_0_out
    );
\Using_IO_Bus.IO_Address_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_ABus(30),
      Q => IO_Address(1),
      R => p_0_out
    );
\Using_IO_Bus.IO_Address_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_ABus(11),
      Q => IO_Address(20),
      R => p_0_out
    );
\Using_IO_Bus.IO_Address_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_ABus(10),
      Q => IO_Address(21),
      R => p_0_out
    );
\Using_IO_Bus.IO_Address_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_ABus(9),
      Q => IO_Address(22),
      R => p_0_out
    );
\Using_IO_Bus.IO_Address_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_ABus(8),
      Q => IO_Address(23),
      R => p_0_out
    );
\Using_IO_Bus.IO_Address_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_ABus(7),
      Q => IO_Address(24),
      R => p_0_out
    );
\Using_IO_Bus.IO_Address_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_ABus(6),
      Q => IO_Address(25),
      R => p_0_out
    );
\Using_IO_Bus.IO_Address_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_ABus(5),
      Q => IO_Address(26),
      R => p_0_out
    );
\Using_IO_Bus.IO_Address_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_ABus(4),
      Q => IO_Address(27),
      R => p_0_out
    );
\Using_IO_Bus.IO_Address_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_ABus(3),
      Q => IO_Address(28),
      R => p_0_out
    );
\Using_IO_Bus.IO_Address_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_ABus(2),
      Q => IO_Address(29),
      R => p_0_out
    );
\Using_IO_Bus.IO_Address_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_ABus(29),
      Q => IO_Address(2),
      R => p_0_out
    );
\Using_IO_Bus.IO_Address_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_ABus(1),
      Q => IO_Address(30),
      R => p_0_out
    );
\Using_IO_Bus.IO_Address_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_ABus(0),
      Q => IO_Address(31),
      R => p_0_out
    );
\Using_IO_Bus.IO_Address_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_ABus(28),
      Q => IO_Address(3),
      R => p_0_out
    );
\Using_IO_Bus.IO_Address_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_ABus(27),
      Q => IO_Address(4),
      R => p_0_out
    );
\Using_IO_Bus.IO_Address_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_ABus(26),
      Q => IO_Address(5),
      R => p_0_out
    );
\Using_IO_Bus.IO_Address_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_ABus(25),
      Q => IO_Address(6),
      R => p_0_out
    );
\Using_IO_Bus.IO_Address_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_ABus(24),
      Q => IO_Address(7),
      R => p_0_out
    );
\Using_IO_Bus.IO_Address_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_ABus(23),
      Q => IO_Address(8),
      R => p_0_out
    );
\Using_IO_Bus.IO_Address_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_ABus(22),
      Q => IO_Address(9),
      R => p_0_out
    );
\Using_IO_Bus.IO_Byte_Enable_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_BE(3),
      Q => IO_Byte_Enable(0),
      R => p_0_out
    );
\Using_IO_Bus.IO_Byte_Enable_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_BE(2),
      Q => IO_Byte_Enable(1),
      R => p_0_out
    );
\Using_IO_Bus.IO_Byte_Enable_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_BE(1),
      Q => IO_Byte_Enable(2),
      R => p_0_out
    );
\Using_IO_Bus.IO_Byte_Enable_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_BE(0),
      Q => IO_Byte_Enable(3),
      R => p_0_out
    );
\Using_IO_Bus.IO_Read_Strobe_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8000"
    )
        port map (
      I0 => LMB_ABus(1),
      I1 => LMB_AddrStrobe,
      I2 => LMB_ABus(0),
      I3 => LMB_ReadStrobe,
      O => \IO_Read_Strobe__0\
    );
\Using_IO_Bus.IO_Read_Strobe_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \IO_Read_Strobe__0\,
      Q => IO_Read_Strobe,
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Data_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_WriteDBus(31),
      Q => IO_Write_Data(0),
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Data_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_WriteDBus(21),
      Q => IO_Write_Data(10),
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Data_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_WriteDBus(20),
      Q => IO_Write_Data(11),
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Data_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_WriteDBus(19),
      Q => IO_Write_Data(12),
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Data_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_WriteDBus(18),
      Q => IO_Write_Data(13),
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Data_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_WriteDBus(17),
      Q => IO_Write_Data(14),
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Data_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_WriteDBus(16),
      Q => IO_Write_Data(15),
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Data_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_WriteDBus(15),
      Q => IO_Write_Data(16),
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Data_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_WriteDBus(14),
      Q => IO_Write_Data(17),
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Data_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_WriteDBus(13),
      Q => IO_Write_Data(18),
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Data_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_WriteDBus(12),
      Q => IO_Write_Data(19),
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Data_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_WriteDBus(30),
      Q => IO_Write_Data(1),
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Data_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_WriteDBus(11),
      Q => IO_Write_Data(20),
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Data_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_WriteDBus(10),
      Q => IO_Write_Data(21),
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Data_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_WriteDBus(9),
      Q => IO_Write_Data(22),
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Data_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_WriteDBus(8),
      Q => IO_Write_Data(23),
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Data_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_WriteDBus(7),
      Q => IO_Write_Data(24),
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Data_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_WriteDBus(6),
      Q => IO_Write_Data(25),
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Data_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_WriteDBus(5),
      Q => IO_Write_Data(26),
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Data_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_WriteDBus(4),
      Q => IO_Write_Data(27),
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Data_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_WriteDBus(3),
      Q => IO_Write_Data(28),
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Data_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_WriteDBus(2),
      Q => IO_Write_Data(29),
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Data_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_WriteDBus(29),
      Q => IO_Write_Data(2),
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Data_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_WriteDBus(1),
      Q => IO_Write_Data(30),
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Data_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_WriteDBus(0),
      Q => IO_Write_Data(31),
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Data_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_WriteDBus(28),
      Q => IO_Write_Data(3),
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Data_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_WriteDBus(27),
      Q => IO_Write_Data(4),
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Data_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_WriteDBus(26),
      Q => IO_Write_Data(5),
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Data_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_WriteDBus(25),
      Q => IO_Write_Data(6),
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Data_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_WriteDBus(24),
      Q => IO_Write_Data(7),
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Data_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_WriteDBus(23),
      Q => IO_Write_Data(8),
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Data_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_22_out,
      D => LMB_WriteDBus(22),
      Q => IO_Write_Data(9),
      R => p_0_out
    );
\Using_IO_Bus.IO_Write_Strobe_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8000"
    )
        port map (
      I0 => LMB_ABus(1),
      I1 => LMB_AddrStrobe,
      I2 => LMB_ABus(0),
      I3 => LMB_WriteStrobe,
      O => \IO_Write_Strobe__0\
    );
\Using_IO_Bus.IO_Write_Strobe_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \IO_Write_Strobe__0\,
      Q => IO_Write_Strobe,
      R => p_0_out
    );
\Using_IO_Bus.io_bus_read_data[31]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \Using_IO_Bus.io_read_keep_reg_n_0\,
      I1 => IO_Ready,
      O => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_bus_read_data_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => IO_Read_Data(0),
      Q => io_bus_read_data(0),
      R => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_bus_read_data_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => IO_Read_Data(10),
      Q => Sl_DBus(21),
      R => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_bus_read_data_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => IO_Read_Data(11),
      Q => io_bus_read_data(11),
      R => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_bus_read_data_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => IO_Read_Data(12),
      Q => Sl_DBus(19),
      R => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_bus_read_data_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => IO_Read_Data(13),
      Q => Sl_DBus(18),
      R => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_bus_read_data_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => IO_Read_Data(14),
      Q => Sl_DBus(17),
      R => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_bus_read_data_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => IO_Read_Data(15),
      Q => Sl_DBus(16),
      R => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_bus_read_data_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => IO_Read_Data(16),
      Q => Sl_DBus(15),
      R => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_bus_read_data_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => IO_Read_Data(17),
      Q => Sl_DBus(14),
      R => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_bus_read_data_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => IO_Read_Data(18),
      Q => Sl_DBus(13),
      R => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_bus_read_data_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => IO_Read_Data(19),
      Q => Sl_DBus(12),
      R => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_bus_read_data_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => IO_Read_Data(1),
      Q => io_bus_read_data(1),
      R => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_bus_read_data_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => IO_Read_Data(20),
      Q => Sl_DBus(11),
      R => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_bus_read_data_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => IO_Read_Data(21),
      Q => Sl_DBus(10),
      R => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_bus_read_data_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => IO_Read_Data(22),
      Q => Sl_DBus(9),
      R => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_bus_read_data_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => IO_Read_Data(23),
      Q => Sl_DBus(8),
      R => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_bus_read_data_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => IO_Read_Data(24),
      Q => Sl_DBus(7),
      R => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_bus_read_data_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => IO_Read_Data(25),
      Q => Sl_DBus(6),
      R => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_bus_read_data_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => IO_Read_Data(26),
      Q => Sl_DBus(5),
      R => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_bus_read_data_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => IO_Read_Data(27),
      Q => Sl_DBus(4),
      R => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_bus_read_data_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => IO_Read_Data(28),
      Q => Sl_DBus(3),
      R => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_bus_read_data_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => IO_Read_Data(29),
      Q => Sl_DBus(2),
      R => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_bus_read_data_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => IO_Read_Data(2),
      Q => io_bus_read_data(2),
      R => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_bus_read_data_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => IO_Read_Data(30),
      Q => Sl_DBus(1),
      R => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_bus_read_data_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => IO_Read_Data(31),
      Q => Sl_DBus(0),
      R => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_bus_read_data_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => IO_Read_Data(3),
      Q => io_bus_read_data(3),
      R => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_bus_read_data_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => IO_Read_Data(4),
      Q => io_bus_read_data(4),
      R => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_bus_read_data_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => IO_Read_Data(5),
      Q => io_bus_read_data(5),
      R => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_bus_read_data_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => IO_Read_Data(6),
      Q => io_bus_read_data(6),
      R => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_bus_read_data_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => IO_Read_Data(7),
      Q => io_bus_read_data(7),
      R => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_bus_read_data_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => IO_Read_Data(8),
      Q => Sl_DBus(23),
      R => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_bus_read_data_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => IO_Read_Data(9),
      Q => Sl_DBus(22),
      R => \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0\
    );
\Using_IO_Bus.io_read_keep_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8000BFFF80008000"
    )
        port map (
      I0 => LMB_ReadStrobe,
      I1 => LMB_ABus(1),
      I2 => LMB_AddrStrobe,
      I3 => LMB_ABus(0),
      I4 => IO_Ready,
      I5 => \Using_IO_Bus.io_read_keep_reg_n_0\,
      O => \Using_IO_Bus.io_read_keep_i_1_n_0\
    );
\Using_IO_Bus.io_read_keep_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_IO_Bus.io_read_keep_i_1_n_0\,
      Q => \Using_IO_Bus.io_read_keep_reg_n_0\,
      R => p_0_out
    );
\Using_IO_Bus.io_ready_Q_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => lmb_io_select_keep,
      I1 => IO_Ready,
      O => p_21_out
    );
\Using_IO_Bus.io_ready_Q_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => p_21_out,
      Q => io_ready_Q,
      R => '0'
    );
\Using_IO_Bus.lmb_io_select_keep_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"80FF8080"
    )
        port map (
      I0 => LMB_ABus(1),
      I1 => LMB_AddrStrobe,
      I2 => LMB_ABus(0),
      I3 => IO_Ready,
      I4 => lmb_io_select_keep,
      O => \Using_IO_Bus.lmb_io_select_keep_i_1_n_0\
    );
\Using_IO_Bus.lmb_io_select_keep_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_IO_Bus.lmb_io_select_keep_i_1_n_0\,
      Q => lmb_io_select_keep,
      R => p_0_out
    );
\lmb_abus_Q_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_ABus(24),
      Q => p_0_in19_in,
      R => '0'
    );
\lmb_abus_Q_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_ABus(25),
      Q => \lmb_abus_Q_reg_n_0_[1]\,
      R => '0'
    );
\lmb_abus_Q_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_ABus(26),
      Q => \lmb_abus_Q_reg_n_0_[2]\,
      R => '0'
    );
\lmb_abus_Q_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_ABus(27),
      Q => \lmb_abus_Q_reg_n_0_[3]\,
      R => '0'
    );
\lmb_abus_Q_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_ABus(28),
      Q => \lmb_abus_Q_reg_n_0_[4]\,
      R => '0'
    );
\lmb_abus_Q_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_ABus(29),
      Q => \lmb_abus_Q_reg_n_0_[5]\,
      R => '0'
    );
lmb_reg_read_Q_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => lmb_reg_read,
      Q => lmb_reg_read_Q,
      R => '0'
    );
lmb_reg_read_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4000"
    )
        port map (
      I0 => LMB_ABus(1),
      I1 => LMB_ReadStrobe,
      I2 => LMB_ABus(0),
      I3 => LMB_AddrStrobe,
      O => lmb_reg_read0
    );
lmb_reg_read_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => lmb_reg_read0,
      Q => lmb_reg_read,
      R => '0'
    );
lmb_reg_write_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4000"
    )
        port map (
      I0 => LMB_ABus(1),
      I1 => LMB_WriteStrobe,
      I2 => LMB_ABus(0),
      I3 => LMB_AddrStrobe,
      O => lmb_reg_write0
    );
lmb_reg_write_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => lmb_reg_write0,
      Q => lmb_reg_write,
      R => '0'
    );
uart_tx_write_inferred_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0010000000000000"
    )
        port map (
      I0 => \lmb_abus_Q_reg_n_0_[4]\,
      I1 => \lmb_abus_Q_reg_n_0_[1]\,
      I2 => lmb_reg_write,
      I3 => p_0_in19_in,
      I4 => \lmb_abus_Q_reg_n_0_[5]\,
      I5 => uart_tx_write_inferred_i_2_n_0,
      O => uart_tx_write
    );
uart_tx_write_inferred_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \lmb_abus_Q_reg_n_0_[3]\,
      I1 => \lmb_abus_Q_reg_n_0_[2]\,
      O => uart_tx_write_inferred_i_2_n_0
    );
\write_data_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_WriteDBus(31),
      Q => write_data(0),
      R => '0'
    );
\write_data_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_WriteDBus(21),
      Q => write_data(10),
      R => '0'
    );
\write_data_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_WriteDBus(20),
      Q => write_data(11),
      R => '0'
    );
\write_data_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_WriteDBus(19),
      Q => write_data(12),
      R => '0'
    );
\write_data_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_WriteDBus(18),
      Q => write_data(13),
      R => '0'
    );
\write_data_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_WriteDBus(17),
      Q => write_data(14),
      R => '0'
    );
\write_data_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_WriteDBus(16),
      Q => write_data(15),
      R => '0'
    );
\write_data_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_WriteDBus(15),
      Q => write_data(16),
      R => '0'
    );
\write_data_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_WriteDBus(14),
      Q => write_data(17),
      R => '0'
    );
\write_data_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_WriteDBus(13),
      Q => write_data(18),
      R => '0'
    );
\write_data_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_WriteDBus(12),
      Q => write_data(19),
      R => '0'
    );
\write_data_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_WriteDBus(30),
      Q => write_data(1),
      R => '0'
    );
\write_data_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_WriteDBus(11),
      Q => write_data(20),
      R => '0'
    );
\write_data_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_WriteDBus(10),
      Q => write_data(21),
      R => '0'
    );
\write_data_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_WriteDBus(9),
      Q => write_data(22),
      R => '0'
    );
\write_data_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_WriteDBus(8),
      Q => write_data(23),
      R => '0'
    );
\write_data_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_WriteDBus(7),
      Q => write_data(24),
      R => '0'
    );
\write_data_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_WriteDBus(6),
      Q => write_data(25),
      R => '0'
    );
\write_data_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_WriteDBus(5),
      Q => write_data(26),
      R => '0'
    );
\write_data_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_WriteDBus(4),
      Q => write_data(27),
      R => '0'
    );
\write_data_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_WriteDBus(3),
      Q => write_data(28),
      R => '0'
    );
\write_data_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_WriteDBus(2),
      Q => write_data(29),
      R => '0'
    );
\write_data_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_WriteDBus(29),
      Q => write_data(2),
      R => '0'
    );
\write_data_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_WriteDBus(1),
      Q => write_data(30),
      R => '0'
    );
\write_data_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_WriteDBus(0),
      Q => write_data(31),
      R => '0'
    );
\write_data_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_WriteDBus(28),
      Q => write_data(3),
      R => '0'
    );
\write_data_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_WriteDBus(27),
      Q => write_data(4),
      R => '0'
    );
\write_data_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_WriteDBus(26),
      Q => write_data(5),
      R => '0'
    );
\write_data_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_WriteDBus(25),
      Q => write_data(6),
      R => '0'
    );
\write_data_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_WriteDBus(24),
      Q => write_data(7),
      R => '0'
    );
\write_data_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_WriteDBus(23),
      Q => write_data(8),
      R => '0'
    );
\write_data_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => LMB_WriteDBus(22),
      Q => write_data(9),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MicroBlaze_Area is
  port (
    D : out STD_LOGIC_VECTOR ( 247 downto 0 );
    Pause_Ack : out STD_LOGIC;
    Hibernate : out STD_LOGIC;
    Suspend : out STD_LOGIC;
    Interrupt_Ack : out STD_LOGIC_VECTOR ( 0 to 1 );
    Sleep : out STD_LOGIC;
    Clk : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 31 );
    DReady : in STD_LOGIC;
    IReady : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Pause : in STD_LOGIC;
    dbg_stop_instr_fetch : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 31 );
    Interrupt : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Synchronize.use_sync_reset.sync_reg[2]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \No_Master_Debug_Logic.sleep_reset_mode_reg\ : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 31 )
  );
end microblaze_mcs_1_MicroBlaze_Area;

architecture STRUCTURE of microblaze_mcs_1_MicroBlaze_Area is
  signal \^d\ : STD_LOGIC_VECTOR ( 247 downto 0 );
  signal Data_Flow_I_n_11 : STD_LOGIC;
  signal Data_Flow_I_n_12 : STD_LOGIC;
  signal Data_Flow_I_n_13 : STD_LOGIC;
  signal Data_Flow_I_n_14 : STD_LOGIC;
  signal Data_Flow_I_n_141 : STD_LOGIC;
  signal Data_Flow_I_n_142 : STD_LOGIC;
  signal Data_Flow_I_n_143 : STD_LOGIC;
  signal Data_Flow_I_n_144 : STD_LOGIC;
  signal Data_Flow_I_n_145 : STD_LOGIC;
  signal Data_Flow_I_n_146 : STD_LOGIC;
  signal Data_Flow_I_n_147 : STD_LOGIC;
  signal Data_Flow_I_n_148 : STD_LOGIC;
  signal Data_Flow_I_n_149 : STD_LOGIC;
  signal Data_Flow_I_n_15 : STD_LOGIC;
  signal Data_Flow_I_n_150 : STD_LOGIC;
  signal Data_Flow_I_n_151 : STD_LOGIC;
  signal Data_Flow_I_n_152 : STD_LOGIC;
  signal Data_Flow_I_n_153 : STD_LOGIC;
  signal Data_Flow_I_n_154 : STD_LOGIC;
  signal Data_Flow_I_n_155 : STD_LOGIC;
  signal Data_Flow_I_n_16 : STD_LOGIC;
  signal Data_Flow_I_n_17 : STD_LOGIC;
  signal Data_Flow_I_n_18 : STD_LOGIC;
  signal Data_Flow_I_n_19 : STD_LOGIC;
  signal Data_Flow_I_n_2 : STD_LOGIC;
  signal Data_Flow_I_n_20 : STD_LOGIC;
  signal Data_Flow_I_n_21 : STD_LOGIC;
  signal Data_Flow_I_n_22 : STD_LOGIC;
  signal Data_Flow_I_n_23 : STD_LOGIC;
  signal Data_Flow_I_n_24 : STD_LOGIC;
  signal Data_Flow_I_n_25 : STD_LOGIC;
  signal Data_Flow_I_n_26 : STD_LOGIC;
  signal Data_Flow_I_n_27 : STD_LOGIC;
  signal Data_Flow_I_n_28 : STD_LOGIC;
  signal Data_Flow_I_n_29 : STD_LOGIC;
  signal Data_Flow_I_n_3 : STD_LOGIC;
  signal Data_Flow_I_n_30 : STD_LOGIC;
  signal Data_Flow_I_n_31 : STD_LOGIC;
  signal Data_Flow_I_n_32 : STD_LOGIC;
  signal Data_Flow_I_n_33 : STD_LOGIC;
  signal Data_Flow_I_n_34 : STD_LOGIC;
  signal Data_Flow_I_n_35 : STD_LOGIC;
  signal Data_Flow_I_n_36 : STD_LOGIC;
  signal Data_Flow_I_n_37 : STD_LOGIC;
  signal Data_Flow_I_n_38 : STD_LOGIC;
  signal Data_Flow_I_n_39 : STD_LOGIC;
  signal Data_Flow_I_n_4 : STD_LOGIC;
  signal Data_Flow_I_n_40 : STD_LOGIC;
  signal Data_Flow_I_n_41 : STD_LOGIC;
  signal Data_Flow_I_n_42 : STD_LOGIC;
  signal Data_Flow_I_n_5 : STD_LOGIC;
  signal Data_Flow_I_n_6 : STD_LOGIC;
  signal Data_Flow_I_n_7 : STD_LOGIC;
  signal Decode_I_n_132 : STD_LOGIC;
  signal Decode_I_n_137 : STD_LOGIC;
  signal Decode_I_n_138 : STD_LOGIC;
  signal Decode_I_n_52 : STD_LOGIC;
  signal Decode_I_n_53 : STD_LOGIC;
  signal Decode_I_n_54 : STD_LOGIC;
  signal Decode_I_n_55 : STD_LOGIC;
  signal Decode_I_n_56 : STD_LOGIC;
  signal Decode_I_n_57 : STD_LOGIC;
  signal Decode_I_n_60 : STD_LOGIC;
  signal Decode_I_n_61 : STD_LOGIC;
  signal Decode_I_n_62 : STD_LOGIC;
  signal Decode_I_n_63 : STD_LOGIC;
  signal Decode_I_n_64 : STD_LOGIC;
  signal Decode_I_n_65 : STD_LOGIC;
  signal Decode_I_n_66 : STD_LOGIC;
  signal Decode_I_n_67 : STD_LOGIC;
  signal Decode_I_n_68 : STD_LOGIC;
  signal Decode_I_n_69 : STD_LOGIC;
  signal Decode_I_n_70 : STD_LOGIC;
  signal Decode_I_n_71 : STD_LOGIC;
  signal Decode_I_n_72 : STD_LOGIC;
  signal Decode_I_n_73 : STD_LOGIC;
  signal Decode_I_n_74 : STD_LOGIC;
  signal Decode_I_n_75 : STD_LOGIC;
  signal Decode_I_n_76 : STD_LOGIC;
  signal Decode_I_n_77 : STD_LOGIC;
  signal Decode_I_n_78 : STD_LOGIC;
  signal Decode_I_n_79 : STD_LOGIC;
  signal Decode_I_n_80 : STD_LOGIC;
  signal Decode_I_n_81 : STD_LOGIC;
  signal Decode_I_n_82 : STD_LOGIC;
  signal Decode_I_n_83 : STD_LOGIC;
  signal Decode_I_n_91 : STD_LOGIC;
  signal Decode_I_n_92 : STD_LOGIC;
  signal Decode_I_n_93 : STD_LOGIC;
  signal Decode_I_n_94 : STD_LOGIC;
  signal Decode_I_n_97 : STD_LOGIC;
  signal MSR : STD_LOGIC_VECTOR ( 28 to 30 );
  signal \MSR_Reg_I/MSR_Rst\ : STD_LOGIC;
  signal Op1_Low : STD_LOGIC_VECTOR ( 0 to 1 );
  signal \Operand_Select_I/Imm_Reg\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[0].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[10].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[11].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[12].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[13].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[14].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[15].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[16].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[17].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[18].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[19].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[1].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[20].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[21].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[22].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[23].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[24].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[25].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[26].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[27].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[28].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[29].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[2].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[30].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[31].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[3].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[4].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[5].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[6].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[7].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[8].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[9].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal PC_EX_i : STD_LOGIC_VECTOR ( 17 to 29 );
  signal \PC_Module_I/normal_piperun\ : STD_LOGIC;
  attribute MAX_FANOUT : string;
  attribute MAX_FANOUT of \PC_Module_I/normal_piperun\ : signal is "1000";
  attribute RTL_MAX_FANOUT : string;
  attribute RTL_MAX_FANOUT of \PC_Module_I/normal_piperun\ : signal is "found";
  signal \PC_Module_I/pc_write_I\ : STD_LOGIC;
  attribute MAX_FANOUT of \PC_Module_I/pc_write_I\ : signal is "1000";
  attribute RTL_MAX_FANOUT of \PC_Module_I/pc_write_I\ : signal is "found";
  attribute USELOWSKEWLINES : boolean;
  attribute USELOWSKEWLINES of \PC_Module_I/pc_write_I\ : signal is std.standard.true;
  signal Sext16 : STD_LOGIC;
  signal Trace_Delay_Slot_early : STD_LOGIC;
  signal Unsigned_Op : STD_LOGIC;
  signal alu_Carry : STD_LOGIC;
  signal alu_Op : STD_LOGIC_VECTOR ( 0 to 1 );
  signal buffer_Addr : STD_LOGIC_VECTOR ( 1 to 3 );
  signal carry_In : STD_LOGIC;
  signal compare_Instr : STD_LOGIC;
  signal doublet_Read : STD_LOGIC;
  signal exception_kind : STD_LOGIC_VECTOR ( 30 to 30 );
  signal extend_Data_Read : STD_LOGIC_VECTOR ( 16 to 31 );
  signal imm_Instr : STD_LOGIC;
  signal imm_Value : STD_LOGIC_VECTOR ( 0 to 15 );
  signal instr_ex : STD_LOGIC_VECTOR ( 6 to 7 );
  signal isbyte : STD_LOGIC;
  signal isdoublet : STD_LOGIC;
  signal jump : STD_LOGIC;
  signal lopt : STD_LOGIC;
  signal lopt_1 : STD_LOGIC;
  signal lopt_2 : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal mem_Strobe : STD_LOGIC;
  signal of_PipeRun : STD_LOGIC;
  signal opsel1_SPR : STD_LOGIC;
  signal pc_Incr : STD_LOGIC;
  signal quadlet_Read : STD_LOGIC;
  signal raw_Data_Write : STD_LOGIC_VECTOR ( 0 to 23 );
  signal reg1_Addr : STD_LOGIC_VECTOR ( 0 to 4 );
  signal reg_Test_Equal : STD_LOGIC;
  signal reg_Test_Equal_N : STD_LOGIC;
  signal reg_Write_I : STD_LOGIC;
  signal reg_zero : STD_LOGIC;
  signal res_Forward1 : STD_LOGIC;
  signal res_Forward2 : STD_LOGIC;
  signal result_Sel : STD_LOGIC_VECTOR ( 0 to 1 );
  signal sel_LSB : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal select_Logic : STD_LOGIC;
  signal sext8 : STD_LOGIC;
  signal sign_Extend : STD_LOGIC;
  signal trace_reg_write_novalid : STD_LOGIC;
  signal valid_Fetch : STD_LOGIC;
  signal write_Addr : STD_LOGIC_VECTOR ( 0 to 4 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__10\ : label is "soft_lutpair41";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__11\ : label is "soft_lutpair41";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__12\ : label is "soft_lutpair42";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__13\ : label is "soft_lutpair42";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__7\ : label is "soft_lutpair39";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__8\ : label is "soft_lutpair40";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__9\ : label is "soft_lutpair40";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2\ : label is "soft_lutpair39";
begin
  D(247 downto 0) <= \^d\(247 downto 0);
Byte_Doublet_Handle_I: entity work.microblaze_mcs_1_Byte_Doublet_Handle
     port map (
      D(29 downto 4) => \^d\(202 downto 177),
      D(3 downto 0) => \^d\(165 downto 162),
      EX_Op2 => Data_Flow_I_n_2,
      Op1_Low(0 to 1) => Op1_Low(0 to 1),
      \Using_FPGA.Native\ => Data_Flow_I_n_3,
      isbyte => isbyte,
      isdoublet => isdoublet,
      sel_LSB(1 downto 0) => sel_LSB(1 downto 0),
      \write_Addr_I_reg[0]\(0 to 23) => raw_Data_Write(0 to 23),
      \write_Addr_I_reg[0]\(24) => \^d\(176),
      \write_Addr_I_reg[0]\(25) => \^d\(175),
      \write_Addr_I_reg[0]\(26) => \^d\(174),
      \write_Addr_I_reg[0]\(27) => \^d\(173),
      \write_Addr_I_reg[0]\(28) => \^d\(172),
      \write_Addr_I_reg[0]\(29) => \^d\(171),
      \write_Addr_I_reg[0]\(30) => \^d\(170),
      \write_Addr_I_reg[0]\(31) => \^d\(169)
    );
Data_Flow_I: entity work.microblaze_mcs_1_Data_Flow
     port map (
      Buffer_Addr(2) => buffer_Addr(1),
      Buffer_Addr(1) => buffer_Addr(2),
      Buffer_Addr(0) => buffer_Addr(3),
      Clk => Clk,
      D(82 downto 40) => \^d\(245 downto 203),
      D(39 downto 32) => \^d\(176 downto 169),
      D(31 downto 0) => \^d\(106 downto 75),
      \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram\ => Decode_I_n_97,
      DI => Decode_I_n_138,
      D_0 => \Operand_Select_I/OpSelect_Bits[31].Operand_Select_Bit_I/D\,
      D_1 => \Operand_Select_I/OpSelect_Bits[30].Operand_Select_Bit_I/D\,
      D_10 => \Operand_Select_I/OpSelect_Bits[21].Operand_Select_Bit_I/D\,
      D_11 => \Operand_Select_I/OpSelect_Bits[20].Operand_Select_Bit_I/D\,
      D_12 => \Operand_Select_I/OpSelect_Bits[19].Operand_Select_Bit_I/D\,
      D_13 => \Operand_Select_I/OpSelect_Bits[18].Operand_Select_Bit_I/D\,
      D_14 => \Operand_Select_I/OpSelect_Bits[17].Operand_Select_Bit_I/D\,
      D_15 => \Operand_Select_I/OpSelect_Bits[16].Operand_Select_Bit_I/D\,
      D_16 => \Operand_Select_I/OpSelect_Bits[15].Operand_Select_Bit_I/D\,
      D_17 => \Operand_Select_I/OpSelect_Bits[14].Operand_Select_Bit_I/D\,
      D_18 => \Operand_Select_I/OpSelect_Bits[13].Operand_Select_Bit_I/D\,
      D_19 => \Operand_Select_I/OpSelect_Bits[12].Operand_Select_Bit_I/D\,
      D_2 => \Operand_Select_I/OpSelect_Bits[29].Operand_Select_Bit_I/D\,
      D_20 => \Operand_Select_I/OpSelect_Bits[11].Operand_Select_Bit_I/D\,
      D_21 => \Operand_Select_I/OpSelect_Bits[10].Operand_Select_Bit_I/D\,
      D_22 => \Operand_Select_I/OpSelect_Bits[9].Operand_Select_Bit_I/D\,
      D_23 => \Operand_Select_I/OpSelect_Bits[8].Operand_Select_Bit_I/D\,
      D_24 => \Operand_Select_I/OpSelect_Bits[7].Operand_Select_Bit_I/D\,
      D_25 => \Operand_Select_I/OpSelect_Bits[6].Operand_Select_Bit_I/D\,
      D_26 => \Operand_Select_I/OpSelect_Bits[5].Operand_Select_Bit_I/D\,
      D_27 => \Operand_Select_I/OpSelect_Bits[4].Operand_Select_Bit_I/D\,
      D_28 => \Operand_Select_I/OpSelect_Bits[3].Operand_Select_Bit_I/D\,
      D_29 => \Operand_Select_I/OpSelect_Bits[2].Operand_Select_Bit_I/D\,
      D_3 => \Operand_Select_I/OpSelect_Bits[28].Operand_Select_Bit_I/D\,
      D_30 => \Operand_Select_I/OpSelect_Bits[1].Operand_Select_Bit_I/D\,
      D_31 => \Operand_Select_I/OpSelect_Bits[0].Operand_Select_Bit_I/D\,
      D_4 => \Operand_Select_I/OpSelect_Bits[27].Operand_Select_Bit_I/D\,
      D_5 => \Operand_Select_I/OpSelect_Bits[26].Operand_Select_Bit_I/D\,
      D_6 => \Operand_Select_I/OpSelect_Bits[25].Operand_Select_Bit_I/D\,
      D_7 => \Operand_Select_I/OpSelect_Bits[24].Operand_Select_Bit_I/D\,
      D_8 => \Operand_Select_I/OpSelect_Bits[23].Operand_Select_Bit_I/D\,
      D_9 => \Operand_Select_I/OpSelect_Bits[22].Operand_Select_Bit_I/D\,
      Data_Read(15) => Data_Read(0),
      Data_Read(14) => Data_Read(1),
      Data_Read(13) => Data_Read(2),
      Data_Read(12) => Data_Read(3),
      Data_Read(11) => Data_Read(4),
      Data_Read(10) => Data_Read(5),
      Data_Read(9) => Data_Read(6),
      Data_Read(8) => Data_Read(7),
      Data_Read(7) => Data_Read(8),
      Data_Read(6) => Data_Read(9),
      Data_Read(5) => Data_Read(10),
      Data_Read(4) => Data_Read(11),
      Data_Read(3) => Data_Read(12),
      Data_Read(2) => Data_Read(13),
      Data_Read(1) => Data_Read(14),
      Data_Read(0) => Data_Read(15),
      Data_Write(23) => raw_Data_Write(0),
      Data_Write(22) => raw_Data_Write(1),
      Data_Write(21) => raw_Data_Write(2),
      Data_Write(20) => raw_Data_Write(3),
      Data_Write(19) => raw_Data_Write(4),
      Data_Write(18) => raw_Data_Write(5),
      Data_Write(17) => raw_Data_Write(6),
      Data_Write(16) => raw_Data_Write(7),
      Data_Write(15) => raw_Data_Write(8),
      Data_Write(14) => raw_Data_Write(9),
      Data_Write(13) => raw_Data_Write(10),
      Data_Write(12) => raw_Data_Write(11),
      Data_Write(11) => raw_Data_Write(12),
      Data_Write(10) => raw_Data_Write(13),
      Data_Write(9) => raw_Data_Write(14),
      Data_Write(8) => raw_Data_Write(15),
      Data_Write(7) => raw_Data_Write(16),
      Data_Write(6) => raw_Data_Write(17),
      Data_Write(5) => raw_Data_Write(18),
      Data_Write(4) => raw_Data_Write(19),
      Data_Write(3) => raw_Data_Write(20),
      Data_Write(2) => raw_Data_Write(21),
      Data_Write(1) => raw_Data_Write(22),
      Data_Write(0) => raw_Data_Write(23),
      E(0) => imm_Instr,
      EX_Op1 => Data_Flow_I_n_5,
      EX_Op2 => Data_Flow_I_n_2,
      IReady => valid_Fetch,
      Increment => pc_Incr,
      Interrupt_Address(0 to 31) => Interrupt_Address(0 to 31),
      LO => alu_Carry,
      Logic_Oper(0) => Decode_I_n_56,
      Logic_Oper(1) => Decode_I_n_57,
      MSR(2) => MSR(28),
      MSR(1) => MSR(29),
      MSR(0) => MSR(30),
      MSR_Rst => \MSR_Reg_I/MSR_Rst\,
      OF_PipeRun => \PC_Module_I/normal_piperun\,
      Op1_Low(0 to 1) => Op1_Low(0 to 1),
      Op1_Shift => Data_Flow_I_n_4,
      PC_Write => \PC_Module_I/pc_write_I\,
      Q(1) => result_Sel(0),
      Q(0) => result_Sel(1),
      Reg_Test_Equal => reg_Test_Equal,
      Reg_Write => reg_Write_I,
      Reg_zero => reg_zero,
      Select_Logic => select_Logic,
      Sext16 => Sext16,
      Shift_Oper => sign_Extend,
      Shifted => Decode_I_n_94,
      Unsigned_Op => Unsigned_Op,
      \Use_Async_Reset.sync_reset_reg\ => Decode_I_n_132,
      \Using_FPGA.Native\ => Data_Flow_I_n_6,
      \Using_FPGA.Native_0\ => Data_Flow_I_n_11,
      \Using_FPGA.Native_1\ => Data_Flow_I_n_12,
      \Using_FPGA.Native_10\ => Data_Flow_I_n_21,
      \Using_FPGA.Native_11\ => Data_Flow_I_n_22,
      \Using_FPGA.Native_12\ => Data_Flow_I_n_23,
      \Using_FPGA.Native_13\ => Data_Flow_I_n_24,
      \Using_FPGA.Native_14\ => Data_Flow_I_n_25,
      \Using_FPGA.Native_15\ => Data_Flow_I_n_26,
      \Using_FPGA.Native_16\ => Data_Flow_I_n_27,
      \Using_FPGA.Native_17\ => Data_Flow_I_n_28,
      \Using_FPGA.Native_18\ => Data_Flow_I_n_29,
      \Using_FPGA.Native_19\ => Data_Flow_I_n_30,
      \Using_FPGA.Native_2\ => Data_Flow_I_n_13,
      \Using_FPGA.Native_20\ => Data_Flow_I_n_31,
      \Using_FPGA.Native_21\ => Data_Flow_I_n_32,
      \Using_FPGA.Native_22\ => Data_Flow_I_n_33,
      \Using_FPGA.Native_23\ => Data_Flow_I_n_34,
      \Using_FPGA.Native_24\ => Data_Flow_I_n_35,
      \Using_FPGA.Native_25\ => Data_Flow_I_n_36,
      \Using_FPGA.Native_26\ => Data_Flow_I_n_37,
      \Using_FPGA.Native_27\ => Data_Flow_I_n_38,
      \Using_FPGA.Native_28\ => Data_Flow_I_n_39,
      \Using_FPGA.Native_29\ => Data_Flow_I_n_40,
      \Using_FPGA.Native_3\ => Data_Flow_I_n_14,
      \Using_FPGA.Native_30\ => Data_Flow_I_n_41,
      \Using_FPGA.Native_31\ => Data_Flow_I_n_42,
      \Using_FPGA.Native_32\(15) => Data_Flow_I_n_141,
      \Using_FPGA.Native_32\(14) => Data_Flow_I_n_142,
      \Using_FPGA.Native_32\(13) => Data_Flow_I_n_143,
      \Using_FPGA.Native_32\(12) => Data_Flow_I_n_144,
      \Using_FPGA.Native_32\(11) => Data_Flow_I_n_145,
      \Using_FPGA.Native_32\(10) => Data_Flow_I_n_146,
      \Using_FPGA.Native_32\(9) => Data_Flow_I_n_147,
      \Using_FPGA.Native_32\(8) => Data_Flow_I_n_148,
      \Using_FPGA.Native_32\(7) => Data_Flow_I_n_149,
      \Using_FPGA.Native_32\(6) => Data_Flow_I_n_150,
      \Using_FPGA.Native_32\(5) => Data_Flow_I_n_151,
      \Using_FPGA.Native_32\(4) => Data_Flow_I_n_152,
      \Using_FPGA.Native_32\(3) => Data_Flow_I_n_153,
      \Using_FPGA.Native_32\(2) => Data_Flow_I_n_154,
      \Using_FPGA.Native_32\(1) => Data_Flow_I_n_155,
      \Using_FPGA.Native_32\(0) => \Operand_Select_I/Imm_Reg\,
      \Using_FPGA.Native_33\ => Decode_I_n_92,
      \Using_FPGA.Native_4\ => Data_Flow_I_n_15,
      \Using_FPGA.Native_5\ => Data_Flow_I_n_16,
      \Using_FPGA.Native_6\ => Data_Flow_I_n_17,
      \Using_FPGA.Native_7\ => Data_Flow_I_n_18,
      \Using_FPGA.Native_8\ => Data_Flow_I_n_19,
      \Using_FPGA.Native_9\ => Data_Flow_I_n_20,
      \Using_FPGA.enable_Interrupts_I_reg\ => Decode_I_n_93,
      \Using_FPGA.set_BIP_I_reg\ => Decode_I_n_91,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      carry_In => carry_In,
      compare_Instr => compare_Instr,
      doublet_Read => doublet_Read,
      exception_kind(0) => exception_kind(30),
      extend_Data_Read(15) => extend_Data_Read(16),
      extend_Data_Read(14) => extend_Data_Read(17),
      extend_Data_Read(13) => extend_Data_Read(18),
      extend_Data_Read(12) => extend_Data_Read(19),
      extend_Data_Read(11) => extend_Data_Read(20),
      extend_Data_Read(10) => extend_Data_Read(21),
      extend_Data_Read(9) => extend_Data_Read(22),
      extend_Data_Read(8) => extend_Data_Read(23),
      extend_Data_Read(7) => extend_Data_Read(24),
      extend_Data_Read(6) => extend_Data_Read(25),
      extend_Data_Read(5) => extend_Data_Read(26),
      extend_Data_Read(4) => extend_Data_Read(27),
      extend_Data_Read(3) => extend_Data_Read(28),
      extend_Data_Read(2) => extend_Data_Read(29),
      extend_Data_Read(1) => extend_Data_Read(30),
      extend_Data_Read(0) => extend_Data_Read(31),
      imm_Value(0 to 15) => imm_Value(0 to 15),
      jump => jump,
      lopt => lopt,
      lopt_1 => Op1_Low(1),
      lopt_2 => lopt_1,
      lopt_3 => lopt_2,
      lopt_4 => lopt_3,
      lopt_5 => lopt_4,
      lopt_6 => lopt_5,
      lopt_7 => lopt_6,
      lopt_8 => lopt_7,
      \^of_piperun\ => of_PipeRun,
      opsel1_SPR => opsel1_SPR,
      quadlet_Read => quadlet_Read,
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg_Test_Equal_N => reg_Test_Equal_N,
      res_Forward1 => res_Forward1,
      res_Forward2 => res_Forward2,
      sext8 => sext8,
      sync_reset => sync_reset,
      \trace_data_address_i_reg[31]\ => Data_Flow_I_n_3,
      trace_jump_taken_i_reg => Data_Flow_I_n_7,
      \trace_pc_i_reg[17]\(12) => PC_EX_i(17),
      \trace_pc_i_reg[17]\(11) => PC_EX_i(18),
      \trace_pc_i_reg[17]\(10) => PC_EX_i(19),
      \trace_pc_i_reg[17]\(9) => PC_EX_i(20),
      \trace_pc_i_reg[17]\(8) => PC_EX_i(21),
      \trace_pc_i_reg[17]\(7) => PC_EX_i(22),
      \trace_pc_i_reg[17]\(6) => PC_EX_i(23),
      \trace_pc_i_reg[17]\(5) => PC_EX_i(24),
      \trace_pc_i_reg[17]\(4) => PC_EX_i(25),
      \trace_pc_i_reg[17]\(3) => PC_EX_i(26),
      \trace_pc_i_reg[17]\(2) => PC_EX_i(27),
      \trace_pc_i_reg[17]\(1) => PC_EX_i(28),
      \trace_pc_i_reg[17]\(0) => PC_EX_i(29),
      \write_Addr_I_reg[0]\(4) => write_Addr(0),
      \write_Addr_I_reg[0]\(3) => write_Addr(1),
      \write_Addr_I_reg[0]\(2) => write_Addr(2),
      \write_Addr_I_reg[0]\(1) => write_Addr(3),
      \write_Addr_I_reg[0]\(0) => write_Addr(4),
      write_Carry_I_reg => Decode_I_n_137
    );
Decode_I: entity work.microblaze_mcs_1_Decode
     port map (
      Buffer_Addr(2) => buffer_Addr(1),
      Buffer_Addr(1) => buffer_Addr(2),
      Buffer_Addr(0) => buffer_Addr(3),
      Clk => Clk,
      D(6 downto 5) => \^d\(247 downto 246),
      D(4 downto 2) => \^d\(168 downto 166),
      D(1) => \^d\(129),
      D(0) => \^d\(115),
      DI => Decode_I_n_138,
      DReady => DReady,
      D_0 => \Operand_Select_I/OpSelect_Bits[0].Operand_Select_Bit_I/D\,
      D_1 => \Operand_Select_I/OpSelect_Bits[1].Operand_Select_Bit_I/D\,
      D_10 => \Operand_Select_I/OpSelect_Bits[10].Operand_Select_Bit_I/D\,
      D_11 => \Operand_Select_I/OpSelect_Bits[11].Operand_Select_Bit_I/D\,
      D_12 => \Operand_Select_I/OpSelect_Bits[12].Operand_Select_Bit_I/D\,
      D_13 => \Operand_Select_I/OpSelect_Bits[13].Operand_Select_Bit_I/D\,
      D_14 => \Operand_Select_I/OpSelect_Bits[14].Operand_Select_Bit_I/D\,
      D_15 => \Operand_Select_I/OpSelect_Bits[15].Operand_Select_Bit_I/D\,
      D_16 => \Operand_Select_I/OpSelect_Bits[16].Operand_Select_Bit_I/D\,
      D_17 => \Operand_Select_I/OpSelect_Bits[17].Operand_Select_Bit_I/D\,
      D_18 => \Operand_Select_I/OpSelect_Bits[18].Operand_Select_Bit_I/D\,
      D_19 => \Operand_Select_I/OpSelect_Bits[19].Operand_Select_Bit_I/D\,
      D_2 => \Operand_Select_I/OpSelect_Bits[2].Operand_Select_Bit_I/D\,
      D_20 => \Operand_Select_I/OpSelect_Bits[20].Operand_Select_Bit_I/D\,
      D_21 => \Operand_Select_I/OpSelect_Bits[21].Operand_Select_Bit_I/D\,
      D_22 => \Operand_Select_I/OpSelect_Bits[22].Operand_Select_Bit_I/D\,
      D_23 => \Operand_Select_I/OpSelect_Bits[23].Operand_Select_Bit_I/D\,
      D_24 => \Operand_Select_I/OpSelect_Bits[24].Operand_Select_Bit_I/D\,
      D_25 => \Operand_Select_I/OpSelect_Bits[25].Operand_Select_Bit_I/D\,
      D_26 => \Operand_Select_I/OpSelect_Bits[26].Operand_Select_Bit_I/D\,
      D_27 => \Operand_Select_I/OpSelect_Bits[27].Operand_Select_Bit_I/D\,
      D_28 => \Operand_Select_I/OpSelect_Bits[28].Operand_Select_Bit_I/D\,
      D_29 => \Operand_Select_I/OpSelect_Bits[29].Operand_Select_Bit_I/D\,
      D_3 => \Operand_Select_I/OpSelect_Bits[3].Operand_Select_Bit_I/D\,
      D_30 => \Operand_Select_I/OpSelect_Bits[30].Operand_Select_Bit_I/D\,
      D_31 => \Operand_Select_I/OpSelect_Bits[31].Operand_Select_Bit_I/D\,
      D_4 => \Operand_Select_I/OpSelect_Bits[4].Operand_Select_Bit_I/D\,
      D_5 => \Operand_Select_I/OpSelect_Bits[5].Operand_Select_Bit_I/D\,
      D_6 => \Operand_Select_I/OpSelect_Bits[6].Operand_Select_Bit_I/D\,
      D_7 => \Operand_Select_I/OpSelect_Bits[7].Operand_Select_Bit_I/D\,
      D_8 => \Operand_Select_I/OpSelect_Bits[8].Operand_Select_Bit_I/D\,
      D_9 => \Operand_Select_I/OpSelect_Bits[9].Operand_Select_Bit_I/D\,
      E(0) => imm_Instr,
      EX_Op1 => Data_Flow_I_n_5,
      Hibernate => Hibernate,
      IReady => valid_Fetch,
      Increment => pc_Incr,
      Instr(0 to 31) => Instr(0 to 31),
      Interrupt => Interrupt,
      Interrupt_Ack(0 to 1) => Interrupt_Ack(0 to 1),
      LO => alu_Carry,
      MSR(2) => MSR(28),
      MSR(1) => MSR(29),
      MSR(0) => MSR(30),
      MSR_Rst => \MSR_Reg_I/MSR_Rst\,
      \No_ECC.Sl_Rdy_reg\ => IReady,
      \No_Master_Debug_Logic.sleep_reset_mode_reg\ => \No_Master_Debug_Logic.sleep_reset_mode_reg\,
      OF_PipeRun => \PC_Module_I/normal_piperun\,
      Op1_Low(0 to 1) => Op1_Low(0 to 1),
      Op1_Shift => Data_Flow_I_n_4,
      PC_Write => \PC_Module_I/pc_write_I\,
      Pause => Pause,
      Pause_Ack => Pause_Ack,
      Q(1) => result_Sel(0),
      Q(0) => result_Sel(1),
      Reg_Test_Equal => reg_Test_Equal,
      Reg_Write => reg_Write_I,
      Reg_zero => reg_zero,
      Select_Logic => select_Logic,
      Sext16 => Sext16,
      Shift_Oper => sign_Extend,
      Shifted => Decode_I_n_94,
      \Size_17to32.imm_Reg_reg[0]\(15) => Data_Flow_I_n_141,
      \Size_17to32.imm_Reg_reg[0]\(14) => Data_Flow_I_n_142,
      \Size_17to32.imm_Reg_reg[0]\(13) => Data_Flow_I_n_143,
      \Size_17to32.imm_Reg_reg[0]\(12) => Data_Flow_I_n_144,
      \Size_17to32.imm_Reg_reg[0]\(11) => Data_Flow_I_n_145,
      \Size_17to32.imm_Reg_reg[0]\(10) => Data_Flow_I_n_146,
      \Size_17to32.imm_Reg_reg[0]\(9) => Data_Flow_I_n_147,
      \Size_17to32.imm_Reg_reg[0]\(8) => Data_Flow_I_n_148,
      \Size_17to32.imm_Reg_reg[0]\(7) => Data_Flow_I_n_149,
      \Size_17to32.imm_Reg_reg[0]\(6) => Data_Flow_I_n_150,
      \Size_17to32.imm_Reg_reg[0]\(5) => Data_Flow_I_n_151,
      \Size_17to32.imm_Reg_reg[0]\(4) => Data_Flow_I_n_152,
      \Size_17to32.imm_Reg_reg[0]\(3) => Data_Flow_I_n_153,
      \Size_17to32.imm_Reg_reg[0]\(2) => Data_Flow_I_n_154,
      \Size_17to32.imm_Reg_reg[0]\(1) => Data_Flow_I_n_155,
      \Size_17to32.imm_Reg_reg[0]\(0) => \Operand_Select_I/Imm_Reg\,
      Sleep => Sleep,
      Suspend => Suspend,
      \Synchronize.use_sync_reset.sync_reg[2]\(0) => \Synchronize.use_sync_reset.sync_reg[2]\(0),
      Trace_Delay_Slot_early => Trace_Delay_Slot_early,
      Unsigned_Op => Unsigned_Op,
      \Using_FPGA.Native\ => Decode_I_n_91,
      \Using_FPGA.Native_0\ => Decode_I_n_92,
      \Using_FPGA.Native_1\ => Decode_I_n_93,
      \Using_FPGA.Native_2\ => Decode_I_n_97,
      \Using_FPGA.Native_3\ => Decode_I_n_132,
      \Using_FPGA.Native_4\ => Decode_I_n_137,
      \Using_FPGA.Native_5\ => Data_Flow_I_n_7,
      \Using_FPGA.Native_6\ => Data_Flow_I_n_6,
      \Using_FPGA.take_Intr_2nd_Phase_reg_0\ => Data_Flow_I_n_11,
      \Using_FPGA.take_Intr_2nd_Phase_reg_1\ => Data_Flow_I_n_12,
      \Using_FPGA.take_Intr_2nd_Phase_reg_10\ => Data_Flow_I_n_21,
      \Using_FPGA.take_Intr_2nd_Phase_reg_11\ => Data_Flow_I_n_22,
      \Using_FPGA.take_Intr_2nd_Phase_reg_12\ => Data_Flow_I_n_23,
      \Using_FPGA.take_Intr_2nd_Phase_reg_13\ => Data_Flow_I_n_24,
      \Using_FPGA.take_Intr_2nd_Phase_reg_14\ => Data_Flow_I_n_25,
      \Using_FPGA.take_Intr_2nd_Phase_reg_15\ => Data_Flow_I_n_26,
      \Using_FPGA.take_Intr_2nd_Phase_reg_16\ => Data_Flow_I_n_27,
      \Using_FPGA.take_Intr_2nd_Phase_reg_17\ => Data_Flow_I_n_41,
      \Using_FPGA.take_Intr_2nd_Phase_reg_18\ => Data_Flow_I_n_42,
      \Using_FPGA.take_Intr_2nd_Phase_reg_2\ => Data_Flow_I_n_13,
      \Using_FPGA.take_Intr_2nd_Phase_reg_3\ => Data_Flow_I_n_14,
      \Using_FPGA.take_Intr_2nd_Phase_reg_4\ => Data_Flow_I_n_15,
      \Using_FPGA.take_Intr_2nd_Phase_reg_5\ => Data_Flow_I_n_16,
      \Using_FPGA.take_Intr_2nd_Phase_reg_6\ => Data_Flow_I_n_17,
      \Using_FPGA.take_Intr_2nd_Phase_reg_7\ => Data_Flow_I_n_18,
      \Using_FPGA.take_Intr_2nd_Phase_reg_8\ => Data_Flow_I_n_19,
      \Using_FPGA.take_Intr_2nd_Phase_reg_9\ => Data_Flow_I_n_20,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[0]\ => Data_Flow_I_n_40,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[10]\ => Data_Flow_I_n_30,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[11]\ => Data_Flow_I_n_29,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[12]\ => Data_Flow_I_n_28,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[1]\ => Data_Flow_I_n_39,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[2]\ => Data_Flow_I_n_38,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[3]\ => Data_Flow_I_n_37,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[4]\ => Data_Flow_I_n_36,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[5]\ => Data_Flow_I_n_35,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[6]\ => Data_Flow_I_n_34,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[7]\ => Data_Flow_I_n_33,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[8]\ => Data_Flow_I_n_32,
      \Using_Fast.Using_LUTRAM.intr_addr_i_reg[9]\ => Data_Flow_I_n_31,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      carry_In => carry_In,
      compare_Instr => compare_Instr,
      dbg_stop_instr_fetch => dbg_stop_instr_fetch,
      doublet_Read => doublet_Read,
      exception_kind(0) => exception_kind(30),
      imm_Value(0 to 15) => imm_Value(0 to 15),
      isbyte => isbyte,
      isdoublet => isdoublet,
      jump => jump,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      mem_Strobe => mem_Strobe,
      \^of_piperun\ => of_PipeRun,
      opsel1_SPR => opsel1_SPR,
      \out\(0) => \out\(0),
      quadlet_Read => quadlet_Read,
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg_Test_Equal_N => reg_Test_Equal_N,
      res_Forward1 => res_Forward1,
      res_Forward2 => res_Forward2,
      sext8 => sext8,
      sync_reset => sync_reset,
      \trace_instruction_i_reg[0]\(31) => Decode_I_n_52,
      \trace_instruction_i_reg[0]\(30) => Decode_I_n_53,
      \trace_instruction_i_reg[0]\(29) => Decode_I_n_54,
      \trace_instruction_i_reg[0]\(28) => Decode_I_n_55,
      \trace_instruction_i_reg[0]\(27) => Decode_I_n_56,
      \trace_instruction_i_reg[0]\(26) => Decode_I_n_57,
      \trace_instruction_i_reg[0]\(25) => instr_ex(6),
      \trace_instruction_i_reg[0]\(24) => instr_ex(7),
      \trace_instruction_i_reg[0]\(23) => Decode_I_n_60,
      \trace_instruction_i_reg[0]\(22) => Decode_I_n_61,
      \trace_instruction_i_reg[0]\(21) => Decode_I_n_62,
      \trace_instruction_i_reg[0]\(20) => Decode_I_n_63,
      \trace_instruction_i_reg[0]\(19) => Decode_I_n_64,
      \trace_instruction_i_reg[0]\(18) => Decode_I_n_65,
      \trace_instruction_i_reg[0]\(17) => Decode_I_n_66,
      \trace_instruction_i_reg[0]\(16) => Decode_I_n_67,
      \trace_instruction_i_reg[0]\(15) => Decode_I_n_68,
      \trace_instruction_i_reg[0]\(14) => Decode_I_n_69,
      \trace_instruction_i_reg[0]\(13) => Decode_I_n_70,
      \trace_instruction_i_reg[0]\(12) => Decode_I_n_71,
      \trace_instruction_i_reg[0]\(11) => Decode_I_n_72,
      \trace_instruction_i_reg[0]\(10) => Decode_I_n_73,
      \trace_instruction_i_reg[0]\(9) => Decode_I_n_74,
      \trace_instruction_i_reg[0]\(8) => Decode_I_n_75,
      \trace_instruction_i_reg[0]\(7) => Decode_I_n_76,
      \trace_instruction_i_reg[0]\(6) => Decode_I_n_77,
      \trace_instruction_i_reg[0]\(5) => Decode_I_n_78,
      \trace_instruction_i_reg[0]\(4) => Decode_I_n_79,
      \trace_instruction_i_reg[0]\(3) => Decode_I_n_80,
      \trace_instruction_i_reg[0]\(2) => Decode_I_n_81,
      \trace_instruction_i_reg[0]\(1) => Decode_I_n_82,
      \trace_instruction_i_reg[0]\(0) => Decode_I_n_83,
      \trace_reg_addr_i_reg[0]\(4) => write_Addr(0),
      \trace_reg_addr_i_reg[0]\(3) => write_Addr(1),
      \trace_reg_addr_i_reg[0]\(2) => write_Addr(2),
      \trace_reg_addr_i_reg[0]\(1) => write_Addr(3),
      \trace_reg_addr_i_reg[0]\(0) => write_Addr(4),
      trace_reg_write_novalid => trace_reg_write_novalid
    );
\Using_FPGA.Native_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => Data_Read(8),
      I1 => Data_Read(0),
      I2 => Data_Read(24),
      I3 => sel_LSB(0),
      I4 => sel_LSB(1),
      I5 => Data_Read(16),
      O => extend_Data_Read(24)
    );
\Using_FPGA.Native_i_1__0__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => Data_Read(9),
      I1 => Data_Read(1),
      I2 => Data_Read(25),
      I3 => sel_LSB(0),
      I4 => sel_LSB(1),
      I5 => Data_Read(17),
      O => extend_Data_Read(25)
    );
\Using_FPGA.Native_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => Data_Read(10),
      I1 => Data_Read(2),
      I2 => Data_Read(26),
      I3 => sel_LSB(0),
      I4 => sel_LSB(1),
      I5 => Data_Read(18),
      O => extend_Data_Read(26)
    );
\Using_FPGA.Native_i_1__10\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Data_Read(19),
      I1 => sel_LSB(1),
      I2 => Data_Read(3),
      O => extend_Data_Read(19)
    );
\Using_FPGA.Native_i_1__11\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Data_Read(18),
      I1 => sel_LSB(1),
      I2 => Data_Read(2),
      O => extend_Data_Read(18)
    );
\Using_FPGA.Native_i_1__12\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Data_Read(17),
      I1 => sel_LSB(1),
      I2 => Data_Read(1),
      O => extend_Data_Read(17)
    );
\Using_FPGA.Native_i_1__13\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Data_Read(16),
      I1 => sel_LSB(1),
      I2 => Data_Read(0),
      O => extend_Data_Read(16)
    );
\Using_FPGA.Native_i_1__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => Data_Read(11),
      I1 => Data_Read(3),
      I2 => Data_Read(27),
      I3 => sel_LSB(0),
      I4 => sel_LSB(1),
      I5 => Data_Read(19),
      O => extend_Data_Read(27)
    );
\Using_FPGA.Native_i_1__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => Data_Read(12),
      I1 => Data_Read(4),
      I2 => Data_Read(28),
      I3 => sel_LSB(0),
      I4 => sel_LSB(1),
      I5 => Data_Read(20),
      O => extend_Data_Read(28)
    );
\Using_FPGA.Native_i_1__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => Data_Read(13),
      I1 => Data_Read(5),
      I2 => Data_Read(29),
      I3 => sel_LSB(0),
      I4 => sel_LSB(1),
      I5 => Data_Read(21),
      O => extend_Data_Read(29)
    );
\Using_FPGA.Native_i_1__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => Data_Read(14),
      I1 => Data_Read(6),
      I2 => Data_Read(30),
      I3 => sel_LSB(0),
      I4 => sel_LSB(1),
      I5 => Data_Read(22),
      O => extend_Data_Read(30)
    );
\Using_FPGA.Native_i_1__6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => Data_Read(15),
      I1 => Data_Read(7),
      I2 => Data_Read(31),
      I3 => sel_LSB(0),
      I4 => sel_LSB(1),
      I5 => Data_Read(23),
      O => extend_Data_Read(31)
    );
\Using_FPGA.Native_i_1__7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Data_Read(22),
      I1 => sel_LSB(1),
      I2 => Data_Read(6),
      O => extend_Data_Read(22)
    );
\Using_FPGA.Native_i_1__8\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Data_Read(21),
      I1 => sel_LSB(1),
      I2 => Data_Read(5),
      O => extend_Data_Read(21)
    );
\Using_FPGA.Native_i_1__9\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Data_Read(20),
      I1 => sel_LSB(1),
      I2 => Data_Read(4),
      O => extend_Data_Read(20)
    );
\Using_FPGA.Native_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Data_Read(23),
      I1 => sel_LSB(1),
      I2 => Data_Read(7),
      O => extend_Data_Read(23)
    );
trace_data_access_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mem_Strobe,
      Q => \^d\(3),
      R => '0'
    );
\trace_data_address_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(232),
      Q => \^d\(71),
      R => '0'
    );
\trace_data_address_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(222),
      Q => \^d\(61),
      R => '0'
    );
\trace_data_address_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(221),
      Q => \^d\(60),
      R => '0'
    );
\trace_data_address_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(220),
      Q => \^d\(59),
      R => '0'
    );
\trace_data_address_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(219),
      Q => \^d\(58),
      R => '0'
    );
\trace_data_address_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(218),
      Q => \^d\(57),
      R => '0'
    );
\trace_data_address_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(217),
      Q => \^d\(56),
      R => '0'
    );
\trace_data_address_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(216),
      Q => \^d\(55),
      R => '0'
    );
\trace_data_address_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(215),
      Q => \^d\(54),
      R => '0'
    );
\trace_data_address_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(214),
      Q => \^d\(53),
      R => '0'
    );
\trace_data_address_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(213),
      Q => \^d\(52),
      R => '0'
    );
\trace_data_address_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(231),
      Q => \^d\(70),
      R => '0'
    );
\trace_data_address_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(212),
      Q => \^d\(51),
      R => '0'
    );
\trace_data_address_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(211),
      Q => \^d\(50),
      R => '0'
    );
\trace_data_address_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(210),
      Q => \^d\(49),
      R => '0'
    );
\trace_data_address_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(209),
      Q => \^d\(48),
      R => '0'
    );
\trace_data_address_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(208),
      Q => \^d\(47),
      R => '0'
    );
\trace_data_address_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(207),
      Q => \^d\(46),
      R => '0'
    );
\trace_data_address_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(206),
      Q => \^d\(45),
      R => '0'
    );
\trace_data_address_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(205),
      Q => \^d\(44),
      R => '0'
    );
\trace_data_address_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(204),
      Q => \^d\(43),
      R => '0'
    );
\trace_data_address_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(203),
      Q => \^d\(42),
      R => '0'
    );
\trace_data_address_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(230),
      Q => \^d\(69),
      R => '0'
    );
\trace_data_address_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(202),
      Q => \^d\(41),
      R => '0'
    );
\trace_data_address_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(201),
      Q => \^d\(40),
      R => '0'
    );
\trace_data_address_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(229),
      Q => \^d\(68),
      R => '0'
    );
\trace_data_address_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(228),
      Q => \^d\(67),
      R => '0'
    );
\trace_data_address_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(227),
      Q => \^d\(66),
      R => '0'
    );
\trace_data_address_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(226),
      Q => \^d\(65),
      R => '0'
    );
\trace_data_address_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(225),
      Q => \^d\(64),
      R => '0'
    );
\trace_data_address_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(224),
      Q => \^d\(63),
      R => '0'
    );
\trace_data_address_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(223),
      Q => \^d\(62),
      R => '0'
    );
\trace_data_byte_enable_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(165),
      Q => \^d\(7),
      R => '0'
    );
\trace_data_byte_enable_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(164),
      Q => \^d\(6),
      R => '0'
    );
\trace_data_byte_enable_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(163),
      Q => \^d\(5),
      R => '0'
    );
\trace_data_byte_enable_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(162),
      Q => \^d\(4),
      R => '0'
    );
trace_data_read_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(167),
      Q => \^d\(2),
      R => '0'
    );
trace_data_write_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(166),
      Q => \^d\(1),
      R => '0'
    );
\trace_data_write_value_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(200),
      Q => \^d\(39),
      R => '0'
    );
\trace_data_write_value_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(190),
      Q => \^d\(29),
      R => '0'
    );
\trace_data_write_value_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(189),
      Q => \^d\(28),
      R => '0'
    );
\trace_data_write_value_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(188),
      Q => \^d\(27),
      R => '0'
    );
\trace_data_write_value_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(187),
      Q => \^d\(26),
      R => '0'
    );
\trace_data_write_value_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(186),
      Q => \^d\(25),
      R => '0'
    );
\trace_data_write_value_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(185),
      Q => \^d\(24),
      R => '0'
    );
\trace_data_write_value_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(184),
      Q => \^d\(23),
      R => '0'
    );
\trace_data_write_value_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(183),
      Q => \^d\(22),
      R => '0'
    );
\trace_data_write_value_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(182),
      Q => \^d\(21),
      R => '0'
    );
\trace_data_write_value_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(181),
      Q => \^d\(20),
      R => '0'
    );
\trace_data_write_value_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(199),
      Q => \^d\(38),
      R => '0'
    );
\trace_data_write_value_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(180),
      Q => \^d\(19),
      R => '0'
    );
\trace_data_write_value_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(179),
      Q => \^d\(18),
      R => '0'
    );
\trace_data_write_value_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(178),
      Q => \^d\(17),
      R => '0'
    );
\trace_data_write_value_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(177),
      Q => \^d\(16),
      R => '0'
    );
\trace_data_write_value_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(176),
      Q => \^d\(15),
      R => '0'
    );
\trace_data_write_value_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(175),
      Q => \^d\(14),
      R => '0'
    );
\trace_data_write_value_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(174),
      Q => \^d\(13),
      R => '0'
    );
\trace_data_write_value_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(173),
      Q => \^d\(12),
      R => '0'
    );
\trace_data_write_value_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(172),
      Q => \^d\(11),
      R => '0'
    );
\trace_data_write_value_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(171),
      Q => \^d\(10),
      R => '0'
    );
\trace_data_write_value_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(198),
      Q => \^d\(37),
      R => '0'
    );
\trace_data_write_value_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(170),
      Q => \^d\(9),
      R => '0'
    );
\trace_data_write_value_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(169),
      Q => \^d\(8),
      R => '0'
    );
\trace_data_write_value_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(197),
      Q => \^d\(36),
      R => '0'
    );
\trace_data_write_value_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(196),
      Q => \^d\(35),
      R => '0'
    );
\trace_data_write_value_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(195),
      Q => \^d\(34),
      R => '0'
    );
\trace_data_write_value_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(194),
      Q => \^d\(33),
      R => '0'
    );
\trace_data_write_value_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(193),
      Q => \^d\(32),
      R => '0'
    );
\trace_data_write_value_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(192),
      Q => \^d\(31),
      R => '0'
    );
\trace_data_write_value_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(191),
      Q => \^d\(30),
      R => '0'
    );
trace_delay_slot_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Trace_Delay_Slot_early,
      Q => \^d\(72),
      R => '0'
    );
trace_exception_taken_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => exception_kind(30),
      Q => \^d\(74),
      R => '0'
    );
\trace_instruction_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Decode_I_n_52,
      Q => \^d\(161),
      R => '0'
    );
\trace_instruction_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Decode_I_n_62,
      Q => \^d\(151),
      R => '0'
    );
\trace_instruction_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Decode_I_n_63,
      Q => \^d\(150),
      R => '0'
    );
\trace_instruction_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Decode_I_n_64,
      Q => \^d\(149),
      R => '0'
    );
\trace_instruction_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Decode_I_n_65,
      Q => \^d\(148),
      R => '0'
    );
\trace_instruction_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Decode_I_n_66,
      Q => \^d\(147),
      R => '0'
    );
\trace_instruction_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Decode_I_n_67,
      Q => \^d\(146),
      R => '0'
    );
\trace_instruction_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Decode_I_n_68,
      Q => \^d\(145),
      R => '0'
    );
\trace_instruction_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Decode_I_n_69,
      Q => \^d\(144),
      R => '0'
    );
\trace_instruction_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Decode_I_n_70,
      Q => \^d\(143),
      R => '0'
    );
\trace_instruction_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Decode_I_n_71,
      Q => \^d\(142),
      R => '0'
    );
\trace_instruction_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Decode_I_n_53,
      Q => \^d\(160),
      R => '0'
    );
\trace_instruction_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Decode_I_n_72,
      Q => \^d\(141),
      R => '0'
    );
\trace_instruction_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Decode_I_n_73,
      Q => \^d\(140),
      R => '0'
    );
\trace_instruction_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Decode_I_n_74,
      Q => \^d\(139),
      R => '0'
    );
\trace_instruction_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Decode_I_n_75,
      Q => \^d\(138),
      R => '0'
    );
\trace_instruction_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Decode_I_n_76,
      Q => \^d\(137),
      R => '0'
    );
\trace_instruction_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Decode_I_n_77,
      Q => \^d\(136),
      R => '0'
    );
\trace_instruction_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Decode_I_n_78,
      Q => \^d\(135),
      R => '0'
    );
\trace_instruction_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Decode_I_n_79,
      Q => \^d\(134),
      R => '0'
    );
\trace_instruction_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Decode_I_n_80,
      Q => \^d\(133),
      R => '0'
    );
\trace_instruction_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Decode_I_n_81,
      Q => \^d\(132),
      R => '0'
    );
\trace_instruction_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Decode_I_n_54,
      Q => \^d\(159),
      R => '0'
    );
\trace_instruction_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Decode_I_n_82,
      Q => \^d\(131),
      R => '0'
    );
\trace_instruction_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Decode_I_n_83,
      Q => \^d\(130),
      R => '0'
    );
\trace_instruction_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Decode_I_n_55,
      Q => \^d\(158),
      R => '0'
    );
\trace_instruction_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Decode_I_n_56,
      Q => \^d\(157),
      R => '0'
    );
\trace_instruction_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Decode_I_n_57,
      Q => \^d\(156),
      R => '0'
    );
\trace_instruction_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => instr_ex(6),
      Q => \^d\(155),
      R => '0'
    );
\trace_instruction_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => instr_ex(7),
      Q => \^d\(154),
      R => '0'
    );
\trace_instruction_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Decode_I_n_60,
      Q => \^d\(153),
      R => '0'
    );
\trace_instruction_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Decode_I_n_61,
      Q => \^d\(152),
      R => '0'
    );
trace_jump_taken_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => jump,
      Q => \^d\(73),
      R => '0'
    );
\trace_msr_reg_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => MSR(28),
      Q => \^d\(109),
      R => '0'
    );
\trace_msr_reg_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => MSR(29),
      Q => \^d\(108),
      R => '0'
    );
\trace_msr_reg_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => MSR(30),
      Q => \^d\(107),
      R => '0'
    );
trace_of_piperun_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => of_PipeRun,
      Q => \^d\(0),
      R => '0'
    );
\trace_pc_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(17),
      Q => \^d\(128),
      R => '0'
    );
\trace_pc_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(18),
      Q => \^d\(127),
      R => '0'
    );
\trace_pc_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(19),
      Q => \^d\(126),
      R => '0'
    );
\trace_pc_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(20),
      Q => \^d\(125),
      R => '0'
    );
\trace_pc_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(21),
      Q => \^d\(124),
      R => '0'
    );
\trace_pc_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(22),
      Q => \^d\(123),
      R => '0'
    );
\trace_pc_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(23),
      Q => \^d\(122),
      R => '0'
    );
\trace_pc_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(24),
      Q => \^d\(121),
      R => '0'
    );
\trace_pc_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(25),
      Q => \^d\(120),
      R => '0'
    );
\trace_pc_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(26),
      Q => \^d\(119),
      R => '0'
    );
\trace_pc_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(27),
      Q => \^d\(118),
      R => '0'
    );
\trace_pc_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(28),
      Q => \^d\(117),
      R => '0'
    );
\trace_pc_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(29),
      Q => \^d\(116),
      R => '0'
    );
\trace_reg_addr_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => write_Addr(0),
      Q => \^d\(114),
      R => '0'
    );
\trace_reg_addr_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => write_Addr(1),
      Q => \^d\(113),
      R => '0'
    );
\trace_reg_addr_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => write_Addr(2),
      Q => \^d\(112),
      R => '0'
    );
\trace_reg_addr_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => write_Addr(3),
      Q => \^d\(111),
      R => '0'
    );
\trace_reg_addr_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => write_Addr(4),
      Q => \^d\(110),
      R => '0'
    );
trace_reg_write_novalid_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => reg_Write_I,
      Q => trace_reg_write_novalid,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_blk_mem_gen_v8_4_1_synth is
  port (
    douta : out STD_LOGIC_VECTOR ( 31 downto 0 );
    doutb : out STD_LOGIC_VECTOR ( 31 downto 0 );
    rsta_busy : out STD_LOGIC;
    rstb_busy : out STD_LOGIC;
    clkb : in STD_LOGIC;
    clka : in STD_LOGIC;
    addra : in STD_LOGIC_VECTOR ( 12 downto 0 );
    addrb : in STD_LOGIC_VECTOR ( 12 downto 0 );
    dina : in STD_LOGIC_VECTOR ( 31 downto 0 );
    dinb : in STD_LOGIC_VECTOR ( 31 downto 0 );
    wea : in STD_LOGIC_VECTOR ( 3 downto 0 );
    web : in STD_LOGIC_VECTOR ( 3 downto 0 );
    rsta : in STD_LOGIC;
    ena : in STD_LOGIC;
    rstb : in STD_LOGIC;
    enb : in STD_LOGIC
  );
end microblaze_mcs_1_blk_mem_gen_v8_4_1_synth;

architecture STRUCTURE of microblaze_mcs_1_blk_mem_gen_v8_4_1_synth is
begin
\gnbram.gnative_mem_map_bmg.native_mem_map_blk_mem_gen\: entity work.microblaze_mcs_1_blk_mem_gen_top
     port map (
      addra(12 downto 0) => addra(12 downto 0),
      addrb(12 downto 0) => addrb(12 downto 0),
      clka => clka,
      clkb => clkb,
      dina(31 downto 0) => dina(31 downto 0),
      dinb(31 downto 0) => dinb(31 downto 0),
      douta(31 downto 0) => douta(31 downto 0),
      doutb(31 downto 0) => doutb(31 downto 0),
      ena => ena,
      enb => enb,
      rsta => rsta,
      rsta_busy => rsta_busy,
      rstb => rstb,
      rstb_busy => rstb_busy,
      wea(3 downto 0) => wea(3 downto 0),
      web(3 downto 0) => web(3 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_bd_3c9d_0_iomodule_0_0 is
  port (
    Clk : in STD_LOGIC;
    Rst : in STD_LOGIC;
    IO_Addr_Strobe : out STD_LOGIC;
    IO_Read_Strobe : out STD_LOGIC;
    IO_Write_Strobe : out STD_LOGIC;
    IO_Address : out STD_LOGIC_VECTOR ( 31 downto 0 );
    IO_Byte_Enable : out STD_LOGIC_VECTOR ( 3 downto 0 );
    IO_Write_Data : out STD_LOGIC_VECTOR ( 31 downto 0 );
    IO_Read_Data : in STD_LOGIC_VECTOR ( 31 downto 0 );
    IO_Ready : in STD_LOGIC;
    UART_Rx : in STD_LOGIC;
    UART_Tx : out STD_LOGIC;
    UART_Interrupt : out STD_LOGIC;
    GPO1 : out STD_LOGIC_VECTOR ( 7 downto 0 );
    GPI1 : in STD_LOGIC_VECTOR ( 7 downto 0 );
    GPI1_Interrupt : out STD_LOGIC;
    INTC_IRQ : out STD_LOGIC;
    INTC_Processor_Ack : in STD_LOGIC_VECTOR ( 1 downto 0 );
    INTC_Interrupt_Address : out STD_LOGIC_VECTOR ( 31 downto 0 );
    INTC_IRQ_OUT : out STD_LOGIC;
    LMB_ABus : in STD_LOGIC_VECTOR ( 0 to 31 );
    LMB_WriteDBus : in STD_LOGIC_VECTOR ( 0 to 31 );
    LMB_AddrStrobe : in STD_LOGIC;
    LMB_ReadStrobe : in STD_LOGIC;
    LMB_WriteStrobe : in STD_LOGIC;
    LMB_BE : in STD_LOGIC_VECTOR ( 0 to 3 );
    Sl_DBus : out STD_LOGIC_VECTOR ( 0 to 31 );
    Sl_Ready : out STD_LOGIC;
    Sl_Wait : out STD_LOGIC;
    Sl_UE : out STD_LOGIC;
    Sl_CE : out STD_LOGIC
  );
  attribute CHECK_LICENSE_TYPE : string;
  attribute CHECK_LICENSE_TYPE of microblaze_mcs_1_bd_3c9d_0_iomodule_0_0 : entity is "bd_3c9d_0_iomodule_0_0,iomodule,{}";
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of microblaze_mcs_1_bd_3c9d_0_iomodule_0_0 : entity is "yes";
  attribute X_CORE_INFO : string;
  attribute X_CORE_INFO of microblaze_mcs_1_bd_3c9d_0_iomodule_0_0 : entity is "iomodule,Vivado 2018.2";
end microblaze_mcs_1_bd_3c9d_0_iomodule_0_0;

architecture STRUCTURE of microblaze_mcs_1_bd_3c9d_0_iomodule_0_0 is
  signal NLW_U0_FIT1_Interrupt_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_FIT1_Toggle_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_FIT2_Interrupt_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_FIT2_Toggle_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_FIT3_Interrupt_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_FIT3_Toggle_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_FIT4_Interrupt_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_FIT4_Toggle_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_GPI2_Interrupt_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_GPI3_Interrupt_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_GPI4_Interrupt_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_PIT1_Interrupt_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_PIT1_Toggle_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_PIT2_Interrupt_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_PIT2_Toggle_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_PIT3_Interrupt_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_PIT3_Toggle_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_PIT4_Interrupt_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_PIT4_Toggle_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_GPO2_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_GPO3_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_GPO4_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_ToVote_UNCONNECTED : STD_LOGIC_VECTOR ( 1023 downto 0 );
  attribute C_AVOID_PRIMITIVES : integer;
  attribute C_AVOID_PRIMITIVES of U0 : label is 0;
  attribute C_BASEADDR : string;
  attribute C_BASEADDR of U0 : label is "64'b0000000000000000000000000000000010000000000000000000000000000000";
  attribute C_FAMILY : string;
  attribute C_FAMILY of U0 : label is "spartan7";
  attribute C_FIT1_INTERRUPT : integer;
  attribute C_FIT1_INTERRUPT of U0 : label is 0;
  attribute C_FIT1_No_CLOCKS : integer;
  attribute C_FIT1_No_CLOCKS of U0 : label is 6216;
  attribute C_FIT2_INTERRUPT : integer;
  attribute C_FIT2_INTERRUPT of U0 : label is 0;
  attribute C_FIT2_No_CLOCKS : integer;
  attribute C_FIT2_No_CLOCKS of U0 : label is 6216;
  attribute C_FIT3_INTERRUPT : integer;
  attribute C_FIT3_INTERRUPT of U0 : label is 0;
  attribute C_FIT3_No_CLOCKS : integer;
  attribute C_FIT3_No_CLOCKS of U0 : label is 6216;
  attribute C_FIT4_INTERRUPT : integer;
  attribute C_FIT4_INTERRUPT of U0 : label is 0;
  attribute C_FIT4_No_CLOCKS : integer;
  attribute C_FIT4_No_CLOCKS of U0 : label is 6216;
  attribute C_FREQ : integer;
  attribute C_FREQ of U0 : label is 100000000;
  attribute C_GPI1_INTERRUPT : integer;
  attribute C_GPI1_INTERRUPT of U0 : label is 2;
  attribute C_GPI1_SIZE : integer;
  attribute C_GPI1_SIZE of U0 : label is 8;
  attribute C_GPI2_INTERRUPT : integer;
  attribute C_GPI2_INTERRUPT of U0 : label is 0;
  attribute C_GPI2_SIZE : integer;
  attribute C_GPI2_SIZE of U0 : label is 32;
  attribute C_GPI3_INTERRUPT : integer;
  attribute C_GPI3_INTERRUPT of U0 : label is 0;
  attribute C_GPI3_SIZE : integer;
  attribute C_GPI3_SIZE of U0 : label is 32;
  attribute C_GPI4_INTERRUPT : integer;
  attribute C_GPI4_INTERRUPT of U0 : label is 0;
  attribute C_GPI4_SIZE : integer;
  attribute C_GPI4_SIZE of U0 : label is 32;
  attribute C_GPO1_INIT : integer;
  attribute C_GPO1_INIT of U0 : label is 0;
  attribute C_GPO1_SIZE : integer;
  attribute C_GPO1_SIZE of U0 : label is 8;
  attribute C_GPO2_INIT : integer;
  attribute C_GPO2_INIT of U0 : label is 0;
  attribute C_GPO2_SIZE : integer;
  attribute C_GPO2_SIZE of U0 : label is 32;
  attribute C_GPO3_INIT : integer;
  attribute C_GPO3_INIT of U0 : label is 0;
  attribute C_GPO3_SIZE : integer;
  attribute C_GPO3_SIZE of U0 : label is 32;
  attribute C_GPO4_INIT : integer;
  attribute C_GPO4_INIT of U0 : label is 0;
  attribute C_GPO4_SIZE : integer;
  attribute C_GPO4_SIZE of U0 : label is 32;
  attribute C_HIGHADDR : string;
  attribute C_HIGHADDR of U0 : label is "64'b0000000000000000000000000000000010000000000000001111111111111111";
  attribute C_INSTANCE : string;
  attribute C_INSTANCE of U0 : label is "iomodule";
  attribute C_INTC_ADDR_WIDTH : integer;
  attribute C_INTC_ADDR_WIDTH of U0 : label is 15;
  attribute C_INTC_ASYNC_INTR : string;
  attribute C_INTC_ASYNC_INTR of U0 : label is "16'b1111111111111111";
  attribute C_INTC_BASE_VECTORS : integer;
  attribute C_INTC_BASE_VECTORS of U0 : label is 0;
  attribute C_INTC_HAS_FAST : integer;
  attribute C_INTC_HAS_FAST of U0 : label is 1;
  attribute C_INTC_INTR_SIZE : integer;
  attribute C_INTC_INTR_SIZE of U0 : label is 1;
  attribute C_INTC_LEVEL_EDGE : string;
  attribute C_INTC_LEVEL_EDGE of U0 : label is "16'b0000000000000000";
  attribute C_INTC_NUM_SYNC_FF : integer;
  attribute C_INTC_NUM_SYNC_FF of U0 : label is 2;
  attribute C_INTC_POSITIVE : string;
  attribute C_INTC_POSITIVE of U0 : label is "16'b1111111111111111";
  attribute C_INTC_USE_EXT_INTR : integer;
  attribute C_INTC_USE_EXT_INTR of U0 : label is 0;
  attribute C_IO_BASEADDR : string;
  attribute C_IO_BASEADDR of U0 : label is "64'b0000000000000000000000000000000011000000000000000000000000000000";
  attribute C_IO_HIGHADDR : string;
  attribute C_IO_HIGHADDR of U0 : label is "64'b0000000000000000000000000000000011111111111111111111111111111111";
  attribute C_IO_MASK : string;
  attribute C_IO_MASK of U0 : label is "64'b0000000000000000000000000000000011000000000000000000000000000000";
  attribute C_LMB_AWIDTH : integer;
  attribute C_LMB_AWIDTH of U0 : label is 32;
  attribute C_LMB_DWIDTH : integer;
  attribute C_LMB_DWIDTH of U0 : label is 32;
  attribute C_MASK : string;
  attribute C_MASK of U0 : label is "64'b0000000000000000000000000000000011000000000000000000000000000000";
  attribute C_PIT1_INTERRUPT : integer;
  attribute C_PIT1_INTERRUPT of U0 : label is 0;
  attribute C_PIT1_PRESCALER : integer;
  attribute C_PIT1_PRESCALER of U0 : label is 0;
  attribute C_PIT1_READABLE : integer;
  attribute C_PIT1_READABLE of U0 : label is 1;
  attribute C_PIT1_SIZE : integer;
  attribute C_PIT1_SIZE of U0 : label is 32;
  attribute C_PIT2_INTERRUPT : integer;
  attribute C_PIT2_INTERRUPT of U0 : label is 0;
  attribute C_PIT2_PRESCALER : integer;
  attribute C_PIT2_PRESCALER of U0 : label is 0;
  attribute C_PIT2_READABLE : integer;
  attribute C_PIT2_READABLE of U0 : label is 1;
  attribute C_PIT2_SIZE : integer;
  attribute C_PIT2_SIZE of U0 : label is 32;
  attribute C_PIT3_INTERRUPT : integer;
  attribute C_PIT3_INTERRUPT of U0 : label is 0;
  attribute C_PIT3_PRESCALER : integer;
  attribute C_PIT3_PRESCALER of U0 : label is 0;
  attribute C_PIT3_READABLE : integer;
  attribute C_PIT3_READABLE of U0 : label is 1;
  attribute C_PIT3_SIZE : integer;
  attribute C_PIT3_SIZE of U0 : label is 32;
  attribute C_PIT4_INTERRUPT : integer;
  attribute C_PIT4_INTERRUPT of U0 : label is 0;
  attribute C_PIT4_PRESCALER : integer;
  attribute C_PIT4_PRESCALER of U0 : label is 0;
  attribute C_PIT4_READABLE : integer;
  attribute C_PIT4_READABLE of U0 : label is 1;
  attribute C_PIT4_SIZE : integer;
  attribute C_PIT4_SIZE of U0 : label is 32;
  attribute C_TMR : integer;
  attribute C_TMR of U0 : label is 0;
  attribute C_UART_BAUDRATE : integer;
  attribute C_UART_BAUDRATE of U0 : label is 115200;
  attribute C_UART_DATA_BITS : integer;
  attribute C_UART_DATA_BITS of U0 : label is 8;
  attribute C_UART_ERROR_INTERRUPT : integer;
  attribute C_UART_ERROR_INTERRUPT of U0 : label is 1;
  attribute C_UART_ODD_PARITY : integer;
  attribute C_UART_ODD_PARITY of U0 : label is 0;
  attribute C_UART_PROG_BAUDRATE : integer;
  attribute C_UART_PROG_BAUDRATE of U0 : label is 0;
  attribute C_UART_RX_INTERRUPT : integer;
  attribute C_UART_RX_INTERRUPT of U0 : label is 1;
  attribute C_UART_TX_INTERRUPT : integer;
  attribute C_UART_TX_INTERRUPT of U0 : label is 1;
  attribute C_UART_USE_PARITY : integer;
  attribute C_UART_USE_PARITY of U0 : label is 0;
  attribute C_USE_CONFIG_RESET : integer;
  attribute C_USE_CONFIG_RESET of U0 : label is 0;
  attribute C_USE_FIT1 : integer;
  attribute C_USE_FIT1 of U0 : label is 0;
  attribute C_USE_FIT2 : integer;
  attribute C_USE_FIT2 of U0 : label is 0;
  attribute C_USE_FIT3 : integer;
  attribute C_USE_FIT3 of U0 : label is 0;
  attribute C_USE_FIT4 : integer;
  attribute C_USE_FIT4 of U0 : label is 0;
  attribute C_USE_GPI1 : integer;
  attribute C_USE_GPI1 of U0 : label is 1;
  attribute C_USE_GPI2 : integer;
  attribute C_USE_GPI2 of U0 : label is 0;
  attribute C_USE_GPI3 : integer;
  attribute C_USE_GPI3 of U0 : label is 0;
  attribute C_USE_GPI4 : integer;
  attribute C_USE_GPI4 of U0 : label is 0;
  attribute C_USE_GPO1 : integer;
  attribute C_USE_GPO1 of U0 : label is 1;
  attribute C_USE_GPO2 : integer;
  attribute C_USE_GPO2 of U0 : label is 0;
  attribute C_USE_GPO3 : integer;
  attribute C_USE_GPO3 of U0 : label is 0;
  attribute C_USE_GPO4 : integer;
  attribute C_USE_GPO4 of U0 : label is 0;
  attribute C_USE_IO_BUS : integer;
  attribute C_USE_IO_BUS of U0 : label is 1;
  attribute C_USE_PIT1 : integer;
  attribute C_USE_PIT1 of U0 : label is 0;
  attribute C_USE_PIT2 : integer;
  attribute C_USE_PIT2 of U0 : label is 0;
  attribute C_USE_PIT3 : integer;
  attribute C_USE_PIT3 of U0 : label is 0;
  attribute C_USE_PIT4 : integer;
  attribute C_USE_PIT4 of U0 : label is 0;
  attribute C_USE_TMR_DISABLE : integer;
  attribute C_USE_TMR_DISABLE of U0 : label is 0;
  attribute C_USE_UART_RX : integer;
  attribute C_USE_UART_RX of U0 : label is 1;
  attribute C_USE_UART_TX : integer;
  attribute C_USE_UART_TX of U0 : label is 1;
  attribute X_INTERFACE_INFO : string;
  attribute X_INTERFACE_INFO of Clk : signal is "xilinx.com:signal:clock:1.0 CLK.CLK CLK";
  attribute X_INTERFACE_PARAMETER : string;
  attribute X_INTERFACE_PARAMETER of Clk : signal is "XIL_INTERFACENAME CLK.CLK, ASSOCIATED_BUSIF SLMB, ASSOCIATED_RESET Rst:TMR_Rst, FREQ_HZ 100000000, PHASE 0.000";
  attribute X_INTERFACE_INFO of GPI1_Interrupt : signal is "xilinx.com:signal:interrupt:1.0 INTERRUPT.GPI1_Interrupt INTERRUPT";
  attribute X_INTERFACE_PARAMETER of GPI1_Interrupt : signal is "XIL_INTERFACENAME INTERRUPT.GPI1_Interrupt, SENSITIVITY EDGE_RISING, PortWidth 1";
  attribute X_INTERFACE_INFO of INTC_IRQ : signal is "xilinx.com:interface:mbinterrupt:1.0 INTC_Irq INTERRUPT";
  attribute X_INTERFACE_PARAMETER of INTC_IRQ : signal is "XIL_INTERFACENAME INTC_Irq, SENSITIVITY LEVEL_HIGH, LOW_LATENCY 1";
  attribute X_INTERFACE_INFO of INTC_IRQ_OUT : signal is "xilinx.com:signal:interrupt:1.0 INTERRUPT.INTC_Irq_Out INTERRUPT";
  attribute X_INTERFACE_PARAMETER of INTC_IRQ_OUT : signal is "XIL_INTERFACENAME INTERRUPT.INTC_Irq_Out, SENSITIVITY LEVEL_HIGH, PortWidth 1";
  attribute X_INTERFACE_INFO of IO_Addr_Strobe : signal is "xilinx.com:interface:mcsio_bus:1.0 IO_BUS ADDR_STROBE";
  attribute X_INTERFACE_INFO of IO_Read_Strobe : signal is "xilinx.com:interface:mcsio_bus:1.0 IO_BUS READ_STROBE";
  attribute X_INTERFACE_INFO of IO_Ready : signal is "xilinx.com:interface:mcsio_bus:1.0 IO_BUS READY";
  attribute X_INTERFACE_INFO of IO_Write_Strobe : signal is "xilinx.com:interface:mcsio_bus:1.0 IO_BUS WRITE_STROBE";
  attribute X_INTERFACE_INFO of LMB_AddrStrobe : signal is "xilinx.com:interface:lmb:1.0 SLMB ADDRSTROBE";
  attribute X_INTERFACE_INFO of LMB_ReadStrobe : signal is "xilinx.com:interface:lmb:1.0 SLMB READSTROBE";
  attribute X_INTERFACE_INFO of LMB_WriteStrobe : signal is "xilinx.com:interface:lmb:1.0 SLMB WRITESTROBE";
  attribute X_INTERFACE_INFO of Rst : signal is "xilinx.com:signal:reset:1.0 RST.Rst RST";
  attribute X_INTERFACE_PARAMETER of Rst : signal is "XIL_INTERFACENAME RST.Rst, POLARITY ACTIVE_HIGH, TYPE PERIPHERAL";
  attribute X_INTERFACE_INFO of Sl_CE : signal is "xilinx.com:interface:lmb:1.0 SLMB CE";
  attribute X_INTERFACE_INFO of Sl_Ready : signal is "xilinx.com:interface:lmb:1.0 SLMB READY";
  attribute X_INTERFACE_INFO of Sl_UE : signal is "xilinx.com:interface:lmb:1.0 SLMB UE";
  attribute X_INTERFACE_INFO of Sl_Wait : signal is "xilinx.com:interface:lmb:1.0 SLMB WAIT";
  attribute X_INTERFACE_INFO of UART_Interrupt : signal is "xilinx.com:signal:interrupt:1.0 INTERRUPT.UART_Interrupt INTERRUPT";
  attribute X_INTERFACE_PARAMETER of UART_Interrupt : signal is "XIL_INTERFACENAME INTERRUPT.UART_Interrupt, SENSITIVITY EDGE_RISING, PortWidth 1";
  attribute X_INTERFACE_INFO of UART_Rx : signal is "xilinx.com:interface:uart:1.0 UART RxD";
  attribute X_INTERFACE_PARAMETER of UART_Rx : signal is "XIL_INTERFACENAME UART, BOARD.ASSOCIATED_PARAM UART_BOARD_INTERFACE";
  attribute X_INTERFACE_INFO of UART_Tx : signal is "xilinx.com:interface:uart:1.0 UART TxD";
  attribute X_INTERFACE_INFO of GPI1 : signal is "xilinx.com:interface:gpio:1.0 GPIO1 TRI_I";
  attribute X_INTERFACE_INFO of GPO1 : signal is "xilinx.com:interface:gpio:1.0 GPIO1 TRI_O";
  attribute X_INTERFACE_PARAMETER of GPO1 : signal is "XIL_INTERFACENAME GPIO1, C_USE_GPO1 1, C_GPO1_SIZE 8, C_GPO1_INIT 0x00000000, C_USE_GPI1 1, C_GPI1_SIZE 8, C_GPI1_INTERRUPT 2, BOARD.ASSOCIATED_PARAM GPIO1_BOARD_INTERFACE";
  attribute X_INTERFACE_INFO of INTC_Interrupt_Address : signal is "xilinx.com:interface:mbinterrupt:1.0 INTC_Irq ADDRESS";
  attribute X_INTERFACE_INFO of INTC_Processor_Ack : signal is "xilinx.com:interface:mbinterrupt:1.0 INTC_Irq ACK";
  attribute X_INTERFACE_INFO of IO_Address : signal is "xilinx.com:interface:mcsio_bus:1.0 IO_BUS ADDRESS";
  attribute X_INTERFACE_INFO of IO_Byte_Enable : signal is "xilinx.com:interface:mcsio_bus:1.0 IO_BUS BYTE_ENABLE";
  attribute X_INTERFACE_INFO of IO_Read_Data : signal is "xilinx.com:interface:mcsio_bus:1.0 IO_BUS READ_DATA";
  attribute X_INTERFACE_INFO of IO_Write_Data : signal is "xilinx.com:interface:mcsio_bus:1.0 IO_BUS WRITE_DATA";
  attribute X_INTERFACE_INFO of LMB_ABus : signal is "xilinx.com:interface:lmb:1.0 SLMB ABUS";
  attribute X_INTERFACE_PARAMETER of LMB_ABus : signal is "XIL_INTERFACENAME SLMB, ADDR_WIDTH 32, DATA_WIDTH 32, READ_WRITE_MODE READ_WRITE";
  attribute X_INTERFACE_INFO of LMB_BE : signal is "xilinx.com:interface:lmb:1.0 SLMB BE";
  attribute X_INTERFACE_INFO of LMB_WriteDBus : signal is "xilinx.com:interface:lmb:1.0 SLMB WRITEDBUS";
  attribute X_INTERFACE_INFO of Sl_DBus : signal is "xilinx.com:interface:lmb:1.0 SLMB READDBUS";
begin
U0: entity work.microblaze_mcs_1_iomodule
     port map (
      Clk => Clk,
      Config_Reset => '0',
      FIT1_Interrupt => NLW_U0_FIT1_Interrupt_UNCONNECTED,
      FIT1_Toggle => NLW_U0_FIT1_Toggle_UNCONNECTED,
      FIT2_Interrupt => NLW_U0_FIT2_Interrupt_UNCONNECTED,
      FIT2_Toggle => NLW_U0_FIT2_Toggle_UNCONNECTED,
      FIT3_Interrupt => NLW_U0_FIT3_Interrupt_UNCONNECTED,
      FIT3_Toggle => NLW_U0_FIT3_Toggle_UNCONNECTED,
      FIT4_Interrupt => NLW_U0_FIT4_Interrupt_UNCONNECTED,
      FIT4_Toggle => NLW_U0_FIT4_Toggle_UNCONNECTED,
      FromAVote(1023 downto
      FromBVote(1023 downto
      GPI1(7 downto 0) => GPI1(7 downto 0),
      GPI1_Interrupt => GPI1_Interrupt,
      GPI2(31 downto 0) => B"00000000000000000000000000000000",
      GPI2_Interrupt => NLW_U0_GPI2_Interrupt_UNCONNECTED,
      GPI3(31 downto 0) => B"00000000000000000000000000000000",
      GPI3_Interrupt => NLW_U0_GPI3_Interrupt_UNCONNECTED,
      GPI4(31 downto 0) => B"00000000000000000000000000000000",
      GPI4_Interrupt => NLW_U0_GPI4_Interrupt_UNCONNECTED,
      GPO1(7 downto 0) => GPO1(7 downto 0),
      GPO2(31 downto 0) => NLW_U0_GPO2_UNCONNECTED(31 downto 0),
      GPO3(31 downto 0) => NLW_U0_GPO3_UNCONNECTED(31 downto 0),
      GPO4(31 downto 0) => NLW_U0_GPO4_UNCONNECTED(31 downto 0),
      INTC_IRQ => INTC_IRQ,
      INTC_IRQ_OUT => INTC_IRQ_OUT,
      INTC_Interrupt(0) => '0',
      INTC_Interrupt_Address(31 downto 0) => INTC_Interrupt_Address(31 downto 0),
      INTC_Processor_Ack(1 downto 0) => INTC_Processor_Ack(1 downto 0),
      IO_Addr_Strobe => IO_Addr_Strobe,
      IO_Address(31 downto 0) => IO_Address(31 downto 0),
      IO_Byte_Enable(3 downto 0) => IO_Byte_Enable(3 downto 0),
      IO_Read_Data(31 downto 0) => IO_Read_Data(31 downto 0),
      IO_Read_Strobe => IO_Read_Strobe,
      IO_Ready => IO_Ready,
      IO_Write_Data(31 downto 0) => IO_Write_Data(31 downto 0),
      IO_Write_Strobe => IO_Write_Strobe,
      LMB_ABus(0 to 31) => LMB_ABus(0 to 31),
      LMB_AddrStrobe => LMB_AddrStrobe,
      LMB_BE(0 to 3) => LMB_BE(0 to 3),
      LMB_ReadStrobe => LMB_ReadStrobe,
      LMB_WriteDBus(0 to 31) => LMB_WriteDBus(0 to 31),
      LMB_WriteStrobe => LMB_WriteStrobe,
      PIT1_Enable => '0',
      PIT1_Interrupt => NLW_U0_PIT1_Interrupt_UNCONNECTED,
      PIT1_Toggle => NLW_U0_PIT1_Toggle_UNCONNECTED,
      PIT2_Enable => '0',
      PIT2_Interrupt => NLW_U0_PIT2_Interrupt_UNCONNECTED,
      PIT2_Toggle => NLW_U0_PIT2_Toggle_UNCONNECTED,
      PIT3_Enable => '0',
      PIT3_Interrupt => NLW_U0_PIT3_Interrupt_UNCONNECTED,
      PIT3_Toggle => NLW_U0_PIT3_Toggle_UNCONNECTED,
      PIT4_Enable => '0',
      PIT4_Interrupt => NLW_U0_PIT4_Interrupt_UNCONNECTED,
      PIT4_Toggle => NLW_U0_PIT4_Toggle_UNCONNECTED,
      Rst => Rst,
      Sl_CE => Sl_CE,
      Sl_DBus(0 to 31) => Sl_DBus(0 to 31),
      Sl_Ready => Sl_Ready,
      Sl_UE => Sl_UE,
      Sl_Wait => Sl_Wait,
      TMR_Disable => '0',
      TMR_Rst => '0',
      ToVote(1023 downto 0) => NLW_U0_ToVote_UNCONNECTED(1023 downto 0),
      UART_Interrupt => UART_Interrupt,
      UART_Rx => UART_Rx,
      UART_Tx => UART_Tx
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MicroBlaze_Core is
  port (
    D : out STD_LOGIC_VECTOR ( 247 downto 0 );
    Pause_Ack : out STD_LOGIC;
    Hibernate : out STD_LOGIC;
    Suspend : out STD_LOGIC;
    Interrupt_Ack : out STD_LOGIC_VECTOR ( 0 to 1 );
    Sleep : out STD_LOGIC;
    Clk : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 31 );
    DReady : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Pause : in STD_LOGIC;
    Reset : in STD_LOGIC;
    Mb_Reset : in STD_LOGIC;
    Reset_Mode : in STD_LOGIC_VECTOR ( 0 to 1 );
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 31 );
    Wakeup : in STD_LOGIC_VECTOR ( 0 to 1 );
    Interrupt : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 31 )
  );
end microblaze_mcs_1_MicroBlaze_Core;

architecture STRUCTURE of microblaze_mcs_1_MicroBlaze_Core is
  signal \No_Master_Debug_Logic.dbg_stop_instr_fetch_i_1_n_0\ : STD_LOGIC;
  signal \No_Master_Debug_Logic.sleep_reset_mode_reg_n_0\ : STD_LOGIC;
  signal Synced : STD_LOGIC;
  signal \Using_Async_Wakeup_0.Wakeup_DFF_n_1\ : STD_LOGIC;
  signal dbg_stop_instr_fetch : STD_LOGIC;
  signal sync_reset : STD_LOGIC;
  signal wakeup_i_0 : STD_LOGIC;
  signal wakeup_i_1 : STD_LOGIC;
begin
\Area.Core\: entity work.microblaze_mcs_1_MicroBlaze_Area
     port map (
      Clk => Clk,
      D(247 downto 0) => D(247 downto 0),
      DReady => DReady,
      Data_Read(0 to 31) => Data_Read(0 to 31),
      Hibernate => Hibernate,
      IReady => IReady,
      Instr(0 to 31) => Instr(0 to 31),
      Interrupt => Interrupt,
      Interrupt_Ack(0 to 1) => Interrupt_Ack(0 to 1),
      Interrupt_Address(0 to 31) => Interrupt_Address(0 to 31),
      \No_Master_Debug_Logic.sleep_reset_mode_reg\ => \No_Master_Debug_Logic.sleep_reset_mode_reg_n_0\,
      Pause => Pause,
      Pause_Ack => Pause_Ack,
      Sleep => Sleep,
      Suspend => Suspend,
      \Synchronize.use_sync_reset.sync_reg[2]\(0) => wakeup_i_0,
      dbg_stop_instr_fetch => dbg_stop_instr_fetch,
      \out\(0) => wakeup_i_1,
      sync_reset => sync_reset
    );
\No_Master_Debug_Logic.dbg_stop_instr_fetch_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"2F202020"
    )
        port map (
      I0 => Reset_Mode(1),
      I1 => Reset_Mode(0),
      I2 => sync_reset,
      I3 => \No_Master_Debug_Logic.sleep_reset_mode_reg_n_0\,
      I4 => dbg_stop_instr_fetch,
      O => \No_Master_Debug_Logic.dbg_stop_instr_fetch_i_1_n_0\
    );
\No_Master_Debug_Logic.dbg_stop_instr_fetch_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \No_Master_Debug_Logic.dbg_stop_instr_fetch_i_1_n_0\,
      Q => dbg_stop_instr_fetch,
      R => '0'
    );
\No_Master_Debug_Logic.sleep_reset_mode_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_Async_Wakeup_0.Wakeup_DFF_n_1\,
      Q => \No_Master_Debug_Logic.sleep_reset_mode_reg_n_0\,
      R => '0'
    );
Reset_DFF: entity work.microblaze_mcs_1_microblaze_v10_0_7_mb_sync_bit
     port map (
      Clk => Clk,
      Mb_Reset => Mb_Reset,
      Reset => Reset,
      \out\(0) => Synced
    );
\Use_Async_Reset.sync_reset_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => Clk,
      CE => '1',
      D => Synced,
      Q => sync_reset,
      R => '0'
    );
\Using_Async_Wakeup_0.Wakeup_DFF\: entity work.microblaze_mcs_1_microblaze_v10_0_7_mb_sync_bit_1
     port map (
      Clk => Clk,
      \No_Master_Debug_Logic.sleep_reset_mode_reg\ => \Using_Async_Wakeup_0.Wakeup_DFF_n_1\,
      \No_Master_Debug_Logic.sleep_reset_mode_reg_0\ => \No_Master_Debug_Logic.sleep_reset_mode_reg_n_0\,
      Reset_Mode(0 to 1) => Reset_Mode(0 to 1),
      \Synchronize.use_sync_reset.sync_reg[2]_0\(0) => wakeup_i_0,
      Wakeup(0) => Wakeup(0),
      \out\(0) => wakeup_i_1,
      sync_reset => sync_reset
    );
\Using_Async_Wakeup_1.Wakeup_DFF\: entity work.microblaze_mcs_1_microblaze_v10_0_7_mb_sync_bit_2
     port map (
      Clk => Clk,
      Wakeup(0) => Wakeup(1),
      \out\(0) => wakeup_i_0,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_blk_mem_gen_v8_4_1 is
  port (
    clka : in STD_LOGIC;
    rsta : in STD_LOGIC;
    ena : in STD_LOGIC;
    regcea : in STD_LOGIC;
    wea : in STD_LOGIC_VECTOR ( 3 downto 0 );
    addra : in STD_LOGIC_VECTOR ( 31 downto 0 );
    dina : in STD_LOGIC_VECTOR ( 31 downto 0 );
    douta : out STD_LOGIC_VECTOR ( 31 downto 0 );
    clkb : in STD_LOGIC;
    rstb : in STD_LOGIC;
    enb : in STD_LOGIC;
    regceb : in STD_LOGIC;
    web : in STD_LOGIC_VECTOR ( 3 downto 0 );
    addrb : in STD_LOGIC_VECTOR ( 31 downto 0 );
    dinb : in STD_LOGIC_VECTOR ( 31 downto 0 );
    doutb : out STD_LOGIC_VECTOR ( 31 downto 0 );
    injectsbiterr : in STD_LOGIC;
    injectdbiterr : in STD_LOGIC;
    eccpipece : in STD_LOGIC;
    sbiterr : out STD_LOGIC;
    dbiterr : out STD_LOGIC;
    rdaddrecc : out STD_LOGIC_VECTOR ( 31 downto 0 );
    sleep : in STD_LOGIC;
    deepsleep : in STD_LOGIC;
    shutdown : in STD_LOGIC;
    rsta_busy : out STD_LOGIC;
    rstb_busy : out STD_LOGIC;
    s_aclk : in STD_LOGIC;
    s_aresetn : in STD_LOGIC;
    s_axi_awid : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_awaddr : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_awlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
    s_axi_awsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_awburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_awvalid : in STD_LOGIC;
    s_axi_awready : out STD_LOGIC;
    s_axi_wdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_wstrb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_wlast : in STD_LOGIC;
    s_axi_wvalid : in STD_LOGIC;
    s_axi_wready : out STD_LOGIC;
    s_axi_bid : out STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_bvalid : out STD_LOGIC;
    s_axi_bready : in STD_LOGIC;
    s_axi_arid : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_araddr : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_arlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
    s_axi_arsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_arburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_arvalid : in STD_LOGIC;
    s_axi_arready : out STD_LOGIC;
    s_axi_rid : out STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_rdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_rlast : out STD_LOGIC;
    s_axi_rvalid : out STD_LOGIC;
    s_axi_rready : in STD_LOGIC;
    s_axi_injectsbiterr : in STD_LOGIC;
    s_axi_injectdbiterr : in STD_LOGIC;
    s_axi_sbiterr : out STD_LOGIC;
    s_axi_dbiterr : out STD_LOGIC;
    s_axi_rdaddrecc : out STD_LOGIC_VECTOR ( 31 downto 0 )
  );
  attribute C_ADDRA_WIDTH : integer;
  attribute C_ADDRA_WIDTH of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 32;
  attribute C_ADDRB_WIDTH : integer;
  attribute C_ADDRB_WIDTH of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 32;
  attribute C_ALGORITHM : integer;
  attribute C_ALGORITHM of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 1;
  attribute C_AXI_ID_WIDTH : integer;
  attribute C_AXI_ID_WIDTH of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 4;
  attribute C_AXI_SLAVE_TYPE : integer;
  attribute C_AXI_SLAVE_TYPE of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 0;
  attribute C_AXI_TYPE : integer;
  attribute C_AXI_TYPE of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 1;
  attribute C_BYTE_SIZE : integer;
  attribute C_BYTE_SIZE of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 8;
  attribute C_COMMON_CLK : integer;
  attribute C_COMMON_CLK of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 0;
  attribute C_COUNT_18K_BRAM : string;
  attribute C_COUNT_18K_BRAM of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is "0";
  attribute C_COUNT_36K_BRAM : string;
  attribute C_COUNT_36K_BRAM of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is "8";
  attribute C_CTRL_ECC_ALGO : string;
  attribute C_CTRL_ECC_ALGO of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is "NONE";
  attribute C_DEFAULT_DATA : string;
  attribute C_DEFAULT_DATA of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is "0";
  attribute C_DISABLE_WARN_BHV_COLL : integer;
  attribute C_DISABLE_WARN_BHV_COLL of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 0;
  attribute C_DISABLE_WARN_BHV_RANGE : integer;
  attribute C_DISABLE_WARN_BHV_RANGE of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 0;
  attribute C_ELABORATION_DIR : string;
  attribute C_ELABORATION_DIR of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is "./";
  attribute C_ENABLE_32BIT_ADDRESS : integer;
  attribute C_ENABLE_32BIT_ADDRESS of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 1;
  attribute C_EN_DEEPSLEEP_PIN : integer;
  attribute C_EN_DEEPSLEEP_PIN of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 0;
  attribute C_EN_ECC_PIPE : integer;
  attribute C_EN_ECC_PIPE of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 0;
  attribute C_EN_RDADDRA_CHG : integer;
  attribute C_EN_RDADDRA_CHG of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 0;
  attribute C_EN_RDADDRB_CHG : integer;
  attribute C_EN_RDADDRB_CHG of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 0;
  attribute C_EN_SAFETY_CKT : integer;
  attribute C_EN_SAFETY_CKT of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 1;
  attribute C_EN_SHUTDOWN_PIN : integer;
  attribute C_EN_SHUTDOWN_PIN of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 0;
  attribute C_EN_SLEEP_PIN : integer;
  attribute C_EN_SLEEP_PIN of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 0;
  attribute C_EST_POWER_SUMMARY : string;
  attribute C_EST_POWER_SUMMARY of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is "Estimated Power for IP     :     20.388 mW";
  attribute C_FAMILY : string;
  attribute C_FAMILY of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is "spartan7";
  attribute C_HAS_AXI_ID : integer;
  attribute C_HAS_AXI_ID of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 0;
  attribute C_HAS_ENA : integer;
  attribute C_HAS_ENA of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 1;
  attribute C_HAS_ENB : integer;
  attribute C_HAS_ENB of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 1;
  attribute C_HAS_INJECTERR : integer;
  attribute C_HAS_INJECTERR of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 0;
  attribute C_HAS_MEM_OUTPUT_REGS_A : integer;
  attribute C_HAS_MEM_OUTPUT_REGS_A of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 0;
  attribute C_HAS_MEM_OUTPUT_REGS_B : integer;
  attribute C_HAS_MEM_OUTPUT_REGS_B of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 0;
  attribute C_HAS_MUX_OUTPUT_REGS_A : integer;
  attribute C_HAS_MUX_OUTPUT_REGS_A of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 0;
  attribute C_HAS_MUX_OUTPUT_REGS_B : integer;
  attribute C_HAS_MUX_OUTPUT_REGS_B of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 0;
  attribute C_HAS_REGCEA : integer;
  attribute C_HAS_REGCEA of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 0;
  attribute C_HAS_REGCEB : integer;
  attribute C_HAS_REGCEB of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 0;
  attribute C_HAS_RSTA : integer;
  attribute C_HAS_RSTA of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 1;
  attribute C_HAS_RSTB : integer;
  attribute C_HAS_RSTB of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 1;
  attribute C_HAS_SOFTECC_INPUT_REGS_A : integer;
  attribute C_HAS_SOFTECC_INPUT_REGS_A of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 0;
  attribute C_HAS_SOFTECC_OUTPUT_REGS_B : integer;
  attribute C_HAS_SOFTECC_OUTPUT_REGS_B of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 0;
  attribute C_INITA_VAL : string;
  attribute C_INITA_VAL of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is "0";
  attribute C_INITB_VAL : string;
  attribute C_INITB_VAL of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is "0";
  attribute C_INIT_FILE : string;
  attribute C_INIT_FILE of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is "bd_3c9d_0_lmb_bram_I_0.mem";
  attribute C_INIT_FILE_NAME : string;
  attribute C_INIT_FILE_NAME of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is "no_coe_file_loaded";
  attribute C_INTERFACE_TYPE : integer;
  attribute C_INTERFACE_TYPE of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 0;
  attribute C_LOAD_INIT_FILE : integer;
  attribute C_LOAD_INIT_FILE of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 0;
  attribute C_MEM_TYPE : integer;
  attribute C_MEM_TYPE of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 2;
  attribute C_MUX_PIPELINE_STAGES : integer;
  attribute C_MUX_PIPELINE_STAGES of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 0;
  attribute C_PRIM_TYPE : integer;
  attribute C_PRIM_TYPE of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 1;
  attribute C_READ_DEPTH_A : integer;
  attribute C_READ_DEPTH_A of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 8192;
  attribute C_READ_DEPTH_B : integer;
  attribute C_READ_DEPTH_B of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 8192;
  attribute C_READ_WIDTH_A : integer;
  attribute C_READ_WIDTH_A of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 32;
  attribute C_READ_WIDTH_B : integer;
  attribute C_READ_WIDTH_B of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 32;
  attribute C_RSTRAM_A : integer;
  attribute C_RSTRAM_A of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 0;
  attribute C_RSTRAM_B : integer;
  attribute C_RSTRAM_B of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 0;
  attribute C_RST_PRIORITY_A : string;
  attribute C_RST_PRIORITY_A of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is "CE";
  attribute C_RST_PRIORITY_B : string;
  attribute C_RST_PRIORITY_B of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is "CE";
  attribute C_SIM_COLLISION_CHECK : string;
  attribute C_SIM_COLLISION_CHECK of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is "ALL";
  attribute C_USE_BRAM_BLOCK : integer;
  attribute C_USE_BRAM_BLOCK of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 1;
  attribute C_USE_BYTE_WEA : integer;
  attribute C_USE_BYTE_WEA of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 1;
  attribute C_USE_BYTE_WEB : integer;
  attribute C_USE_BYTE_WEB of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 1;
  attribute C_USE_DEFAULT_DATA : integer;
  attribute C_USE_DEFAULT_DATA of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 0;
  attribute C_USE_ECC : integer;
  attribute C_USE_ECC of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 0;
  attribute C_USE_SOFTECC : integer;
  attribute C_USE_SOFTECC of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 0;
  attribute C_USE_URAM : integer;
  attribute C_USE_URAM of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 0;
  attribute C_WEA_WIDTH : integer;
  attribute C_WEA_WIDTH of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 4;
  attribute C_WEB_WIDTH : integer;
  attribute C_WEB_WIDTH of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 4;
  attribute C_WRITE_DEPTH_A : integer;
  attribute C_WRITE_DEPTH_A of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 8192;
  attribute C_WRITE_DEPTH_B : integer;
  attribute C_WRITE_DEPTH_B of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 8192;
  attribute C_WRITE_MODE_A : string;
  attribute C_WRITE_MODE_A of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is "WRITE_FIRST";
  attribute C_WRITE_MODE_B : string;
  attribute C_WRITE_MODE_B of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is "WRITE_FIRST";
  attribute C_WRITE_WIDTH_A : integer;
  attribute C_WRITE_WIDTH_A of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 32;
  attribute C_WRITE_WIDTH_B : integer;
  attribute C_WRITE_WIDTH_B of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is 32;
  attribute C_XDEVICEFAMILY : string;
  attribute C_XDEVICEFAMILY of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is "spartan7";
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of microblaze_mcs_1_blk_mem_gen_v8_4_1 : entity is "yes";
end microblaze_mcs_1_blk_mem_gen_v8_4_1;

architecture STRUCTURE of microblaze_mcs_1_blk_mem_gen_v8_4_1 is
  signal \<const0>\ : STD_LOGIC;
begin
  dbiterr <= \<const0>\;
  rdaddrecc(31) <= \<const0>\;
  rdaddrecc(30) <= \<const0>\;
  rdaddrecc(29) <= \<const0>\;
  rdaddrecc(28) <= \<const0>\;
  rdaddrecc(27) <= \<const0>\;
  rdaddrecc(26) <= \<const0>\;
  rdaddrecc(25) <= \<const0>\;
  rdaddrecc(24) <= \<const0>\;
  rdaddrecc(23) <= \<const0>\;
  rdaddrecc(22) <= \<const0>\;
  rdaddrecc(21) <= \<const0>\;
  rdaddrecc(20) <= \<const0>\;
  rdaddrecc(19) <= \<const0>\;
  rdaddrecc(18) <= \<const0>\;
  rdaddrecc(17) <= \<const0>\;
  rdaddrecc(16) <= \<const0>\;
  rdaddrecc(15) <= \<const0>\;
  rdaddrecc(14) <= \<const0>\;
  rdaddrecc(13) <= \<const0>\;
  rdaddrecc(12) <= \<const0>\;
  rdaddrecc(11) <= \<const0>\;
  rdaddrecc(10) <= \<const0>\;
  rdaddrecc(9) <= \<const0>\;
  rdaddrecc(8) <= \<const0>\;
  rdaddrecc(7) <= \<const0>\;
  rdaddrecc(6) <= \<const0>\;
  rdaddrecc(5) <= \<const0>\;
  rdaddrecc(4) <= \<const0>\;
  rdaddrecc(3) <= \<const0>\;
  rdaddrecc(2) <= \<const0>\;
  rdaddrecc(1) <= \<const0>\;
  rdaddrecc(0) <= \<const0>\;
  s_axi_arready <= \<const0>\;
  s_axi_awready <= \<const0>\;
  s_axi_bid(3) <= \<const0>\;
  s_axi_bid(2) <= \<const0>\;
  s_axi_bid(1) <= \<const0>\;
  s_axi_bid(0) <= \<const0>\;
  s_axi_bresp(1) <= \<const0>\;
  s_axi_bresp(0) <= \<const0>\;
  s_axi_bvalid <= \<const0>\;
  s_axi_dbiterr <= \<const0>\;
  s_axi_rdaddrecc(31) <= \<const0>\;
  s_axi_rdaddrecc(30) <= \<const0>\;
  s_axi_rdaddrecc(29) <= \<const0>\;
  s_axi_rdaddrecc(28) <= \<const0>\;
  s_axi_rdaddrecc(27) <= \<const0>\;
  s_axi_rdaddrecc(26) <= \<const0>\;
  s_axi_rdaddrecc(25) <= \<const0>\;
  s_axi_rdaddrecc(24) <= \<const0>\;
  s_axi_rdaddrecc(23) <= \<const0>\;
  s_axi_rdaddrecc(22) <= \<const0>\;
  s_axi_rdaddrecc(21) <= \<const0>\;
  s_axi_rdaddrecc(20) <= \<const0>\;
  s_axi_rdaddrecc(19) <= \<const0>\;
  s_axi_rdaddrecc(18) <= \<const0>\;
  s_axi_rdaddrecc(17) <= \<const0>\;
  s_axi_rdaddrecc(16) <= \<const0>\;
  s_axi_rdaddrecc(15) <= \<const0>\;
  s_axi_rdaddrecc(14) <= \<const0>\;
  s_axi_rdaddrecc(13) <= \<const0>\;
  s_axi_rdaddrecc(12) <= \<const0>\;
  s_axi_rdaddrecc(11) <= \<const0>\;
  s_axi_rdaddrecc(10) <= \<const0>\;
  s_axi_rdaddrecc(9) <= \<const0>\;
  s_axi_rdaddrecc(8) <= \<const0>\;
  s_axi_rdaddrecc(7) <= \<const0>\;
  s_axi_rdaddrecc(6) <= \<const0>\;
  s_axi_rdaddrecc(5) <= \<const0>\;
  s_axi_rdaddrecc(4) <= \<const0>\;
  s_axi_rdaddrecc(3) <= \<const0>\;
  s_axi_rdaddrecc(2) <= \<const0>\;
  s_axi_rdaddrecc(1) <= \<const0>\;
  s_axi_rdaddrecc(0) <= \<const0>\;
  s_axi_rdata(31) <= \<const0>\;
  s_axi_rdata(30) <= \<const0>\;
  s_axi_rdata(29) <= \<const0>\;
  s_axi_rdata(28) <= \<const0>\;
  s_axi_rdata(27) <= \<const0>\;
  s_axi_rdata(26) <= \<const0>\;
  s_axi_rdata(25) <= \<const0>\;
  s_axi_rdata(24) <= \<const0>\;
  s_axi_rdata(23) <= \<const0>\;
  s_axi_rdata(22) <= \<const0>\;
  s_axi_rdata(21) <= \<const0>\;
  s_axi_rdata(20) <= \<const0>\;
  s_axi_rdata(19) <= \<const0>\;
  s_axi_rdata(18) <= \<const0>\;
  s_axi_rdata(17) <= \<const0>\;
  s_axi_rdata(16) <= \<const0>\;
  s_axi_rdata(15) <= \<const0>\;
  s_axi_rdata(14) <= \<const0>\;
  s_axi_rdata(13) <= \<const0>\;
  s_axi_rdata(12) <= \<const0>\;
  s_axi_rdata(11) <= \<const0>\;
  s_axi_rdata(10) <= \<const0>\;
  s_axi_rdata(9) <= \<const0>\;
  s_axi_rdata(8) <= \<const0>\;
  s_axi_rdata(7) <= \<const0>\;
  s_axi_rdata(6) <= \<const0>\;
  s_axi_rdata(5) <= \<const0>\;
  s_axi_rdata(4) <= \<const0>\;
  s_axi_rdata(3) <= \<const0>\;
  s_axi_rdata(2) <= \<const0>\;
  s_axi_rdata(1) <= \<const0>\;
  s_axi_rdata(0) <= \<const0>\;
  s_axi_rid(3) <= \<const0>\;
  s_axi_rid(2) <= \<const0>\;
  s_axi_rid(1) <= \<const0>\;
  s_axi_rid(0) <= \<const0>\;
  s_axi_rlast <= \<const0>\;
  s_axi_rresp(1) <= \<const0>\;
  s_axi_rresp(0) <= \<const0>\;
  s_axi_rvalid <= \<const0>\;
  s_axi_sbiterr <= \<const0>\;
  s_axi_wready <= \<const0>\;
  sbiterr <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
inst_blk_mem_gen: entity work.microblaze_mcs_1_blk_mem_gen_v8_4_1_synth
     port map (
      addra(12 downto 0) => addra(14 downto 2),
      addrb(12 downto 0) => addrb(14 downto 2),
      clka => clka,
      clkb => clkb,
      dina(31 downto 0) => dina(31 downto 0),
      dinb(31 downto 0) => dinb(31 downto 0),
      douta(31 downto 0) => douta(31 downto 0),
      doutb(31 downto 0) => doutb(31 downto 0),
      ena => ena,
      enb => enb,
      rsta => rsta,
      rsta_busy => rsta_busy,
      rstb => rstb,
      rstb_busy => rstb_busy,
      wea(3 downto 0) => wea(3 downto 0),
      web(3 downto 0) => web(3 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_bd_3c9d_0_lmb_bram_I_0 is
  port (
    clka : in STD_LOGIC;
    rsta : in STD_LOGIC;
    ena : in STD_LOGIC;
    wea : in STD_LOGIC_VECTOR ( 3 downto 0 );
    addra : in STD_LOGIC_VECTOR ( 31 downto 0 );
    dina : in STD_LOGIC_VECTOR ( 31 downto 0 );
    douta : out STD_LOGIC_VECTOR ( 31 downto 0 );
    clkb : in STD_LOGIC;
    rstb : in STD_LOGIC;
    enb : in STD_LOGIC;
    web : in STD_LOGIC_VECTOR ( 3 downto 0 );
    addrb : in STD_LOGIC_VECTOR ( 31 downto 0 );
    dinb : in STD_LOGIC_VECTOR ( 31 downto 0 );
    doutb : out STD_LOGIC_VECTOR ( 31 downto 0 );
    rsta_busy : out STD_LOGIC;
    rstb_busy : out STD_LOGIC
  );
  attribute CHECK_LICENSE_TYPE : string;
  attribute CHECK_LICENSE_TYPE of microblaze_mcs_1_bd_3c9d_0_lmb_bram_I_0 : entity is "bd_3c9d_0_lmb_bram_I_0,blk_mem_gen_v8_4_1,{}";
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of microblaze_mcs_1_bd_3c9d_0_lmb_bram_I_0 : entity is "yes";
  attribute X_CORE_INFO : string;
  attribute X_CORE_INFO of microblaze_mcs_1_bd_3c9d_0_lmb_bram_I_0 : entity is "blk_mem_gen_v8_4_1,Vivado 2018.2";
end microblaze_mcs_1_bd_3c9d_0_lmb_bram_I_0;

architecture STRUCTURE of microblaze_mcs_1_bd_3c9d_0_lmb_bram_I_0 is
  signal NLW_U0_dbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axi_arready_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axi_awready_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axi_bvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axi_dbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axi_rlast_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axi_rvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axi_sbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axi_wready_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_sbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_rdaddrecc_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_s_axi_bid_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_s_axi_bresp_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_s_axi_rdaddrecc_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_s_axi_rdata_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_s_axi_rid_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_s_axi_rresp_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute C_ADDRA_WIDTH : integer;
  attribute C_ADDRA_WIDTH of U0 : label is 32;
  attribute C_ADDRB_WIDTH : integer;
  attribute C_ADDRB_WIDTH of U0 : label is 32;
  attribute C_ALGORITHM : integer;
  attribute C_ALGORITHM of U0 : label is 1;
  attribute C_AXI_ID_WIDTH : integer;
  attribute C_AXI_ID_WIDTH of U0 : label is 4;
  attribute C_AXI_SLAVE_TYPE : integer;
  attribute C_AXI_SLAVE_TYPE of U0 : label is 0;
  attribute C_AXI_TYPE : integer;
  attribute C_AXI_TYPE of U0 : label is 1;
  attribute C_BYTE_SIZE : integer;
  attribute C_BYTE_SIZE of U0 : label is 8;
  attribute C_COMMON_CLK : integer;
  attribute C_COMMON_CLK of U0 : label is 0;
  attribute C_COUNT_18K_BRAM : string;
  attribute C_COUNT_18K_BRAM of U0 : label is "0";
  attribute C_COUNT_36K_BRAM : string;
  attribute C_COUNT_36K_BRAM of U0 : label is "8";
  attribute C_CTRL_ECC_ALGO : string;
  attribute C_CTRL_ECC_ALGO of U0 : label is "NONE";
  attribute C_DEFAULT_DATA : string;
  attribute C_DEFAULT_DATA of U0 : label is "0";
  attribute C_DISABLE_WARN_BHV_COLL : integer;
  attribute C_DISABLE_WARN_BHV_COLL of U0 : label is 0;
  attribute C_DISABLE_WARN_BHV_RANGE : integer;
  attribute C_DISABLE_WARN_BHV_RANGE of U0 : label is 0;
  attribute C_ELABORATION_DIR : string;
  attribute C_ELABORATION_DIR of U0 : label is "./";
  attribute C_ENABLE_32BIT_ADDRESS : integer;
  attribute C_ENABLE_32BIT_ADDRESS of U0 : label is 1;
  attribute C_EN_DEEPSLEEP_PIN : integer;
  attribute C_EN_DEEPSLEEP_PIN of U0 : label is 0;
  attribute C_EN_ECC_PIPE : integer;
  attribute C_EN_ECC_PIPE of U0 : label is 0;
  attribute C_EN_RDADDRA_CHG : integer;
  attribute C_EN_RDADDRA_CHG of U0 : label is 0;
  attribute C_EN_RDADDRB_CHG : integer;
  attribute C_EN_RDADDRB_CHG of U0 : label is 0;
  attribute C_EN_SAFETY_CKT : integer;
  attribute C_EN_SAFETY_CKT of U0 : label is 1;
  attribute C_EN_SHUTDOWN_PIN : integer;
  attribute C_EN_SHUTDOWN_PIN of U0 : label is 0;
  attribute C_EN_SLEEP_PIN : integer;
  attribute C_EN_SLEEP_PIN of U0 : label is 0;
  attribute C_EST_POWER_SUMMARY : string;
  attribute C_EST_POWER_SUMMARY of U0 : label is "Estimated Power for IP     :     20.388 mW";
  attribute C_FAMILY : string;
  attribute C_FAMILY of U0 : label is "spartan7";
  attribute C_HAS_AXI_ID : integer;
  attribute C_HAS_AXI_ID of U0 : label is 0;
  attribute C_HAS_ENA : integer;
  attribute C_HAS_ENA of U0 : label is 1;
  attribute C_HAS_ENB : integer;
  attribute C_HAS_ENB of U0 : label is 1;
  attribute C_HAS_INJECTERR : integer;
  attribute C_HAS_INJECTERR of U0 : label is 0;
  attribute C_HAS_MEM_OUTPUT_REGS_A : integer;
  attribute C_HAS_MEM_OUTPUT_REGS_A of U0 : label is 0;
  attribute C_HAS_MEM_OUTPUT_REGS_B : integer;
  attribute C_HAS_MEM_OUTPUT_REGS_B of U0 : label is 0;
  attribute C_HAS_MUX_OUTPUT_REGS_A : integer;
  attribute C_HAS_MUX_OUTPUT_REGS_A of U0 : label is 0;
  attribute C_HAS_MUX_OUTPUT_REGS_B : integer;
  attribute C_HAS_MUX_OUTPUT_REGS_B of U0 : label is 0;
  attribute C_HAS_REGCEA : integer;
  attribute C_HAS_REGCEA of U0 : label is 0;
  attribute C_HAS_REGCEB : integer;
  attribute C_HAS_REGCEB of U0 : label is 0;
  attribute C_HAS_RSTA : integer;
  attribute C_HAS_RSTA of U0 : label is 1;
  attribute C_HAS_RSTB : integer;
  attribute C_HAS_RSTB of U0 : label is 1;
  attribute C_HAS_SOFTECC_INPUT_REGS_A : integer;
  attribute C_HAS_SOFTECC_INPUT_REGS_A of U0 : label is 0;
  attribute C_HAS_SOFTECC_OUTPUT_REGS_B : integer;
  attribute C_HAS_SOFTECC_OUTPUT_REGS_B of U0 : label is 0;
  attribute C_INITA_VAL : string;
  attribute C_INITA_VAL of U0 : label is "0";
  attribute C_INITB_VAL : string;
  attribute C_INITB_VAL of U0 : label is "0";
  attribute C_INIT_FILE : string;
  attribute C_INIT_FILE of U0 : label is "bd_3c9d_0_lmb_bram_I_0.mem";
  attribute C_INIT_FILE_NAME : string;
  attribute C_INIT_FILE_NAME of U0 : label is "no_coe_file_loaded";
  attribute C_INTERFACE_TYPE : integer;
  attribute C_INTERFACE_TYPE of U0 : label is 0;
  attribute C_LOAD_INIT_FILE : integer;
  attribute C_LOAD_INIT_FILE of U0 : label is 0;
  attribute C_MEM_TYPE : integer;
  attribute C_MEM_TYPE of U0 : label is 2;
  attribute C_MUX_PIPELINE_STAGES : integer;
  attribute C_MUX_PIPELINE_STAGES of U0 : label is 0;
  attribute C_PRIM_TYPE : integer;
  attribute C_PRIM_TYPE of U0 : label is 1;
  attribute C_READ_DEPTH_A : integer;
  attribute C_READ_DEPTH_A of U0 : label is 8192;
  attribute C_READ_DEPTH_B : integer;
  attribute C_READ_DEPTH_B of U0 : label is 8192;
  attribute C_READ_WIDTH_A : integer;
  attribute C_READ_WIDTH_A of U0 : label is 32;
  attribute C_READ_WIDTH_B : integer;
  attribute C_READ_WIDTH_B of U0 : label is 32;
  attribute C_RSTRAM_A : integer;
  attribute C_RSTRAM_A of U0 : label is 0;
  attribute C_RSTRAM_B : integer;
  attribute C_RSTRAM_B of U0 : label is 0;
  attribute C_RST_PRIORITY_A : string;
  attribute C_RST_PRIORITY_A of U0 : label is "CE";
  attribute C_RST_PRIORITY_B : string;
  attribute C_RST_PRIORITY_B of U0 : label is "CE";
  attribute C_SIM_COLLISION_CHECK : string;
  attribute C_SIM_COLLISION_CHECK of U0 : label is "ALL";
  attribute C_USE_BRAM_BLOCK : integer;
  attribute C_USE_BRAM_BLOCK of U0 : label is 1;
  attribute C_USE_BYTE_WEA : integer;
  attribute C_USE_BYTE_WEA of U0 : label is 1;
  attribute C_USE_BYTE_WEB : integer;
  attribute C_USE_BYTE_WEB of U0 : label is 1;
  attribute C_USE_DEFAULT_DATA : integer;
  attribute C_USE_DEFAULT_DATA of U0 : label is 0;
  attribute C_USE_ECC : integer;
  attribute C_USE_ECC of U0 : label is 0;
  attribute C_USE_SOFTECC : integer;
  attribute C_USE_SOFTECC of U0 : label is 0;
  attribute C_USE_URAM : integer;
  attribute C_USE_URAM of U0 : label is 0;
  attribute C_WEA_WIDTH : integer;
  attribute C_WEA_WIDTH of U0 : label is 4;
  attribute C_WEB_WIDTH : integer;
  attribute C_WEB_WIDTH of U0 : label is 4;
  attribute C_WRITE_DEPTH_A : integer;
  attribute C_WRITE_DEPTH_A of U0 : label is 8192;
  attribute C_WRITE_DEPTH_B : integer;
  attribute C_WRITE_DEPTH_B of U0 : label is 8192;
  attribute C_WRITE_MODE_A : string;
  attribute C_WRITE_MODE_A of U0 : label is "WRITE_FIRST";
  attribute C_WRITE_MODE_B : string;
  attribute C_WRITE_MODE_B of U0 : label is "WRITE_FIRST";
  attribute C_WRITE_WIDTH_A : integer;
  attribute C_WRITE_WIDTH_A of U0 : label is 32;
  attribute C_WRITE_WIDTH_B : integer;
  attribute C_WRITE_WIDTH_B of U0 : label is 32;
  attribute C_XDEVICEFAMILY : string;
  attribute C_XDEVICEFAMILY of U0 : label is "spartan7";
  attribute downgradeipidentifiedwarnings of U0 : label is "yes";
  attribute X_INTERFACE_INFO : string;
  attribute X_INTERFACE_INFO of clka : signal is "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK";
  attribute X_INTERFACE_PARAMETER : string;
  attribute X_INTERFACE_PARAMETER of clka : signal is "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 32768, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE BRAM_CTRL, READ_WRITE_MODE READ_WRITE";
  attribute X_INTERFACE_INFO of clkb : signal is "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK";
  attribute X_INTERFACE_PARAMETER of clkb : signal is "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 32768, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE BRAM_CTRL, READ_WRITE_MODE READ_WRITE";
  attribute X_INTERFACE_INFO of ena : signal is "xilinx.com:interface:bram:1.0 BRAM_PORTA EN";
  attribute X_INTERFACE_INFO of enb : signal is "xilinx.com:interface:bram:1.0 BRAM_PORTB EN";
  attribute X_INTERFACE_INFO of rsta : signal is "xilinx.com:interface:bram:1.0 BRAM_PORTA RST";
  attribute X_INTERFACE_INFO of rstb : signal is "xilinx.com:interface:bram:1.0 BRAM_PORTB RST";
  attribute X_INTERFACE_INFO of addra : signal is "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR";
  attribute X_INTERFACE_INFO of addrb : signal is "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR";
  attribute X_INTERFACE_INFO of dina : signal is "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN";
  attribute X_INTERFACE_INFO of dinb : signal is "xilinx.com:interface:bram:1.0 BRAM_PORTB DIN";
  attribute X_INTERFACE_INFO of douta : signal is "xilinx.com:interface:bram:1.0 BRAM_PORTA DOUT";
  attribute X_INTERFACE_INFO of doutb : signal is "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT";
  attribute X_INTERFACE_INFO of wea : signal is "xilinx.com:interface:bram:1.0 BRAM_PORTA WE";
  attribute X_INTERFACE_INFO of web : signal is "xilinx.com:interface:bram:1.0 BRAM_PORTB WE";
begin
U0: entity work.microblaze_mcs_1_blk_mem_gen_v8_4_1
     port map (
      addra(31 downto 15) => B"00000000000000000",
      addra(14 downto 2) => addra(14 downto 2),
      addra(1 downto 0) => B"00",
      addrb(31 downto 15) => B"00000000000000000",
      addrb(14 downto 2) => addrb(14 downto 2),
      addrb(1 downto 0) => B"00",
      clka => clka,
      clkb => clkb,
      dbiterr => NLW_U0_dbiterr_UNCONNECTED,
      deepsleep => '0',
      dina(31 downto 0) => dina(31 downto 0),
      dinb(31 downto 0) => dinb(31 downto 0),
      douta(31 downto 0) => douta(31 downto 0),
      doutb(31 downto 0) => doutb(31 downto 0),
      eccpipece => '0',
      ena => ena,
      enb => enb,
      injectdbiterr => '0',
      injectsbiterr => '0',
      rdaddrecc(31 downto 0) => NLW_U0_rdaddrecc_UNCONNECTED(31 downto 0),
      regcea => '0',
      regceb => '0',
      rsta => rsta,
      rsta_busy => rsta_busy,
      rstb => rstb,
      rstb_busy => rstb_busy,
      s_aclk => '0',
      s_aresetn => '0',
      s_axi_araddr(31 downto 0) => B"00000000000000000000000000000000",
      s_axi_arburst(1 downto 0) => B"00",
      s_axi_arid(3 downto 0) => B"0000",
      s_axi_arlen(7 downto 0) => B"00000000",
      s_axi_arready => NLW_U0_s_axi_arready_UNCONNECTED,
      s_axi_arsize(2 downto 0) => B"000",
      s_axi_arvalid => '0',
      s_axi_awaddr(31 downto 0) => B"00000000000000000000000000000000",
      s_axi_awburst(1 downto 0) => B"00",
      s_axi_awid(3 downto 0) => B"0000",
      s_axi_awlen(7 downto 0) => B"00000000",
      s_axi_awready => NLW_U0_s_axi_awready_UNCONNECTED,
      s_axi_awsize(2 downto 0) => B"000",
      s_axi_awvalid => '0',
      s_axi_bid(3 downto 0) => NLW_U0_s_axi_bid_UNCONNECTED(3 downto 0),
      s_axi_bready => '0',
      s_axi_bresp(1 downto 0) => NLW_U0_s_axi_bresp_UNCONNECTED(1 downto 0),
      s_axi_bvalid => NLW_U0_s_axi_bvalid_UNCONNECTED,
      s_axi_dbiterr => NLW_U0_s_axi_dbiterr_UNCONNECTED,
      s_axi_injectdbiterr => '0',
      s_axi_injectsbiterr => '0',
      s_axi_rdaddrecc(31 downto 0) => NLW_U0_s_axi_rdaddrecc_UNCONNECTED(31 downto 0),
      s_axi_rdata(31 downto 0) => NLW_U0_s_axi_rdata_UNCONNECTED(31 downto 0),
      s_axi_rid(3 downto 0) => NLW_U0_s_axi_rid_UNCONNECTED(3 downto 0),
      s_axi_rlast => NLW_U0_s_axi_rlast_UNCONNECTED,
      s_axi_rready => '0',
      s_axi_rresp(1 downto 0) => NLW_U0_s_axi_rresp_UNCONNECTED(1 downto 0),
      s_axi_rvalid => NLW_U0_s_axi_rvalid_UNCONNECTED,
      s_axi_sbiterr => NLW_U0_s_axi_sbiterr_UNCONNECTED,
      s_axi_wdata(31 downto 0) => B"00000000000000000000000000000000",
      s_axi_wlast => '0',
      s_axi_wready => NLW_U0_s_axi_wready_UNCONNECTED,
      s_axi_wstrb(3 downto 0) => B"0000",
      s_axi_wvalid => '0',
      sbiterr => NLW_U0_sbiterr_UNCONNECTED,
      shutdown => '0',
      sleep => '0',
      wea(3 downto 0) => wea(3 downto 0),
      web(3 downto 0) => web(3 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_MicroBlaze is
  port (
    RAM_To : in STD_LOGIC_VECTOR ( 255 downto 0 );
    RAM_From : out STD_LOGIC_VECTOR ( 255 downto 0 );
    Clk : in STD_LOGIC;
    Reset : in STD_LOGIC;
    Mb_Reset : in STD_LOGIC;
    Config_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_En : in STD_LOGIC;
    Reset_Mode : in STD_LOGIC_VECTOR ( 0 to 1 );
    Non_Secure : in STD_LOGIC_VECTOR ( 0 to 3 );
    Interrupt : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 31 );
    Interrupt_Ack : out STD_LOGIC_VECTOR ( 0 to 1 );
    Ext_BRK : in STD_LOGIC;
    Ext_NM_BRK : in STD_LOGIC;
    Pause : in STD_LOGIC;
    Pause_Ack : out STD_LOGIC;
    Dbg_Continue : out STD_LOGIC;
    Dbg_Stop : in STD_LOGIC;
    Dbg_Intr : out STD_LOGIC;
    MB_Halted : out STD_LOGIC;
    MB_Error : out STD_LOGIC;
    Wakeup : in STD_LOGIC_VECTOR ( 0 to 1 );
    Sleep : out STD_LOGIC;
    Hibernate : out STD_LOGIC;
    Suspend : out STD_LOGIC;
    Dbg_Wakeup : out STD_LOGIC;
    LOCKSTEP_Slave_In : in STD_LOGIC_VECTOR ( 0 to 4095 );
    LOCKSTEP_Master_Out : out STD_LOGIC_VECTOR ( 0 to 4095 );
    LOCKSTEP_Out : out STD_LOGIC_VECTOR ( 0 to 4095 );
    Instr_Addr : out STD_LOGIC_VECTOR ( 0 to 31 );
    Instr : in STD_LOGIC_VECTOR ( 0 to 31 );
    IFetch : out STD_LOGIC;
    I_AS : out STD_LOGIC;
    IReady : in STD_LOGIC;
    IWAIT : in STD_LOGIC;
    ICE : in STD_LOGIC;
    IUE : in STD_LOGIC;
    M_AXI_IP_AWID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IP_AWADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IP_AWLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_IP_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IP_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IP_AWLOCK : out STD_LOGIC;
    M_AXI_IP_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IP_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IP_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IP_AWVALID : out STD_LOGIC;
    M_AXI_IP_AWREADY : in STD_LOGIC;
    M_AXI_IP_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IP_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IP_WLAST : out STD_LOGIC;
    M_AXI_IP_WVALID : out STD_LOGIC;
    M_AXI_IP_WREADY : in STD_LOGIC;
    M_AXI_IP_BID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IP_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IP_BVALID : in STD_LOGIC;
    M_AXI_IP_BREADY : out STD_LOGIC;
    M_AXI_IP_ARID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IP_ARADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IP_ARLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_IP_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IP_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IP_ARLOCK : out STD_LOGIC;
    M_AXI_IP_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IP_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IP_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IP_ARVALID : out STD_LOGIC;
    M_AXI_IP_ARREADY : in STD_LOGIC;
    M_AXI_IP_RID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IP_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IP_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IP_RLAST : in STD_LOGIC;
    M_AXI_IP_RVALID : in STD_LOGIC;
    M_AXI_IP_RREADY : out STD_LOGIC;
    Data_Addr : out STD_LOGIC_VECTOR ( 0 to 31 );
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 31 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 31 );
    D_AS : out STD_LOGIC;
    Read_Strobe : out STD_LOGIC;
    Write_Strobe : out STD_LOGIC;
    DReady : in STD_LOGIC;
    DWait : in STD_LOGIC;
    DCE : in STD_LOGIC;
    DUE : in STD_LOGIC;
    Byte_Enable : out STD_LOGIC_VECTOR ( 0 to 3 );
    M_AXI_DP_AWID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DP_AWADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_AWLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_DP_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DP_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DP_AWLOCK : out STD_LOGIC;
    M_AXI_DP_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DP_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DP_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DP_AWVALID : out STD_LOGIC;
    M_AXI_DP_AWREADY : in STD_LOGIC;
    M_AXI_DP_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DP_WLAST : out STD_LOGIC;
    M_AXI_DP_WVALID : out STD_LOGIC;
    M_AXI_DP_WREADY : in STD_LOGIC;
    M_AXI_DP_BID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DP_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DP_BVALID : in STD_LOGIC;
    M_AXI_DP_BREADY : out STD_LOGIC;
    M_AXI_DP_ARID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DP_ARADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_ARLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_DP_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DP_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DP_ARLOCK : out STD_LOGIC;
    M_AXI_DP_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DP_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DP_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DP_ARVALID : out STD_LOGIC;
    M_AXI_DP_ARREADY : in STD_LOGIC;
    M_AXI_DP_RID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DP_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DP_RLAST : in STD_LOGIC;
    M_AXI_DP_RVALID : in STD_LOGIC;
    M_AXI_DP_RREADY : out STD_LOGIC;
    Dbg_Disable : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Dbg_TDI : in STD_LOGIC;
    Dbg_TDO : out STD_LOGIC;
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_Shift : in STD_LOGIC;
    Dbg_Capture : in STD_LOGIC;
    Dbg_Update : in STD_LOGIC;
    Debug_Rst : in STD_LOGIC;
    Dbg_Trig_In : out STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_Trig_Ack_In : in STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_Trig_Out : in STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_Trig_Ack_Out : out STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_Trace_Clk : in STD_LOGIC;
    Dbg_Trace_Data : out STD_LOGIC_VECTOR ( 0 to 35 );
    Dbg_Trace_Ready : in STD_LOGIC;
    Dbg_Trace_Valid : out STD_LOGIC;
    Dbg_AWADDR : in STD_LOGIC_VECTOR ( 14 downto 2 );
    Dbg_AWVALID : in STD_LOGIC;
    Dbg_AWREADY : out STD_LOGIC;
    Dbg_WDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    Dbg_WVALID : in STD_LOGIC;
    Dbg_WREADY : out STD_LOGIC;
    Dbg_BRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_BVALID : out STD_LOGIC;
    Dbg_BREADY : in STD_LOGIC;
    Dbg_ARADDR : in STD_LOGIC_VECTOR ( 14 downto 2 );
    Dbg_ARVALID : in STD_LOGIC;
    Dbg_ARREADY : out STD_LOGIC;
    Dbg_RDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    Dbg_RRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_RVALID : out STD_LOGIC;
    Dbg_RREADY : in STD_LOGIC;
    DEBUG_ACLK : in STD_LOGIC;
    DEBUG_ARESETN : in STD_LOGIC;
    Trace_Instruction : out STD_LOGIC_VECTOR ( 0 to 31 );
    Trace_Valid_Instr : out STD_LOGIC;
    Trace_PC : out STD_LOGIC_VECTOR ( 0 to 31 );
    Trace_Reg_Write : out STD_LOGIC;
    Trace_Reg_Addr : out STD_LOGIC_VECTOR ( 0 to 4 );
    Trace_MSR_Reg : out STD_LOGIC_VECTOR ( 0 to 14 );
    Trace_PID_Reg : out STD_LOGIC_VECTOR ( 0 to 7 );
    Trace_New_Reg_Value : out STD_LOGIC_VECTOR ( 0 to 31 );
    Trace_Exception_Taken : out STD_LOGIC;
    Trace_Exception_Kind : out STD_LOGIC_VECTOR ( 0 to 4 );
    Trace_Jump_Taken : out STD_LOGIC;
    Trace_Delay_Slot : out STD_LOGIC;
    Trace_Data_Address : out STD_LOGIC_VECTOR ( 0 to 31 );
    Trace_Data_Write_Value : out STD_LOGIC_VECTOR ( 0 to 31 );
    Trace_Data_Byte_Enable : out STD_LOGIC_VECTOR ( 0 to 3 );
    Trace_Data_Access : out STD_LOGIC;
    Trace_Data_Read : out STD_LOGIC;
    Trace_Data_Write : out STD_LOGIC;
    Trace_DCache_Req : out STD_LOGIC;
    Trace_DCache_Hit : out STD_LOGIC;
    Trace_DCache_Rdy : out STD_LOGIC;
    Trace_DCache_Read : out STD_LOGIC;
    Trace_ICache_Req : out STD_LOGIC;
    Trace_ICache_Hit : out STD_LOGIC;
    Trace_ICache_Rdy : out STD_LOGIC;
    Trace_OF_PipeRun : out STD_LOGIC;
    Trace_EX_PipeRun : out STD_LOGIC;
    Trace_MEM_PipeRun : out STD_LOGIC;
    Trace_MB_Halted : out STD_LOGIC;
    Trace_Jump_Hit : out STD_LOGIC;
    M0_AXIS_TLAST : out STD_LOGIC;
    M0_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M0_AXIS_TVALID : out STD_LOGIC;
    M0_AXIS_TREADY : in STD_LOGIC;
    M1_AXIS_TLAST : out STD_LOGIC;
    M1_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M1_AXIS_TVALID : out STD_LOGIC;
    M1_AXIS_TREADY : in STD_LOGIC;
    M2_AXIS_TLAST : out STD_LOGIC;
    M2_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M2_AXIS_TVALID : out STD_LOGIC;
    M2_AXIS_TREADY : in STD_LOGIC;
    M3_AXIS_TLAST : out STD_LOGIC;
    M3_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M3_AXIS_TVALID : out STD_LOGIC;
    M3_AXIS_TREADY : in STD_LOGIC;
    M4_AXIS_TLAST : out STD_LOGIC;
    M4_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M4_AXIS_TVALID : out STD_LOGIC;
    M4_AXIS_TREADY : in STD_LOGIC;
    M5_AXIS_TLAST : out STD_LOGIC;
    M5_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M5_AXIS_TVALID : out STD_LOGIC;
    M5_AXIS_TREADY : in STD_LOGIC;
    M6_AXIS_TLAST : out STD_LOGIC;
    M6_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M6_AXIS_TVALID : out STD_LOGIC;
    M6_AXIS_TREADY : in STD_LOGIC;
    M7_AXIS_TLAST : out STD_LOGIC;
    M7_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M7_AXIS_TVALID : out STD_LOGIC;
    M7_AXIS_TREADY : in STD_LOGIC;
    M8_AXIS_TLAST : out STD_LOGIC;
    M8_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M8_AXIS_TVALID : out STD_LOGIC;
    M8_AXIS_TREADY : in STD_LOGIC;
    M9_AXIS_TLAST : out STD_LOGIC;
    M9_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M9_AXIS_TVALID : out STD_LOGIC;
    M9_AXIS_TREADY : in STD_LOGIC;
    M10_AXIS_TLAST : out STD_LOGIC;
    M10_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M10_AXIS_TVALID : out STD_LOGIC;
    M10_AXIS_TREADY : in STD_LOGIC;
    M11_AXIS_TLAST : out STD_LOGIC;
    M11_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M11_AXIS_TVALID : out STD_LOGIC;
    M11_AXIS_TREADY : in STD_LOGIC;
    M12_AXIS_TLAST : out STD_LOGIC;
    M12_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M12_AXIS_TVALID : out STD_LOGIC;
    M12_AXIS_TREADY : in STD_LOGIC;
    M13_AXIS_TLAST : out STD_LOGIC;
    M13_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M13_AXIS_TVALID : out STD_LOGIC;
    M13_AXIS_TREADY : in STD_LOGIC;
    M14_AXIS_TLAST : out STD_LOGIC;
    M14_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M14_AXIS_TVALID : out STD_LOGIC;
    M14_AXIS_TREADY : in STD_LOGIC;
    M15_AXIS_TLAST : out STD_LOGIC;
    M15_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M15_AXIS_TVALID : out STD_LOGIC;
    M15_AXIS_TREADY : in STD_LOGIC;
    S0_AXIS_TLAST : in STD_LOGIC;
    S0_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S0_AXIS_TVALID : in STD_LOGIC;
    S0_AXIS_TREADY : out STD_LOGIC;
    S1_AXIS_TLAST : in STD_LOGIC;
    S1_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S1_AXIS_TVALID : in STD_LOGIC;
    S1_AXIS_TREADY : out STD_LOGIC;
    S2_AXIS_TLAST : in STD_LOGIC;
    S2_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S2_AXIS_TVALID : in STD_LOGIC;
    S2_AXIS_TREADY : out STD_LOGIC;
    S3_AXIS_TLAST : in STD_LOGIC;
    S3_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S3_AXIS_TVALID : in STD_LOGIC;
    S3_AXIS_TREADY : out STD_LOGIC;
    S4_AXIS_TLAST : in STD_LOGIC;
    S4_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S4_AXIS_TVALID : in STD_LOGIC;
    S4_AXIS_TREADY : out STD_LOGIC;
    S5_AXIS_TLAST : in STD_LOGIC;
    S5_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S5_AXIS_TVALID : in STD_LOGIC;
    S5_AXIS_TREADY : out STD_LOGIC;
    S6_AXIS_TLAST : in STD_LOGIC;
    S6_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S6_AXIS_TVALID : in STD_LOGIC;
    S6_AXIS_TREADY : out STD_LOGIC;
    S7_AXIS_TLAST : in STD_LOGIC;
    S7_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S7_AXIS_TVALID : in STD_LOGIC;
    S7_AXIS_TREADY : out STD_LOGIC;
    S8_AXIS_TLAST : in STD_LOGIC;
    S8_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S8_AXIS_TVALID : in STD_LOGIC;
    S8_AXIS_TREADY : out STD_LOGIC;
    S9_AXIS_TLAST : in STD_LOGIC;
    S9_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S9_AXIS_TVALID : in STD_LOGIC;
    S9_AXIS_TREADY : out STD_LOGIC;
    S10_AXIS_TLAST : in STD_LOGIC;
    S10_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S10_AXIS_TVALID : in STD_LOGIC;
    S10_AXIS_TREADY : out STD_LOGIC;
    S11_AXIS_TLAST : in STD_LOGIC;
    S11_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S11_AXIS_TVALID : in STD_LOGIC;
    S11_AXIS_TREADY : out STD_LOGIC;
    S12_AXIS_TLAST : in STD_LOGIC;
    S12_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S12_AXIS_TVALID : in STD_LOGIC;
    S12_AXIS_TREADY : out STD_LOGIC;
    S13_AXIS_TLAST : in STD_LOGIC;
    S13_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S13_AXIS_TVALID : in STD_LOGIC;
    S13_AXIS_TREADY : out STD_LOGIC;
    S14_AXIS_TLAST : in STD_LOGIC;
    S14_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S14_AXIS_TVALID : in STD_LOGIC;
    S14_AXIS_TREADY : out STD_LOGIC;
    S15_AXIS_TLAST : in STD_LOGIC;
    S15_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S15_AXIS_TVALID : in STD_LOGIC;
    S15_AXIS_TREADY : out STD_LOGIC;
    M_AXI_IC_AWID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_AWADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_AWLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_IC_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_AWLOCK : out STD_LOGIC;
    M_AXI_IC_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_AWVALID : out STD_LOGIC;
    M_AXI_IC_AWREADY : in STD_LOGIC;
    M_AXI_IC_AWUSER : out STD_LOGIC_VECTOR ( 4 downto 0 );
    M_AXI_IC_AWDOMAIN : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_AWSNOOP : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_AWBAR : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_WLAST : out STD_LOGIC;
    M_AXI_IC_WVALID : out STD_LOGIC;
    M_AXI_IC_WREADY : in STD_LOGIC;
    M_AXI_IC_WUSER : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_BID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_BVALID : in STD_LOGIC;
    M_AXI_IC_BREADY : out STD_LOGIC;
    M_AXI_IC_BUSER : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_WACK : out STD_LOGIC;
    M_AXI_IC_ARID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_ARADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_ARLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_IC_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_ARLOCK : out STD_LOGIC;
    M_AXI_IC_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_ARVALID : out STD_LOGIC;
    M_AXI_IC_ARREADY : in STD_LOGIC;
    M_AXI_IC_ARUSER : out STD_LOGIC_VECTOR ( 4 downto 0 );
    M_AXI_IC_ARDOMAIN : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_ARSNOOP : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_ARBAR : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_RID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_RLAST : in STD_LOGIC;
    M_AXI_IC_RVALID : in STD_LOGIC;
    M_AXI_IC_RREADY : out STD_LOGIC;
    M_AXI_IC_RUSER : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_RACK : out STD_LOGIC;
    M_AXI_IC_ACVALID : in STD_LOGIC;
    M_AXI_IC_ACADDR : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_ACSNOOP : in STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_ACPROT : in STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_ACREADY : out STD_LOGIC;
    M_AXI_IC_CRVALID : out STD_LOGIC;
    M_AXI_IC_CRRESP : out STD_LOGIC_VECTOR ( 4 downto 0 );
    M_AXI_IC_CRREADY : in STD_LOGIC;
    M_AXI_IC_CDVALID : out STD_LOGIC;
    M_AXI_IC_CDDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_CDLAST : out STD_LOGIC;
    M_AXI_IC_CDREADY : in STD_LOGIC;
    M_AXI_DC_AWID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_AWADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_AWLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_DC_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_AWLOCK : out STD_LOGIC;
    M_AXI_DC_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_AWVALID : out STD_LOGIC;
    M_AXI_DC_AWREADY : in STD_LOGIC;
    M_AXI_DC_AWUSER : out STD_LOGIC_VECTOR ( 4 downto 0 );
    M_AXI_DC_AWDOMAIN : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_AWSNOOP : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_AWBAR : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_WLAST : out STD_LOGIC;
    M_AXI_DC_WVALID : out STD_LOGIC;
    M_AXI_DC_WREADY : in STD_LOGIC;
    M_AXI_DC_WUSER : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_BID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_BVALID : in STD_LOGIC;
    M_AXI_DC_BREADY : out STD_LOGIC;
    M_AXI_DC_BUSER : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_WACK : out STD_LOGIC;
    M_AXI_DC_ARID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_ARADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_ARLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_DC_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_ARLOCK : out STD_LOGIC;
    M_AXI_DC_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_ARVALID : out STD_LOGIC;
    M_AXI_DC_ARREADY : in STD_LOGIC;
    M_AXI_DC_ARUSER : out STD_LOGIC_VECTOR ( 4 downto 0 );
    M_AXI_DC_ARDOMAIN : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_ARSNOOP : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_ARBAR : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_RID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_RLAST : in STD_LOGIC;
    M_AXI_DC_RVALID : in STD_LOGIC;
    M_AXI_DC_RREADY : out STD_LOGIC;
    M_AXI_DC_RUSER : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_RACK : out STD_LOGIC;
    M_AXI_DC_ACVALID : in STD_LOGIC;
    M_AXI_DC_ACADDR : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_ACSNOOP : in STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_ACPROT : in STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_ACREADY : out STD_LOGIC;
    M_AXI_DC_CRVALID : out STD_LOGIC;
    M_AXI_DC_CRRESP : out STD_LOGIC_VECTOR ( 4 downto 0 );
    M_AXI_DC_CRREADY : in STD_LOGIC;
    M_AXI_DC_CDVALID : out STD_LOGIC;
    M_AXI_DC_CDDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_CDLAST : out STD_LOGIC;
    M_AXI_DC_CDREADY : in STD_LOGIC
  );
  attribute C_ADDR_TAG_BITS : integer;
  attribute C_ADDR_TAG_BITS of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_ALLOW_DCACHE_WR : integer;
  attribute C_ALLOW_DCACHE_WR of microblaze_mcs_1_MicroBlaze : entity is 1;
  attribute C_ALLOW_ICACHE_WR : integer;
  attribute C_ALLOW_ICACHE_WR of microblaze_mcs_1_MicroBlaze : entity is 1;
  attribute C_AREA_OPTIMIZED : integer;
  attribute C_AREA_OPTIMIZED of microblaze_mcs_1_MicroBlaze : entity is 1;
  attribute C_ASYNC_INTERRUPT : integer;
  attribute C_ASYNC_INTERRUPT of microblaze_mcs_1_MicroBlaze : entity is 1;
  attribute C_ASYNC_WAKEUP : integer;
  attribute C_ASYNC_WAKEUP of microblaze_mcs_1_MicroBlaze : entity is 3;
  attribute C_AVOID_PRIMITIVES : integer;
  attribute C_AVOID_PRIMITIVES of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_BASE_VECTORS : string;
  attribute C_BASE_VECTORS of microblaze_mcs_1_MicroBlaze : entity is "64'b0000000000000000000000000000000000000000000000000000000000000000";
  attribute C_BRANCH_TARGET_CACHE_SIZE : integer;
  attribute C_BRANCH_TARGET_CACHE_SIZE of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_CACHE_BYTE_SIZE : integer;
  attribute C_CACHE_BYTE_SIZE of microblaze_mcs_1_MicroBlaze : entity is 8192;
  attribute C_DADDR_SIZE : integer;
  attribute C_DADDR_SIZE of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_DATA_SIZE : integer;
  attribute C_DATA_SIZE of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_DCACHE_ADDR_TAG : integer;
  attribute C_DCACHE_ADDR_TAG of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_DCACHE_ALWAYS_USED : integer;
  attribute C_DCACHE_ALWAYS_USED of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_DCACHE_BASEADDR : string;
  attribute C_DCACHE_BASEADDR of microblaze_mcs_1_MicroBlaze : entity is "64'b0000000000000000000000000000000000000000000000000000000000000000";
  attribute C_DCACHE_BYTE_SIZE : integer;
  attribute C_DCACHE_BYTE_SIZE of microblaze_mcs_1_MicroBlaze : entity is 8192;
  attribute C_DCACHE_DATA_WIDTH : integer;
  attribute C_DCACHE_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_DCACHE_FORCE_TAG_LUTRAM : integer;
  attribute C_DCACHE_FORCE_TAG_LUTRAM of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_DCACHE_HIGHADDR : string;
  attribute C_DCACHE_HIGHADDR of microblaze_mcs_1_MicroBlaze : entity is "64'b0000000000000000000000000000000000111111111111111111111111111111";
  attribute C_DCACHE_LINE_LEN : integer;
  attribute C_DCACHE_LINE_LEN of microblaze_mcs_1_MicroBlaze : entity is 4;
  attribute C_DCACHE_USE_WRITEBACK : integer;
  attribute C_DCACHE_USE_WRITEBACK of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_DCACHE_VICTIMS : integer;
  attribute C_DCACHE_VICTIMS of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_DEBUG_COUNTER_WIDTH : integer;
  attribute C_DEBUG_COUNTER_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_DEBUG_ENABLED : integer;
  attribute C_DEBUG_ENABLED of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_DEBUG_EVENT_COUNTERS : integer;
  attribute C_DEBUG_EVENT_COUNTERS of microblaze_mcs_1_MicroBlaze : entity is 5;
  attribute C_DEBUG_EXTERNAL_TRACE : integer;
  attribute C_DEBUG_EXTERNAL_TRACE of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_DEBUG_INTERFACE : integer;
  attribute C_DEBUG_INTERFACE of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_DEBUG_LATENCY_COUNTERS : integer;
  attribute C_DEBUG_LATENCY_COUNTERS of microblaze_mcs_1_MicroBlaze : entity is 1;
  attribute C_DEBUG_PROFILE_SIZE : integer;
  attribute C_DEBUG_PROFILE_SIZE of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_DEBUG_TRACE_ASYNC_RESET : integer;
  attribute C_DEBUG_TRACE_ASYNC_RESET of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_DEBUG_TRACE_SIZE : integer;
  attribute C_DEBUG_TRACE_SIZE of microblaze_mcs_1_MicroBlaze : entity is 8192;
  attribute C_DIV_ZERO_EXCEPTION : integer;
  attribute C_DIV_ZERO_EXCEPTION of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_DYNAMIC_BUS_SIZING : integer;
  attribute C_DYNAMIC_BUS_SIZING of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_D_AXI : integer;
  attribute C_D_AXI of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_D_LMB : integer;
  attribute C_D_LMB of microblaze_mcs_1_MicroBlaze : entity is 1;
  attribute C_ECC_USE_CE_EXCEPTION : integer;
  attribute C_ECC_USE_CE_EXCEPTION of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_EDGE_IS_POSITIVE : integer;
  attribute C_EDGE_IS_POSITIVE of microblaze_mcs_1_MicroBlaze : entity is 1;
  attribute C_ENDIANNESS : integer;
  attribute C_ENDIANNESS of microblaze_mcs_1_MicroBlaze : entity is 1;
  attribute C_FAMILY : string;
  attribute C_FAMILY of microblaze_mcs_1_MicroBlaze : entity is "spartan7";
  attribute C_FAULT_TOLERANT : integer;
  attribute C_FAULT_TOLERANT of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_FPU_EXCEPTION : integer;
  attribute C_FPU_EXCEPTION of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_FREQ : integer;
  attribute C_FREQ of microblaze_mcs_1_MicroBlaze : entity is 100000000;
  attribute C_FSL_EXCEPTION : integer;
  attribute C_FSL_EXCEPTION of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_FSL_LINKS : integer;
  attribute C_FSL_LINKS of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_IADDR_SIZE : integer;
  attribute C_IADDR_SIZE of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_ICACHE_ALWAYS_USED : integer;
  attribute C_ICACHE_ALWAYS_USED of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_ICACHE_BASEADDR : string;
  attribute C_ICACHE_BASEADDR of microblaze_mcs_1_MicroBlaze : entity is "64'b0000000000000000000000000000000000000000000000000000000000000000";
  attribute C_ICACHE_DATA_WIDTH : integer;
  attribute C_ICACHE_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_ICACHE_FORCE_TAG_LUTRAM : integer;
  attribute C_ICACHE_FORCE_TAG_LUTRAM of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_ICACHE_HIGHADDR : string;
  attribute C_ICACHE_HIGHADDR of microblaze_mcs_1_MicroBlaze : entity is "64'b0000000000000000000000000000000000111111111111111111111111111111";
  attribute C_ICACHE_LINE_LEN : integer;
  attribute C_ICACHE_LINE_LEN of microblaze_mcs_1_MicroBlaze : entity is 4;
  attribute C_ICACHE_STREAMS : integer;
  attribute C_ICACHE_STREAMS of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_ICACHE_VICTIMS : integer;
  attribute C_ICACHE_VICTIMS of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_ILL_OPCODE_EXCEPTION : integer;
  attribute C_ILL_OPCODE_EXCEPTION of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_IMPRECISE_EXCEPTIONS : integer;
  attribute C_IMPRECISE_EXCEPTIONS of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_INSTANCE : string;
  attribute C_INSTANCE of microblaze_mcs_1_MicroBlaze : entity is "bd_3c9d_0_microblaze_I_0";
  attribute C_INSTR_SIZE : integer;
  attribute C_INSTR_SIZE of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_INTERCONNECT : integer;
  attribute C_INTERCONNECT of microblaze_mcs_1_MicroBlaze : entity is 2;
  attribute C_INTERRUPT_IS_EDGE : integer;
  attribute C_INTERRUPT_IS_EDGE of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_I_AXI : integer;
  attribute C_I_AXI of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_I_LMB : integer;
  attribute C_I_LMB of microblaze_mcs_1_MicroBlaze : entity is 1;
  attribute C_LOCKSTEP_MASTER : integer;
  attribute C_LOCKSTEP_MASTER of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_LOCKSTEP_SLAVE : integer;
  attribute C_LOCKSTEP_SLAVE of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_M0_AXIS_DATA_WIDTH : integer;
  attribute C_M0_AXIS_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_M10_AXIS_DATA_WIDTH : integer;
  attribute C_M10_AXIS_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_M11_AXIS_DATA_WIDTH : integer;
  attribute C_M11_AXIS_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_M12_AXIS_DATA_WIDTH : integer;
  attribute C_M12_AXIS_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_M13_AXIS_DATA_WIDTH : integer;
  attribute C_M13_AXIS_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_M14_AXIS_DATA_WIDTH : integer;
  attribute C_M14_AXIS_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_M15_AXIS_DATA_WIDTH : integer;
  attribute C_M15_AXIS_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_M1_AXIS_DATA_WIDTH : integer;
  attribute C_M1_AXIS_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_M2_AXIS_DATA_WIDTH : integer;
  attribute C_M2_AXIS_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_M3_AXIS_DATA_WIDTH : integer;
  attribute C_M3_AXIS_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_M4_AXIS_DATA_WIDTH : integer;
  attribute C_M4_AXIS_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_M5_AXIS_DATA_WIDTH : integer;
  attribute C_M5_AXIS_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_M6_AXIS_DATA_WIDTH : integer;
  attribute C_M6_AXIS_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_M7_AXIS_DATA_WIDTH : integer;
  attribute C_M7_AXIS_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_M8_AXIS_DATA_WIDTH : integer;
  attribute C_M8_AXIS_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_M9_AXIS_DATA_WIDTH : integer;
  attribute C_M9_AXIS_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_MMU_DTLB_SIZE : integer;
  attribute C_MMU_DTLB_SIZE of microblaze_mcs_1_MicroBlaze : entity is 4;
  attribute C_MMU_ITLB_SIZE : integer;
  attribute C_MMU_ITLB_SIZE of microblaze_mcs_1_MicroBlaze : entity is 2;
  attribute C_MMU_PRIVILEGED_INSTR : integer;
  attribute C_MMU_PRIVILEGED_INSTR of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_MMU_TLB_ACCESS : integer;
  attribute C_MMU_TLB_ACCESS of microblaze_mcs_1_MicroBlaze : entity is 3;
  attribute C_MMU_ZONES : integer;
  attribute C_MMU_ZONES of microblaze_mcs_1_MicroBlaze : entity is 16;
  attribute C_M_AXI_DC_ADDR_WIDTH : integer;
  attribute C_M_AXI_DC_ADDR_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_M_AXI_DC_ARUSER_WIDTH : integer;
  attribute C_M_AXI_DC_ARUSER_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 5;
  attribute C_M_AXI_DC_AWUSER_WIDTH : integer;
  attribute C_M_AXI_DC_AWUSER_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 5;
  attribute C_M_AXI_DC_BUSER_WIDTH : integer;
  attribute C_M_AXI_DC_BUSER_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 1;
  attribute C_M_AXI_DC_DATA_WIDTH : integer;
  attribute C_M_AXI_DC_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_M_AXI_DC_EXCLUSIVE_ACCESS : integer;
  attribute C_M_AXI_DC_EXCLUSIVE_ACCESS of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_M_AXI_DC_RUSER_WIDTH : integer;
  attribute C_M_AXI_DC_RUSER_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 1;
  attribute C_M_AXI_DC_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_DC_THREAD_ID_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 1;
  attribute C_M_AXI_DC_USER_VALUE : integer;
  attribute C_M_AXI_DC_USER_VALUE of microblaze_mcs_1_MicroBlaze : entity is 31;
  attribute C_M_AXI_DC_WUSER_WIDTH : integer;
  attribute C_M_AXI_DC_WUSER_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 1;
  attribute C_M_AXI_DP_ADDR_WIDTH : integer;
  attribute C_M_AXI_DP_ADDR_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_M_AXI_DP_DATA_WIDTH : integer;
  attribute C_M_AXI_DP_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_M_AXI_DP_EXCLUSIVE_ACCESS : integer;
  attribute C_M_AXI_DP_EXCLUSIVE_ACCESS of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_M_AXI_DP_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_DP_THREAD_ID_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 1;
  attribute C_M_AXI_D_BUS_EXCEPTION : integer;
  attribute C_M_AXI_D_BUS_EXCEPTION of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_M_AXI_IC_ADDR_WIDTH : integer;
  attribute C_M_AXI_IC_ADDR_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_M_AXI_IC_ARUSER_WIDTH : integer;
  attribute C_M_AXI_IC_ARUSER_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 5;
  attribute C_M_AXI_IC_AWUSER_WIDTH : integer;
  attribute C_M_AXI_IC_AWUSER_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 5;
  attribute C_M_AXI_IC_BUSER_WIDTH : integer;
  attribute C_M_AXI_IC_BUSER_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 1;
  attribute C_M_AXI_IC_DATA_WIDTH : integer;
  attribute C_M_AXI_IC_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_M_AXI_IC_RUSER_WIDTH : integer;
  attribute C_M_AXI_IC_RUSER_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 1;
  attribute C_M_AXI_IC_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_IC_THREAD_ID_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 1;
  attribute C_M_AXI_IC_USER_VALUE : integer;
  attribute C_M_AXI_IC_USER_VALUE of microblaze_mcs_1_MicroBlaze : entity is 31;
  attribute C_M_AXI_IC_WUSER_WIDTH : integer;
  attribute C_M_AXI_IC_WUSER_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 1;
  attribute C_M_AXI_IP_ADDR_WIDTH : integer;
  attribute C_M_AXI_IP_ADDR_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_M_AXI_IP_DATA_WIDTH : integer;
  attribute C_M_AXI_IP_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_M_AXI_IP_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_IP_THREAD_ID_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 1;
  attribute C_M_AXI_I_BUS_EXCEPTION : integer;
  attribute C_M_AXI_I_BUS_EXCEPTION of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_NUMBER_OF_PC_BRK : integer;
  attribute C_NUMBER_OF_PC_BRK of microblaze_mcs_1_MicroBlaze : entity is 1;
  attribute C_NUMBER_OF_RD_ADDR_BRK : integer;
  attribute C_NUMBER_OF_RD_ADDR_BRK of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_NUMBER_OF_WR_ADDR_BRK : integer;
  attribute C_NUMBER_OF_WR_ADDR_BRK of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_NUM_SYNC_FF_CLK : integer;
  attribute C_NUM_SYNC_FF_CLK of microblaze_mcs_1_MicroBlaze : entity is 2;
  attribute C_NUM_SYNC_FF_CLK_DEBUG : integer;
  attribute C_NUM_SYNC_FF_CLK_DEBUG of microblaze_mcs_1_MicroBlaze : entity is 2;
  attribute C_NUM_SYNC_FF_CLK_IRQ : integer;
  attribute C_NUM_SYNC_FF_CLK_IRQ of microblaze_mcs_1_MicroBlaze : entity is 1;
  attribute C_NUM_SYNC_FF_DBG_CLK : integer;
  attribute C_NUM_SYNC_FF_DBG_CLK of microblaze_mcs_1_MicroBlaze : entity is 1;
  attribute C_NUM_SYNC_FF_DBG_TRACE_CLK : integer;
  attribute C_NUM_SYNC_FF_DBG_TRACE_CLK of microblaze_mcs_1_MicroBlaze : entity is 2;
  attribute C_OPCODE_0x0_ILLEGAL : integer;
  attribute C_OPCODE_0x0_ILLEGAL of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_OPTIMIZATION : integer;
  attribute C_OPTIMIZATION of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_PC_WIDTH : integer;
  attribute C_PC_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 15;
  attribute C_PIADDR_SIZE : integer;
  attribute C_PIADDR_SIZE of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_PVR : integer;
  attribute C_PVR of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_PVR_USER1 : string;
  attribute C_PVR_USER1 of microblaze_mcs_1_MicroBlaze : entity is "8'b00000000";
  attribute C_PVR_USER2 : integer;
  attribute C_PVR_USER2 of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_RESET_MSR : integer;
  attribute C_RESET_MSR of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_S0_AXIS_DATA_WIDTH : integer;
  attribute C_S0_AXIS_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_S10_AXIS_DATA_WIDTH : integer;
  attribute C_S10_AXIS_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_S11_AXIS_DATA_WIDTH : integer;
  attribute C_S11_AXIS_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_S12_AXIS_DATA_WIDTH : integer;
  attribute C_S12_AXIS_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_S13_AXIS_DATA_WIDTH : integer;
  attribute C_S13_AXIS_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_S14_AXIS_DATA_WIDTH : integer;
  attribute C_S14_AXIS_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_S15_AXIS_DATA_WIDTH : integer;
  attribute C_S15_AXIS_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_S1_AXIS_DATA_WIDTH : integer;
  attribute C_S1_AXIS_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_S2_AXIS_DATA_WIDTH : integer;
  attribute C_S2_AXIS_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_S3_AXIS_DATA_WIDTH : integer;
  attribute C_S3_AXIS_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_S4_AXIS_DATA_WIDTH : integer;
  attribute C_S4_AXIS_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_S5_AXIS_DATA_WIDTH : integer;
  attribute C_S5_AXIS_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_S6_AXIS_DATA_WIDTH : integer;
  attribute C_S6_AXIS_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_S7_AXIS_DATA_WIDTH : integer;
  attribute C_S7_AXIS_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_S8_AXIS_DATA_WIDTH : integer;
  attribute C_S8_AXIS_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_S9_AXIS_DATA_WIDTH : integer;
  attribute C_S9_AXIS_DATA_WIDTH of microblaze_mcs_1_MicroBlaze : entity is 32;
  attribute C_SCO : integer;
  attribute C_SCO of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_UNALIGNED_EXCEPTIONS : integer;
  attribute C_UNALIGNED_EXCEPTIONS of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_USE_BARREL : integer;
  attribute C_USE_BARREL of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_USE_BRANCH_TARGET_CACHE : integer;
  attribute C_USE_BRANCH_TARGET_CACHE of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_USE_CONFIG_RESET : integer;
  attribute C_USE_CONFIG_RESET of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_USE_DCACHE : integer;
  attribute C_USE_DCACHE of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_USE_DIV : integer;
  attribute C_USE_DIV of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_USE_EXTENDED_FSL_INSTR : integer;
  attribute C_USE_EXTENDED_FSL_INSTR of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_USE_EXT_BRK : integer;
  attribute C_USE_EXT_BRK of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_USE_EXT_NM_BRK : integer;
  attribute C_USE_EXT_NM_BRK of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_USE_FPU : integer;
  attribute C_USE_FPU of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_USE_HW_MUL : integer;
  attribute C_USE_HW_MUL of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_USE_ICACHE : integer;
  attribute C_USE_ICACHE of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_USE_INTERRUPT : integer;
  attribute C_USE_INTERRUPT of microblaze_mcs_1_MicroBlaze : entity is 2;
  attribute C_USE_MMU : integer;
  attribute C_USE_MMU of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_USE_MSR_INSTR : integer;
  attribute C_USE_MSR_INSTR of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_USE_NON_SECURE : integer;
  attribute C_USE_NON_SECURE of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_USE_PCMP_INSTR : integer;
  attribute C_USE_PCMP_INSTR of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_USE_REORDER_INSTR : integer;
  attribute C_USE_REORDER_INSTR of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute C_USE_STACK_PROTECTION : integer;
  attribute C_USE_STACK_PROTECTION of microblaze_mcs_1_MicroBlaze : entity is 0;
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of microblaze_mcs_1_MicroBlaze : entity is "yes";
end microblaze_mcs_1_MicroBlaze;

architecture STRUCTURE of microblaze_mcs_1_MicroBlaze is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^byte_enable\ : STD_LOGIC_VECTOR ( 0 to 3 );
  signal \^d_as\ : STD_LOGIC;
  signal \^data_addr\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^data_write\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^ifetch\ : STD_LOGIC;
  signal \^i_as\ : STD_LOGIC;
  signal \^instr_addr\ : STD_LOGIC_VECTOR ( 17 to 29 );
  signal \^lockstep_out\ : STD_LOGIC_VECTOR ( 2 to 3227 );
  signal \^read_strobe\ : STD_LOGIC;
  signal \^trace_data_access\ : STD_LOGIC;
  signal \^trace_data_address\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^trace_data_byte_enable\ : STD_LOGIC_VECTOR ( 0 to 3 );
  signal \^trace_data_read\ : STD_LOGIC;
  signal \^trace_data_write\ : STD_LOGIC;
  signal \^trace_data_write_value\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^trace_delay_slot\ : STD_LOGIC;
  signal \^trace_exception_kind\ : STD_LOGIC_VECTOR ( 1 to 1 );
  signal \^trace_instruction\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^trace_jump_taken\ : STD_LOGIC;
  signal \^trace_msr_reg\ : STD_LOGIC_VECTOR ( 11 to 13 );
  signal \^trace_new_reg_value\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^trace_of_piperun\ : STD_LOGIC;
  signal \^trace_pc\ : STD_LOGIC_VECTOR ( 17 to 29 );
  signal \^trace_reg_addr\ : STD_LOGIC_VECTOR ( 0 to 4 );
  signal \^trace_reg_write\ : STD_LOGIC;
  signal \^trace_valid_instr\ : STD_LOGIC;
  signal \^write_strobe\ : STD_LOGIC;
  attribute mark_debug : string;
  attribute mark_debug of Trace_DCache_Hit : signal is "false";
  attribute mark_debug of Trace_DCache_Rdy : signal is "false";
  attribute mark_debug of Trace_DCache_Read : signal is "false";
  attribute mark_debug of Trace_DCache_Req : signal is "false";
  attribute mark_debug of Trace_Data_Access : signal is "false";
  attribute mark_debug of Trace_Data_Read : signal is "false";
  attribute mark_debug of Trace_Data_Write : signal is "false";
  attribute mark_debug of Trace_Delay_Slot : signal is "false";
  attribute mark_debug of Trace_EX_PipeRun : signal is "false";
  attribute mark_debug of Trace_Exception_Taken : signal is "false";
  attribute mark_debug of Trace_ICache_Hit : signal is "false";
  attribute mark_debug of Trace_ICache_Rdy : signal is "false";
  attribute mark_debug of Trace_ICache_Req : signal is "false";
  attribute mark_debug of Trace_Jump_Hit : signal is "false";
  attribute mark_debug of Trace_Jump_Taken : signal is "false";
  attribute mark_debug of Trace_MB_Halted : signal is "false";
  attribute mark_debug of Trace_MEM_PipeRun : signal is "false";
  attribute mark_debug of Trace_OF_PipeRun : signal is "false";
  attribute mark_debug of Trace_Reg_Write : signal is "false";
  attribute mark_debug of Trace_Valid_Instr : signal is "false";
  attribute mark_debug of Trace_Data_Address : signal is "false";
  attribute mark_debug of Trace_Data_Byte_Enable : signal is "false";
  attribute mark_debug of Trace_Data_Write_Value : signal is "false";
  attribute mark_debug of Trace_Exception_Kind : signal is "false";
  attribute mark_debug of Trace_Instruction : signal is "false";
  attribute mark_debug of Trace_MSR_Reg : signal is "false";
  attribute mark_debug of Trace_New_Reg_Value : signal is "false";
  attribute mark_debug of Trace_PC : signal is "false";
  attribute mark_debug of Trace_PID_Reg : signal is "false";
  attribute mark_debug of Trace_Reg_Addr : signal is "false";
begin
  Byte_Enable(0 to 3) <= \^byte_enable\(0 to 3);
  D_AS <= \^d_as\;
  Data_Addr(0 to 31) <= \^data_addr\(0 to 31);
  Data_Write(0 to 31) <= \^data_write\(0 to 31);
  Dbg_ARREADY <= \<const0>\;
  Dbg_AWREADY <= \<const0>\;
  Dbg_BRESP(1) <= \<const0>\;
  Dbg_BRESP(0) <= \<const0>\;
  Dbg_BVALID <= \<const0>\;
  Dbg_Continue <= \<const0>\;
  Dbg_Intr <= \<const0>\;
  Dbg_RDATA(31) <= \<const0>\;
  Dbg_RDATA(30) <= \<const0>\;
  Dbg_RDATA(29) <= \<const0>\;
  Dbg_RDATA(28) <= \<const0>\;
  Dbg_RDATA(27) <= \<const0>\;
  Dbg_RDATA(26) <= \<const0>\;
  Dbg_RDATA(25) <= \<const0>\;
  Dbg_RDATA(24) <= \<const0>\;
  Dbg_RDATA(23) <= \<const0>\;
  Dbg_RDATA(22) <= \<const0>\;
  Dbg_RDATA(21) <= \<const0>\;
  Dbg_RDATA(20) <= \<const0>\;
  Dbg_RDATA(19) <= \<const0>\;
  Dbg_RDATA(18) <= \<const0>\;
  Dbg_RDATA(17) <= \<const0>\;
  Dbg_RDATA(16) <= \<const0>\;
  Dbg_RDATA(15) <= \<const0>\;
  Dbg_RDATA(14) <= \<const0>\;
  Dbg_RDATA(13) <= \<const0>\;
  Dbg_RDATA(12) <= \<const0>\;
  Dbg_RDATA(11) <= \<const0>\;
  Dbg_RDATA(10) <= \<const0>\;
  Dbg_RDATA(9) <= \<const0>\;
  Dbg_RDATA(8) <= \<const0>\;
  Dbg_RDATA(7) <= \<const0>\;
  Dbg_RDATA(6) <= \<const0>\;
  Dbg_RDATA(5) <= \<const0>\;
  Dbg_RDATA(4) <= \<const0>\;
  Dbg_RDATA(3) <= \<const0>\;
  Dbg_RDATA(2) <= \<const0>\;
  Dbg_RDATA(1) <= \<const0>\;
  Dbg_RDATA(0) <= \<const0>\;
  Dbg_RRESP(1) <= \<const0>\;
  Dbg_RRESP(0) <= \<const0>\;
  Dbg_RVALID <= \<const0>\;
  Dbg_TDO <= \<const0>\;
  Dbg_Trace_Data(0) <= \<const0>\;
  Dbg_Trace_Data(1) <= \<const0>\;
  Dbg_Trace_Data(2) <= \<const0>\;
  Dbg_Trace_Data(3) <= \<const0>\;
  Dbg_Trace_Data(4) <= \<const0>\;
  Dbg_Trace_Data(5) <= \<const0>\;
  Dbg_Trace_Data(6) <= \<const0>\;
  Dbg_Trace_Data(7) <= \<const0>\;
  Dbg_Trace_Data(8) <= \<const0>\;
  Dbg_Trace_Data(9) <= \<const0>\;
  Dbg_Trace_Data(10) <= \<const0>\;
  Dbg_Trace_Data(11) <= \<const0>\;
  Dbg_Trace_Data(12) <= \<const0>\;
  Dbg_Trace_Data(13) <= \<const0>\;
  Dbg_Trace_Data(14) <= \<const0>\;
  Dbg_Trace_Data(15) <= \<const0>\;
  Dbg_Trace_Data(16) <= \<const0>\;
  Dbg_Trace_Data(17) <= \<const0>\;
  Dbg_Trace_Data(18) <= \<const0>\;
  Dbg_Trace_Data(19) <= \<const0>\;
  Dbg_Trace_Data(20) <= \<const0>\;
  Dbg_Trace_Data(21) <= \<const0>\;
  Dbg_Trace_Data(22) <= \<const0>\;
  Dbg_Trace_Data(23) <= \<const0>\;
  Dbg_Trace_Data(24) <= \<const0>\;
  Dbg_Trace_Data(25) <= \<const0>\;
  Dbg_Trace_Data(26) <= \<const0>\;
  Dbg_Trace_Data(27) <= \<const0>\;
  Dbg_Trace_Data(28) <= \<const0>\;
  Dbg_Trace_Data(29) <= \<const0>\;
  Dbg_Trace_Data(30) <= \<const0>\;
  Dbg_Trace_Data(31) <= \<const0>\;
  Dbg_Trace_Data(32) <= \<const0>\;
  Dbg_Trace_Data(33) <= \<const0>\;
  Dbg_Trace_Data(34) <= \<const0>\;
  Dbg_Trace_Data(35) <= \<const0>\;
  Dbg_Trace_Valid <= \<const0>\;
  Dbg_Trig_Ack_Out(0) <= \<const0>\;
  Dbg_Trig_Ack_Out(1) <= \<const0>\;
  Dbg_Trig_Ack_Out(2) <= \<const0>\;
  Dbg_Trig_Ack_Out(3) <= \<const0>\;
  Dbg_Trig_Ack_Out(4) <= \<const0>\;
  Dbg_Trig_Ack_Out(5) <= \<const0>\;
  Dbg_Trig_Ack_Out(6) <= \<const0>\;
  Dbg_Trig_Ack_Out(7) <= \<const0>\;
  Dbg_Trig_In(0) <= \<const0>\;
  Dbg_Trig_In(1) <= \<const0>\;
  Dbg_Trig_In(2) <= \<const0>\;
  Dbg_Trig_In(3) <= \<const0>\;
  Dbg_Trig_In(4) <= \<const0>\;
  Dbg_Trig_In(5) <= \<const0>\;
  Dbg_Trig_In(6) <= \<const0>\;
  Dbg_Trig_In(7) <= \<const0>\;
  Dbg_WREADY <= \<const0>\;
  Dbg_Wakeup <= \<const0>\;
  IFetch <= \^ifetch\;
  I_AS <= \^i_as\;
  Instr_Addr(0) <= \<const0>\;
  Instr_Addr(1) <= \<const0>\;
  Instr_Addr(2) <= \<const0>\;
  Instr_Addr(3) <= \<const0>\;
  Instr_Addr(4) <= \<const0>\;
  Instr_Addr(5) <= \<const0>\;
  Instr_Addr(6) <= \<const0>\;
  Instr_Addr(7) <= \<const0>\;
  Instr_Addr(8) <= \<const0>\;
  Instr_Addr(9) <= \<const0>\;
  Instr_Addr(10) <= \<const0>\;
  Instr_Addr(11) <= \<const0>\;
  Instr_Addr(12) <= \<const0>\;
  Instr_Addr(13) <= \<const0>\;
  Instr_Addr(14) <= \<const0>\;
  Instr_Addr(15) <= \<const0>\;
  Instr_Addr(16) <= \<const0>\;
  Instr_Addr(17 to 29) <= \^instr_addr\(17 to 29);
  Instr_Addr(30) <= \<const0>\;
  Instr_Addr(31) <= \<const0>\;
  LOCKSTEP_Master_Out(0) <= \<const0>\;
  LOCKSTEP_Master_Out(1) <= \<const0>\;
  LOCKSTEP_Master_Out(2) <= \<const0>\;
  LOCKSTEP_Master_Out(3) <= \<const0>\;
  LOCKSTEP_Master_Out(4) <= \<const0>\;
  LOCKSTEP_Master_Out(5) <= \<const0>\;
  LOCKSTEP_Master_Out(6) <= \<const0>\;
  LOCKSTEP_Master_Out(7) <= \<const0>\;
  LOCKSTEP_Master_Out(8) <= \<const0>\;
  LOCKSTEP_Master_Out(9) <= \<const0>\;
  LOCKSTEP_Master_Out(10) <= \<const0>\;
  LOCKSTEP_Master_Out(11) <= \<const0>\;
  LOCKSTEP_Master_Out(12) <= \<const0>\;
  LOCKSTEP_Master_Out(13) <= \<const0>\;
  LOCKSTEP_Master_Out(14) <= \<const0>\;
  LOCKSTEP_Master_Out(15) <= \<const0>\;
  LOCKSTEP_Master_Out(16) <= \<const0>\;
  LOCKSTEP_Master_Out(17) <= \<const0>\;
  LOCKSTEP_Master_Out(18) <= \<const0>\;
  LOCKSTEP_Master_Out(19) <= \<const0>\;
  LOCKSTEP_Master_Out(20) <= \<const0>\;
  LOCKSTEP_Master_Out(21) <= \<const0>\;
  LOCKSTEP_Master_Out(22) <= \<const0>\;
  LOCKSTEP_Master_Out(23) <= \<const0>\;
  LOCKSTEP_Master_Out(24) <= \<const0>\;
  LOCKSTEP_Master_Out(25) <= \<const0>\;
  LOCKSTEP_Master_Out(26) <= \<const0>\;
  LOCKSTEP_Master_Out(27) <= \<const0>\;
  LOCKSTEP_Master_Out(28) <= \<const0>\;
  LOCKSTEP_Master_Out(29) <= \<const0>\;
  LOCKSTEP_Master_Out(30) <= \<const0>\;
  LOCKSTEP_Master_Out(31) <= \<const0>\;
  LOCKSTEP_Master_Out(32) <= \<const0>\;
  LOCKSTEP_Master_Out(33) <= \<const0>\;
  LOCKSTEP_Master_Out(34) <= \<const0>\;
  LOCKSTEP_Master_Out(35) <= \<const0>\;
  LOCKSTEP_Master_Out(36) <= \<const0>\;
  LOCKSTEP_Master_Out(37) <= \<const0>\;
  LOCKSTEP_Master_Out(38) <= \<const0>\;
  LOCKSTEP_Master_Out(39) <= \<const0>\;
  LOCKSTEP_Master_Out(40) <= \<const0>\;
  LOCKSTEP_Master_Out(41) <= \<const0>\;
  LOCKSTEP_Master_Out(42) <= \<const0>\;
  LOCKSTEP_Master_Out(43) <= \<const0>\;
  LOCKSTEP_Master_Out(44) <= \<const0>\;
  LOCKSTEP_Master_Out(45) <= \<const0>\;
  LOCKSTEP_Master_Out(46) <= \<const0>\;
  LOCKSTEP_Master_Out(47) <= \<const0>\;
  LOCKSTEP_Master_Out(48) <= \<const0>\;
  LOCKSTEP_Master_Out(49) <= \<const0>\;
  LOCKSTEP_Master_Out(50) <= \<const0>\;
  LOCKSTEP_Master_Out(51) <= \<const0>\;
  LOCKSTEP_Master_Out(52) <= \<const0>\;
  LOCKSTEP_Master_Out(53) <= \<const0>\;
  LOCKSTEP_Master_Out(54) <= \<const0>\;
  LOCKSTEP_Master_Out(55) <= \<const0>\;
  LOCKSTEP_Master_Out(56) <= \<const0>\;
  LOCKSTEP_Master_Out(57) <= \<const0>\;
  LOCKSTEP_Master_Out(58) <= \<const0>\;
  LOCKSTEP_Master_Out(59) <= \<const0>\;
  LOCKSTEP_Master_Out(60) <= \<const0>\;
  LOCKSTEP_Master_Out(61) <= \<const0>\;
  LOCKSTEP_Master_Out(62) <= \<const0>\;
  LOCKSTEP_Master_Out(63) <= \<const0>\;
  LOCKSTEP_Master_Out(64) <= \<const0>\;
  LOCKSTEP_Master_Out(65) <= \<const0>\;
  LOCKSTEP_Master_Out(66) <= \<const0>\;
  LOCKSTEP_Master_Out(67) <= \<const0>\;
  LOCKSTEP_Master_Out(68) <= \<const0>\;
  LOCKSTEP_Master_Out(69) <= \<const0>\;
  LOCKSTEP_Master_Out(70) <= \<const0>\;
  LOCKSTEP_Master_Out(71) <= \<const0>\;
  LOCKSTEP_Master_Out(72) <= \<const0>\;
  LOCKSTEP_Master_Out(73) <= \<const0>\;
  LOCKSTEP_Master_Out(74) <= \<const0>\;
  LOCKSTEP_Master_Out(75) <= \<const0>\;
  LOCKSTEP_Master_Out(76) <= \<const0>\;
  LOCKSTEP_Master_Out(77) <= \<const0>\;
  LOCKSTEP_Master_Out(78) <= \<const0>\;
  LOCKSTEP_Master_Out(79) <= \<const0>\;
  LOCKSTEP_Master_Out(80) <= \<const0>\;
  LOCKSTEP_Master_Out(81) <= \<const0>\;
  LOCKSTEP_Master_Out(82) <= \<const0>\;
  LOCKSTEP_Master_Out(83) <= \<const0>\;
  LOCKSTEP_Master_Out(84) <= \<const0>\;
  LOCKSTEP_Master_Out(85) <= \<const0>\;
  LOCKSTEP_Master_Out(86) <= \<const0>\;
  LOCKSTEP_Master_Out(87) <= \<const0>\;
  LOCKSTEP_Master_Out(88) <= \<const0>\;
  LOCKSTEP_Master_Out(89) <= \<const0>\;
  LOCKSTEP_Master_Out(90) <= \<const0>\;
  LOCKSTEP_Master_Out(91) <= \<const0>\;
  LOCKSTEP_Master_Out(92) <= \<const0>\;
  LOCKSTEP_Master_Out(93) <= \<const0>\;
  LOCKSTEP_Master_Out(94) <= \<const0>\;
  LOCKSTEP_Master_Out(95) <= \<const0>\;
  LOCKSTEP_Master_Out(96) <= \<const0>\;
  LOCKSTEP_Master_Out(97) <= \<const0>\;
  LOCKSTEP_Master_Out(98) <= \<const0>\;
  LOCKSTEP_Master_Out(99) <= \<const0>\;
  LOCKSTEP_Master_Out(100) <= \<const0>\;
  LOCKSTEP_Master_Out(101) <= \<const0>\;
  LOCKSTEP_Master_Out(102) <= \<const0>\;
  LOCKSTEP_Master_Out(103) <= \<const0>\;
  LOCKSTEP_Master_Out(104) <= \<const0>\;
  LOCKSTEP_Master_Out(105) <= \<const0>\;
  LOCKSTEP_Master_Out(106) <= \<const0>\;
  LOCKSTEP_Master_Out(107) <= \<const0>\;
  LOCKSTEP_Master_Out(108) <= \<const0>\;
  LOCKSTEP_Master_Out(109) <= \<const0>\;
  LOCKSTEP_Master_Out(110) <= \<const0>\;
  LOCKSTEP_Master_Out(111) <= \<const0>\;
  LOCKSTEP_Master_Out(112) <= \<const0>\;
  LOCKSTEP_Master_Out(113) <= \<const0>\;
  LOCKSTEP_Master_Out(114) <= \<const0>\;
  LOCKSTEP_Master_Out(115) <= \<const0>\;
  LOCKSTEP_Master_Out(116) <= \<const0>\;
  LOCKSTEP_Master_Out(117) <= \<const0>\;
  LOCKSTEP_Master_Out(118) <= \<const0>\;
  LOCKSTEP_Master_Out(119) <= \<const0>\;
  LOCKSTEP_Master_Out(120) <= \<const0>\;
  LOCKSTEP_Master_Out(121) <= \<const0>\;
  LOCKSTEP_Master_Out(122) <= \<const0>\;
  LOCKSTEP_Master_Out(123) <= \<const0>\;
  LOCKSTEP_Master_Out(124) <= \<const0>\;
  LOCKSTEP_Master_Out(125) <= \<const0>\;
  LOCKSTEP_Master_Out(126) <= \<const0>\;
  LOCKSTEP_Master_Out(127) <= \<const0>\;
  LOCKSTEP_Master_Out(128) <= \<const0>\;
  LOCKSTEP_Master_Out(129) <= \<const0>\;
  LOCKSTEP_Master_Out(130) <= \<const0>\;
  LOCKSTEP_Master_Out(131) <= \<const0>\;
  LOCKSTEP_Master_Out(132) <= \<const0>\;
  LOCKSTEP_Master_Out(133) <= \<const0>\;
  LOCKSTEP_Master_Out(134) <= \<const0>\;
  LOCKSTEP_Master_Out(135) <= \<const0>\;
  LOCKSTEP_Master_Out(136) <= \<const0>\;
  LOCKSTEP_Master_Out(137) <= \<const0>\;
  LOCKSTEP_Master_Out(138) <= \<const0>\;
  LOCKSTEP_Master_Out(139) <= \<const0>\;
  LOCKSTEP_Master_Out(140) <= \<const0>\;
  LOCKSTEP_Master_Out(141) <= \<const0>\;
  LOCKSTEP_Master_Out(142) <= \<const0>\;
  LOCKSTEP_Master_Out(143) <= \<const0>\;
  LOCKSTEP_Master_Out(144) <= \<const0>\;
  LOCKSTEP_Master_Out(145) <= \<const0>\;
  LOCKSTEP_Master_Out(146) <= \<const0>\;
  LOCKSTEP_Master_Out(147) <= \<const0>\;
  LOCKSTEP_Master_Out(148) <= \<const0>\;
  LOCKSTEP_Master_Out(149) <= \<const0>\;
  LOCKSTEP_Master_Out(150) <= \<const0>\;
  LOCKSTEP_Master_Out(151) <= \<const0>\;
  LOCKSTEP_Master_Out(152) <= \<const0>\;
  LOCKSTEP_Master_Out(153) <= \<const0>\;
  LOCKSTEP_Master_Out(154) <= \<const0>\;
  LOCKSTEP_Master_Out(155) <= \<const0>\;
  LOCKSTEP_Master_Out(156) <= \<const0>\;
  LOCKSTEP_Master_Out(157) <= \<const0>\;
  LOCKSTEP_Master_Out(158) <= \<const0>\;
  LOCKSTEP_Master_Out(159) <= \<const0>\;
  LOCKSTEP_Master_Out(160) <= \<const0>\;
  LOCKSTEP_Master_Out(161) <= \<const0>\;
  LOCKSTEP_Master_Out(162) <= \<const0>\;
  LOCKSTEP_Master_Out(163) <= \<const0>\;
  LOCKSTEP_Master_Out(164) <= \<const0>\;
  LOCKSTEP_Master_Out(165) <= \<const0>\;
  LOCKSTEP_Master_Out(166) <= \<const0>\;
  LOCKSTEP_Master_Out(167) <= \<const0>\;
  LOCKSTEP_Master_Out(168) <= \<const0>\;
  LOCKSTEP_Master_Out(169) <= \<const0>\;
  LOCKSTEP_Master_Out(170) <= \<const0>\;
  LOCKSTEP_Master_Out(171) <= \<const0>\;
  LOCKSTEP_Master_Out(172) <= \<const0>\;
  LOCKSTEP_Master_Out(173) <= \<const0>\;
  LOCKSTEP_Master_Out(174) <= \<const0>\;
  LOCKSTEP_Master_Out(175) <= \<const0>\;
  LOCKSTEP_Master_Out(176) <= \<const0>\;
  LOCKSTEP_Master_Out(177) <= \<const0>\;
  LOCKSTEP_Master_Out(178) <= \<const0>\;
  LOCKSTEP_Master_Out(179) <= \<const0>\;
  LOCKSTEP_Master_Out(180) <= \<const0>\;
  LOCKSTEP_Master_Out(181) <= \<const0>\;
  LOCKSTEP_Master_Out(182) <= \<const0>\;
  LOCKSTEP_Master_Out(183) <= \<const0>\;
  LOCKSTEP_Master_Out(184) <= \<const0>\;
  LOCKSTEP_Master_Out(185) <= \<const0>\;
  LOCKSTEP_Master_Out(186) <= \<const0>\;
  LOCKSTEP_Master_Out(187) <= \<const0>\;
  LOCKSTEP_Master_Out(188) <= \<const0>\;
  LOCKSTEP_Master_Out(189) <= \<const0>\;
  LOCKSTEP_Master_Out(190) <= \<const0>\;
  LOCKSTEP_Master_Out(191) <= \<const0>\;
  LOCKSTEP_Master_Out(192) <= \<const0>\;
  LOCKSTEP_Master_Out(193) <= \<const0>\;
  LOCKSTEP_Master_Out(194) <= \<const0>\;
  LOCKSTEP_Master_Out(195) <= \<const0>\;
  LOCKSTEP_Master_Out(196) <= \<const0>\;
  LOCKSTEP_Master_Out(197) <= \<const0>\;
  LOCKSTEP_Master_Out(198) <= \<const0>\;
  LOCKSTEP_Master_Out(199) <= \<const0>\;
  LOCKSTEP_Master_Out(200) <= \<const0>\;
  LOCKSTEP_Master_Out(201) <= \<const0>\;
  LOCKSTEP_Master_Out(202) <= \<const0>\;
  LOCKSTEP_Master_Out(203) <= \<const0>\;
  LOCKSTEP_Master_Out(204) <= \<const0>\;
  LOCKSTEP_Master_Out(205) <= \<const0>\;
  LOCKSTEP_Master_Out(206) <= \<const0>\;
  LOCKSTEP_Master_Out(207) <= \<const0>\;
  LOCKSTEP_Master_Out(208) <= \<const0>\;
  LOCKSTEP_Master_Out(209) <= \<const0>\;
  LOCKSTEP_Master_Out(210) <= \<const0>\;
  LOCKSTEP_Master_Out(211) <= \<const0>\;
  LOCKSTEP_Master_Out(212) <= \<const0>\;
  LOCKSTEP_Master_Out(213) <= \<const0>\;
  LOCKSTEP_Master_Out(214) <= \<const0>\;
  LOCKSTEP_Master_Out(215) <= \<const0>\;
  LOCKSTEP_Master_Out(216) <= \<const0>\;
  LOCKSTEP_Master_Out(217) <= \<const0>\;
  LOCKSTEP_Master_Out(218) <= \<const0>\;
  LOCKSTEP_Master_Out(219) <= \<const0>\;
  LOCKSTEP_Master_Out(220) <= \<const0>\;
  LOCKSTEP_Master_Out(221) <= \<const0>\;
  LOCKSTEP_Master_Out(222) <= \<const0>\;
  LOCKSTEP_Master_Out(223) <= \<const0>\;
  LOCKSTEP_Master_Out(224) <= \<const0>\;
  LOCKSTEP_Master_Out(225) <= \<const0>\;
  LOCKSTEP_Master_Out(226) <= \<const0>\;
  LOCKSTEP_Master_Out(227) <= \<const0>\;
  LOCKSTEP_Master_Out(228) <= \<const0>\;
  LOCKSTEP_Master_Out(229) <= \<const0>\;
  LOCKSTEP_Master_Out(230) <= \<const0>\;
  LOCKSTEP_Master_Out(231) <= \<const0>\;
  LOCKSTEP_Master_Out(232) <= \<const0>\;
  LOCKSTEP_Master_Out(233) <= \<const0>\;
  LOCKSTEP_Master_Out(234) <= \<const0>\;
  LOCKSTEP_Master_Out(235) <= \<const0>\;
  LOCKSTEP_Master_Out(236) <= \<const0>\;
  LOCKSTEP_Master_Out(237) <= \<const0>\;
  LOCKSTEP_Master_Out(238) <= \<const0>\;
  LOCKSTEP_Master_Out(239) <= \<const0>\;
  LOCKSTEP_Master_Out(240) <= \<const0>\;
  LOCKSTEP_Master_Out(241) <= \<const0>\;
  LOCKSTEP_Master_Out(242) <= \<const0>\;
  LOCKSTEP_Master_Out(243) <= \<const0>\;
  LOCKSTEP_Master_Out(244) <= \<const0>\;
  LOCKSTEP_Master_Out(245) <= \<const0>\;
  LOCKSTEP_Master_Out(246) <= \<const0>\;
  LOCKSTEP_Master_Out(247) <= \<const0>\;
  LOCKSTEP_Master_Out(248) <= \<const0>\;
  LOCKSTEP_Master_Out(249) <= \<const0>\;
  LOCKSTEP_Master_Out(250) <= \<const0>\;
  LOCKSTEP_Master_Out(251) <= \<const0>\;
  LOCKSTEP_Master_Out(252) <= \<const0>\;
  LOCKSTEP_Master_Out(253) <= \<const0>\;
  LOCKSTEP_Master_Out(254) <= \<const0>\;
  LOCKSTEP_Master_Out(255) <= \<const0>\;
  LOCKSTEP_Master_Out(256) <= \<const0>\;
  LOCKSTEP_Master_Out(257) <= \<const0>\;
  LOCKSTEP_Master_Out(258) <= \<const0>\;
  LOCKSTEP_Master_Out(259) <= \<const0>\;
  LOCKSTEP_Master_Out(260) <= \<const0>\;
  LOCKSTEP_Master_Out(261) <= \<const0>\;
  LOCKSTEP_Master_Out(262) <= \<const0>\;
  LOCKSTEP_Master_Out(263) <= \<const0>\;
  LOCKSTEP_Master_Out(264) <= \<const0>\;
  LOCKSTEP_Master_Out(265) <= \<const0>\;
  LOCKSTEP_Master_Out(266) <= \<const0>\;
  LOCKSTEP_Master_Out(267) <= \<const0>\;
  LOCKSTEP_Master_Out(268) <= \<const0>\;
  LOCKSTEP_Master_Out(269) <= \<const0>\;
  LOCKSTEP_Master_Out(270) <= \<const0>\;
  LOCKSTEP_Master_Out(271) <= \<const0>\;
  LOCKSTEP_Master_Out(272) <= \<const0>\;
  LOCKSTEP_Master_Out(273) <= \<const0>\;
  LOCKSTEP_Master_Out(274) <= \<const0>\;
  LOCKSTEP_Master_Out(275) <= \<const0>\;
  LOCKSTEP_Master_Out(276) <= \<const0>\;
  LOCKSTEP_Master_Out(277) <= \<const0>\;
  LOCKSTEP_Master_Out(278) <= \<const0>\;
  LOCKSTEP_Master_Out(279) <= \<const0>\;
  LOCKSTEP_Master_Out(280) <= \<const0>\;
  LOCKSTEP_Master_Out(281) <= \<const0>\;
  LOCKSTEP_Master_Out(282) <= \<const0>\;
  LOCKSTEP_Master_Out(283) <= \<const0>\;
  LOCKSTEP_Master_Out(284) <= \<const0>\;
  LOCKSTEP_Master_Out(285) <= \<const0>\;
  LOCKSTEP_Master_Out(286) <= \<const0>\;
  LOCKSTEP_Master_Out(287) <= \<const0>\;
  LOCKSTEP_Master_Out(288) <= \<const0>\;
  LOCKSTEP_Master_Out(289) <= \<const0>\;
  LOCKSTEP_Master_Out(290) <= \<const0>\;
  LOCKSTEP_Master_Out(291) <= \<const0>\;
  LOCKSTEP_Master_Out(292) <= \<const0>\;
  LOCKSTEP_Master_Out(293) <= \<const0>\;
  LOCKSTEP_Master_Out(294) <= \<const0>\;
  LOCKSTEP_Master_Out(295) <= \<const0>\;
  LOCKSTEP_Master_Out(296) <= \<const0>\;
  LOCKSTEP_Master_Out(297) <= \<const0>\;
  LOCKSTEP_Master_Out(298) <= \<const0>\;
  LOCKSTEP_Master_Out(299) <= \<const0>\;
  LOCKSTEP_Master_Out(300) <= \<const0>\;
  LOCKSTEP_Master_Out(301) <= \<const0>\;
  LOCKSTEP_Master_Out(302) <= \<const0>\;
  LOCKSTEP_Master_Out(303) <= \<const0>\;
  LOCKSTEP_Master_Out(304) <= \<const0>\;
  LOCKSTEP_Master_Out(305) <= \<const0>\;
  LOCKSTEP_Master_Out(306) <= \<const0>\;
  LOCKSTEP_Master_Out(307) <= \<const0>\;
  LOCKSTEP_Master_Out(308) <= \<const0>\;
  LOCKSTEP_Master_Out(309) <= \<const0>\;
  LOCKSTEP_Master_Out(310) <= \<const0>\;
  LOCKSTEP_Master_Out(311) <= \<const0>\;
  LOCKSTEP_Master_Out(312) <= \<const0>\;
  LOCKSTEP_Master_Out(313) <= \<const0>\;
  LOCKSTEP_Master_Out(314) <= \<const0>\;
  LOCKSTEP_Master_Out(315) <= \<const0>\;
  LOCKSTEP_Master_Out(316) <= \<const0>\;
  LOCKSTEP_Master_Out(317) <= \<const0>\;
  LOCKSTEP_Master_Out(318) <= \<const0>\;
  LOCKSTEP_Master_Out(319) <= \<const0>\;
  LOCKSTEP_Master_Out(320) <= \<const0>\;
  LOCKSTEP_Master_Out(321) <= \<const0>\;
  LOCKSTEP_Master_Out(322) <= \<const0>\;
  LOCKSTEP_Master_Out(323) <= \<const0>\;
  LOCKSTEP_Master_Out(324) <= \<const0>\;
  LOCKSTEP_Master_Out(325) <= \<const0>\;
  LOCKSTEP_Master_Out(326) <= \<const0>\;
  LOCKSTEP_Master_Out(327) <= \<const0>\;
  LOCKSTEP_Master_Out(328) <= \<const0>\;
  LOCKSTEP_Master_Out(329) <= \<const0>\;
  LOCKSTEP_Master_Out(330) <= \<const0>\;
  LOCKSTEP_Master_Out(331) <= \<const0>\;
  LOCKSTEP_Master_Out(332) <= \<const0>\;
  LOCKSTEP_Master_Out(333) <= \<const0>\;
  LOCKSTEP_Master_Out(334) <= \<const0>\;
  LOCKSTEP_Master_Out(335) <= \<const0>\;
  LOCKSTEP_Master_Out(336) <= \<const0>\;
  LOCKSTEP_Master_Out(337) <= \<const0>\;
  LOCKSTEP_Master_Out(338) <= \<const0>\;
  LOCKSTEP_Master_Out(339) <= \<const0>\;
  LOCKSTEP_Master_Out(340) <= \<const0>\;
  LOCKSTEP_Master_Out(341) <= \<const0>\;
  LOCKSTEP_Master_Out(342) <= \<const0>\;
  LOCKSTEP_Master_Out(343) <= \<const0>\;
  LOCKSTEP_Master_Out(344) <= \<const0>\;
  LOCKSTEP_Master_Out(345) <= \<const0>\;
  LOCKSTEP_Master_Out(346) <= \<const0>\;
  LOCKSTEP_Master_Out(347) <= \<const0>\;
  LOCKSTEP_Master_Out(348) <= \<const0>\;
  LOCKSTEP_Master_Out(349) <= \<const0>\;
  LOCKSTEP_Master_Out(350) <= \<const0>\;
  LOCKSTEP_Master_Out(351) <= \<const0>\;
  LOCKSTEP_Master_Out(352) <= \<const0>\;
  LOCKSTEP_Master_Out(353) <= \<const0>\;
  LOCKSTEP_Master_Out(354) <= \<const0>\;
  LOCKSTEP_Master_Out(355) <= \<const0>\;
  LOCKSTEP_Master_Out(356) <= \<const0>\;
  LOCKSTEP_Master_Out(357) <= \<const0>\;
  LOCKSTEP_Master_Out(358) <= \<const0>\;
  LOCKSTEP_Master_Out(359) <= \<const0>\;
  LOCKSTEP_Master_Out(360) <= \<const0>\;
  LOCKSTEP_Master_Out(361) <= \<const0>\;
  LOCKSTEP_Master_Out(362) <= \<const0>\;
  LOCKSTEP_Master_Out(363) <= \<const0>\;
  LOCKSTEP_Master_Out(364) <= \<const0>\;
  LOCKSTEP_Master_Out(365) <= \<const0>\;
  LOCKSTEP_Master_Out(366) <= \<const0>\;
  LOCKSTEP_Master_Out(367) <= \<const0>\;
  LOCKSTEP_Master_Out(368) <= \<const0>\;
  LOCKSTEP_Master_Out(369) <= \<const0>\;
  LOCKSTEP_Master_Out(370) <= \<const0>\;
  LOCKSTEP_Master_Out(371) <= \<const0>\;
  LOCKSTEP_Master_Out(372) <= \<const0>\;
  LOCKSTEP_Master_Out(373) <= \<const0>\;
  LOCKSTEP_Master_Out(374) <= \<const0>\;
  LOCKSTEP_Master_Out(375) <= \<const0>\;
  LOCKSTEP_Master_Out(376) <= \<const0>\;
  LOCKSTEP_Master_Out(377) <= \<const0>\;
  LOCKSTEP_Master_Out(378) <= \<const0>\;
  LOCKSTEP_Master_Out(379) <= \<const0>\;
  LOCKSTEP_Master_Out(380) <= \<const0>\;
  LOCKSTEP_Master_Out(381) <= \<const0>\;
  LOCKSTEP_Master_Out(382) <= \<const0>\;
  LOCKSTEP_Master_Out(383) <= \<const0>\;
  LOCKSTEP_Master_Out(384) <= \<const0>\;
  LOCKSTEP_Master_Out(385) <= \<const0>\;
  LOCKSTEP_Master_Out(386) <= \<const0>\;
  LOCKSTEP_Master_Out(387) <= \<const0>\;
  LOCKSTEP_Master_Out(388) <= \<const0>\;
  LOCKSTEP_Master_Out(389) <= \<const0>\;
  LOCKSTEP_Master_Out(390) <= \<const0>\;
  LOCKSTEP_Master_Out(391) <= \<const0>\;
  LOCKSTEP_Master_Out(392) <= \<const0>\;
  LOCKSTEP_Master_Out(393) <= \<const0>\;
  LOCKSTEP_Master_Out(394) <= \<const0>\;
  LOCKSTEP_Master_Out(395) <= \<const0>\;
  LOCKSTEP_Master_Out(396) <= \<const0>\;
  LOCKSTEP_Master_Out(397) <= \<const0>\;
  LOCKSTEP_Master_Out(398) <= \<const0>\;
  LOCKSTEP_Master_Out(399) <= \<const0>\;
  LOCKSTEP_Master_Out(400) <= \<const0>\;
  LOCKSTEP_Master_Out(401) <= \<const0>\;
  LOCKSTEP_Master_Out(402) <= \<const0>\;
  LOCKSTEP_Master_Out(403) <= \<const0>\;
  LOCKSTEP_Master_Out(404) <= \<const0>\;
  LOCKSTEP_Master_Out(405) <= \<const0>\;
  LOCKSTEP_Master_Out(406) <= \<const0>\;
  LOCKSTEP_Master_Out(407) <= \<const0>\;
  LOCKSTEP_Master_Out(408) <= \<const0>\;
  LOCKSTEP_Master_Out(409) <= \<const0>\;
  LOCKSTEP_Master_Out(410) <= \<const0>\;
  LOCKSTEP_Master_Out(411) <= \<const0>\;
  LOCKSTEP_Master_Out(412) <= \<const0>\;
  LOCKSTEP_Master_Out(413) <= \<const0>\;
  LOCKSTEP_Master_Out(414) <= \<const0>\;
  LOCKSTEP_Master_Out(415) <= \<const0>\;
  LOCKSTEP_Master_Out(416) <= \<const0>\;
  LOCKSTEP_Master_Out(417) <= \<const0>\;
  LOCKSTEP_Master_Out(418) <= \<const0>\;
  LOCKSTEP_Master_Out(419) <= \<const0>\;
  LOCKSTEP_Master_Out(420) <= \<const0>\;
  LOCKSTEP_Master_Out(421) <= \<const0>\;
  LOCKSTEP_Master_Out(422) <= \<const0>\;
  LOCKSTEP_Master_Out(423) <= \<const0>\;
  LOCKSTEP_Master_Out(424) <= \<const0>\;
  LOCKSTEP_Master_Out(425) <= \<const0>\;
  LOCKSTEP_Master_Out(426) <= \<const0>\;
  LOCKSTEP_Master_Out(427) <= \<const0>\;
  LOCKSTEP_Master_Out(428) <= \<const0>\;
  LOCKSTEP_Master_Out(429) <= \<const0>\;
  LOCKSTEP_Master_Out(430) <= \<const0>\;
  LOCKSTEP_Master_Out(431) <= \<const0>\;
  LOCKSTEP_Master_Out(432) <= \<const0>\;
  LOCKSTEP_Master_Out(433) <= \<const0>\;
  LOCKSTEP_Master_Out(434) <= \<const0>\;
  LOCKSTEP_Master_Out(435) <= \<const0>\;
  LOCKSTEP_Master_Out(436) <= \<const0>\;
  LOCKSTEP_Master_Out(437) <= \<const0>\;
  LOCKSTEP_Master_Out(438) <= \<const0>\;
  LOCKSTEP_Master_Out(439) <= \<const0>\;
  LOCKSTEP_Master_Out(440) <= \<const0>\;
  LOCKSTEP_Master_Out(441) <= \<const0>\;
  LOCKSTEP_Master_Out(442) <= \<const0>\;
  LOCKSTEP_Master_Out(443) <= \<const0>\;
  LOCKSTEP_Master_Out(444) <= \<const0>\;
  LOCKSTEP_Master_Out(445) <= \<const0>\;
  LOCKSTEP_Master_Out(446) <= \<const0>\;
  LOCKSTEP_Master_Out(447) <= \<const0>\;
  LOCKSTEP_Master_Out(448) <= \<const0>\;
  LOCKSTEP_Master_Out(449) <= \<const0>\;
  LOCKSTEP_Master_Out(450) <= \<const0>\;
  LOCKSTEP_Master_Out(451) <= \<const0>\;
  LOCKSTEP_Master_Out(452) <= \<const0>\;
  LOCKSTEP_Master_Out(453) <= \<const0>\;
  LOCKSTEP_Master_Out(454) <= \<const0>\;
  LOCKSTEP_Master_Out(455) <= \<const0>\;
  LOCKSTEP_Master_Out(456) <= \<const0>\;
  LOCKSTEP_Master_Out(457) <= \<const0>\;
  LOCKSTEP_Master_Out(458) <= \<const0>\;
  LOCKSTEP_Master_Out(459) <= \<const0>\;
  LOCKSTEP_Master_Out(460) <= \<const0>\;
  LOCKSTEP_Master_Out(461) <= \<const0>\;
  LOCKSTEP_Master_Out(462) <= \<const0>\;
  LOCKSTEP_Master_Out(463) <= \<const0>\;
  LOCKSTEP_Master_Out(464) <= \<const0>\;
  LOCKSTEP_Master_Out(465) <= \<const0>\;
  LOCKSTEP_Master_Out(466) <= \<const0>\;
  LOCKSTEP_Master_Out(467) <= \<const0>\;
  LOCKSTEP_Master_Out(468) <= \<const0>\;
  LOCKSTEP_Master_Out(469) <= \<const0>\;
  LOCKSTEP_Master_Out(470) <= \<const0>\;
  LOCKSTEP_Master_Out(471) <= \<const0>\;
  LOCKSTEP_Master_Out(472) <= \<const0>\;
  LOCKSTEP_Master_Out(473) <= \<const0>\;
  LOCKSTEP_Master_Out(474) <= \<const0>\;
  LOCKSTEP_Master_Out(475) <= \<const0>\;
  LOCKSTEP_Master_Out(476) <= \<const0>\;
  LOCKSTEP_Master_Out(477) <= \<const0>\;
  LOCKSTEP_Master_Out(478) <= \<const0>\;
  LOCKSTEP_Master_Out(479) <= \<const0>\;
  LOCKSTEP_Master_Out(480) <= \<const0>\;
  LOCKSTEP_Master_Out(481) <= \<const0>\;
  LOCKSTEP_Master_Out(482) <= \<const0>\;
  LOCKSTEP_Master_Out(483) <= \<const0>\;
  LOCKSTEP_Master_Out(484) <= \<const0>\;
  LOCKSTEP_Master_Out(485) <= \<const0>\;
  LOCKSTEP_Master_Out(486) <= \<const0>\;
  LOCKSTEP_Master_Out(487) <= \<const0>\;
  LOCKSTEP_Master_Out(488) <= \<const0>\;
  LOCKSTEP_Master_Out(489) <= \<const0>\;
  LOCKSTEP_Master_Out(490) <= \<const0>\;
  LOCKSTEP_Master_Out(491) <= \<const0>\;
  LOCKSTEP_Master_Out(492) <= \<const0>\;
  LOCKSTEP_Master_Out(493) <= \<const0>\;
  LOCKSTEP_Master_Out(494) <= \<const0>\;
  LOCKSTEP_Master_Out(495) <= \<const0>\;
  LOCKSTEP_Master_Out(496) <= \<const0>\;
  LOCKSTEP_Master_Out(497) <= \<const0>\;
  LOCKSTEP_Master_Out(498) <= \<const0>\;
  LOCKSTEP_Master_Out(499) <= \<const0>\;
  LOCKSTEP_Master_Out(500) <= \<const0>\;
  LOCKSTEP_Master_Out(501) <= \<const0>\;
  LOCKSTEP_Master_Out(502) <= \<const0>\;
  LOCKSTEP_Master_Out(503) <= \<const0>\;
  LOCKSTEP_Master_Out(504) <= \<const0>\;
  LOCKSTEP_Master_Out(505) <= \<const0>\;
  LOCKSTEP_Master_Out(506) <= \<const0>\;
  LOCKSTEP_Master_Out(507) <= \<const0>\;
  LOCKSTEP_Master_Out(508) <= \<const0>\;
  LOCKSTEP_Master_Out(509) <= \<const0>\;
  LOCKSTEP_Master_Out(510) <= \<const0>\;
  LOCKSTEP_Master_Out(511) <= \<const0>\;
  LOCKSTEP_Master_Out(512) <= \<const0>\;
  LOCKSTEP_Master_Out(513) <= \<const0>\;
  LOCKSTEP_Master_Out(514) <= \<const0>\;
  LOCKSTEP_Master_Out(515) <= \<const0>\;
  LOCKSTEP_Master_Out(516) <= \<const0>\;
  LOCKSTEP_Master_Out(517) <= \<const0>\;
  LOCKSTEP_Master_Out(518) <= \<const0>\;
  LOCKSTEP_Master_Out(519) <= \<const0>\;
  LOCKSTEP_Master_Out(520) <= \<const0>\;
  LOCKSTEP_Master_Out(521) <= \<const0>\;
  LOCKSTEP_Master_Out(522) <= \<const0>\;
  LOCKSTEP_Master_Out(523) <= \<const0>\;
  LOCKSTEP_Master_Out(524) <= \<const0>\;
  LOCKSTEP_Master_Out(525) <= \<const0>\;
  LOCKSTEP_Master_Out(526) <= \<const0>\;
  LOCKSTEP_Master_Out(527) <= \<const0>\;
  LOCKSTEP_Master_Out(528) <= \<const0>\;
  LOCKSTEP_Master_Out(529) <= \<const0>\;
  LOCKSTEP_Master_Out(530) <= \<const0>\;
  LOCKSTEP_Master_Out(531) <= \<const0>\;
  LOCKSTEP_Master_Out(532) <= \<const0>\;
  LOCKSTEP_Master_Out(533) <= \<const0>\;
  LOCKSTEP_Master_Out(534) <= \<const0>\;
  LOCKSTEP_Master_Out(535) <= \<const0>\;
  LOCKSTEP_Master_Out(536) <= \<const0>\;
  LOCKSTEP_Master_Out(537) <= \<const0>\;
  LOCKSTEP_Master_Out(538) <= \<const0>\;
  LOCKSTEP_Master_Out(539) <= \<const0>\;
  LOCKSTEP_Master_Out(540) <= \<const0>\;
  LOCKSTEP_Master_Out(541) <= \<const0>\;
  LOCKSTEP_Master_Out(542) <= \<const0>\;
  LOCKSTEP_Master_Out(543) <= \<const0>\;
  LOCKSTEP_Master_Out(544) <= \<const0>\;
  LOCKSTEP_Master_Out(545) <= \<const0>\;
  LOCKSTEP_Master_Out(546) <= \<const0>\;
  LOCKSTEP_Master_Out(547) <= \<const0>\;
  LOCKSTEP_Master_Out(548) <= \<const0>\;
  LOCKSTEP_Master_Out(549) <= \<const0>\;
  LOCKSTEP_Master_Out(550) <= \<const0>\;
  LOCKSTEP_Master_Out(551) <= \<const0>\;
  LOCKSTEP_Master_Out(552) <= \<const0>\;
  LOCKSTEP_Master_Out(553) <= \<const0>\;
  LOCKSTEP_Master_Out(554) <= \<const0>\;
  LOCKSTEP_Master_Out(555) <= \<const0>\;
  LOCKSTEP_Master_Out(556) <= \<const0>\;
  LOCKSTEP_Master_Out(557) <= \<const0>\;
  LOCKSTEP_Master_Out(558) <= \<const0>\;
  LOCKSTEP_Master_Out(559) <= \<const0>\;
  LOCKSTEP_Master_Out(560) <= \<const0>\;
  LOCKSTEP_Master_Out(561) <= \<const0>\;
  LOCKSTEP_Master_Out(562) <= \<const0>\;
  LOCKSTEP_Master_Out(563) <= \<const0>\;
  LOCKSTEP_Master_Out(564) <= \<const0>\;
  LOCKSTEP_Master_Out(565) <= \<const0>\;
  LOCKSTEP_Master_Out(566) <= \<const0>\;
  LOCKSTEP_Master_Out(567) <= \<const0>\;
  LOCKSTEP_Master_Out(568) <= \<const0>\;
  LOCKSTEP_Master_Out(569) <= \<const0>\;
  LOCKSTEP_Master_Out(570) <= \<const0>\;
  LOCKSTEP_Master_Out(571) <= \<const0>\;
  LOCKSTEP_Master_Out(572) <= \<const0>\;
  LOCKSTEP_Master_Out(573) <= \<const0>\;
  LOCKSTEP_Master_Out(574) <= \<const0>\;
  LOCKSTEP_Master_Out(575) <= \<const0>\;
  LOCKSTEP_Master_Out(576) <= \<const0>\;
  LOCKSTEP_Master_Out(577) <= \<const0>\;
  LOCKSTEP_Master_Out(578) <= \<const0>\;
  LOCKSTEP_Master_Out(579) <= \<const0>\;
  LOCKSTEP_Master_Out(580) <= \<const0>\;
  LOCKSTEP_Master_Out(581) <= \<const0>\;
  LOCKSTEP_Master_Out(582) <= \<const0>\;
  LOCKSTEP_Master_Out(583) <= \<const0>\;
  LOCKSTEP_Master_Out(584) <= \<const0>\;
  LOCKSTEP_Master_Out(585) <= \<const0>\;
  LOCKSTEP_Master_Out(586) <= \<const0>\;
  LOCKSTEP_Master_Out(587) <= \<const0>\;
  LOCKSTEP_Master_Out(588) <= \<const0>\;
  LOCKSTEP_Master_Out(589) <= \<const0>\;
  LOCKSTEP_Master_Out(590) <= \<const0>\;
  LOCKSTEP_Master_Out(591) <= \<const0>\;
  LOCKSTEP_Master_Out(592) <= \<const0>\;
  LOCKSTEP_Master_Out(593) <= \<const0>\;
  LOCKSTEP_Master_Out(594) <= \<const0>\;
  LOCKSTEP_Master_Out(595) <= \<const0>\;
  LOCKSTEP_Master_Out(596) <= \<const0>\;
  LOCKSTEP_Master_Out(597) <= \<const0>\;
  LOCKSTEP_Master_Out(598) <= \<const0>\;
  LOCKSTEP_Master_Out(599) <= \<const0>\;
  LOCKSTEP_Master_Out(600) <= \<const0>\;
  LOCKSTEP_Master_Out(601) <= \<const0>\;
  LOCKSTEP_Master_Out(602) <= \<const0>\;
  LOCKSTEP_Master_Out(603) <= \<const0>\;
  LOCKSTEP_Master_Out(604) <= \<const0>\;
  LOCKSTEP_Master_Out(605) <= \<const0>\;
  LOCKSTEP_Master_Out(606) <= \<const0>\;
  LOCKSTEP_Master_Out(607) <= \<const0>\;
  LOCKSTEP_Master_Out(608) <= \<const0>\;
  LOCKSTEP_Master_Out(609) <= \<const0>\;
  LOCKSTEP_Master_Out(610) <= \<const0>\;
  LOCKSTEP_Master_Out(611) <= \<const0>\;
  LOCKSTEP_Master_Out(612) <= \<const0>\;
  LOCKSTEP_Master_Out(613) <= \<const0>\;
  LOCKSTEP_Master_Out(614) <= \<const0>\;
  LOCKSTEP_Master_Out(615) <= \<const0>\;
  LOCKSTEP_Master_Out(616) <= \<const0>\;
  LOCKSTEP_Master_Out(617) <= \<const0>\;
  LOCKSTEP_Master_Out(618) <= \<const0>\;
  LOCKSTEP_Master_Out(619) <= \<const0>\;
  LOCKSTEP_Master_Out(620) <= \<const0>\;
  LOCKSTEP_Master_Out(621) <= \<const0>\;
  LOCKSTEP_Master_Out(622) <= \<const0>\;
  LOCKSTEP_Master_Out(623) <= \<const0>\;
  LOCKSTEP_Master_Out(624) <= \<const0>\;
  LOCKSTEP_Master_Out(625) <= \<const0>\;
  LOCKSTEP_Master_Out(626) <= \<const0>\;
  LOCKSTEP_Master_Out(627) <= \<const0>\;
  LOCKSTEP_Master_Out(628) <= \<const0>\;
  LOCKSTEP_Master_Out(629) <= \<const0>\;
  LOCKSTEP_Master_Out(630) <= \<const0>\;
  LOCKSTEP_Master_Out(631) <= \<const0>\;
  LOCKSTEP_Master_Out(632) <= \<const0>\;
  LOCKSTEP_Master_Out(633) <= \<const0>\;
  LOCKSTEP_Master_Out(634) <= \<const0>\;
  LOCKSTEP_Master_Out(635) <= \<const0>\;
  LOCKSTEP_Master_Out(636) <= \<const0>\;
  LOCKSTEP_Master_Out(637) <= \<const0>\;
  LOCKSTEP_Master_Out(638) <= \<const0>\;
  LOCKSTEP_Master_Out(639) <= \<const0>\;
  LOCKSTEP_Master_Out(640) <= \<const0>\;
  LOCKSTEP_Master_Out(641) <= \<const0>\;
  LOCKSTEP_Master_Out(642) <= \<const0>\;
  LOCKSTEP_Master_Out(643) <= \<const0>\;
  LOCKSTEP_Master_Out(644) <= \<const0>\;
  LOCKSTEP_Master_Out(645) <= \<const0>\;
  LOCKSTEP_Master_Out(646) <= \<const0>\;
  LOCKSTEP_Master_Out(647) <= \<const0>\;
  LOCKSTEP_Master_Out(648) <= \<const0>\;
  LOCKSTEP_Master_Out(649) <= \<const0>\;
  LOCKSTEP_Master_Out(650) <= \<const0>\;
  LOCKSTEP_Master_Out(651) <= \<const0>\;
  LOCKSTEP_Master_Out(652) <= \<const0>\;
  LOCKSTEP_Master_Out(653) <= \<const0>\;
  LOCKSTEP_Master_Out(654) <= \<const0>\;
  LOCKSTEP_Master_Out(655) <= \<const0>\;
  LOCKSTEP_Master_Out(656) <= \<const0>\;
  LOCKSTEP_Master_Out(657) <= \<const0>\;
  LOCKSTEP_Master_Out(658) <= \<const0>\;
  LOCKSTEP_Master_Out(659) <= \<const0>\;
  LOCKSTEP_Master_Out(660) <= \<const0>\;
  LOCKSTEP_Master_Out(661) <= \<const0>\;
  LOCKSTEP_Master_Out(662) <= \<const0>\;
  LOCKSTEP_Master_Out(663) <= \<const0>\;
  LOCKSTEP_Master_Out(664) <= \<const0>\;
  LOCKSTEP_Master_Out(665) <= \<const0>\;
  LOCKSTEP_Master_Out(666) <= \<const0>\;
  LOCKSTEP_Master_Out(667) <= \<const0>\;
  LOCKSTEP_Master_Out(668) <= \<const0>\;
  LOCKSTEP_Master_Out(669) <= \<const0>\;
  LOCKSTEP_Master_Out(670) <= \<const0>\;
  LOCKSTEP_Master_Out(671) <= \<const0>\;
  LOCKSTEP_Master_Out(672) <= \<const0>\;
  LOCKSTEP_Master_Out(673) <= \<const0>\;
  LOCKSTEP_Master_Out(674) <= \<const0>\;
  LOCKSTEP_Master_Out(675) <= \<const0>\;
  LOCKSTEP_Master_Out(676) <= \<const0>\;
  LOCKSTEP_Master_Out(677) <= \<const0>\;
  LOCKSTEP_Master_Out(678) <= \<const0>\;
  LOCKSTEP_Master_Out(679) <= \<const0>\;
  LOCKSTEP_Master_Out(680) <= \<const0>\;
  LOCKSTEP_Master_Out(681) <= \<const0>\;
  LOCKSTEP_Master_Out(682) <= \<const0>\;
  LOCKSTEP_Master_Out(683) <= \<const0>\;
  LOCKSTEP_Master_Out(684) <= \<const0>\;
  LOCKSTEP_Master_Out(685) <= \<const0>\;
  LOCKSTEP_Master_Out(686) <= \<const0>\;
  LOCKSTEP_Master_Out(687) <= \<const0>\;
  LOCKSTEP_Master_Out(688) <= \<const0>\;
  LOCKSTEP_Master_Out(689) <= \<const0>\;
  LOCKSTEP_Master_Out(690) <= \<const0>\;
  LOCKSTEP_Master_Out(691) <= \<const0>\;
  LOCKSTEP_Master_Out(692) <= \<const0>\;
  LOCKSTEP_Master_Out(693) <= \<const0>\;
  LOCKSTEP_Master_Out(694) <= \<const0>\;
  LOCKSTEP_Master_Out(695) <= \<const0>\;
  LOCKSTEP_Master_Out(696) <= \<const0>\;
  LOCKSTEP_Master_Out(697) <= \<const0>\;
  LOCKSTEP_Master_Out(698) <= \<const0>\;
  LOCKSTEP_Master_Out(699) <= \<const0>\;
  LOCKSTEP_Master_Out(700) <= \<const0>\;
  LOCKSTEP_Master_Out(701) <= \<const0>\;
  LOCKSTEP_Master_Out(702) <= \<const0>\;
  LOCKSTEP_Master_Out(703) <= \<const0>\;
  LOCKSTEP_Master_Out(704) <= \<const0>\;
  LOCKSTEP_Master_Out(705) <= \<const0>\;
  LOCKSTEP_Master_Out(706) <= \<const0>\;
  LOCKSTEP_Master_Out(707) <= \<const0>\;
  LOCKSTEP_Master_Out(708) <= \<const0>\;
  LOCKSTEP_Master_Out(709) <= \<const0>\;
  LOCKSTEP_Master_Out(710) <= \<const0>\;
  LOCKSTEP_Master_Out(711) <= \<const0>\;
  LOCKSTEP_Master_Out(712) <= \<const0>\;
  LOCKSTEP_Master_Out(713) <= \<const0>\;
  LOCKSTEP_Master_Out(714) <= \<const0>\;
  LOCKSTEP_Master_Out(715) <= \<const0>\;
  LOCKSTEP_Master_Out(716) <= \<const0>\;
  LOCKSTEP_Master_Out(717) <= \<const0>\;
  LOCKSTEP_Master_Out(718) <= \<const0>\;
  LOCKSTEP_Master_Out(719) <= \<const0>\;
  LOCKSTEP_Master_Out(720) <= \<const0>\;
  LOCKSTEP_Master_Out(721) <= \<const0>\;
  LOCKSTEP_Master_Out(722) <= \<const0>\;
  LOCKSTEP_Master_Out(723) <= \<const0>\;
  LOCKSTEP_Master_Out(724) <= \<const0>\;
  LOCKSTEP_Master_Out(725) <= \<const0>\;
  LOCKSTEP_Master_Out(726) <= \<const0>\;
  LOCKSTEP_Master_Out(727) <= \<const0>\;
  LOCKSTEP_Master_Out(728) <= \<const0>\;
  LOCKSTEP_Master_Out(729) <= \<const0>\;
  LOCKSTEP_Master_Out(730) <= \<const0>\;
  LOCKSTEP_Master_Out(731) <= \<const0>\;
  LOCKSTEP_Master_Out(732) <= \<const0>\;
  LOCKSTEP_Master_Out(733) <= \<const0>\;
  LOCKSTEP_Master_Out(734) <= \<const0>\;
  LOCKSTEP_Master_Out(735) <= \<const0>\;
  LOCKSTEP_Master_Out(736) <= \<const0>\;
  LOCKSTEP_Master_Out(737) <= \<const0>\;
  LOCKSTEP_Master_Out(738) <= \<const0>\;
  LOCKSTEP_Master_Out(739) <= \<const0>\;
  LOCKSTEP_Master_Out(740) <= \<const0>\;
  LOCKSTEP_Master_Out(741) <= \<const0>\;
  LOCKSTEP_Master_Out(742) <= \<const0>\;
  LOCKSTEP_Master_Out(743) <= \<const0>\;
  LOCKSTEP_Master_Out(744) <= \<const0>\;
  LOCKSTEP_Master_Out(745) <= \<const0>\;
  LOCKSTEP_Master_Out(746) <= \<const0>\;
  LOCKSTEP_Master_Out(747) <= \<const0>\;
  LOCKSTEP_Master_Out(748) <= \<const0>\;
  LOCKSTEP_Master_Out(749) <= \<const0>\;
  LOCKSTEP_Master_Out(750) <= \<const0>\;
  LOCKSTEP_Master_Out(751) <= \<const0>\;
  LOCKSTEP_Master_Out(752) <= \<const0>\;
  LOCKSTEP_Master_Out(753) <= \<const0>\;
  LOCKSTEP_Master_Out(754) <= \<const0>\;
  LOCKSTEP_Master_Out(755) <= \<const0>\;
  LOCKSTEP_Master_Out(756) <= \<const0>\;
  LOCKSTEP_Master_Out(757) <= \<const0>\;
  LOCKSTEP_Master_Out(758) <= \<const0>\;
  LOCKSTEP_Master_Out(759) <= \<const0>\;
  LOCKSTEP_Master_Out(760) <= \<const0>\;
  LOCKSTEP_Master_Out(761) <= \<const0>\;
  LOCKSTEP_Master_Out(762) <= \<const0>\;
  LOCKSTEP_Master_Out(763) <= \<const0>\;
  LOCKSTEP_Master_Out(764) <= \<const0>\;
  LOCKSTEP_Master_Out(765) <= \<const0>\;
  LOCKSTEP_Master_Out(766) <= \<const0>\;
  LOCKSTEP_Master_Out(767) <= \<const0>\;
  LOCKSTEP_Master_Out(768) <= \<const0>\;
  LOCKSTEP_Master_Out(769) <= \<const0>\;
  LOCKSTEP_Master_Out(770) <= \<const0>\;
  LOCKSTEP_Master_Out(771) <= \<const0>\;
  LOCKSTEP_Master_Out(772) <= \<const0>\;
  LOCKSTEP_Master_Out(773) <= \<const0>\;
  LOCKSTEP_Master_Out(774) <= \<const0>\;
  LOCKSTEP_Master_Out(775) <= \<const0>\;
  LOCKSTEP_Master_Out(776) <= \<const0>\;
  LOCKSTEP_Master_Out(777) <= \<const0>\;
  LOCKSTEP_Master_Out(778) <= \<const0>\;
  LOCKSTEP_Master_Out(779) <= \<const0>\;
  LOCKSTEP_Master_Out(780) <= \<const0>\;
  LOCKSTEP_Master_Out(781) <= \<const0>\;
  LOCKSTEP_Master_Out(782) <= \<const0>\;
  LOCKSTEP_Master_Out(783) <= \<const0>\;
  LOCKSTEP_Master_Out(784) <= \<const0>\;
  LOCKSTEP_Master_Out(785) <= \<const0>\;
  LOCKSTEP_Master_Out(786) <= \<const0>\;
  LOCKSTEP_Master_Out(787) <= \<const0>\;
  LOCKSTEP_Master_Out(788) <= \<const0>\;
  LOCKSTEP_Master_Out(789) <= \<const0>\;
  LOCKSTEP_Master_Out(790) <= \<const0>\;
  LOCKSTEP_Master_Out(791) <= \<const0>\;
  LOCKSTEP_Master_Out(792) <= \<const0>\;
  LOCKSTEP_Master_Out(793) <= \<const0>\;
  LOCKSTEP_Master_Out(794) <= \<const0>\;
  LOCKSTEP_Master_Out(795) <= \<const0>\;
  LOCKSTEP_Master_Out(796) <= \<const0>\;
  LOCKSTEP_Master_Out(797) <= \<const0>\;
  LOCKSTEP_Master_Out(798) <= \<const0>\;
  LOCKSTEP_Master_Out(799) <= \<const0>\;
  LOCKSTEP_Master_Out(800) <= \<const0>\;
  LOCKSTEP_Master_Out(801) <= \<const0>\;
  LOCKSTEP_Master_Out(802) <= \<const0>\;
  LOCKSTEP_Master_Out(803) <= \<const0>\;
  LOCKSTEP_Master_Out(804) <= \<const0>\;
  LOCKSTEP_Master_Out(805) <= \<const0>\;
  LOCKSTEP_Master_Out(806) <= \<const0>\;
  LOCKSTEP_Master_Out(807) <= \<const0>\;
  LOCKSTEP_Master_Out(808) <= \<const0>\;
  LOCKSTEP_Master_Out(809) <= \<const0>\;
  LOCKSTEP_Master_Out(810) <= \<const0>\;
  LOCKSTEP_Master_Out(811) <= \<const0>\;
  LOCKSTEP_Master_Out(812) <= \<const0>\;
  LOCKSTEP_Master_Out(813) <= \<const0>\;
  LOCKSTEP_Master_Out(814) <= \<const0>\;
  LOCKSTEP_Master_Out(815) <= \<const0>\;
  LOCKSTEP_Master_Out(816) <= \<const0>\;
  LOCKSTEP_Master_Out(817) <= \<const0>\;
  LOCKSTEP_Master_Out(818) <= \<const0>\;
  LOCKSTEP_Master_Out(819) <= \<const0>\;
  LOCKSTEP_Master_Out(820) <= \<const0>\;
  LOCKSTEP_Master_Out(821) <= \<const0>\;
  LOCKSTEP_Master_Out(822) <= \<const0>\;
  LOCKSTEP_Master_Out(823) <= \<const0>\;
  LOCKSTEP_Master_Out(824) <= \<const0>\;
  LOCKSTEP_Master_Out(825) <= \<const0>\;
  LOCKSTEP_Master_Out(826) <= \<const0>\;
  LOCKSTEP_Master_Out(827) <= \<const0>\;
  LOCKSTEP_Master_Out(828) <= \<const0>\;
  LOCKSTEP_Master_Out(829) <= \<const0>\;
  LOCKSTEP_Master_Out(830) <= \<const0>\;
  LOCKSTEP_Master_Out(831) <= \<const0>\;
  LOCKSTEP_Master_Out(832) <= \<const0>\;
  LOCKSTEP_Master_Out(833) <= \<const0>\;
  LOCKSTEP_Master_Out(834) <= \<const0>\;
  LOCKSTEP_Master_Out(835) <= \<const0>\;
  LOCKSTEP_Master_Out(836) <= \<const0>\;
  LOCKSTEP_Master_Out(837) <= \<const0>\;
  LOCKSTEP_Master_Out(838) <= \<const0>\;
  LOCKSTEP_Master_Out(839) <= \<const0>\;
  LOCKSTEP_Master_Out(840) <= \<const0>\;
  LOCKSTEP_Master_Out(841) <= \<const0>\;
  LOCKSTEP_Master_Out(842) <= \<const0>\;
  LOCKSTEP_Master_Out(843) <= \<const0>\;
  LOCKSTEP_Master_Out(844) <= \<const0>\;
  LOCKSTEP_Master_Out(845) <= \<const0>\;
  LOCKSTEP_Master_Out(846) <= \<const0>\;
  LOCKSTEP_Master_Out(847) <= \<const0>\;
  LOCKSTEP_Master_Out(848) <= \<const0>\;
  LOCKSTEP_Master_Out(849) <= \<const0>\;
  LOCKSTEP_Master_Out(850) <= \<const0>\;
  LOCKSTEP_Master_Out(851) <= \<const0>\;
  LOCKSTEP_Master_Out(852) <= \<const0>\;
  LOCKSTEP_Master_Out(853) <= \<const0>\;
  LOCKSTEP_Master_Out(854) <= \<const0>\;
  LOCKSTEP_Master_Out(855) <= \<const0>\;
  LOCKSTEP_Master_Out(856) <= \<const0>\;
  LOCKSTEP_Master_Out(857) <= \<const0>\;
  LOCKSTEP_Master_Out(858) <= \<const0>\;
  LOCKSTEP_Master_Out(859) <= \<const0>\;
  LOCKSTEP_Master_Out(860) <= \<const0>\;
  LOCKSTEP_Master_Out(861) <= \<const0>\;
  LOCKSTEP_Master_Out(862) <= \<const0>\;
  LOCKSTEP_Master_Out(863) <= \<const0>\;
  LOCKSTEP_Master_Out(864) <= \<const0>\;
  LOCKSTEP_Master_Out(865) <= \<const0>\;
  LOCKSTEP_Master_Out(866) <= \<const0>\;
  LOCKSTEP_Master_Out(867) <= \<const0>\;
  LOCKSTEP_Master_Out(868) <= \<const0>\;
  LOCKSTEP_Master_Out(869) <= \<const0>\;
  LOCKSTEP_Master_Out(870) <= \<const0>\;
  LOCKSTEP_Master_Out(871) <= \<const0>\;
  LOCKSTEP_Master_Out(872) <= \<const0>\;
  LOCKSTEP_Master_Out(873) <= \<const0>\;
  LOCKSTEP_Master_Out(874) <= \<const0>\;
  LOCKSTEP_Master_Out(875) <= \<const0>\;
  LOCKSTEP_Master_Out(876) <= \<const0>\;
  LOCKSTEP_Master_Out(877) <= \<const0>\;
  LOCKSTEP_Master_Out(878) <= \<const0>\;
  LOCKSTEP_Master_Out(879) <= \<const0>\;
  LOCKSTEP_Master_Out(880) <= \<const0>\;
  LOCKSTEP_Master_Out(881) <= \<const0>\;
  LOCKSTEP_Master_Out(882) <= \<const0>\;
  LOCKSTEP_Master_Out(883) <= \<const0>\;
  LOCKSTEP_Master_Out(884) <= \<const0>\;
  LOCKSTEP_Master_Out(885) <= \<const0>\;
  LOCKSTEP_Master_Out(886) <= \<const0>\;
  LOCKSTEP_Master_Out(887) <= \<const0>\;
  LOCKSTEP_Master_Out(888) <= \<const0>\;
  LOCKSTEP_Master_Out(889) <= \<const0>\;
  LOCKSTEP_Master_Out(890) <= \<const0>\;
  LOCKSTEP_Master_Out(891) <= \<const0>\;
  LOCKSTEP_Master_Out(892) <= \<const0>\;
  LOCKSTEP_Master_Out(893) <= \<const0>\;
  LOCKSTEP_Master_Out(894) <= \<const0>\;
  LOCKSTEP_Master_Out(895) <= \<const0>\;
  LOCKSTEP_Master_Out(896) <= \<const0>\;
  LOCKSTEP_Master_Out(897) <= \<const0>\;
  LOCKSTEP_Master_Out(898) <= \<const0>\;
  LOCKSTEP_Master_Out(899) <= \<const0>\;
  LOCKSTEP_Master_Out(900) <= \<const0>\;
  LOCKSTEP_Master_Out(901) <= \<const0>\;
  LOCKSTEP_Master_Out(902) <= \<const0>\;
  LOCKSTEP_Master_Out(903) <= \<const0>\;
  LOCKSTEP_Master_Out(904) <= \<const0>\;
  LOCKSTEP_Master_Out(905) <= \<const0>\;
  LOCKSTEP_Master_Out(906) <= \<const0>\;
  LOCKSTEP_Master_Out(907) <= \<const0>\;
  LOCKSTEP_Master_Out(908) <= \<const0>\;
  LOCKSTEP_Master_Out(909) <= \<const0>\;
  LOCKSTEP_Master_Out(910) <= \<const0>\;
  LOCKSTEP_Master_Out(911) <= \<const0>\;
  LOCKSTEP_Master_Out(912) <= \<const0>\;
  LOCKSTEP_Master_Out(913) <= \<const0>\;
  LOCKSTEP_Master_Out(914) <= \<const0>\;
  LOCKSTEP_Master_Out(915) <= \<const0>\;
  LOCKSTEP_Master_Out(916) <= \<const0>\;
  LOCKSTEP_Master_Out(917) <= \<const0>\;
  LOCKSTEP_Master_Out(918) <= \<const0>\;
  LOCKSTEP_Master_Out(919) <= \<const0>\;
  LOCKSTEP_Master_Out(920) <= \<const0>\;
  LOCKSTEP_Master_Out(921) <= \<const0>\;
  LOCKSTEP_Master_Out(922) <= \<const0>\;
  LOCKSTEP_Master_Out(923) <= \<const0>\;
  LOCKSTEP_Master_Out(924) <= \<const0>\;
  LOCKSTEP_Master_Out(925) <= \<const0>\;
  LOCKSTEP_Master_Out(926) <= \<const0>\;
  LOCKSTEP_Master_Out(927) <= \<const0>\;
  LOCKSTEP_Master_Out(928) <= \<const0>\;
  LOCKSTEP_Master_Out(929) <= \<const0>\;
  LOCKSTEP_Master_Out(930) <= \<const0>\;
  LOCKSTEP_Master_Out(931) <= \<const0>\;
  LOCKSTEP_Master_Out(932) <= \<const0>\;
  LOCKSTEP_Master_Out(933) <= \<const0>\;
  LOCKSTEP_Master_Out(934) <= \<const0>\;
  LOCKSTEP_Master_Out(935) <= \<const0>\;
  LOCKSTEP_Master_Out(936) <= \<const0>\;
  LOCKSTEP_Master_Out(937) <= \<const0>\;
  LOCKSTEP_Master_Out(938) <= \<const0>\;
  LOCKSTEP_Master_Out(939) <= \<const0>\;
  LOCKSTEP_Master_Out(940) <= \<const0>\;
  LOCKSTEP_Master_Out(941) <= \<const0>\;
  LOCKSTEP_Master_Out(942) <= \<const0>\;
  LOCKSTEP_Master_Out(943) <= \<const0>\;
  LOCKSTEP_Master_Out(944) <= \<const0>\;
  LOCKSTEP_Master_Out(945) <= \<const0>\;
  LOCKSTEP_Master_Out(946) <= \<const0>\;
  LOCKSTEP_Master_Out(947) <= \<const0>\;
  LOCKSTEP_Master_Out(948) <= \<const0>\;
  LOCKSTEP_Master_Out(949) <= \<const0>\;
  LOCKSTEP_Master_Out(950) <= \<const0>\;
  LOCKSTEP_Master_Out(951) <= \<const0>\;
  LOCKSTEP_Master_Out(952) <= \<const0>\;
  LOCKSTEP_Master_Out(953) <= \<const0>\;
  LOCKSTEP_Master_Out(954) <= \<const0>\;
  LOCKSTEP_Master_Out(955) <= \<const0>\;
  LOCKSTEP_Master_Out(956) <= \<const0>\;
  LOCKSTEP_Master_Out(957) <= \<const0>\;
  LOCKSTEP_Master_Out(958) <= \<const0>\;
  LOCKSTEP_Master_Out(959) <= \<const0>\;
  LOCKSTEP_Master_Out(960) <= \<const0>\;
  LOCKSTEP_Master_Out(961) <= \<const0>\;
  LOCKSTEP_Master_Out(962) <= \<const0>\;
  LOCKSTEP_Master_Out(963) <= \<const0>\;
  LOCKSTEP_Master_Out(964) <= \<const0>\;
  LOCKSTEP_Master_Out(965) <= \<const0>\;
  LOCKSTEP_Master_Out(966) <= \<const0>\;
  LOCKSTEP_Master_Out(967) <= \<const0>\;
  LOCKSTEP_Master_Out(968) <= \<const0>\;
  LOCKSTEP_Master_Out(969) <= \<const0>\;
  LOCKSTEP_Master_Out(970) <= \<const0>\;
  LOCKSTEP_Master_Out(971) <= \<const0>\;
  LOCKSTEP_Master_Out(972) <= \<const0>\;
  LOCKSTEP_Master_Out(973) <= \<const0>\;
  LOCKSTEP_Master_Out(974) <= \<const0>\;
  LOCKSTEP_Master_Out(975) <= \<const0>\;
  LOCKSTEP_Master_Out(976) <= \<const0>\;
  LOCKSTEP_Master_Out(977) <= \<const0>\;
  LOCKSTEP_Master_Out(978) <= \<const0>\;
  LOCKSTEP_Master_Out(979) <= \<const0>\;
  LOCKSTEP_Master_Out(980) <= \<const0>\;
  LOCKSTEP_Master_Out(981) <= \<const0>\;
  LOCKSTEP_Master_Out(982) <= \<const0>\;
  LOCKSTEP_Master_Out(983) <= \<const0>\;
  LOCKSTEP_Master_Out(984) <= \<const0>\;
  LOCKSTEP_Master_Out(985) <= \<const0>\;
  LOCKSTEP_Master_Out(986) <= \<const0>\;
  LOCKSTEP_Master_Out(987) <= \<const0>\;
  LOCKSTEP_Master_Out(988) <= \<const0>\;
  LOCKSTEP_Master_Out(989) <= \<const0>\;
  LOCKSTEP_Master_Out(990) <= \<const0>\;
  LOCKSTEP_Master_Out(991) <= \<const0>\;
  LOCKSTEP_Master_Out(992) <= \<const0>\;
  LOCKSTEP_Master_Out(993) <= \<const0>\;
  LOCKSTEP_Master_Out(994) <= \<const0>\;
  LOCKSTEP_Master_Out(995) <= \<const0>\;
  LOCKSTEP_Master_Out(996) <= \<const0>\;
  LOCKSTEP_Master_Out(997) <= \<const0>\;
  LOCKSTEP_Master_Out(998) <= \<const0>\;
  LOCKSTEP_Master_Out(999) <= \<const0>\;
  LOCKSTEP_Master_Out(1000) <= \<const0>\;
  LOCKSTEP_Master_Out(1001) <= \<const0>\;
  LOCKSTEP_Master_Out(1002) <= \<const0>\;
  LOCKSTEP_Master_Out(1003) <= \<const0>\;
  LOCKSTEP_Master_Out(1004) <= \<const0>\;
  LOCKSTEP_Master_Out(1005) <= \<const0>\;
  LOCKSTEP_Master_Out(1006) <= \<const0>\;
  LOCKSTEP_Master_Out(1007) <= \<const0>\;
  LOCKSTEP_Master_Out(1008) <= \<const0>\;
  LOCKSTEP_Master_Out(1009) <= \<const0>\;
  LOCKSTEP_Master_Out(1010) <= \<const0>\;
  LOCKSTEP_Master_Out(1011) <= \<const0>\;
  LOCKSTEP_Master_Out(1012) <= \<const0>\;
  LOCKSTEP_Master_Out(1013) <= \<const0>\;
  LOCKSTEP_Master_Out(1014) <= \<const0>\;
  LOCKSTEP_Master_Out(1015) <= \<const0>\;
  LOCKSTEP_Master_Out(1016) <= \<const0>\;
  LOCKSTEP_Master_Out(1017) <= \<const0>\;
  LOCKSTEP_Master_Out(1018) <= \<const0>\;
  LOCKSTEP_Master_Out(1019) <= \<const0>\;
  LOCKSTEP_Master_Out(1020) <= \<const0>\;
  LOCKSTEP_Master_Out(1021) <= \<const0>\;
  LOCKSTEP_Master_Out(1022) <= \<const0>\;
  LOCKSTEP_Master_Out(1023) <= \<const0>\;
  LOCKSTEP_Master_Out(1024) <= \<const0>\;
  LOCKSTEP_Master_Out(1025) <= \<const0>\;
  LOCKSTEP_Master_Out(1026) <= \<const0>\;
  LOCKSTEP_Master_Out(1027) <= \<const0>\;
  LOCKSTEP_Master_Out(1028) <= \<const0>\;
  LOCKSTEP_Master_Out(1029) <= \<const0>\;
  LOCKSTEP_Master_Out(1030) <= \<const0>\;
  LOCKSTEP_Master_Out(1031) <= \<const0>\;
  LOCKSTEP_Master_Out(1032) <= \<const0>\;
  LOCKSTEP_Master_Out(1033) <= \<const0>\;
  LOCKSTEP_Master_Out(1034) <= \<const0>\;
  LOCKSTEP_Master_Out(1035) <= \<const0>\;
  LOCKSTEP_Master_Out(1036) <= \<const0>\;
  LOCKSTEP_Master_Out(1037) <= \<const0>\;
  LOCKSTEP_Master_Out(1038) <= \<const0>\;
  LOCKSTEP_Master_Out(1039) <= \<const0>\;
  LOCKSTEP_Master_Out(1040) <= \<const0>\;
  LOCKSTEP_Master_Out(1041) <= \<const0>\;
  LOCKSTEP_Master_Out(1042) <= \<const0>\;
  LOCKSTEP_Master_Out(1043) <= \<const0>\;
  LOCKSTEP_Master_Out(1044) <= \<const0>\;
  LOCKSTEP_Master_Out(1045) <= \<const0>\;
  LOCKSTEP_Master_Out(1046) <= \<const0>\;
  LOCKSTEP_Master_Out(1047) <= \<const0>\;
  LOCKSTEP_Master_Out(1048) <= \<const0>\;
  LOCKSTEP_Master_Out(1049) <= \<const0>\;
  LOCKSTEP_Master_Out(1050) <= \<const0>\;
  LOCKSTEP_Master_Out(1051) <= \<const0>\;
  LOCKSTEP_Master_Out(1052) <= \<const0>\;
  LOCKSTEP_Master_Out(1053) <= \<const0>\;
  LOCKSTEP_Master_Out(1054) <= \<const0>\;
  LOCKSTEP_Master_Out(1055) <= \<const0>\;
  LOCKSTEP_Master_Out(1056) <= \<const0>\;
  LOCKSTEP_Master_Out(1057) <= \<const0>\;
  LOCKSTEP_Master_Out(1058) <= \<const0>\;
  LOCKSTEP_Master_Out(1059) <= \<const0>\;
  LOCKSTEP_Master_Out(1060) <= \<const0>\;
  LOCKSTEP_Master_Out(1061) <= \<const0>\;
  LOCKSTEP_Master_Out(1062) <= \<const0>\;
  LOCKSTEP_Master_Out(1063) <= \<const0>\;
  LOCKSTEP_Master_Out(1064) <= \<const0>\;
  LOCKSTEP_Master_Out(1065) <= \<const0>\;
  LOCKSTEP_Master_Out(1066) <= \<const0>\;
  LOCKSTEP_Master_Out(1067) <= \<const0>\;
  LOCKSTEP_Master_Out(1068) <= \<const0>\;
  LOCKSTEP_Master_Out(1069) <= \<const0>\;
  LOCKSTEP_Master_Out(1070) <= \<const0>\;
  LOCKSTEP_Master_Out(1071) <= \<const0>\;
  LOCKSTEP_Master_Out(1072) <= \<const0>\;
  LOCKSTEP_Master_Out(1073) <= \<const0>\;
  LOCKSTEP_Master_Out(1074) <= \<const0>\;
  LOCKSTEP_Master_Out(1075) <= \<const0>\;
  LOCKSTEP_Master_Out(1076) <= \<const0>\;
  LOCKSTEP_Master_Out(1077) <= \<const0>\;
  LOCKSTEP_Master_Out(1078) <= \<const0>\;
  LOCKSTEP_Master_Out(1079) <= \<const0>\;
  LOCKSTEP_Master_Out(1080) <= \<const0>\;
  LOCKSTEP_Master_Out(1081) <= \<const0>\;
  LOCKSTEP_Master_Out(1082) <= \<const0>\;
  LOCKSTEP_Master_Out(1083) <= \<const0>\;
  LOCKSTEP_Master_Out(1084) <= \<const0>\;
  LOCKSTEP_Master_Out(1085) <= \<const0>\;
  LOCKSTEP_Master_Out(1086) <= \<const0>\;
  LOCKSTEP_Master_Out(1087) <= \<const0>\;
  LOCKSTEP_Master_Out(1088) <= \<const0>\;
  LOCKSTEP_Master_Out(1089) <= \<const0>\;
  LOCKSTEP_Master_Out(1090) <= \<const0>\;
  LOCKSTEP_Master_Out(1091) <= \<const0>\;
  LOCKSTEP_Master_Out(1092) <= \<const0>\;
  LOCKSTEP_Master_Out(1093) <= \<const0>\;
  LOCKSTEP_Master_Out(1094) <= \<const0>\;
  LOCKSTEP_Master_Out(1095) <= \<const0>\;
  LOCKSTEP_Master_Out(1096) <= \<const0>\;
  LOCKSTEP_Master_Out(1097) <= \<const0>\;
  LOCKSTEP_Master_Out(1098) <= \<const0>\;
  LOCKSTEP_Master_Out(1099) <= \<const0>\;
  LOCKSTEP_Master_Out(1100) <= \<const0>\;
  LOCKSTEP_Master_Out(1101) <= \<const0>\;
  LOCKSTEP_Master_Out(1102) <= \<const0>\;
  LOCKSTEP_Master_Out(1103) <= \<const0>\;
  LOCKSTEP_Master_Out(1104) <= \<const0>\;
  LOCKSTEP_Master_Out(1105) <= \<const0>\;
  LOCKSTEP_Master_Out(1106) <= \<const0>\;
  LOCKSTEP_Master_Out(1107) <= \<const0>\;
  LOCKSTEP_Master_Out(1108) <= \<const0>\;
  LOCKSTEP_Master_Out(1109) <= \<const0>\;
  LOCKSTEP_Master_Out(1110) <= \<const0>\;
  LOCKSTEP_Master_Out(1111) <= \<const0>\;
  LOCKSTEP_Master_Out(1112) <= \<const0>\;
  LOCKSTEP_Master_Out(1113) <= \<const0>\;
  LOCKSTEP_Master_Out(1114) <= \<const0>\;
  LOCKSTEP_Master_Out(1115) <= \<const0>\;
  LOCKSTEP_Master_Out(1116) <= \<const0>\;
  LOCKSTEP_Master_Out(1117) <= \<const0>\;
  LOCKSTEP_Master_Out(1118) <= \<const0>\;
  LOCKSTEP_Master_Out(1119) <= \<const0>\;
  LOCKSTEP_Master_Out(1120) <= \<const0>\;
  LOCKSTEP_Master_Out(1121) <= \<const0>\;
  LOCKSTEP_Master_Out(1122) <= \<const0>\;
  LOCKSTEP_Master_Out(1123) <= \<const0>\;
  LOCKSTEP_Master_Out(1124) <= \<const0>\;
  LOCKSTEP_Master_Out(1125) <= \<const0>\;
  LOCKSTEP_Master_Out(1126) <= \<const0>\;
  LOCKSTEP_Master_Out(1127) <= \<const0>\;
  LOCKSTEP_Master_Out(1128) <= \<const0>\;
  LOCKSTEP_Master_Out(1129) <= \<const0>\;
  LOCKSTEP_Master_Out(1130) <= \<const0>\;
  LOCKSTEP_Master_Out(1131) <= \<const0>\;
  LOCKSTEP_Master_Out(1132) <= \<const0>\;
  LOCKSTEP_Master_Out(1133) <= \<const0>\;
  LOCKSTEP_Master_Out(1134) <= \<const0>\;
  LOCKSTEP_Master_Out(1135) <= \<const0>\;
  LOCKSTEP_Master_Out(1136) <= \<const0>\;
  LOCKSTEP_Master_Out(1137) <= \<const0>\;
  LOCKSTEP_Master_Out(1138) <= \<const0>\;
  LOCKSTEP_Master_Out(1139) <= \<const0>\;
  LOCKSTEP_Master_Out(1140) <= \<const0>\;
  LOCKSTEP_Master_Out(1141) <= \<const0>\;
  LOCKSTEP_Master_Out(1142) <= \<const0>\;
  LOCKSTEP_Master_Out(1143) <= \<const0>\;
  LOCKSTEP_Master_Out(1144) <= \<const0>\;
  LOCKSTEP_Master_Out(1145) <= \<const0>\;
  LOCKSTEP_Master_Out(1146) <= \<const0>\;
  LOCKSTEP_Master_Out(1147) <= \<const0>\;
  LOCKSTEP_Master_Out(1148) <= \<const0>\;
  LOCKSTEP_Master_Out(1149) <= \<const0>\;
  LOCKSTEP_Master_Out(1150) <= \<const0>\;
  LOCKSTEP_Master_Out(1151) <= \<const0>\;
  LOCKSTEP_Master_Out(1152) <= \<const0>\;
  LOCKSTEP_Master_Out(1153) <= \<const0>\;
  LOCKSTEP_Master_Out(1154) <= \<const0>\;
  LOCKSTEP_Master_Out(1155) <= \<const0>\;
  LOCKSTEP_Master_Out(1156) <= \<const0>\;
  LOCKSTEP_Master_Out(1157) <= \<const0>\;
  LOCKSTEP_Master_Out(1158) <= \<const0>\;
  LOCKSTEP_Master_Out(1159) <= \<const0>\;
  LOCKSTEP_Master_Out(1160) <= \<const0>\;
  LOCKSTEP_Master_Out(1161) <= \<const0>\;
  LOCKSTEP_Master_Out(1162) <= \<const0>\;
  LOCKSTEP_Master_Out(1163) <= \<const0>\;
  LOCKSTEP_Master_Out(1164) <= \<const0>\;
  LOCKSTEP_Master_Out(1165) <= \<const0>\;
  LOCKSTEP_Master_Out(1166) <= \<const0>\;
  LOCKSTEP_Master_Out(1167) <= \<const0>\;
  LOCKSTEP_Master_Out(1168) <= \<const0>\;
  LOCKSTEP_Master_Out(1169) <= \<const0>\;
  LOCKSTEP_Master_Out(1170) <= \<const0>\;
  LOCKSTEP_Master_Out(1171) <= \<const0>\;
  LOCKSTEP_Master_Out(1172) <= \<const0>\;
  LOCKSTEP_Master_Out(1173) <= \<const0>\;
  LOCKSTEP_Master_Out(1174) <= \<const0>\;
  LOCKSTEP_Master_Out(1175) <= \<const0>\;
  LOCKSTEP_Master_Out(1176) <= \<const0>\;
  LOCKSTEP_Master_Out(1177) <= \<const0>\;
  LOCKSTEP_Master_Out(1178) <= \<const0>\;
  LOCKSTEP_Master_Out(1179) <= \<const0>\;
  LOCKSTEP_Master_Out(1180) <= \<const0>\;
  LOCKSTEP_Master_Out(1181) <= \<const0>\;
  LOCKSTEP_Master_Out(1182) <= \<const0>\;
  LOCKSTEP_Master_Out(1183) <= \<const0>\;
  LOCKSTEP_Master_Out(1184) <= \<const0>\;
  LOCKSTEP_Master_Out(1185) <= \<const0>\;
  LOCKSTEP_Master_Out(1186) <= \<const0>\;
  LOCKSTEP_Master_Out(1187) <= \<const0>\;
  LOCKSTEP_Master_Out(1188) <= \<const0>\;
  LOCKSTEP_Master_Out(1189) <= \<const0>\;
  LOCKSTEP_Master_Out(1190) <= \<const0>\;
  LOCKSTEP_Master_Out(1191) <= \<const0>\;
  LOCKSTEP_Master_Out(1192) <= \<const0>\;
  LOCKSTEP_Master_Out(1193) <= \<const0>\;
  LOCKSTEP_Master_Out(1194) <= \<const0>\;
  LOCKSTEP_Master_Out(1195) <= \<const0>\;
  LOCKSTEP_Master_Out(1196) <= \<const0>\;
  LOCKSTEP_Master_Out(1197) <= \<const0>\;
  LOCKSTEP_Master_Out(1198) <= \<const0>\;
  LOCKSTEP_Master_Out(1199) <= \<const0>\;
  LOCKSTEP_Master_Out(1200) <= \<const0>\;
  LOCKSTEP_Master_Out(1201) <= \<const0>\;
  LOCKSTEP_Master_Out(1202) <= \<const0>\;
  LOCKSTEP_Master_Out(1203) <= \<const0>\;
  LOCKSTEP_Master_Out(1204) <= \<const0>\;
  LOCKSTEP_Master_Out(1205) <= \<const0>\;
  LOCKSTEP_Master_Out(1206) <= \<const0>\;
  LOCKSTEP_Master_Out(1207) <= \<const0>\;
  LOCKSTEP_Master_Out(1208) <= \<const0>\;
  LOCKSTEP_Master_Out(1209) <= \<const0>\;
  LOCKSTEP_Master_Out(1210) <= \<const0>\;
  LOCKSTEP_Master_Out(1211) <= \<const0>\;
  LOCKSTEP_Master_Out(1212) <= \<const0>\;
  LOCKSTEP_Master_Out(1213) <= \<const0>\;
  LOCKSTEP_Master_Out(1214) <= \<const0>\;
  LOCKSTEP_Master_Out(1215) <= \<const0>\;
  LOCKSTEP_Master_Out(1216) <= \<const0>\;
  LOCKSTEP_Master_Out(1217) <= \<const0>\;
  LOCKSTEP_Master_Out(1218) <= \<const0>\;
  LOCKSTEP_Master_Out(1219) <= \<const0>\;
  LOCKSTEP_Master_Out(1220) <= \<const0>\;
  LOCKSTEP_Master_Out(1221) <= \<const0>\;
  LOCKSTEP_Master_Out(1222) <= \<const0>\;
  LOCKSTEP_Master_Out(1223) <= \<const0>\;
  LOCKSTEP_Master_Out(1224) <= \<const0>\;
  LOCKSTEP_Master_Out(1225) <= \<const0>\;
  LOCKSTEP_Master_Out(1226) <= \<const0>\;
  LOCKSTEP_Master_Out(1227) <= \<const0>\;
  LOCKSTEP_Master_Out(1228) <= \<const0>\;
  LOCKSTEP_Master_Out(1229) <= \<const0>\;
  LOCKSTEP_Master_Out(1230) <= \<const0>\;
  LOCKSTEP_Master_Out(1231) <= \<const0>\;
  LOCKSTEP_Master_Out(1232) <= \<const0>\;
  LOCKSTEP_Master_Out(1233) <= \<const0>\;
  LOCKSTEP_Master_Out(1234) <= \<const0>\;
  LOCKSTEP_Master_Out(1235) <= \<const0>\;
  LOCKSTEP_Master_Out(1236) <= \<const0>\;
  LOCKSTEP_Master_Out(1237) <= \<const0>\;
  LOCKSTEP_Master_Out(1238) <= \<const0>\;
  LOCKSTEP_Master_Out(1239) <= \<const0>\;
  LOCKSTEP_Master_Out(1240) <= \<const0>\;
  LOCKSTEP_Master_Out(1241) <= \<const0>\;
  LOCKSTEP_Master_Out(1242) <= \<const0>\;
  LOCKSTEP_Master_Out(1243) <= \<const0>\;
  LOCKSTEP_Master_Out(1244) <= \<const0>\;
  LOCKSTEP_Master_Out(1245) <= \<const0>\;
  LOCKSTEP_Master_Out(1246) <= \<const0>\;
  LOCKSTEP_Master_Out(1247) <= \<const0>\;
  LOCKSTEP_Master_Out(1248) <= \<const0>\;
  LOCKSTEP_Master_Out(1249) <= \<const0>\;
  LOCKSTEP_Master_Out(1250) <= \<const0>\;
  LOCKSTEP_Master_Out(1251) <= \<const0>\;
  LOCKSTEP_Master_Out(1252) <= \<const0>\;
  LOCKSTEP_Master_Out(1253) <= \<const0>\;
  LOCKSTEP_Master_Out(1254) <= \<const0>\;
  LOCKSTEP_Master_Out(1255) <= \<const0>\;
  LOCKSTEP_Master_Out(1256) <= \<const0>\;
  LOCKSTEP_Master_Out(1257) <= \<const0>\;
  LOCKSTEP_Master_Out(1258) <= \<const0>\;
  LOCKSTEP_Master_Out(1259) <= \<const0>\;
  LOCKSTEP_Master_Out(1260) <= \<const0>\;
  LOCKSTEP_Master_Out(1261) <= \<const0>\;
  LOCKSTEP_Master_Out(1262) <= \<const0>\;
  LOCKSTEP_Master_Out(1263) <= \<const0>\;
  LOCKSTEP_Master_Out(1264) <= \<const0>\;
  LOCKSTEP_Master_Out(1265) <= \<const0>\;
  LOCKSTEP_Master_Out(1266) <= \<const0>\;
  LOCKSTEP_Master_Out(1267) <= \<const0>\;
  LOCKSTEP_Master_Out(1268) <= \<const0>\;
  LOCKSTEP_Master_Out(1269) <= \<const0>\;
  LOCKSTEP_Master_Out(1270) <= \<const0>\;
  LOCKSTEP_Master_Out(1271) <= \<const0>\;
  LOCKSTEP_Master_Out(1272) <= \<const0>\;
  LOCKSTEP_Master_Out(1273) <= \<const0>\;
  LOCKSTEP_Master_Out(1274) <= \<const0>\;
  LOCKSTEP_Master_Out(1275) <= \<const0>\;
  LOCKSTEP_Master_Out(1276) <= \<const0>\;
  LOCKSTEP_Master_Out(1277) <= \<const0>\;
  LOCKSTEP_Master_Out(1278) <= \<const0>\;
  LOCKSTEP_Master_Out(1279) <= \<const0>\;
  LOCKSTEP_Master_Out(1280) <= \<const0>\;
  LOCKSTEP_Master_Out(1281) <= \<const0>\;
  LOCKSTEP_Master_Out(1282) <= \<const0>\;
  LOCKSTEP_Master_Out(1283) <= \<const0>\;
  LOCKSTEP_Master_Out(1284) <= \<const0>\;
  LOCKSTEP_Master_Out(1285) <= \<const0>\;
  LOCKSTEP_Master_Out(1286) <= \<const0>\;
  LOCKSTEP_Master_Out(1287) <= \<const0>\;
  LOCKSTEP_Master_Out(1288) <= \<const0>\;
  LOCKSTEP_Master_Out(1289) <= \<const0>\;
  LOCKSTEP_Master_Out(1290) <= \<const0>\;
  LOCKSTEP_Master_Out(1291) <= \<const0>\;
  LOCKSTEP_Master_Out(1292) <= \<const0>\;
  LOCKSTEP_Master_Out(1293) <= \<const0>\;
  LOCKSTEP_Master_Out(1294) <= \<const0>\;
  LOCKSTEP_Master_Out(1295) <= \<const0>\;
  LOCKSTEP_Master_Out(1296) <= \<const0>\;
  LOCKSTEP_Master_Out(1297) <= \<const0>\;
  LOCKSTEP_Master_Out(1298) <= \<const0>\;
  LOCKSTEP_Master_Out(1299) <= \<const0>\;
  LOCKSTEP_Master_Out(1300) <= \<const0>\;
  LOCKSTEP_Master_Out(1301) <= \<const0>\;
  LOCKSTEP_Master_Out(1302) <= \<const0>\;
  LOCKSTEP_Master_Out(1303) <= \<const0>\;
  LOCKSTEP_Master_Out(1304) <= \<const0>\;
  LOCKSTEP_Master_Out(1305) <= \<const0>\;
  LOCKSTEP_Master_Out(1306) <= \<const0>\;
  LOCKSTEP_Master_Out(1307) <= \<const0>\;
  LOCKSTEP_Master_Out(1308) <= \<const0>\;
  LOCKSTEP_Master_Out(1309) <= \<const0>\;
  LOCKSTEP_Master_Out(1310) <= \<const0>\;
  LOCKSTEP_Master_Out(1311) <= \<const0>\;
  LOCKSTEP_Master_Out(1312) <= \<const0>\;
  LOCKSTEP_Master_Out(1313) <= \<const0>\;
  LOCKSTEP_Master_Out(1314) <= \<const0>\;
  LOCKSTEP_Master_Out(1315) <= \<const0>\;
  LOCKSTEP_Master_Out(1316) <= \<const0>\;
  LOCKSTEP_Master_Out(1317) <= \<const0>\;
  LOCKSTEP_Master_Out(1318) <= \<const0>\;
  LOCKSTEP_Master_Out(1319) <= \<const0>\;
  LOCKSTEP_Master_Out(1320) <= \<const0>\;
  LOCKSTEP_Master_Out(1321) <= \<const0>\;
  LOCKSTEP_Master_Out(1322) <= \<const0>\;
  LOCKSTEP_Master_Out(1323) <= \<const0>\;
  LOCKSTEP_Master_Out(1324) <= \<const0>\;
  LOCKSTEP_Master_Out(1325) <= \<const0>\;
  LOCKSTEP_Master_Out(1326) <= \<const0>\;
  LOCKSTEP_Master_Out(1327) <= \<const0>\;
  LOCKSTEP_Master_Out(1328) <= \<const0>\;
  LOCKSTEP_Master_Out(1329) <= \<const0>\;
  LOCKSTEP_Master_Out(1330) <= \<const0>\;
  LOCKSTEP_Master_Out(1331) <= \<const0>\;
  LOCKSTEP_Master_Out(1332) <= \<const0>\;
  LOCKSTEP_Master_Out(1333) <= \<const0>\;
  LOCKSTEP_Master_Out(1334) <= \<const0>\;
  LOCKSTEP_Master_Out(1335) <= \<const0>\;
  LOCKSTEP_Master_Out(1336) <= \<const0>\;
  LOCKSTEP_Master_Out(1337) <= \<const0>\;
  LOCKSTEP_Master_Out(1338) <= \<const0>\;
  LOCKSTEP_Master_Out(1339) <= \<const0>\;
  LOCKSTEP_Master_Out(1340) <= \<const0>\;
  LOCKSTEP_Master_Out(1341) <= \<const0>\;
  LOCKSTEP_Master_Out(1342) <= \<const0>\;
  LOCKSTEP_Master_Out(1343) <= \<const0>\;
  LOCKSTEP_Master_Out(1344) <= \<const0>\;
  LOCKSTEP_Master_Out(1345) <= \<const0>\;
  LOCKSTEP_Master_Out(1346) <= \<const0>\;
  LOCKSTEP_Master_Out(1347) <= \<const0>\;
  LOCKSTEP_Master_Out(1348) <= \<const0>\;
  LOCKSTEP_Master_Out(1349) <= \<const0>\;
  LOCKSTEP_Master_Out(1350) <= \<const0>\;
  LOCKSTEP_Master_Out(1351) <= \<const0>\;
  LOCKSTEP_Master_Out(1352) <= \<const0>\;
  LOCKSTEP_Master_Out(1353) <= \<const0>\;
  LOCKSTEP_Master_Out(1354) <= \<const0>\;
  LOCKSTEP_Master_Out(1355) <= \<const0>\;
  LOCKSTEP_Master_Out(1356) <= \<const0>\;
  LOCKSTEP_Master_Out(1357) <= \<const0>\;
  LOCKSTEP_Master_Out(1358) <= \<const0>\;
  LOCKSTEP_Master_Out(1359) <= \<const0>\;
  LOCKSTEP_Master_Out(1360) <= \<const0>\;
  LOCKSTEP_Master_Out(1361) <= \<const0>\;
  LOCKSTEP_Master_Out(1362) <= \<const0>\;
  LOCKSTEP_Master_Out(1363) <= \<const0>\;
  LOCKSTEP_Master_Out(1364) <= \<const0>\;
  LOCKSTEP_Master_Out(1365) <= \<const0>\;
  LOCKSTEP_Master_Out(1366) <= \<const0>\;
  LOCKSTEP_Master_Out(1367) <= \<const0>\;
  LOCKSTEP_Master_Out(1368) <= \<const0>\;
  LOCKSTEP_Master_Out(1369) <= \<const0>\;
  LOCKSTEP_Master_Out(1370) <= \<const0>\;
  LOCKSTEP_Master_Out(1371) <= \<const0>\;
  LOCKSTEP_Master_Out(1372) <= \<const0>\;
  LOCKSTEP_Master_Out(1373) <= \<const0>\;
  LOCKSTEP_Master_Out(1374) <= \<const0>\;
  LOCKSTEP_Master_Out(1375) <= \<const0>\;
  LOCKSTEP_Master_Out(1376) <= \<const0>\;
  LOCKSTEP_Master_Out(1377) <= \<const0>\;
  LOCKSTEP_Master_Out(1378) <= \<const0>\;
  LOCKSTEP_Master_Out(1379) <= \<const0>\;
  LOCKSTEP_Master_Out(1380) <= \<const0>\;
  LOCKSTEP_Master_Out(1381) <= \<const0>\;
  LOCKSTEP_Master_Out(1382) <= \<const0>\;
  LOCKSTEP_Master_Out(1383) <= \<const0>\;
  LOCKSTEP_Master_Out(1384) <= \<const0>\;
  LOCKSTEP_Master_Out(1385) <= \<const0>\;
  LOCKSTEP_Master_Out(1386) <= \<const0>\;
  LOCKSTEP_Master_Out(1387) <= \<const0>\;
  LOCKSTEP_Master_Out(1388) <= \<const0>\;
  LOCKSTEP_Master_Out(1389) <= \<const0>\;
  LOCKSTEP_Master_Out(1390) <= \<const0>\;
  LOCKSTEP_Master_Out(1391) <= \<const0>\;
  LOCKSTEP_Master_Out(1392) <= \<const0>\;
  LOCKSTEP_Master_Out(1393) <= \<const0>\;
  LOCKSTEP_Master_Out(1394) <= \<const0>\;
  LOCKSTEP_Master_Out(1395) <= \<const0>\;
  LOCKSTEP_Master_Out(1396) <= \<const0>\;
  LOCKSTEP_Master_Out(1397) <= \<const0>\;
  LOCKSTEP_Master_Out(1398) <= \<const0>\;
  LOCKSTEP_Master_Out(1399) <= \<const0>\;
  LOCKSTEP_Master_Out(1400) <= \<const0>\;
  LOCKSTEP_Master_Out(1401) <= \<const0>\;
  LOCKSTEP_Master_Out(1402) <= \<const0>\;
  LOCKSTEP_Master_Out(1403) <= \<const0>\;
  LOCKSTEP_Master_Out(1404) <= \<const0>\;
  LOCKSTEP_Master_Out(1405) <= \<const0>\;
  LOCKSTEP_Master_Out(1406) <= \<const0>\;
  LOCKSTEP_Master_Out(1407) <= \<const0>\;
  LOCKSTEP_Master_Out(1408) <= \<const0>\;
  LOCKSTEP_Master_Out(1409) <= \<const0>\;
  LOCKSTEP_Master_Out(1410) <= \<const0>\;
  LOCKSTEP_Master_Out(1411) <= \<const0>\;
  LOCKSTEP_Master_Out(1412) <= \<const0>\;
  LOCKSTEP_Master_Out(1413) <= \<const0>\;
  LOCKSTEP_Master_Out(1414) <= \<const0>\;
  LOCKSTEP_Master_Out(1415) <= \<const0>\;
  LOCKSTEP_Master_Out(1416) <= \<const0>\;
  LOCKSTEP_Master_Out(1417) <= \<const0>\;
  LOCKSTEP_Master_Out(1418) <= \<const0>\;
  LOCKSTEP_Master_Out(1419) <= \<const0>\;
  LOCKSTEP_Master_Out(1420) <= \<const0>\;
  LOCKSTEP_Master_Out(1421) <= \<const0>\;
  LOCKSTEP_Master_Out(1422) <= \<const0>\;
  LOCKSTEP_Master_Out(1423) <= \<const0>\;
  LOCKSTEP_Master_Out(1424) <= \<const0>\;
  LOCKSTEP_Master_Out(1425) <= \<const0>\;
  LOCKSTEP_Master_Out(1426) <= \<const0>\;
  LOCKSTEP_Master_Out(1427) <= \<const0>\;
  LOCKSTEP_Master_Out(1428) <= \<const0>\;
  LOCKSTEP_Master_Out(1429) <= \<const0>\;
  LOCKSTEP_Master_Out(1430) <= \<const0>\;
  LOCKSTEP_Master_Out(1431) <= \<const0>\;
  LOCKSTEP_Master_Out(1432) <= \<const0>\;
  LOCKSTEP_Master_Out(1433) <= \<const0>\;
  LOCKSTEP_Master_Out(1434) <= \<const0>\;
  LOCKSTEP_Master_Out(1435) <= \<const0>\;
  LOCKSTEP_Master_Out(1436) <= \<const0>\;
  LOCKSTEP_Master_Out(1437) <= \<const0>\;
  LOCKSTEP_Master_Out(1438) <= \<const0>\;
  LOCKSTEP_Master_Out(1439) <= \<const0>\;
  LOCKSTEP_Master_Out(1440) <= \<const0>\;
  LOCKSTEP_Master_Out(1441) <= \<const0>\;
  LOCKSTEP_Master_Out(1442) <= \<const0>\;
  LOCKSTEP_Master_Out(1443) <= \<const0>\;
  LOCKSTEP_Master_Out(1444) <= \<const0>\;
  LOCKSTEP_Master_Out(1445) <= \<const0>\;
  LOCKSTEP_Master_Out(1446) <= \<const0>\;
  LOCKSTEP_Master_Out(1447) <= \<const0>\;
  LOCKSTEP_Master_Out(1448) <= \<const0>\;
  LOCKSTEP_Master_Out(1449) <= \<const0>\;
  LOCKSTEP_Master_Out(1450) <= \<const0>\;
  LOCKSTEP_Master_Out(1451) <= \<const0>\;
  LOCKSTEP_Master_Out(1452) <= \<const0>\;
  LOCKSTEP_Master_Out(1453) <= \<const0>\;
  LOCKSTEP_Master_Out(1454) <= \<const0>\;
  LOCKSTEP_Master_Out(1455) <= \<const0>\;
  LOCKSTEP_Master_Out(1456) <= \<const0>\;
  LOCKSTEP_Master_Out(1457) <= \<const0>\;
  LOCKSTEP_Master_Out(1458) <= \<const0>\;
  LOCKSTEP_Master_Out(1459) <= \<const0>\;
  LOCKSTEP_Master_Out(1460) <= \<const0>\;
  LOCKSTEP_Master_Out(1461) <= \<const0>\;
  LOCKSTEP_Master_Out(1462) <= \<const0>\;
  LOCKSTEP_Master_Out(1463) <= \<const0>\;
  LOCKSTEP_Master_Out(1464) <= \<const0>\;
  LOCKSTEP_Master_Out(1465) <= \<const0>\;
  LOCKSTEP_Master_Out(1466) <= \<const0>\;
  LOCKSTEP_Master_Out(1467) <= \<const0>\;
  LOCKSTEP_Master_Out(1468) <= \<const0>\;
  LOCKSTEP_Master_Out(1469) <= \<const0>\;
  LOCKSTEP_Master_Out(1470) <= \<const0>\;
  LOCKSTEP_Master_Out(1471) <= \<const0>\;
  LOCKSTEP_Master_Out(1472) <= \<const0>\;
  LOCKSTEP_Master_Out(1473) <= \<const0>\;
  LOCKSTEP_Master_Out(1474) <= \<const0>\;
  LOCKSTEP_Master_Out(1475) <= \<const0>\;
  LOCKSTEP_Master_Out(1476) <= \<const0>\;
  LOCKSTEP_Master_Out(1477) <= \<const0>\;
  LOCKSTEP_Master_Out(1478) <= \<const0>\;
  LOCKSTEP_Master_Out(1479) <= \<const0>\;
  LOCKSTEP_Master_Out(1480) <= \<const0>\;
  LOCKSTEP_Master_Out(1481) <= \<const0>\;
  LOCKSTEP_Master_Out(1482) <= \<const0>\;
  LOCKSTEP_Master_Out(1483) <= \<const0>\;
  LOCKSTEP_Master_Out(1484) <= \<const0>\;
  LOCKSTEP_Master_Out(1485) <= \<const0>\;
  LOCKSTEP_Master_Out(1486) <= \<const0>\;
  LOCKSTEP_Master_Out(1487) <= \<const0>\;
  LOCKSTEP_Master_Out(1488) <= \<const0>\;
  LOCKSTEP_Master_Out(1489) <= \<const0>\;
  LOCKSTEP_Master_Out(1490) <= \<const0>\;
  LOCKSTEP_Master_Out(1491) <= \<const0>\;
  LOCKSTEP_Master_Out(1492) <= \<const0>\;
  LOCKSTEP_Master_Out(1493) <= \<const0>\;
  LOCKSTEP_Master_Out(1494) <= \<const0>\;
  LOCKSTEP_Master_Out(1495) <= \<const0>\;
  LOCKSTEP_Master_Out(1496) <= \<const0>\;
  LOCKSTEP_Master_Out(1497) <= \<const0>\;
  LOCKSTEP_Master_Out(1498) <= \<const0>\;
  LOCKSTEP_Master_Out(1499) <= \<const0>\;
  LOCKSTEP_Master_Out(1500) <= \<const0>\;
  LOCKSTEP_Master_Out(1501) <= \<const0>\;
  LOCKSTEP_Master_Out(1502) <= \<const0>\;
  LOCKSTEP_Master_Out(1503) <= \<const0>\;
  LOCKSTEP_Master_Out(1504) <= \<const0>\;
  LOCKSTEP_Master_Out(1505) <= \<const0>\;
  LOCKSTEP_Master_Out(1506) <= \<const0>\;
  LOCKSTEP_Master_Out(1507) <= \<const0>\;
  LOCKSTEP_Master_Out(1508) <= \<const0>\;
  LOCKSTEP_Master_Out(1509) <= \<const0>\;
  LOCKSTEP_Master_Out(1510) <= \<const0>\;
  LOCKSTEP_Master_Out(1511) <= \<const0>\;
  LOCKSTEP_Master_Out(1512) <= \<const0>\;
  LOCKSTEP_Master_Out(1513) <= \<const0>\;
  LOCKSTEP_Master_Out(1514) <= \<const0>\;
  LOCKSTEP_Master_Out(1515) <= \<const0>\;
  LOCKSTEP_Master_Out(1516) <= \<const0>\;
  LOCKSTEP_Master_Out(1517) <= \<const0>\;
  LOCKSTEP_Master_Out(1518) <= \<const0>\;
  LOCKSTEP_Master_Out(1519) <= \<const0>\;
  LOCKSTEP_Master_Out(1520) <= \<const0>\;
  LOCKSTEP_Master_Out(1521) <= \<const0>\;
  LOCKSTEP_Master_Out(1522) <= \<const0>\;
  LOCKSTEP_Master_Out(1523) <= \<const0>\;
  LOCKSTEP_Master_Out(1524) <= \<const0>\;
  LOCKSTEP_Master_Out(1525) <= \<const0>\;
  LOCKSTEP_Master_Out(1526) <= \<const0>\;
  LOCKSTEP_Master_Out(1527) <= \<const0>\;
  LOCKSTEP_Master_Out(1528) <= \<const0>\;
  LOCKSTEP_Master_Out(1529) <= \<const0>\;
  LOCKSTEP_Master_Out(1530) <= \<const0>\;
  LOCKSTEP_Master_Out(1531) <= \<const0>\;
  LOCKSTEP_Master_Out(1532) <= \<const0>\;
  LOCKSTEP_Master_Out(1533) <= \<const0>\;
  LOCKSTEP_Master_Out(1534) <= \<const0>\;
  LOCKSTEP_Master_Out(1535) <= \<const0>\;
  LOCKSTEP_Master_Out(1536) <= \<const0>\;
  LOCKSTEP_Master_Out(1537) <= \<const0>\;
  LOCKSTEP_Master_Out(1538) <= \<const0>\;
  LOCKSTEP_Master_Out(1539) <= \<const0>\;
  LOCKSTEP_Master_Out(1540) <= \<const0>\;
  LOCKSTEP_Master_Out(1541) <= \<const0>\;
  LOCKSTEP_Master_Out(1542) <= \<const0>\;
  LOCKSTEP_Master_Out(1543) <= \<const0>\;
  LOCKSTEP_Master_Out(1544) <= \<const0>\;
  LOCKSTEP_Master_Out(1545) <= \<const0>\;
  LOCKSTEP_Master_Out(1546) <= \<const0>\;
  LOCKSTEP_Master_Out(1547) <= \<const0>\;
  LOCKSTEP_Master_Out(1548) <= \<const0>\;
  LOCKSTEP_Master_Out(1549) <= \<const0>\;
  LOCKSTEP_Master_Out(1550) <= \<const0>\;
  LOCKSTEP_Master_Out(1551) <= \<const0>\;
  LOCKSTEP_Master_Out(1552) <= \<const0>\;
  LOCKSTEP_Master_Out(1553) <= \<const0>\;
  LOCKSTEP_Master_Out(1554) <= \<const0>\;
  LOCKSTEP_Master_Out(1555) <= \<const0>\;
  LOCKSTEP_Master_Out(1556) <= \<const0>\;
  LOCKSTEP_Master_Out(1557) <= \<const0>\;
  LOCKSTEP_Master_Out(1558) <= \<const0>\;
  LOCKSTEP_Master_Out(1559) <= \<const0>\;
  LOCKSTEP_Master_Out(1560) <= \<const0>\;
  LOCKSTEP_Master_Out(1561) <= \<const0>\;
  LOCKSTEP_Master_Out(1562) <= \<const0>\;
  LOCKSTEP_Master_Out(1563) <= \<const0>\;
  LOCKSTEP_Master_Out(1564) <= \<const0>\;
  LOCKSTEP_Master_Out(1565) <= \<const0>\;
  LOCKSTEP_Master_Out(1566) <= \<const0>\;
  LOCKSTEP_Master_Out(1567) <= \<const0>\;
  LOCKSTEP_Master_Out(1568) <= \<const0>\;
  LOCKSTEP_Master_Out(1569) <= \<const0>\;
  LOCKSTEP_Master_Out(1570) <= \<const0>\;
  LOCKSTEP_Master_Out(1571) <= \<const0>\;
  LOCKSTEP_Master_Out(1572) <= \<const0>\;
  LOCKSTEP_Master_Out(1573) <= \<const0>\;
  LOCKSTEP_Master_Out(1574) <= \<const0>\;
  LOCKSTEP_Master_Out(1575) <= \<const0>\;
  LOCKSTEP_Master_Out(1576) <= \<const0>\;
  LOCKSTEP_Master_Out(1577) <= \<const0>\;
  LOCKSTEP_Master_Out(1578) <= \<const0>\;
  LOCKSTEP_Master_Out(1579) <= \<const0>\;
  LOCKSTEP_Master_Out(1580) <= \<const0>\;
  LOCKSTEP_Master_Out(1581) <= \<const0>\;
  LOCKSTEP_Master_Out(1582) <= \<const0>\;
  LOCKSTEP_Master_Out(1583) <= \<const0>\;
  LOCKSTEP_Master_Out(1584) <= \<const0>\;
  LOCKSTEP_Master_Out(1585) <= \<const0>\;
  LOCKSTEP_Master_Out(1586) <= \<const0>\;
  LOCKSTEP_Master_Out(1587) <= \<const0>\;
  LOCKSTEP_Master_Out(1588) <= \<const0>\;
  LOCKSTEP_Master_Out(1589) <= \<const0>\;
  LOCKSTEP_Master_Out(1590) <= \<const0>\;
  LOCKSTEP_Master_Out(1591) <= \<const0>\;
  LOCKSTEP_Master_Out(1592) <= \<const0>\;
  LOCKSTEP_Master_Out(1593) <= \<const0>\;
  LOCKSTEP_Master_Out(1594) <= \<const0>\;
  LOCKSTEP_Master_Out(1595) <= \<const0>\;
  LOCKSTEP_Master_Out(1596) <= \<const0>\;
  LOCKSTEP_Master_Out(1597) <= \<const0>\;
  LOCKSTEP_Master_Out(1598) <= \<const0>\;
  LOCKSTEP_Master_Out(1599) <= \<const0>\;
  LOCKSTEP_Master_Out(1600) <= \<const0>\;
  LOCKSTEP_Master_Out(1601) <= \<const0>\;
  LOCKSTEP_Master_Out(1602) <= \<const0>\;
  LOCKSTEP_Master_Out(1603) <= \<const0>\;
  LOCKSTEP_Master_Out(1604) <= \<const0>\;
  LOCKSTEP_Master_Out(1605) <= \<const0>\;
  LOCKSTEP_Master_Out(1606) <= \<const0>\;
  LOCKSTEP_Master_Out(1607) <= \<const0>\;
  LOCKSTEP_Master_Out(1608) <= \<const0>\;
  LOCKSTEP_Master_Out(1609) <= \<const0>\;
  LOCKSTEP_Master_Out(1610) <= \<const0>\;
  LOCKSTEP_Master_Out(1611) <= \<const0>\;
  LOCKSTEP_Master_Out(1612) <= \<const0>\;
  LOCKSTEP_Master_Out(1613) <= \<const0>\;
  LOCKSTEP_Master_Out(1614) <= \<const0>\;
  LOCKSTEP_Master_Out(1615) <= \<const0>\;
  LOCKSTEP_Master_Out(1616) <= \<const0>\;
  LOCKSTEP_Master_Out(1617) <= \<const0>\;
  LOCKSTEP_Master_Out(1618) <= \<const0>\;
  LOCKSTEP_Master_Out(1619) <= \<const0>\;
  LOCKSTEP_Master_Out(1620) <= \<const0>\;
  LOCKSTEP_Master_Out(1621) <= \<const0>\;
  LOCKSTEP_Master_Out(1622) <= \<const0>\;
  LOCKSTEP_Master_Out(1623) <= \<const0>\;
  LOCKSTEP_Master_Out(1624) <= \<const0>\;
  LOCKSTEP_Master_Out(1625) <= \<const0>\;
  LOCKSTEP_Master_Out(1626) <= \<const0>\;
  LOCKSTEP_Master_Out(1627) <= \<const0>\;
  LOCKSTEP_Master_Out(1628) <= \<const0>\;
  LOCKSTEP_Master_Out(1629) <= \<const0>\;
  LOCKSTEP_Master_Out(1630) <= \<const0>\;
  LOCKSTEP_Master_Out(1631) <= \<const0>\;
  LOCKSTEP_Master_Out(1632) <= \<const0>\;
  LOCKSTEP_Master_Out(1633) <= \<const0>\;
  LOCKSTEP_Master_Out(1634) <= \<const0>\;
  LOCKSTEP_Master_Out(1635) <= \<const0>\;
  LOCKSTEP_Master_Out(1636) <= \<const0>\;
  LOCKSTEP_Master_Out(1637) <= \<const0>\;
  LOCKSTEP_Master_Out(1638) <= \<const0>\;
  LOCKSTEP_Master_Out(1639) <= \<const0>\;
  LOCKSTEP_Master_Out(1640) <= \<const0>\;
  LOCKSTEP_Master_Out(1641) <= \<const0>\;
  LOCKSTEP_Master_Out(1642) <= \<const0>\;
  LOCKSTEP_Master_Out(1643) <= \<const0>\;
  LOCKSTEP_Master_Out(1644) <= \<const0>\;
  LOCKSTEP_Master_Out(1645) <= \<const0>\;
  LOCKSTEP_Master_Out(1646) <= \<const0>\;
  LOCKSTEP_Master_Out(1647) <= \<const0>\;
  LOCKSTEP_Master_Out(1648) <= \<const0>\;
  LOCKSTEP_Master_Out(1649) <= \<const0>\;
  LOCKSTEP_Master_Out(1650) <= \<const0>\;
  LOCKSTEP_Master_Out(1651) <= \<const0>\;
  LOCKSTEP_Master_Out(1652) <= \<const0>\;
  LOCKSTEP_Master_Out(1653) <= \<const0>\;
  LOCKSTEP_Master_Out(1654) <= \<const0>\;
  LOCKSTEP_Master_Out(1655) <= \<const0>\;
  LOCKSTEP_Master_Out(1656) <= \<const0>\;
  LOCKSTEP_Master_Out(1657) <= \<const0>\;
  LOCKSTEP_Master_Out(1658) <= \<const0>\;
  LOCKSTEP_Master_Out(1659) <= \<const0>\;
  LOCKSTEP_Master_Out(1660) <= \<const0>\;
  LOCKSTEP_Master_Out(1661) <= \<const0>\;
  LOCKSTEP_Master_Out(1662) <= \<const0>\;
  LOCKSTEP_Master_Out(1663) <= \<const0>\;
  LOCKSTEP_Master_Out(1664) <= \<const0>\;
  LOCKSTEP_Master_Out(1665) <= \<const0>\;
  LOCKSTEP_Master_Out(1666) <= \<const0>\;
  LOCKSTEP_Master_Out(1667) <= \<const0>\;
  LOCKSTEP_Master_Out(1668) <= \<const0>\;
  LOCKSTEP_Master_Out(1669) <= \<const0>\;
  LOCKSTEP_Master_Out(1670) <= \<const0>\;
  LOCKSTEP_Master_Out(1671) <= \<const0>\;
  LOCKSTEP_Master_Out(1672) <= \<const0>\;
  LOCKSTEP_Master_Out(1673) <= \<const0>\;
  LOCKSTEP_Master_Out(1674) <= \<const0>\;
  LOCKSTEP_Master_Out(1675) <= \<const0>\;
  LOCKSTEP_Master_Out(1676) <= \<const0>\;
  LOCKSTEP_Master_Out(1677) <= \<const0>\;
  LOCKSTEP_Master_Out(1678) <= \<const0>\;
  LOCKSTEP_Master_Out(1679) <= \<const0>\;
  LOCKSTEP_Master_Out(1680) <= \<const0>\;
  LOCKSTEP_Master_Out(1681) <= \<const0>\;
  LOCKSTEP_Master_Out(1682) <= \<const0>\;
  LOCKSTEP_Master_Out(1683) <= \<const0>\;
  LOCKSTEP_Master_Out(1684) <= \<const0>\;
  LOCKSTEP_Master_Out(1685) <= \<const0>\;
  LOCKSTEP_Master_Out(1686) <= \<const0>\;
  LOCKSTEP_Master_Out(1687) <= \<const0>\;
  LOCKSTEP_Master_Out(1688) <= \<const0>\;
  LOCKSTEP_Master_Out(1689) <= \<const0>\;
  LOCKSTEP_Master_Out(1690) <= \<const0>\;
  LOCKSTEP_Master_Out(1691) <= \<const0>\;
  LOCKSTEP_Master_Out(1692) <= \<const0>\;
  LOCKSTEP_Master_Out(1693) <= \<const0>\;
  LOCKSTEP_Master_Out(1694) <= \<const0>\;
  LOCKSTEP_Master_Out(1695) <= \<const0>\;
  LOCKSTEP_Master_Out(1696) <= \<const0>\;
  LOCKSTEP_Master_Out(1697) <= \<const0>\;
  LOCKSTEP_Master_Out(1698) <= \<const0>\;
  LOCKSTEP_Master_Out(1699) <= \<const0>\;
  LOCKSTEP_Master_Out(1700) <= \<const0>\;
  LOCKSTEP_Master_Out(1701) <= \<const0>\;
  LOCKSTEP_Master_Out(1702) <= \<const0>\;
  LOCKSTEP_Master_Out(1703) <= \<const0>\;
  LOCKSTEP_Master_Out(1704) <= \<const0>\;
  LOCKSTEP_Master_Out(1705) <= \<const0>\;
  LOCKSTEP_Master_Out(1706) <= \<const0>\;
  LOCKSTEP_Master_Out(1707) <= \<const0>\;
  LOCKSTEP_Master_Out(1708) <= \<const0>\;
  LOCKSTEP_Master_Out(1709) <= \<const0>\;
  LOCKSTEP_Master_Out(1710) <= \<const0>\;
  LOCKSTEP_Master_Out(1711) <= \<const0>\;
  LOCKSTEP_Master_Out(1712) <= \<const0>\;
  LOCKSTEP_Master_Out(1713) <= \<const0>\;
  LOCKSTEP_Master_Out(1714) <= \<const0>\;
  LOCKSTEP_Master_Out(1715) <= \<const0>\;
  LOCKSTEP_Master_Out(1716) <= \<const0>\;
  LOCKSTEP_Master_Out(1717) <= \<const0>\;
  LOCKSTEP_Master_Out(1718) <= \<const0>\;
  LOCKSTEP_Master_Out(1719) <= \<const0>\;
  LOCKSTEP_Master_Out(1720) <= \<const0>\;
  LOCKSTEP_Master_Out(1721) <= \<const0>\;
  LOCKSTEP_Master_Out(1722) <= \<const0>\;
  LOCKSTEP_Master_Out(1723) <= \<const0>\;
  LOCKSTEP_Master_Out(1724) <= \<const0>\;
  LOCKSTEP_Master_Out(1725) <= \<const0>\;
  LOCKSTEP_Master_Out(1726) <= \<const0>\;
  LOCKSTEP_Master_Out(1727) <= \<const0>\;
  LOCKSTEP_Master_Out(1728) <= \<const0>\;
  LOCKSTEP_Master_Out(1729) <= \<const0>\;
  LOCKSTEP_Master_Out(1730) <= \<const0>\;
  LOCKSTEP_Master_Out(1731) <= \<const0>\;
  LOCKSTEP_Master_Out(1732) <= \<const0>\;
  LOCKSTEP_Master_Out(1733) <= \<const0>\;
  LOCKSTEP_Master_Out(1734) <= \<const0>\;
  LOCKSTEP_Master_Out(1735) <= \<const0>\;
  LOCKSTEP_Master_Out(1736) <= \<const0>\;
  LOCKSTEP_Master_Out(1737) <= \<const0>\;
  LOCKSTEP_Master_Out(1738) <= \<const0>\;
  LOCKSTEP_Master_Out(1739) <= \<const0>\;
  LOCKSTEP_Master_Out(1740) <= \<const0>\;
  LOCKSTEP_Master_Out(1741) <= \<const0>\;
  LOCKSTEP_Master_Out(1742) <= \<const0>\;
  LOCKSTEP_Master_Out(1743) <= \<const0>\;
  LOCKSTEP_Master_Out(1744) <= \<const0>\;
  LOCKSTEP_Master_Out(1745) <= \<const0>\;
  LOCKSTEP_Master_Out(1746) <= \<const0>\;
  LOCKSTEP_Master_Out(1747) <= \<const0>\;
  LOCKSTEP_Master_Out(1748) <= \<const0>\;
  LOCKSTEP_Master_Out(1749) <= \<const0>\;
  LOCKSTEP_Master_Out(1750) <= \<const0>\;
  LOCKSTEP_Master_Out(1751) <= \<const0>\;
  LOCKSTEP_Master_Out(1752) <= \<const0>\;
  LOCKSTEP_Master_Out(1753) <= \<const0>\;
  LOCKSTEP_Master_Out(1754) <= \<const0>\;
  LOCKSTEP_Master_Out(1755) <= \<const0>\;
  LOCKSTEP_Master_Out(1756) <= \<const0>\;
  LOCKSTEP_Master_Out(1757) <= \<const0>\;
  LOCKSTEP_Master_Out(1758) <= \<const0>\;
  LOCKSTEP_Master_Out(1759) <= \<const0>\;
  LOCKSTEP_Master_Out(1760) <= \<const0>\;
  LOCKSTEP_Master_Out(1761) <= \<const0>\;
  LOCKSTEP_Master_Out(1762) <= \<const0>\;
  LOCKSTEP_Master_Out(1763) <= \<const0>\;
  LOCKSTEP_Master_Out(1764) <= \<const0>\;
  LOCKSTEP_Master_Out(1765) <= \<const0>\;
  LOCKSTEP_Master_Out(1766) <= \<const0>\;
  LOCKSTEP_Master_Out(1767) <= \<const0>\;
  LOCKSTEP_Master_Out(1768) <= \<const0>\;
  LOCKSTEP_Master_Out(1769) <= \<const0>\;
  LOCKSTEP_Master_Out(1770) <= \<const0>\;
  LOCKSTEP_Master_Out(1771) <= \<const0>\;
  LOCKSTEP_Master_Out(1772) <= \<const0>\;
  LOCKSTEP_Master_Out(1773) <= \<const0>\;
  LOCKSTEP_Master_Out(1774) <= \<const0>\;
  LOCKSTEP_Master_Out(1775) <= \<const0>\;
  LOCKSTEP_Master_Out(1776) <= \<const0>\;
  LOCKSTEP_Master_Out(1777) <= \<const0>\;
  LOCKSTEP_Master_Out(1778) <= \<const0>\;
  LOCKSTEP_Master_Out(1779) <= \<const0>\;
  LOCKSTEP_Master_Out(1780) <= \<const0>\;
  LOCKSTEP_Master_Out(1781) <= \<const0>\;
  LOCKSTEP_Master_Out(1782) <= \<const0>\;
  LOCKSTEP_Master_Out(1783) <= \<const0>\;
  LOCKSTEP_Master_Out(1784) <= \<const0>\;
  LOCKSTEP_Master_Out(1785) <= \<const0>\;
  LOCKSTEP_Master_Out(1786) <= \<const0>\;
  LOCKSTEP_Master_Out(1787) <= \<const0>\;
  LOCKSTEP_Master_Out(1788) <= \<const0>\;
  LOCKSTEP_Master_Out(1789) <= \<const0>\;
  LOCKSTEP_Master_Out(1790) <= \<const0>\;
  LOCKSTEP_Master_Out(1791) <= \<const0>\;
  LOCKSTEP_Master_Out(1792) <= \<const0>\;
  LOCKSTEP_Master_Out(1793) <= \<const0>\;
  LOCKSTEP_Master_Out(1794) <= \<const0>\;
  LOCKSTEP_Master_Out(1795) <= \<const0>\;
  LOCKSTEP_Master_Out(1796) <= \<const0>\;
  LOCKSTEP_Master_Out(1797) <= \<const0>\;
  LOCKSTEP_Master_Out(1798) <= \<const0>\;
  LOCKSTEP_Master_Out(1799) <= \<const0>\;
  LOCKSTEP_Master_Out(1800) <= \<const0>\;
  LOCKSTEP_Master_Out(1801) <= \<const0>\;
  LOCKSTEP_Master_Out(1802) <= \<const0>\;
  LOCKSTEP_Master_Out(1803) <= \<const0>\;
  LOCKSTEP_Master_Out(1804) <= \<const0>\;
  LOCKSTEP_Master_Out(1805) <= \<const0>\;
  LOCKSTEP_Master_Out(1806) <= \<const0>\;
  LOCKSTEP_Master_Out(1807) <= \<const0>\;
  LOCKSTEP_Master_Out(1808) <= \<const0>\;
  LOCKSTEP_Master_Out(1809) <= \<const0>\;
  LOCKSTEP_Master_Out(1810) <= \<const0>\;
  LOCKSTEP_Master_Out(1811) <= \<const0>\;
  LOCKSTEP_Master_Out(1812) <= \<const0>\;
  LOCKSTEP_Master_Out(1813) <= \<const0>\;
  LOCKSTEP_Master_Out(1814) <= \<const0>\;
  LOCKSTEP_Master_Out(1815) <= \<const0>\;
  LOCKSTEP_Master_Out(1816) <= \<const0>\;
  LOCKSTEP_Master_Out(1817) <= \<const0>\;
  LOCKSTEP_Master_Out(1818) <= \<const0>\;
  LOCKSTEP_Master_Out(1819) <= \<const0>\;
  LOCKSTEP_Master_Out(1820) <= \<const0>\;
  LOCKSTEP_Master_Out(1821) <= \<const0>\;
  LOCKSTEP_Master_Out(1822) <= \<const0>\;
  LOCKSTEP_Master_Out(1823) <= \<const0>\;
  LOCKSTEP_Master_Out(1824) <= \<const0>\;
  LOCKSTEP_Master_Out(1825) <= \<const0>\;
  LOCKSTEP_Master_Out(1826) <= \<const0>\;
  LOCKSTEP_Master_Out(1827) <= \<const0>\;
  LOCKSTEP_Master_Out(1828) <= \<const0>\;
  LOCKSTEP_Master_Out(1829) <= \<const0>\;
  LOCKSTEP_Master_Out(1830) <= \<const0>\;
  LOCKSTEP_Master_Out(1831) <= \<const0>\;
  LOCKSTEP_Master_Out(1832) <= \<const0>\;
  LOCKSTEP_Master_Out(1833) <= \<const0>\;
  LOCKSTEP_Master_Out(1834) <= \<const0>\;
  LOCKSTEP_Master_Out(1835) <= \<const0>\;
  LOCKSTEP_Master_Out(1836) <= \<const0>\;
  LOCKSTEP_Master_Out(1837) <= \<const0>\;
  LOCKSTEP_Master_Out(1838) <= \<const0>\;
  LOCKSTEP_Master_Out(1839) <= \<const0>\;
  LOCKSTEP_Master_Out(1840) <= \<const0>\;
  LOCKSTEP_Master_Out(1841) <= \<const0>\;
  LOCKSTEP_Master_Out(1842) <= \<const0>\;
  LOCKSTEP_Master_Out(1843) <= \<const0>\;
  LOCKSTEP_Master_Out(1844) <= \<const0>\;
  LOCKSTEP_Master_Out(1845) <= \<const0>\;
  LOCKSTEP_Master_Out(1846) <= \<const0>\;
  LOCKSTEP_Master_Out(1847) <= \<const0>\;
  LOCKSTEP_Master_Out(1848) <= \<const0>\;
  LOCKSTEP_Master_Out(1849) <= \<const0>\;
  LOCKSTEP_Master_Out(1850) <= \<const0>\;
  LOCKSTEP_Master_Out(1851) <= \<const0>\;
  LOCKSTEP_Master_Out(1852) <= \<const0>\;
  LOCKSTEP_Master_Out(1853) <= \<const0>\;
  LOCKSTEP_Master_Out(1854) <= \<const0>\;
  LOCKSTEP_Master_Out(1855) <= \<const0>\;
  LOCKSTEP_Master_Out(1856) <= \<const0>\;
  LOCKSTEP_Master_Out(1857) <= \<const0>\;
  LOCKSTEP_Master_Out(1858) <= \<const0>\;
  LOCKSTEP_Master_Out(1859) <= \<const0>\;
  LOCKSTEP_Master_Out(1860) <= \<const0>\;
  LOCKSTEP_Master_Out(1861) <= \<const0>\;
  LOCKSTEP_Master_Out(1862) <= \<const0>\;
  LOCKSTEP_Master_Out(1863) <= \<const0>\;
  LOCKSTEP_Master_Out(1864) <= \<const0>\;
  LOCKSTEP_Master_Out(1865) <= \<const0>\;
  LOCKSTEP_Master_Out(1866) <= \<const0>\;
  LOCKSTEP_Master_Out(1867) <= \<const0>\;
  LOCKSTEP_Master_Out(1868) <= \<const0>\;
  LOCKSTEP_Master_Out(1869) <= \<const0>\;
  LOCKSTEP_Master_Out(1870) <= \<const0>\;
  LOCKSTEP_Master_Out(1871) <= \<const0>\;
  LOCKSTEP_Master_Out(1872) <= \<const0>\;
  LOCKSTEP_Master_Out(1873) <= \<const0>\;
  LOCKSTEP_Master_Out(1874) <= \<const0>\;
  LOCKSTEP_Master_Out(1875) <= \<const0>\;
  LOCKSTEP_Master_Out(1876) <= \<const0>\;
  LOCKSTEP_Master_Out(1877) <= \<const0>\;
  LOCKSTEP_Master_Out(1878) <= \<const0>\;
  LOCKSTEP_Master_Out(1879) <= \<const0>\;
  LOCKSTEP_Master_Out(1880) <= \<const0>\;
  LOCKSTEP_Master_Out(1881) <= \<const0>\;
  LOCKSTEP_Master_Out(1882) <= \<const0>\;
  LOCKSTEP_Master_Out(1883) <= \<const0>\;
  LOCKSTEP_Master_Out(1884) <= \<const0>\;
  LOCKSTEP_Master_Out(1885) <= \<const0>\;
  LOCKSTEP_Master_Out(1886) <= \<const0>\;
  LOCKSTEP_Master_Out(1887) <= \<const0>\;
  LOCKSTEP_Master_Out(1888) <= \<const0>\;
  LOCKSTEP_Master_Out(1889) <= \<const0>\;
  LOCKSTEP_Master_Out(1890) <= \<const0>\;
  LOCKSTEP_Master_Out(1891) <= \<const0>\;
  LOCKSTEP_Master_Out(1892) <= \<const0>\;
  LOCKSTEP_Master_Out(1893) <= \<const0>\;
  LOCKSTEP_Master_Out(1894) <= \<const0>\;
  LOCKSTEP_Master_Out(1895) <= \<const0>\;
  LOCKSTEP_Master_Out(1896) <= \<const0>\;
  LOCKSTEP_Master_Out(1897) <= \<const0>\;
  LOCKSTEP_Master_Out(1898) <= \<const0>\;
  LOCKSTEP_Master_Out(1899) <= \<const0>\;
  LOCKSTEP_Master_Out(1900) <= \<const0>\;
  LOCKSTEP_Master_Out(1901) <= \<const0>\;
  LOCKSTEP_Master_Out(1902) <= \<const0>\;
  LOCKSTEP_Master_Out(1903) <= \<const0>\;
  LOCKSTEP_Master_Out(1904) <= \<const0>\;
  LOCKSTEP_Master_Out(1905) <= \<const0>\;
  LOCKSTEP_Master_Out(1906) <= \<const0>\;
  LOCKSTEP_Master_Out(1907) <= \<const0>\;
  LOCKSTEP_Master_Out(1908) <= \<const0>\;
  LOCKSTEP_Master_Out(1909) <= \<const0>\;
  LOCKSTEP_Master_Out(1910) <= \<const0>\;
  LOCKSTEP_Master_Out(1911) <= \<const0>\;
  LOCKSTEP_Master_Out(1912) <= \<const0>\;
  LOCKSTEP_Master_Out(1913) <= \<const0>\;
  LOCKSTEP_Master_Out(1914) <= \<const0>\;
  LOCKSTEP_Master_Out(1915) <= \<const0>\;
  LOCKSTEP_Master_Out(1916) <= \<const0>\;
  LOCKSTEP_Master_Out(1917) <= \<const0>\;
  LOCKSTEP_Master_Out(1918) <= \<const0>\;
  LOCKSTEP_Master_Out(1919) <= \<const0>\;
  LOCKSTEP_Master_Out(1920) <= \<const0>\;
  LOCKSTEP_Master_Out(1921) <= \<const0>\;
  LOCKSTEP_Master_Out(1922) <= \<const0>\;
  LOCKSTEP_Master_Out(1923) <= \<const0>\;
  LOCKSTEP_Master_Out(1924) <= \<const0>\;
  LOCKSTEP_Master_Out(1925) <= \<const0>\;
  LOCKSTEP_Master_Out(1926) <= \<const0>\;
  LOCKSTEP_Master_Out(1927) <= \<const0>\;
  LOCKSTEP_Master_Out(1928) <= \<const0>\;
  LOCKSTEP_Master_Out(1929) <= \<const0>\;
  LOCKSTEP_Master_Out(1930) <= \<const0>\;
  LOCKSTEP_Master_Out(1931) <= \<const0>\;
  LOCKSTEP_Master_Out(1932) <= \<const0>\;
  LOCKSTEP_Master_Out(1933) <= \<const0>\;
  LOCKSTEP_Master_Out(1934) <= \<const0>\;
  LOCKSTEP_Master_Out(1935) <= \<const0>\;
  LOCKSTEP_Master_Out(1936) <= \<const0>\;
  LOCKSTEP_Master_Out(1937) <= \<const0>\;
  LOCKSTEP_Master_Out(1938) <= \<const0>\;
  LOCKSTEP_Master_Out(1939) <= \<const0>\;
  LOCKSTEP_Master_Out(1940) <= \<const0>\;
  LOCKSTEP_Master_Out(1941) <= \<const0>\;
  LOCKSTEP_Master_Out(1942) <= \<const0>\;
  LOCKSTEP_Master_Out(1943) <= \<const0>\;
  LOCKSTEP_Master_Out(1944) <= \<const0>\;
  LOCKSTEP_Master_Out(1945) <= \<const0>\;
  LOCKSTEP_Master_Out(1946) <= \<const0>\;
  LOCKSTEP_Master_Out(1947) <= \<const0>\;
  LOCKSTEP_Master_Out(1948) <= \<const0>\;
  LOCKSTEP_Master_Out(1949) <= \<const0>\;
  LOCKSTEP_Master_Out(1950) <= \<const0>\;
  LOCKSTEP_Master_Out(1951) <= \<const0>\;
  LOCKSTEP_Master_Out(1952) <= \<const0>\;
  LOCKSTEP_Master_Out(1953) <= \<const0>\;
  LOCKSTEP_Master_Out(1954) <= \<const0>\;
  LOCKSTEP_Master_Out(1955) <= \<const0>\;
  LOCKSTEP_Master_Out(1956) <= \<const0>\;
  LOCKSTEP_Master_Out(1957) <= \<const0>\;
  LOCKSTEP_Master_Out(1958) <= \<const0>\;
  LOCKSTEP_Master_Out(1959) <= \<const0>\;
  LOCKSTEP_Master_Out(1960) <= \<const0>\;
  LOCKSTEP_Master_Out(1961) <= \<const0>\;
  LOCKSTEP_Master_Out(1962) <= \<const0>\;
  LOCKSTEP_Master_Out(1963) <= \<const0>\;
  LOCKSTEP_Master_Out(1964) <= \<const0>\;
  LOCKSTEP_Master_Out(1965) <= \<const0>\;
  LOCKSTEP_Master_Out(1966) <= \<const0>\;
  LOCKSTEP_Master_Out(1967) <= \<const0>\;
  LOCKSTEP_Master_Out(1968) <= \<const0>\;
  LOCKSTEP_Master_Out(1969) <= \<const0>\;
  LOCKSTEP_Master_Out(1970) <= \<const0>\;
  LOCKSTEP_Master_Out(1971) <= \<const0>\;
  LOCKSTEP_Master_Out(1972) <= \<const0>\;
  LOCKSTEP_Master_Out(1973) <= \<const0>\;
  LOCKSTEP_Master_Out(1974) <= \<const0>\;
  LOCKSTEP_Master_Out(1975) <= \<const0>\;
  LOCKSTEP_Master_Out(1976) <= \<const0>\;
  LOCKSTEP_Master_Out(1977) <= \<const0>\;
  LOCKSTEP_Master_Out(1978) <= \<const0>\;
  LOCKSTEP_Master_Out(1979) <= \<const0>\;
  LOCKSTEP_Master_Out(1980) <= \<const0>\;
  LOCKSTEP_Master_Out(1981) <= \<const0>\;
  LOCKSTEP_Master_Out(1982) <= \<const0>\;
  LOCKSTEP_Master_Out(1983) <= \<const0>\;
  LOCKSTEP_Master_Out(1984) <= \<const0>\;
  LOCKSTEP_Master_Out(1985) <= \<const0>\;
  LOCKSTEP_Master_Out(1986) <= \<const0>\;
  LOCKSTEP_Master_Out(1987) <= \<const0>\;
  LOCKSTEP_Master_Out(1988) <= \<const0>\;
  LOCKSTEP_Master_Out(1989) <= \<const0>\;
  LOCKSTEP_Master_Out(1990) <= \<const0>\;
  LOCKSTEP_Master_Out(1991) <= \<const0>\;
  LOCKSTEP_Master_Out(1992) <= \<const0>\;
  LOCKSTEP_Master_Out(1993) <= \<const0>\;
  LOCKSTEP_Master_Out(1994) <= \<const0>\;
  LOCKSTEP_Master_Out(1995) <= \<const0>\;
  LOCKSTEP_Master_Out(1996) <= \<const0>\;
  LOCKSTEP_Master_Out(1997) <= \<const0>\;
  LOCKSTEP_Master_Out(1998) <= \<const0>\;
  LOCKSTEP_Master_Out(1999) <= \<const0>\;
  LOCKSTEP_Master_Out(2000) <= \<const0>\;
  LOCKSTEP_Master_Out(2001) <= \<const0>\;
  LOCKSTEP_Master_Out(2002) <= \<const0>\;
  LOCKSTEP_Master_Out(2003) <= \<const0>\;
  LOCKSTEP_Master_Out(2004) <= \<const0>\;
  LOCKSTEP_Master_Out(2005) <= \<const0>\;
  LOCKSTEP_Master_Out(2006) <= \<const0>\;
  LOCKSTEP_Master_Out(2007) <= \<const0>\;
  LOCKSTEP_Master_Out(2008) <= \<const0>\;
  LOCKSTEP_Master_Out(2009) <= \<const0>\;
  LOCKSTEP_Master_Out(2010) <= \<const0>\;
  LOCKSTEP_Master_Out(2011) <= \<const0>\;
  LOCKSTEP_Master_Out(2012) <= \<const0>\;
  LOCKSTEP_Master_Out(2013) <= \<const0>\;
  LOCKSTEP_Master_Out(2014) <= \<const0>\;
  LOCKSTEP_Master_Out(2015) <= \<const0>\;
  LOCKSTEP_Master_Out(2016) <= \<const0>\;
  LOCKSTEP_Master_Out(2017) <= \<const0>\;
  LOCKSTEP_Master_Out(2018) <= \<const0>\;
  LOCKSTEP_Master_Out(2019) <= \<const0>\;
  LOCKSTEP_Master_Out(2020) <= \<const0>\;
  LOCKSTEP_Master_Out(2021) <= \<const0>\;
  LOCKSTEP_Master_Out(2022) <= \<const0>\;
  LOCKSTEP_Master_Out(2023) <= \<const0>\;
  LOCKSTEP_Master_Out(2024) <= \<const0>\;
  LOCKSTEP_Master_Out(2025) <= \<const0>\;
  LOCKSTEP_Master_Out(2026) <= \<const0>\;
  LOCKSTEP_Master_Out(2027) <= \<const0>\;
  LOCKSTEP_Master_Out(2028) <= \<const0>\;
  LOCKSTEP_Master_Out(2029) <= \<const0>\;
  LOCKSTEP_Master_Out(2030) <= \<const0>\;
  LOCKSTEP_Master_Out(2031) <= \<const0>\;
  LOCKSTEP_Master_Out(2032) <= \<const0>\;
  LOCKSTEP_Master_Out(2033) <= \<const0>\;
  LOCKSTEP_Master_Out(2034) <= \<const0>\;
  LOCKSTEP_Master_Out(2035) <= \<const0>\;
  LOCKSTEP_Master_Out(2036) <= \<const0>\;
  LOCKSTEP_Master_Out(2037) <= \<const0>\;
  LOCKSTEP_Master_Out(2038) <= \<const0>\;
  LOCKSTEP_Master_Out(2039) <= \<const0>\;
  LOCKSTEP_Master_Out(2040) <= \<const0>\;
  LOCKSTEP_Master_Out(2041) <= \<const0>\;
  LOCKSTEP_Master_Out(2042) <= \<const0>\;
  LOCKSTEP_Master_Out(2043) <= \<const0>\;
  LOCKSTEP_Master_Out(2044) <= \<const0>\;
  LOCKSTEP_Master_Out(2045) <= \<const0>\;
  LOCKSTEP_Master_Out(2046) <= \<const0>\;
  LOCKSTEP_Master_Out(2047) <= \<const0>\;
  LOCKSTEP_Master_Out(2048) <= \<const0>\;
  LOCKSTEP_Master_Out(2049) <= \<const0>\;
  LOCKSTEP_Master_Out(2050) <= \<const0>\;
  LOCKSTEP_Master_Out(2051) <= \<const0>\;
  LOCKSTEP_Master_Out(2052) <= \<const0>\;
  LOCKSTEP_Master_Out(2053) <= \<const0>\;
  LOCKSTEP_Master_Out(2054) <= \<const0>\;
  LOCKSTEP_Master_Out(2055) <= \<const0>\;
  LOCKSTEP_Master_Out(2056) <= \<const0>\;
  LOCKSTEP_Master_Out(2057) <= \<const0>\;
  LOCKSTEP_Master_Out(2058) <= \<const0>\;
  LOCKSTEP_Master_Out(2059) <= \<const0>\;
  LOCKSTEP_Master_Out(2060) <= \<const0>\;
  LOCKSTEP_Master_Out(2061) <= \<const0>\;
  LOCKSTEP_Master_Out(2062) <= \<const0>\;
  LOCKSTEP_Master_Out(2063) <= \<const0>\;
  LOCKSTEP_Master_Out(2064) <= \<const0>\;
  LOCKSTEP_Master_Out(2065) <= \<const0>\;
  LOCKSTEP_Master_Out(2066) <= \<const0>\;
  LOCKSTEP_Master_Out(2067) <= \<const0>\;
  LOCKSTEP_Master_Out(2068) <= \<const0>\;
  LOCKSTEP_Master_Out(2069) <= \<const0>\;
  LOCKSTEP_Master_Out(2070) <= \<const0>\;
  LOCKSTEP_Master_Out(2071) <= \<const0>\;
  LOCKSTEP_Master_Out(2072) <= \<const0>\;
  LOCKSTEP_Master_Out(2073) <= \<const0>\;
  LOCKSTEP_Master_Out(2074) <= \<const0>\;
  LOCKSTEP_Master_Out(2075) <= \<const0>\;
  LOCKSTEP_Master_Out(2076) <= \<const0>\;
  LOCKSTEP_Master_Out(2077) <= \<const0>\;
  LOCKSTEP_Master_Out(2078) <= \<const0>\;
  LOCKSTEP_Master_Out(2079) <= \<const0>\;
  LOCKSTEP_Master_Out(2080) <= \<const0>\;
  LOCKSTEP_Master_Out(2081) <= \<const0>\;
  LOCKSTEP_Master_Out(2082) <= \<const0>\;
  LOCKSTEP_Master_Out(2083) <= \<const0>\;
  LOCKSTEP_Master_Out(2084) <= \<const0>\;
  LOCKSTEP_Master_Out(2085) <= \<const0>\;
  LOCKSTEP_Master_Out(2086) <= \<const0>\;
  LOCKSTEP_Master_Out(2087) <= \<const0>\;
  LOCKSTEP_Master_Out(2088) <= \<const0>\;
  LOCKSTEP_Master_Out(2089) <= \<const0>\;
  LOCKSTEP_Master_Out(2090) <= \<const0>\;
  LOCKSTEP_Master_Out(2091) <= \<const0>\;
  LOCKSTEP_Master_Out(2092) <= \<const0>\;
  LOCKSTEP_Master_Out(2093) <= \<const0>\;
  LOCKSTEP_Master_Out(2094) <= \<const0>\;
  LOCKSTEP_Master_Out(2095) <= \<const0>\;
  LOCKSTEP_Master_Out(2096) <= \<const0>\;
  LOCKSTEP_Master_Out(2097) <= \<const0>\;
  LOCKSTEP_Master_Out(2098) <= \<const0>\;
  LOCKSTEP_Master_Out(2099) <= \<const0>\;
  LOCKSTEP_Master_Out(2100) <= \<const0>\;
  LOCKSTEP_Master_Out(2101) <= \<const0>\;
  LOCKSTEP_Master_Out(2102) <= \<const0>\;
  LOCKSTEP_Master_Out(2103) <= \<const0>\;
  LOCKSTEP_Master_Out(2104) <= \<const0>\;
  LOCKSTEP_Master_Out(2105) <= \<const0>\;
  LOCKSTEP_Master_Out(2106) <= \<const0>\;
  LOCKSTEP_Master_Out(2107) <= \<const0>\;
  LOCKSTEP_Master_Out(2108) <= \<const0>\;
  LOCKSTEP_Master_Out(2109) <= \<const0>\;
  LOCKSTEP_Master_Out(2110) <= \<const0>\;
  LOCKSTEP_Master_Out(2111) <= \<const0>\;
  LOCKSTEP_Master_Out(2112) <= \<const0>\;
  LOCKSTEP_Master_Out(2113) <= \<const0>\;
  LOCKSTEP_Master_Out(2114) <= \<const0>\;
  LOCKSTEP_Master_Out(2115) <= \<const0>\;
  LOCKSTEP_Master_Out(2116) <= \<const0>\;
  LOCKSTEP_Master_Out(2117) <= \<const0>\;
  LOCKSTEP_Master_Out(2118) <= \<const0>\;
  LOCKSTEP_Master_Out(2119) <= \<const0>\;
  LOCKSTEP_Master_Out(2120) <= \<const0>\;
  LOCKSTEP_Master_Out(2121) <= \<const0>\;
  LOCKSTEP_Master_Out(2122) <= \<const0>\;
  LOCKSTEP_Master_Out(2123) <= \<const0>\;
  LOCKSTEP_Master_Out(2124) <= \<const0>\;
  LOCKSTEP_Master_Out(2125) <= \<const0>\;
  LOCKSTEP_Master_Out(2126) <= \<const0>\;
  LOCKSTEP_Master_Out(2127) <= \<const0>\;
  LOCKSTEP_Master_Out(2128) <= \<const0>\;
  LOCKSTEP_Master_Out(2129) <= \<const0>\;
  LOCKSTEP_Master_Out(2130) <= \<const0>\;
  LOCKSTEP_Master_Out(2131) <= \<const0>\;
  LOCKSTEP_Master_Out(2132) <= \<const0>\;
  LOCKSTEP_Master_Out(2133) <= \<const0>\;
  LOCKSTEP_Master_Out(2134) <= \<const0>\;
  LOCKSTEP_Master_Out(2135) <= \<const0>\;
  LOCKSTEP_Master_Out(2136) <= \<const0>\;
  LOCKSTEP_Master_Out(2137) <= \<const0>\;
  LOCKSTEP_Master_Out(2138) <= \<const0>\;
  LOCKSTEP_Master_Out(2139) <= \<const0>\;
  LOCKSTEP_Master_Out(2140) <= \<const0>\;
  LOCKSTEP_Master_Out(2141) <= \<const0>\;
  LOCKSTEP_Master_Out(2142) <= \<const0>\;
  LOCKSTEP_Master_Out(2143) <= \<const0>\;
  LOCKSTEP_Master_Out(2144) <= \<const0>\;
  LOCKSTEP_Master_Out(2145) <= \<const0>\;
  LOCKSTEP_Master_Out(2146) <= \<const0>\;
  LOCKSTEP_Master_Out(2147) <= \<const0>\;
  LOCKSTEP_Master_Out(2148) <= \<const0>\;
  LOCKSTEP_Master_Out(2149) <= \<const0>\;
  LOCKSTEP_Master_Out(2150) <= \<const0>\;
  LOCKSTEP_Master_Out(2151) <= \<const0>\;
  LOCKSTEP_Master_Out(2152) <= \<const0>\;
  LOCKSTEP_Master_Out(2153) <= \<const0>\;
  LOCKSTEP_Master_Out(2154) <= \<const0>\;
  LOCKSTEP_Master_Out(2155) <= \<const0>\;
  LOCKSTEP_Master_Out(2156) <= \<const0>\;
  LOCKSTEP_Master_Out(2157) <= \<const0>\;
  LOCKSTEP_Master_Out(2158) <= \<const0>\;
  LOCKSTEP_Master_Out(2159) <= \<const0>\;
  LOCKSTEP_Master_Out(2160) <= \<const0>\;
  LOCKSTEP_Master_Out(2161) <= \<const0>\;
  LOCKSTEP_Master_Out(2162) <= \<const0>\;
  LOCKSTEP_Master_Out(2163) <= \<const0>\;
  LOCKSTEP_Master_Out(2164) <= \<const0>\;
  LOCKSTEP_Master_Out(2165) <= \<const0>\;
  LOCKSTEP_Master_Out(2166) <= \<const0>\;
  LOCKSTEP_Master_Out(2167) <= \<const0>\;
  LOCKSTEP_Master_Out(2168) <= \<const0>\;
  LOCKSTEP_Master_Out(2169) <= \<const0>\;
  LOCKSTEP_Master_Out(2170) <= \<const0>\;
  LOCKSTEP_Master_Out(2171) <= \<const0>\;
  LOCKSTEP_Master_Out(2172) <= \<const0>\;
  LOCKSTEP_Master_Out(2173) <= \<const0>\;
  LOCKSTEP_Master_Out(2174) <= \<const0>\;
  LOCKSTEP_Master_Out(2175) <= \<const0>\;
  LOCKSTEP_Master_Out(2176) <= \<const0>\;
  LOCKSTEP_Master_Out(2177) <= \<const0>\;
  LOCKSTEP_Master_Out(2178) <= \<const0>\;
  LOCKSTEP_Master_Out(2179) <= \<const0>\;
  LOCKSTEP_Master_Out(2180) <= \<const0>\;
  LOCKSTEP_Master_Out(2181) <= \<const0>\;
  LOCKSTEP_Master_Out(2182) <= \<const0>\;
  LOCKSTEP_Master_Out(2183) <= \<const0>\;
  LOCKSTEP_Master_Out(2184) <= \<const0>\;
  LOCKSTEP_Master_Out(2185) <= \<const0>\;
  LOCKSTEP_Master_Out(2186) <= \<const0>\;
  LOCKSTEP_Master_Out(2187) <= \<const0>\;
  LOCKSTEP_Master_Out(2188) <= \<const0>\;
  LOCKSTEP_Master_Out(2189) <= \<const0>\;
  LOCKSTEP_Master_Out(2190) <= \<const0>\;
  LOCKSTEP_Master_Out(2191) <= \<const0>\;
  LOCKSTEP_Master_Out(2192) <= \<const0>\;
  LOCKSTEP_Master_Out(2193) <= \<const0>\;
  LOCKSTEP_Master_Out(2194) <= \<const0>\;
  LOCKSTEP_Master_Out(2195) <= \<const0>\;
  LOCKSTEP_Master_Out(2196) <= \<const0>\;
  LOCKSTEP_Master_Out(2197) <= \<const0>\;
  LOCKSTEP_Master_Out(2198) <= \<const0>\;
  LOCKSTEP_Master_Out(2199) <= \<const0>\;
  LOCKSTEP_Master_Out(2200) <= \<const0>\;
  LOCKSTEP_Master_Out(2201) <= \<const0>\;
  LOCKSTEP_Master_Out(2202) <= \<const0>\;
  LOCKSTEP_Master_Out(2203) <= \<const0>\;
  LOCKSTEP_Master_Out(2204) <= \<const0>\;
  LOCKSTEP_Master_Out(2205) <= \<const0>\;
  LOCKSTEP_Master_Out(2206) <= \<const0>\;
  LOCKSTEP_Master_Out(2207) <= \<const0>\;
  LOCKSTEP_Master_Out(2208) <= \<const0>\;
  LOCKSTEP_Master_Out(2209) <= \<const0>\;
  LOCKSTEP_Master_Out(2210) <= \<const0>\;
  LOCKSTEP_Master_Out(2211) <= \<const0>\;
  LOCKSTEP_Master_Out(2212) <= \<const0>\;
  LOCKSTEP_Master_Out(2213) <= \<const0>\;
  LOCKSTEP_Master_Out(2214) <= \<const0>\;
  LOCKSTEP_Master_Out(2215) <= \<const0>\;
  LOCKSTEP_Master_Out(2216) <= \<const0>\;
  LOCKSTEP_Master_Out(2217) <= \<const0>\;
  LOCKSTEP_Master_Out(2218) <= \<const0>\;
  LOCKSTEP_Master_Out(2219) <= \<const0>\;
  LOCKSTEP_Master_Out(2220) <= \<const0>\;
  LOCKSTEP_Master_Out(2221) <= \<const0>\;
  LOCKSTEP_Master_Out(2222) <= \<const0>\;
  LOCKSTEP_Master_Out(2223) <= \<const0>\;
  LOCKSTEP_Master_Out(2224) <= \<const0>\;
  LOCKSTEP_Master_Out(2225) <= \<const0>\;
  LOCKSTEP_Master_Out(2226) <= \<const0>\;
  LOCKSTEP_Master_Out(2227) <= \<const0>\;
  LOCKSTEP_Master_Out(2228) <= \<const0>\;
  LOCKSTEP_Master_Out(2229) <= \<const0>\;
  LOCKSTEP_Master_Out(2230) <= \<const0>\;
  LOCKSTEP_Master_Out(2231) <= \<const0>\;
  LOCKSTEP_Master_Out(2232) <= \<const0>\;
  LOCKSTEP_Master_Out(2233) <= \<const0>\;
  LOCKSTEP_Master_Out(2234) <= \<const0>\;
  LOCKSTEP_Master_Out(2235) <= \<const0>\;
  LOCKSTEP_Master_Out(2236) <= \<const0>\;
  LOCKSTEP_Master_Out(2237) <= \<const0>\;
  LOCKSTEP_Master_Out(2238) <= \<const0>\;
  LOCKSTEP_Master_Out(2239) <= \<const0>\;
  LOCKSTEP_Master_Out(2240) <= \<const0>\;
  LOCKSTEP_Master_Out(2241) <= \<const0>\;
  LOCKSTEP_Master_Out(2242) <= \<const0>\;
  LOCKSTEP_Master_Out(2243) <= \<const0>\;
  LOCKSTEP_Master_Out(2244) <= \<const0>\;
  LOCKSTEP_Master_Out(2245) <= \<const0>\;
  LOCKSTEP_Master_Out(2246) <= \<const0>\;
  LOCKSTEP_Master_Out(2247) <= \<const0>\;
  LOCKSTEP_Master_Out(2248) <= \<const0>\;
  LOCKSTEP_Master_Out(2249) <= \<const0>\;
  LOCKSTEP_Master_Out(2250) <= \<const0>\;
  LOCKSTEP_Master_Out(2251) <= \<const0>\;
  LOCKSTEP_Master_Out(2252) <= \<const0>\;
  LOCKSTEP_Master_Out(2253) <= \<const0>\;
  LOCKSTEP_Master_Out(2254) <= \<const0>\;
  LOCKSTEP_Master_Out(2255) <= \<const0>\;
  LOCKSTEP_Master_Out(2256) <= \<const0>\;
  LOCKSTEP_Master_Out(2257) <= \<const0>\;
  LOCKSTEP_Master_Out(2258) <= \<const0>\;
  LOCKSTEP_Master_Out(2259) <= \<const0>\;
  LOCKSTEP_Master_Out(2260) <= \<const0>\;
  LOCKSTEP_Master_Out(2261) <= \<const0>\;
  LOCKSTEP_Master_Out(2262) <= \<const0>\;
  LOCKSTEP_Master_Out(2263) <= \<const0>\;
  LOCKSTEP_Master_Out(2264) <= \<const0>\;
  LOCKSTEP_Master_Out(2265) <= \<const0>\;
  LOCKSTEP_Master_Out(2266) <= \<const0>\;
  LOCKSTEP_Master_Out(2267) <= \<const0>\;
  LOCKSTEP_Master_Out(2268) <= \<const0>\;
  LOCKSTEP_Master_Out(2269) <= \<const0>\;
  LOCKSTEP_Master_Out(2270) <= \<const0>\;
  LOCKSTEP_Master_Out(2271) <= \<const0>\;
  LOCKSTEP_Master_Out(2272) <= \<const0>\;
  LOCKSTEP_Master_Out(2273) <= \<const0>\;
  LOCKSTEP_Master_Out(2274) <= \<const0>\;
  LOCKSTEP_Master_Out(2275) <= \<const0>\;
  LOCKSTEP_Master_Out(2276) <= \<const0>\;
  LOCKSTEP_Master_Out(2277) <= \<const0>\;
  LOCKSTEP_Master_Out(2278) <= \<const0>\;
  LOCKSTEP_Master_Out(2279) <= \<const0>\;
  LOCKSTEP_Master_Out(2280) <= \<const0>\;
  LOCKSTEP_Master_Out(2281) <= \<const0>\;
  LOCKSTEP_Master_Out(2282) <= \<const0>\;
  LOCKSTEP_Master_Out(2283) <= \<const0>\;
  LOCKSTEP_Master_Out(2284) <= \<const0>\;
  LOCKSTEP_Master_Out(2285) <= \<const0>\;
  LOCKSTEP_Master_Out(2286) <= \<const0>\;
  LOCKSTEP_Master_Out(2287) <= \<const0>\;
  LOCKSTEP_Master_Out(2288) <= \<const0>\;
  LOCKSTEP_Master_Out(2289) <= \<const0>\;
  LOCKSTEP_Master_Out(2290) <= \<const0>\;
  LOCKSTEP_Master_Out(2291) <= \<const0>\;
  LOCKSTEP_Master_Out(2292) <= \<const0>\;
  LOCKSTEP_Master_Out(2293) <= \<const0>\;
  LOCKSTEP_Master_Out(2294) <= \<const0>\;
  LOCKSTEP_Master_Out(2295) <= \<const0>\;
  LOCKSTEP_Master_Out(2296) <= \<const0>\;
  LOCKSTEP_Master_Out(2297) <= \<const0>\;
  LOCKSTEP_Master_Out(2298) <= \<const0>\;
  LOCKSTEP_Master_Out(2299) <= \<const0>\;
  LOCKSTEP_Master_Out(2300) <= \<const0>\;
  LOCKSTEP_Master_Out(2301) <= \<const0>\;
  LOCKSTEP_Master_Out(2302) <= \<const0>\;
  LOCKSTEP_Master_Out(2303) <= \<const0>\;
  LOCKSTEP_Master_Out(2304) <= \<const0>\;
  LOCKSTEP_Master_Out(2305) <= \<const0>\;
  LOCKSTEP_Master_Out(2306) <= \<const0>\;
  LOCKSTEP_Master_Out(2307) <= \<const0>\;
  LOCKSTEP_Master_Out(2308) <= \<const0>\;
  LOCKSTEP_Master_Out(2309) <= \<const0>\;
  LOCKSTEP_Master_Out(2310) <= \<const0>\;
  LOCKSTEP_Master_Out(2311) <= \<const0>\;
  LOCKSTEP_Master_Out(2312) <= \<const0>\;
  LOCKSTEP_Master_Out(2313) <= \<const0>\;
  LOCKSTEP_Master_Out(2314) <= \<const0>\;
  LOCKSTEP_Master_Out(2315) <= \<const0>\;
  LOCKSTEP_Master_Out(2316) <= \<const0>\;
  LOCKSTEP_Master_Out(2317) <= \<const0>\;
  LOCKSTEP_Master_Out(2318) <= \<const0>\;
  LOCKSTEP_Master_Out(2319) <= \<const0>\;
  LOCKSTEP_Master_Out(2320) <= \<const0>\;
  LOCKSTEP_Master_Out(2321) <= \<const0>\;
  LOCKSTEP_Master_Out(2322) <= \<const0>\;
  LOCKSTEP_Master_Out(2323) <= \<const0>\;
  LOCKSTEP_Master_Out(2324) <= \<const0>\;
  LOCKSTEP_Master_Out(2325) <= \<const0>\;
  LOCKSTEP_Master_Out(2326) <= \<const0>\;
  LOCKSTEP_Master_Out(2327) <= \<const0>\;
  LOCKSTEP_Master_Out(2328) <= \<const0>\;
  LOCKSTEP_Master_Out(2329) <= \<const0>\;
  LOCKSTEP_Master_Out(2330) <= \<const0>\;
  LOCKSTEP_Master_Out(2331) <= \<const0>\;
  LOCKSTEP_Master_Out(2332) <= \<const0>\;
  LOCKSTEP_Master_Out(2333) <= \<const0>\;
  LOCKSTEP_Master_Out(2334) <= \<const0>\;
  LOCKSTEP_Master_Out(2335) <= \<const0>\;
  LOCKSTEP_Master_Out(2336) <= \<const0>\;
  LOCKSTEP_Master_Out(2337) <= \<const0>\;
  LOCKSTEP_Master_Out(2338) <= \<const0>\;
  LOCKSTEP_Master_Out(2339) <= \<const0>\;
  LOCKSTEP_Master_Out(2340) <= \<const0>\;
  LOCKSTEP_Master_Out(2341) <= \<const0>\;
  LOCKSTEP_Master_Out(2342) <= \<const0>\;
  LOCKSTEP_Master_Out(2343) <= \<const0>\;
  LOCKSTEP_Master_Out(2344) <= \<const0>\;
  LOCKSTEP_Master_Out(2345) <= \<const0>\;
  LOCKSTEP_Master_Out(2346) <= \<const0>\;
  LOCKSTEP_Master_Out(2347) <= \<const0>\;
  LOCKSTEP_Master_Out(2348) <= \<const0>\;
  LOCKSTEP_Master_Out(2349) <= \<const0>\;
  LOCKSTEP_Master_Out(2350) <= \<const0>\;
  LOCKSTEP_Master_Out(2351) <= \<const0>\;
  LOCKSTEP_Master_Out(2352) <= \<const0>\;
  LOCKSTEP_Master_Out(2353) <= \<const0>\;
  LOCKSTEP_Master_Out(2354) <= \<const0>\;
  LOCKSTEP_Master_Out(2355) <= \<const0>\;
  LOCKSTEP_Master_Out(2356) <= \<const0>\;
  LOCKSTEP_Master_Out(2357) <= \<const0>\;
  LOCKSTEP_Master_Out(2358) <= \<const0>\;
  LOCKSTEP_Master_Out(2359) <= \<const0>\;
  LOCKSTEP_Master_Out(2360) <= \<const0>\;
  LOCKSTEP_Master_Out(2361) <= \<const0>\;
  LOCKSTEP_Master_Out(2362) <= \<const0>\;
  LOCKSTEP_Master_Out(2363) <= \<const0>\;
  LOCKSTEP_Master_Out(2364) <= \<const0>\;
  LOCKSTEP_Master_Out(2365) <= \<const0>\;
  LOCKSTEP_Master_Out(2366) <= \<const0>\;
  LOCKSTEP_Master_Out(2367) <= \<const0>\;
  LOCKSTEP_Master_Out(2368) <= \<const0>\;
  LOCKSTEP_Master_Out(2369) <= \<const0>\;
  LOCKSTEP_Master_Out(2370) <= \<const0>\;
  LOCKSTEP_Master_Out(2371) <= \<const0>\;
  LOCKSTEP_Master_Out(2372) <= \<const0>\;
  LOCKSTEP_Master_Out(2373) <= \<const0>\;
  LOCKSTEP_Master_Out(2374) <= \<const0>\;
  LOCKSTEP_Master_Out(2375) <= \<const0>\;
  LOCKSTEP_Master_Out(2376) <= \<const0>\;
  LOCKSTEP_Master_Out(2377) <= \<const0>\;
  LOCKSTEP_Master_Out(2378) <= \<const0>\;
  LOCKSTEP_Master_Out(2379) <= \<const0>\;
  LOCKSTEP_Master_Out(2380) <= \<const0>\;
  LOCKSTEP_Master_Out(2381) <= \<const0>\;
  LOCKSTEP_Master_Out(2382) <= \<const0>\;
  LOCKSTEP_Master_Out(2383) <= \<const0>\;
  LOCKSTEP_Master_Out(2384) <= \<const0>\;
  LOCKSTEP_Master_Out(2385) <= \<const0>\;
  LOCKSTEP_Master_Out(2386) <= \<const0>\;
  LOCKSTEP_Master_Out(2387) <= \<const0>\;
  LOCKSTEP_Master_Out(2388) <= \<const0>\;
  LOCKSTEP_Master_Out(2389) <= \<const0>\;
  LOCKSTEP_Master_Out(2390) <= \<const0>\;
  LOCKSTEP_Master_Out(2391) <= \<const0>\;
  LOCKSTEP_Master_Out(2392) <= \<const0>\;
  LOCKSTEP_Master_Out(2393) <= \<const0>\;
  LOCKSTEP_Master_Out(2394) <= \<const0>\;
  LOCKSTEP_Master_Out(2395) <= \<const0>\;
  LOCKSTEP_Master_Out(2396) <= \<const0>\;
  LOCKSTEP_Master_Out(2397) <= \<const0>\;
  LOCKSTEP_Master_Out(2398) <= \<const0>\;
  LOCKSTEP_Master_Out(2399) <= \<const0>\;
  LOCKSTEP_Master_Out(2400) <= \<const0>\;
  LOCKSTEP_Master_Out(2401) <= \<const0>\;
  LOCKSTEP_Master_Out(2402) <= \<const0>\;
  LOCKSTEP_Master_Out(2403) <= \<const0>\;
  LOCKSTEP_Master_Out(2404) <= \<const0>\;
  LOCKSTEP_Master_Out(2405) <= \<const0>\;
  LOCKSTEP_Master_Out(2406) <= \<const0>\;
  LOCKSTEP_Master_Out(2407) <= \<const0>\;
  LOCKSTEP_Master_Out(2408) <= \<const0>\;
  LOCKSTEP_Master_Out(2409) <= \<const0>\;
  LOCKSTEP_Master_Out(2410) <= \<const0>\;
  LOCKSTEP_Master_Out(2411) <= \<const0>\;
  LOCKSTEP_Master_Out(2412) <= \<const0>\;
  LOCKSTEP_Master_Out(2413) <= \<const0>\;
  LOCKSTEP_Master_Out(2414) <= \<const0>\;
  LOCKSTEP_Master_Out(2415) <= \<const0>\;
  LOCKSTEP_Master_Out(2416) <= \<const0>\;
  LOCKSTEP_Master_Out(2417) <= \<const0>\;
  LOCKSTEP_Master_Out(2418) <= \<const0>\;
  LOCKSTEP_Master_Out(2419) <= \<const0>\;
  LOCKSTEP_Master_Out(2420) <= \<const0>\;
  LOCKSTEP_Master_Out(2421) <= \<const0>\;
  LOCKSTEP_Master_Out(2422) <= \<const0>\;
  LOCKSTEP_Master_Out(2423) <= \<const0>\;
  LOCKSTEP_Master_Out(2424) <= \<const0>\;
  LOCKSTEP_Master_Out(2425) <= \<const0>\;
  LOCKSTEP_Master_Out(2426) <= \<const0>\;
  LOCKSTEP_Master_Out(2427) <= \<const0>\;
  LOCKSTEP_Master_Out(2428) <= \<const0>\;
  LOCKSTEP_Master_Out(2429) <= \<const0>\;
  LOCKSTEP_Master_Out(2430) <= \<const0>\;
  LOCKSTEP_Master_Out(2431) <= \<const0>\;
  LOCKSTEP_Master_Out(2432) <= \<const0>\;
  LOCKSTEP_Master_Out(2433) <= \<const0>\;
  LOCKSTEP_Master_Out(2434) <= \<const0>\;
  LOCKSTEP_Master_Out(2435) <= \<const0>\;
  LOCKSTEP_Master_Out(2436) <= \<const0>\;
  LOCKSTEP_Master_Out(2437) <= \<const0>\;
  LOCKSTEP_Master_Out(2438) <= \<const0>\;
  LOCKSTEP_Master_Out(2439) <= \<const0>\;
  LOCKSTEP_Master_Out(2440) <= \<const0>\;
  LOCKSTEP_Master_Out(2441) <= \<const0>\;
  LOCKSTEP_Master_Out(2442) <= \<const0>\;
  LOCKSTEP_Master_Out(2443) <= \<const0>\;
  LOCKSTEP_Master_Out(2444) <= \<const0>\;
  LOCKSTEP_Master_Out(2445) <= \<const0>\;
  LOCKSTEP_Master_Out(2446) <= \<const0>\;
  LOCKSTEP_Master_Out(2447) <= \<const0>\;
  LOCKSTEP_Master_Out(2448) <= \<const0>\;
  LOCKSTEP_Master_Out(2449) <= \<const0>\;
  LOCKSTEP_Master_Out(2450) <= \<const0>\;
  LOCKSTEP_Master_Out(2451) <= \<const0>\;
  LOCKSTEP_Master_Out(2452) <= \<const0>\;
  LOCKSTEP_Master_Out(2453) <= \<const0>\;
  LOCKSTEP_Master_Out(2454) <= \<const0>\;
  LOCKSTEP_Master_Out(2455) <= \<const0>\;
  LOCKSTEP_Master_Out(2456) <= \<const0>\;
  LOCKSTEP_Master_Out(2457) <= \<const0>\;
  LOCKSTEP_Master_Out(2458) <= \<const0>\;
  LOCKSTEP_Master_Out(2459) <= \<const0>\;
  LOCKSTEP_Master_Out(2460) <= \<const0>\;
  LOCKSTEP_Master_Out(2461) <= \<const0>\;
  LOCKSTEP_Master_Out(2462) <= \<const0>\;
  LOCKSTEP_Master_Out(2463) <= \<const0>\;
  LOCKSTEP_Master_Out(2464) <= \<const0>\;
  LOCKSTEP_Master_Out(2465) <= \<const0>\;
  LOCKSTEP_Master_Out(2466) <= \<const0>\;
  LOCKSTEP_Master_Out(2467) <= \<const0>\;
  LOCKSTEP_Master_Out(2468) <= \<const0>\;
  LOCKSTEP_Master_Out(2469) <= \<const0>\;
  LOCKSTEP_Master_Out(2470) <= \<const0>\;
  LOCKSTEP_Master_Out(2471) <= \<const0>\;
  LOCKSTEP_Master_Out(2472) <= \<const0>\;
  LOCKSTEP_Master_Out(2473) <= \<const0>\;
  LOCKSTEP_Master_Out(2474) <= \<const0>\;
  LOCKSTEP_Master_Out(2475) <= \<const0>\;
  LOCKSTEP_Master_Out(2476) <= \<const0>\;
  LOCKSTEP_Master_Out(2477) <= \<const0>\;
  LOCKSTEP_Master_Out(2478) <= \<const0>\;
  LOCKSTEP_Master_Out(2479) <= \<const0>\;
  LOCKSTEP_Master_Out(2480) <= \<const0>\;
  LOCKSTEP_Master_Out(2481) <= \<const0>\;
  LOCKSTEP_Master_Out(2482) <= \<const0>\;
  LOCKSTEP_Master_Out(2483) <= \<const0>\;
  LOCKSTEP_Master_Out(2484) <= \<const0>\;
  LOCKSTEP_Master_Out(2485) <= \<const0>\;
  LOCKSTEP_Master_Out(2486) <= \<const0>\;
  LOCKSTEP_Master_Out(2487) <= \<const0>\;
  LOCKSTEP_Master_Out(2488) <= \<const0>\;
  LOCKSTEP_Master_Out(2489) <= \<const0>\;
  LOCKSTEP_Master_Out(2490) <= \<const0>\;
  LOCKSTEP_Master_Out(2491) <= \<const0>\;
  LOCKSTEP_Master_Out(2492) <= \<const0>\;
  LOCKSTEP_Master_Out(2493) <= \<const0>\;
  LOCKSTEP_Master_Out(2494) <= \<const0>\;
  LOCKSTEP_Master_Out(2495) <= \<const0>\;
  LOCKSTEP_Master_Out(2496) <= \<const0>\;
  LOCKSTEP_Master_Out(2497) <= \<const0>\;
  LOCKSTEP_Master_Out(2498) <= \<const0>\;
  LOCKSTEP_Master_Out(2499) <= \<const0>\;
  LOCKSTEP_Master_Out(2500) <= \<const0>\;
  LOCKSTEP_Master_Out(2501) <= \<const0>\;
  LOCKSTEP_Master_Out(2502) <= \<const0>\;
  LOCKSTEP_Master_Out(2503) <= \<const0>\;
  LOCKSTEP_Master_Out(2504) <= \<const0>\;
  LOCKSTEP_Master_Out(2505) <= \<const0>\;
  LOCKSTEP_Master_Out(2506) <= \<const0>\;
  LOCKSTEP_Master_Out(2507) <= \<const0>\;
  LOCKSTEP_Master_Out(2508) <= \<const0>\;
  LOCKSTEP_Master_Out(2509) <= \<const0>\;
  LOCKSTEP_Master_Out(2510) <= \<const0>\;
  LOCKSTEP_Master_Out(2511) <= \<const0>\;
  LOCKSTEP_Master_Out(2512) <= \<const0>\;
  LOCKSTEP_Master_Out(2513) <= \<const0>\;
  LOCKSTEP_Master_Out(2514) <= \<const0>\;
  LOCKSTEP_Master_Out(2515) <= \<const0>\;
  LOCKSTEP_Master_Out(2516) <= \<const0>\;
  LOCKSTEP_Master_Out(2517) <= \<const0>\;
  LOCKSTEP_Master_Out(2518) <= \<const0>\;
  LOCKSTEP_Master_Out(2519) <= \<const0>\;
  LOCKSTEP_Master_Out(2520) <= \<const0>\;
  LOCKSTEP_Master_Out(2521) <= \<const0>\;
  LOCKSTEP_Master_Out(2522) <= \<const0>\;
  LOCKSTEP_Master_Out(2523) <= \<const0>\;
  LOCKSTEP_Master_Out(2524) <= \<const0>\;
  LOCKSTEP_Master_Out(2525) <= \<const0>\;
  LOCKSTEP_Master_Out(2526) <= \<const0>\;
  LOCKSTEP_Master_Out(2527) <= \<const0>\;
  LOCKSTEP_Master_Out(2528) <= \<const0>\;
  LOCKSTEP_Master_Out(2529) <= \<const0>\;
  LOCKSTEP_Master_Out(2530) <= \<const0>\;
  LOCKSTEP_Master_Out(2531) <= \<const0>\;
  LOCKSTEP_Master_Out(2532) <= \<const0>\;
  LOCKSTEP_Master_Out(2533) <= \<const0>\;
  LOCKSTEP_Master_Out(2534) <= \<const0>\;
  LOCKSTEP_Master_Out(2535) <= \<const0>\;
  LOCKSTEP_Master_Out(2536) <= \<const0>\;
  LOCKSTEP_Master_Out(2537) <= \<const0>\;
  LOCKSTEP_Master_Out(2538) <= \<const0>\;
  LOCKSTEP_Master_Out(2539) <= \<const0>\;
  LOCKSTEP_Master_Out(2540) <= \<const0>\;
  LOCKSTEP_Master_Out(2541) <= \<const0>\;
  LOCKSTEP_Master_Out(2542) <= \<const0>\;
  LOCKSTEP_Master_Out(2543) <= \<const0>\;
  LOCKSTEP_Master_Out(2544) <= \<const0>\;
  LOCKSTEP_Master_Out(2545) <= \<const0>\;
  LOCKSTEP_Master_Out(2546) <= \<const0>\;
  LOCKSTEP_Master_Out(2547) <= \<const0>\;
  LOCKSTEP_Master_Out(2548) <= \<const0>\;
  LOCKSTEP_Master_Out(2549) <= \<const0>\;
  LOCKSTEP_Master_Out(2550) <= \<const0>\;
  LOCKSTEP_Master_Out(2551) <= \<const0>\;
  LOCKSTEP_Master_Out(2552) <= \<const0>\;
  LOCKSTEP_Master_Out(2553) <= \<const0>\;
  LOCKSTEP_Master_Out(2554) <= \<const0>\;
  LOCKSTEP_Master_Out(2555) <= \<const0>\;
  LOCKSTEP_Master_Out(2556) <= \<const0>\;
  LOCKSTEP_Master_Out(2557) <= \<const0>\;
  LOCKSTEP_Master_Out(2558) <= \<const0>\;
  LOCKSTEP_Master_Out(2559) <= \<const0>\;
  LOCKSTEP_Master_Out(2560) <= \<const0>\;
  LOCKSTEP_Master_Out(2561) <= \<const0>\;
  LOCKSTEP_Master_Out(2562) <= \<const0>\;
  LOCKSTEP_Master_Out(2563) <= \<const0>\;
  LOCKSTEP_Master_Out(2564) <= \<const0>\;
  LOCKSTEP_Master_Out(2565) <= \<const0>\;
  LOCKSTEP_Master_Out(2566) <= \<const0>\;
  LOCKSTEP_Master_Out(2567) <= \<const0>\;
  LOCKSTEP_Master_Out(2568) <= \<const0>\;
  LOCKSTEP_Master_Out(2569) <= \<const0>\;
  LOCKSTEP_Master_Out(2570) <= \<const0>\;
  LOCKSTEP_Master_Out(2571) <= \<const0>\;
  LOCKSTEP_Master_Out(2572) <= \<const0>\;
  LOCKSTEP_Master_Out(2573) <= \<const0>\;
  LOCKSTEP_Master_Out(2574) <= \<const0>\;
  LOCKSTEP_Master_Out(2575) <= \<const0>\;
  LOCKSTEP_Master_Out(2576) <= \<const0>\;
  LOCKSTEP_Master_Out(2577) <= \<const0>\;
  LOCKSTEP_Master_Out(2578) <= \<const0>\;
  LOCKSTEP_Master_Out(2579) <= \<const0>\;
  LOCKSTEP_Master_Out(2580) <= \<const0>\;
  LOCKSTEP_Master_Out(2581) <= \<const0>\;
  LOCKSTEP_Master_Out(2582) <= \<const0>\;
  LOCKSTEP_Master_Out(2583) <= \<const0>\;
  LOCKSTEP_Master_Out(2584) <= \<const0>\;
  LOCKSTEP_Master_Out(2585) <= \<const0>\;
  LOCKSTEP_Master_Out(2586) <= \<const0>\;
  LOCKSTEP_Master_Out(2587) <= \<const0>\;
  LOCKSTEP_Master_Out(2588) <= \<const0>\;
  LOCKSTEP_Master_Out(2589) <= \<const0>\;
  LOCKSTEP_Master_Out(2590) <= \<const0>\;
  LOCKSTEP_Master_Out(2591) <= \<const0>\;
  LOCKSTEP_Master_Out(2592) <= \<const0>\;
  LOCKSTEP_Master_Out(2593) <= \<const0>\;
  LOCKSTEP_Master_Out(2594) <= \<const0>\;
  LOCKSTEP_Master_Out(2595) <= \<const0>\;
  LOCKSTEP_Master_Out(2596) <= \<const0>\;
  LOCKSTEP_Master_Out(2597) <= \<const0>\;
  LOCKSTEP_Master_Out(2598) <= \<const0>\;
  LOCKSTEP_Master_Out(2599) <= \<const0>\;
  LOCKSTEP_Master_Out(2600) <= \<const0>\;
  LOCKSTEP_Master_Out(2601) <= \<const0>\;
  LOCKSTEP_Master_Out(2602) <= \<const0>\;
  LOCKSTEP_Master_Out(2603) <= \<const0>\;
  LOCKSTEP_Master_Out(2604) <= \<const0>\;
  LOCKSTEP_Master_Out(2605) <= \<const0>\;
  LOCKSTEP_Master_Out(2606) <= \<const0>\;
  LOCKSTEP_Master_Out(2607) <= \<const0>\;
  LOCKSTEP_Master_Out(2608) <= \<const0>\;
  LOCKSTEP_Master_Out(2609) <= \<const0>\;
  LOCKSTEP_Master_Out(2610) <= \<const0>\;
  LOCKSTEP_Master_Out(2611) <= \<const0>\;
  LOCKSTEP_Master_Out(2612) <= \<const0>\;
  LOCKSTEP_Master_Out(2613) <= \<const0>\;
  LOCKSTEP_Master_Out(2614) <= \<const0>\;
  LOCKSTEP_Master_Out(2615) <= \<const0>\;
  LOCKSTEP_Master_Out(2616) <= \<const0>\;
  LOCKSTEP_Master_Out(2617) <= \<const0>\;
  LOCKSTEP_Master_Out(2618) <= \<const0>\;
  LOCKSTEP_Master_Out(2619) <= \<const0>\;
  LOCKSTEP_Master_Out(2620) <= \<const0>\;
  LOCKSTEP_Master_Out(2621) <= \<const0>\;
  LOCKSTEP_Master_Out(2622) <= \<const0>\;
  LOCKSTEP_Master_Out(2623) <= \<const0>\;
  LOCKSTEP_Master_Out(2624) <= \<const0>\;
  LOCKSTEP_Master_Out(2625) <= \<const0>\;
  LOCKSTEP_Master_Out(2626) <= \<const0>\;
  LOCKSTEP_Master_Out(2627) <= \<const0>\;
  LOCKSTEP_Master_Out(2628) <= \<const0>\;
  LOCKSTEP_Master_Out(2629) <= \<const0>\;
  LOCKSTEP_Master_Out(2630) <= \<const0>\;
  LOCKSTEP_Master_Out(2631) <= \<const0>\;
  LOCKSTEP_Master_Out(2632) <= \<const0>\;
  LOCKSTEP_Master_Out(2633) <= \<const0>\;
  LOCKSTEP_Master_Out(2634) <= \<const0>\;
  LOCKSTEP_Master_Out(2635) <= \<const0>\;
  LOCKSTEP_Master_Out(2636) <= \<const0>\;
  LOCKSTEP_Master_Out(2637) <= \<const0>\;
  LOCKSTEP_Master_Out(2638) <= \<const0>\;
  LOCKSTEP_Master_Out(2639) <= \<const0>\;
  LOCKSTEP_Master_Out(2640) <= \<const0>\;
  LOCKSTEP_Master_Out(2641) <= \<const0>\;
  LOCKSTEP_Master_Out(2642) <= \<const0>\;
  LOCKSTEP_Master_Out(2643) <= \<const0>\;
  LOCKSTEP_Master_Out(2644) <= \<const0>\;
  LOCKSTEP_Master_Out(2645) <= \<const0>\;
  LOCKSTEP_Master_Out(2646) <= \<const0>\;
  LOCKSTEP_Master_Out(2647) <= \<const0>\;
  LOCKSTEP_Master_Out(2648) <= \<const0>\;
  LOCKSTEP_Master_Out(2649) <= \<const0>\;
  LOCKSTEP_Master_Out(2650) <= \<const0>\;
  LOCKSTEP_Master_Out(2651) <= \<const0>\;
  LOCKSTEP_Master_Out(2652) <= \<const0>\;
  LOCKSTEP_Master_Out(2653) <= \<const0>\;
  LOCKSTEP_Master_Out(2654) <= \<const0>\;
  LOCKSTEP_Master_Out(2655) <= \<const0>\;
  LOCKSTEP_Master_Out(2656) <= \<const0>\;
  LOCKSTEP_Master_Out(2657) <= \<const0>\;
  LOCKSTEP_Master_Out(2658) <= \<const0>\;
  LOCKSTEP_Master_Out(2659) <= \<const0>\;
  LOCKSTEP_Master_Out(2660) <= \<const0>\;
  LOCKSTEP_Master_Out(2661) <= \<const0>\;
  LOCKSTEP_Master_Out(2662) <= \<const0>\;
  LOCKSTEP_Master_Out(2663) <= \<const0>\;
  LOCKSTEP_Master_Out(2664) <= \<const0>\;
  LOCKSTEP_Master_Out(2665) <= \<const0>\;
  LOCKSTEP_Master_Out(2666) <= \<const0>\;
  LOCKSTEP_Master_Out(2667) <= \<const0>\;
  LOCKSTEP_Master_Out(2668) <= \<const0>\;
  LOCKSTEP_Master_Out(2669) <= \<const0>\;
  LOCKSTEP_Master_Out(2670) <= \<const0>\;
  LOCKSTEP_Master_Out(2671) <= \<const0>\;
  LOCKSTEP_Master_Out(2672) <= \<const0>\;
  LOCKSTEP_Master_Out(2673) <= \<const0>\;
  LOCKSTEP_Master_Out(2674) <= \<const0>\;
  LOCKSTEP_Master_Out(2675) <= \<const0>\;
  LOCKSTEP_Master_Out(2676) <= \<const0>\;
  LOCKSTEP_Master_Out(2677) <= \<const0>\;
  LOCKSTEP_Master_Out(2678) <= \<const0>\;
  LOCKSTEP_Master_Out(2679) <= \<const0>\;
  LOCKSTEP_Master_Out(2680) <= \<const0>\;
  LOCKSTEP_Master_Out(2681) <= \<const0>\;
  LOCKSTEP_Master_Out(2682) <= \<const0>\;
  LOCKSTEP_Master_Out(2683) <= \<const0>\;
  LOCKSTEP_Master_Out(2684) <= \<const0>\;
  LOCKSTEP_Master_Out(2685) <= \<const0>\;
  LOCKSTEP_Master_Out(2686) <= \<const0>\;
  LOCKSTEP_Master_Out(2687) <= \<const0>\;
  LOCKSTEP_Master_Out(2688) <= \<const0>\;
  LOCKSTEP_Master_Out(2689) <= \<const0>\;
  LOCKSTEP_Master_Out(2690) <= \<const0>\;
  LOCKSTEP_Master_Out(2691) <= \<const0>\;
  LOCKSTEP_Master_Out(2692) <= \<const0>\;
  LOCKSTEP_Master_Out(2693) <= \<const0>\;
  LOCKSTEP_Master_Out(2694) <= \<const0>\;
  LOCKSTEP_Master_Out(2695) <= \<const0>\;
  LOCKSTEP_Master_Out(2696) <= \<const0>\;
  LOCKSTEP_Master_Out(2697) <= \<const0>\;
  LOCKSTEP_Master_Out(2698) <= \<const0>\;
  LOCKSTEP_Master_Out(2699) <= \<const0>\;
  LOCKSTEP_Master_Out(2700) <= \<const0>\;
  LOCKSTEP_Master_Out(2701) <= \<const0>\;
  LOCKSTEP_Master_Out(2702) <= \<const0>\;
  LOCKSTEP_Master_Out(2703) <= \<const0>\;
  LOCKSTEP_Master_Out(2704) <= \<const0>\;
  LOCKSTEP_Master_Out(2705) <= \<const0>\;
  LOCKSTEP_Master_Out(2706) <= \<const0>\;
  LOCKSTEP_Master_Out(2707) <= \<const0>\;
  LOCKSTEP_Master_Out(2708) <= \<const0>\;
  LOCKSTEP_Master_Out(2709) <= \<const0>\;
  LOCKSTEP_Master_Out(2710) <= \<const0>\;
  LOCKSTEP_Master_Out(2711) <= \<const0>\;
  LOCKSTEP_Master_Out(2712) <= \<const0>\;
  LOCKSTEP_Master_Out(2713) <= \<const0>\;
  LOCKSTEP_Master_Out(2714) <= \<const0>\;
  LOCKSTEP_Master_Out(2715) <= \<const0>\;
  LOCKSTEP_Master_Out(2716) <= \<const0>\;
  LOCKSTEP_Master_Out(2717) <= \<const0>\;
  LOCKSTEP_Master_Out(2718) <= \<const0>\;
  LOCKSTEP_Master_Out(2719) <= \<const0>\;
  LOCKSTEP_Master_Out(2720) <= \<const0>\;
  LOCKSTEP_Master_Out(2721) <= \<const0>\;
  LOCKSTEP_Master_Out(2722) <= \<const0>\;
  LOCKSTEP_Master_Out(2723) <= \<const0>\;
  LOCKSTEP_Master_Out(2724) <= \<const0>\;
  LOCKSTEP_Master_Out(2725) <= \<const0>\;
  LOCKSTEP_Master_Out(2726) <= \<const0>\;
  LOCKSTEP_Master_Out(2727) <= \<const0>\;
  LOCKSTEP_Master_Out(2728) <= \<const0>\;
  LOCKSTEP_Master_Out(2729) <= \<const0>\;
  LOCKSTEP_Master_Out(2730) <= \<const0>\;
  LOCKSTEP_Master_Out(2731) <= \<const0>\;
  LOCKSTEP_Master_Out(2732) <= \<const0>\;
  LOCKSTEP_Master_Out(2733) <= \<const0>\;
  LOCKSTEP_Master_Out(2734) <= \<const0>\;
  LOCKSTEP_Master_Out(2735) <= \<const0>\;
  LOCKSTEP_Master_Out(2736) <= \<const0>\;
  LOCKSTEP_Master_Out(2737) <= \<const0>\;
  LOCKSTEP_Master_Out(2738) <= \<const0>\;
  LOCKSTEP_Master_Out(2739) <= \<const0>\;
  LOCKSTEP_Master_Out(2740) <= \<const0>\;
  LOCKSTEP_Master_Out(2741) <= \<const0>\;
  LOCKSTEP_Master_Out(2742) <= \<const0>\;
  LOCKSTEP_Master_Out(2743) <= \<const0>\;
  LOCKSTEP_Master_Out(2744) <= \<const0>\;
  LOCKSTEP_Master_Out(2745) <= \<const0>\;
  LOCKSTEP_Master_Out(2746) <= \<const0>\;
  LOCKSTEP_Master_Out(2747) <= \<const0>\;
  LOCKSTEP_Master_Out(2748) <= \<const0>\;
  LOCKSTEP_Master_Out(2749) <= \<const0>\;
  LOCKSTEP_Master_Out(2750) <= \<const0>\;
  LOCKSTEP_Master_Out(2751) <= \<const0>\;
  LOCKSTEP_Master_Out(2752) <= \<const0>\;
  LOCKSTEP_Master_Out(2753) <= \<const0>\;
  LOCKSTEP_Master_Out(2754) <= \<const0>\;
  LOCKSTEP_Master_Out(2755) <= \<const0>\;
  LOCKSTEP_Master_Out(2756) <= \<const0>\;
  LOCKSTEP_Master_Out(2757) <= \<const0>\;
  LOCKSTEP_Master_Out(2758) <= \<const0>\;
  LOCKSTEP_Master_Out(2759) <= \<const0>\;
  LOCKSTEP_Master_Out(2760) <= \<const0>\;
  LOCKSTEP_Master_Out(2761) <= \<const0>\;
  LOCKSTEP_Master_Out(2762) <= \<const0>\;
  LOCKSTEP_Master_Out(2763) <= \<const0>\;
  LOCKSTEP_Master_Out(2764) <= \<const0>\;
  LOCKSTEP_Master_Out(2765) <= \<const0>\;
  LOCKSTEP_Master_Out(2766) <= \<const0>\;
  LOCKSTEP_Master_Out(2767) <= \<const0>\;
  LOCKSTEP_Master_Out(2768) <= \<const0>\;
  LOCKSTEP_Master_Out(2769) <= \<const0>\;
  LOCKSTEP_Master_Out(2770) <= \<const0>\;
  LOCKSTEP_Master_Out(2771) <= \<const0>\;
  LOCKSTEP_Master_Out(2772) <= \<const0>\;
  LOCKSTEP_Master_Out(2773) <= \<const0>\;
  LOCKSTEP_Master_Out(2774) <= \<const0>\;
  LOCKSTEP_Master_Out(2775) <= \<const0>\;
  LOCKSTEP_Master_Out(2776) <= \<const0>\;
  LOCKSTEP_Master_Out(2777) <= \<const0>\;
  LOCKSTEP_Master_Out(2778) <= \<const0>\;
  LOCKSTEP_Master_Out(2779) <= \<const0>\;
  LOCKSTEP_Master_Out(2780) <= \<const0>\;
  LOCKSTEP_Master_Out(2781) <= \<const0>\;
  LOCKSTEP_Master_Out(2782) <= \<const0>\;
  LOCKSTEP_Master_Out(2783) <= \<const0>\;
  LOCKSTEP_Master_Out(2784) <= \<const0>\;
  LOCKSTEP_Master_Out(2785) <= \<const0>\;
  LOCKSTEP_Master_Out(2786) <= \<const0>\;
  LOCKSTEP_Master_Out(2787) <= \<const0>\;
  LOCKSTEP_Master_Out(2788) <= \<const0>\;
  LOCKSTEP_Master_Out(2789) <= \<const0>\;
  LOCKSTEP_Master_Out(2790) <= \<const0>\;
  LOCKSTEP_Master_Out(2791) <= \<const0>\;
  LOCKSTEP_Master_Out(2792) <= \<const0>\;
  LOCKSTEP_Master_Out(2793) <= \<const0>\;
  LOCKSTEP_Master_Out(2794) <= \<const0>\;
  LOCKSTEP_Master_Out(2795) <= \<const0>\;
  LOCKSTEP_Master_Out(2796) <= \<const0>\;
  LOCKSTEP_Master_Out(2797) <= \<const0>\;
  LOCKSTEP_Master_Out(2798) <= \<const0>\;
  LOCKSTEP_Master_Out(2799) <= \<const0>\;
  LOCKSTEP_Master_Out(2800) <= \<const0>\;
  LOCKSTEP_Master_Out(2801) <= \<const0>\;
  LOCKSTEP_Master_Out(2802) <= \<const0>\;
  LOCKSTEP_Master_Out(2803) <= \<const0>\;
  LOCKSTEP_Master_Out(2804) <= \<const0>\;
  LOCKSTEP_Master_Out(2805) <= \<const0>\;
  LOCKSTEP_Master_Out(2806) <= \<const0>\;
  LOCKSTEP_Master_Out(2807) <= \<const0>\;
  LOCKSTEP_Master_Out(2808) <= \<const0>\;
  LOCKSTEP_Master_Out(2809) <= \<const0>\;
  LOCKSTEP_Master_Out(2810) <= \<const0>\;
  LOCKSTEP_Master_Out(2811) <= \<const0>\;
  LOCKSTEP_Master_Out(2812) <= \<const0>\;
  LOCKSTEP_Master_Out(2813) <= \<const0>\;
  LOCKSTEP_Master_Out(2814) <= \<const0>\;
  LOCKSTEP_Master_Out(2815) <= \<const0>\;
  LOCKSTEP_Master_Out(2816) <= \<const0>\;
  LOCKSTEP_Master_Out(2817) <= \<const0>\;
  LOCKSTEP_Master_Out(2818) <= \<const0>\;
  LOCKSTEP_Master_Out(2819) <= \<const0>\;
  LOCKSTEP_Master_Out(2820) <= \<const0>\;
  LOCKSTEP_Master_Out(2821) <= \<const0>\;
  LOCKSTEP_Master_Out(2822) <= \<const0>\;
  LOCKSTEP_Master_Out(2823) <= \<const0>\;
  LOCKSTEP_Master_Out(2824) <= \<const0>\;
  LOCKSTEP_Master_Out(2825) <= \<const0>\;
  LOCKSTEP_Master_Out(2826) <= \<const0>\;
  LOCKSTEP_Master_Out(2827) <= \<const0>\;
  LOCKSTEP_Master_Out(2828) <= \<const0>\;
  LOCKSTEP_Master_Out(2829) <= \<const0>\;
  LOCKSTEP_Master_Out(2830) <= \<const0>\;
  LOCKSTEP_Master_Out(2831) <= \<const0>\;
  LOCKSTEP_Master_Out(2832) <= \<const0>\;
  LOCKSTEP_Master_Out(2833) <= \<const0>\;
  LOCKSTEP_Master_Out(2834) <= \<const0>\;
  LOCKSTEP_Master_Out(2835) <= \<const0>\;
  LOCKSTEP_Master_Out(2836) <= \<const0>\;
  LOCKSTEP_Master_Out(2837) <= \<const0>\;
  LOCKSTEP_Master_Out(2838) <= \<const0>\;
  LOCKSTEP_Master_Out(2839) <= \<const0>\;
  LOCKSTEP_Master_Out(2840) <= \<const0>\;
  LOCKSTEP_Master_Out(2841) <= \<const0>\;
  LOCKSTEP_Master_Out(2842) <= \<const0>\;
  LOCKSTEP_Master_Out(2843) <= \<const0>\;
  LOCKSTEP_Master_Out(2844) <= \<const0>\;
  LOCKSTEP_Master_Out(2845) <= \<const0>\;
  LOCKSTEP_Master_Out(2846) <= \<const0>\;
  LOCKSTEP_Master_Out(2847) <= \<const0>\;
  LOCKSTEP_Master_Out(2848) <= \<const0>\;
  LOCKSTEP_Master_Out(2849) <= \<const0>\;
  LOCKSTEP_Master_Out(2850) <= \<const0>\;
  LOCKSTEP_Master_Out(2851) <= \<const0>\;
  LOCKSTEP_Master_Out(2852) <= \<const0>\;
  LOCKSTEP_Master_Out(2853) <= \<const0>\;
  LOCKSTEP_Master_Out(2854) <= \<const0>\;
  LOCKSTEP_Master_Out(2855) <= \<const0>\;
  LOCKSTEP_Master_Out(2856) <= \<const0>\;
  LOCKSTEP_Master_Out(2857) <= \<const0>\;
  LOCKSTEP_Master_Out(2858) <= \<const0>\;
  LOCKSTEP_Master_Out(2859) <= \<const0>\;
  LOCKSTEP_Master_Out(2860) <= \<const0>\;
  LOCKSTEP_Master_Out(2861) <= \<const0>\;
  LOCKSTEP_Master_Out(2862) <= \<const0>\;
  LOCKSTEP_Master_Out(2863) <= \<const0>\;
  LOCKSTEP_Master_Out(2864) <= \<const0>\;
  LOCKSTEP_Master_Out(2865) <= \<const0>\;
  LOCKSTEP_Master_Out(2866) <= \<const0>\;
  LOCKSTEP_Master_Out(2867) <= \<const0>\;
  LOCKSTEP_Master_Out(2868) <= \<const0>\;
  LOCKSTEP_Master_Out(2869) <= \<const0>\;
  LOCKSTEP_Master_Out(2870) <= \<const0>\;
  LOCKSTEP_Master_Out(2871) <= \<const0>\;
  LOCKSTEP_Master_Out(2872) <= \<const0>\;
  LOCKSTEP_Master_Out(2873) <= \<const0>\;
  LOCKSTEP_Master_Out(2874) <= \<const0>\;
  LOCKSTEP_Master_Out(2875) <= \<const0>\;
  LOCKSTEP_Master_Out(2876) <= \<const0>\;
  LOCKSTEP_Master_Out(2877) <= \<const0>\;
  LOCKSTEP_Master_Out(2878) <= \<const0>\;
  LOCKSTEP_Master_Out(2879) <= \<const0>\;
  LOCKSTEP_Master_Out(2880) <= \<const0>\;
  LOCKSTEP_Master_Out(2881) <= \<const0>\;
  LOCKSTEP_Master_Out(2882) <= \<const0>\;
  LOCKSTEP_Master_Out(2883) <= \<const0>\;
  LOCKSTEP_Master_Out(2884) <= \<const0>\;
  LOCKSTEP_Master_Out(2885) <= \<const0>\;
  LOCKSTEP_Master_Out(2886) <= \<const0>\;
  LOCKSTEP_Master_Out(2887) <= \<const0>\;
  LOCKSTEP_Master_Out(2888) <= \<const0>\;
  LOCKSTEP_Master_Out(2889) <= \<const0>\;
  LOCKSTEP_Master_Out(2890) <= \<const0>\;
  LOCKSTEP_Master_Out(2891) <= \<const0>\;
  LOCKSTEP_Master_Out(2892) <= \<const0>\;
  LOCKSTEP_Master_Out(2893) <= \<const0>\;
  LOCKSTEP_Master_Out(2894) <= \<const0>\;
  LOCKSTEP_Master_Out(2895) <= \<const0>\;
  LOCKSTEP_Master_Out(2896) <= \<const0>\;
  LOCKSTEP_Master_Out(2897) <= \<const0>\;
  LOCKSTEP_Master_Out(2898) <= \<const0>\;
  LOCKSTEP_Master_Out(2899) <= \<const0>\;
  LOCKSTEP_Master_Out(2900) <= \<const0>\;
  LOCKSTEP_Master_Out(2901) <= \<const0>\;
  LOCKSTEP_Master_Out(2902) <= \<const0>\;
  LOCKSTEP_Master_Out(2903) <= \<const0>\;
  LOCKSTEP_Master_Out(2904) <= \<const0>\;
  LOCKSTEP_Master_Out(2905) <= \<const0>\;
  LOCKSTEP_Master_Out(2906) <= \<const0>\;
  LOCKSTEP_Master_Out(2907) <= \<const0>\;
  LOCKSTEP_Master_Out(2908) <= \<const0>\;
  LOCKSTEP_Master_Out(2909) <= \<const0>\;
  LOCKSTEP_Master_Out(2910) <= \<const0>\;
  LOCKSTEP_Master_Out(2911) <= \<const0>\;
  LOCKSTEP_Master_Out(2912) <= \<const0>\;
  LOCKSTEP_Master_Out(2913) <= \<const0>\;
  LOCKSTEP_Master_Out(2914) <= \<const0>\;
  LOCKSTEP_Master_Out(2915) <= \<const0>\;
  LOCKSTEP_Master_Out(2916) <= \<const0>\;
  LOCKSTEP_Master_Out(2917) <= \<const0>\;
  LOCKSTEP_Master_Out(2918) <= \<const0>\;
  LOCKSTEP_Master_Out(2919) <= \<const0>\;
  LOCKSTEP_Master_Out(2920) <= \<const0>\;
  LOCKSTEP_Master_Out(2921) <= \<const0>\;
  LOCKSTEP_Master_Out(2922) <= \<const0>\;
  LOCKSTEP_Master_Out(2923) <= \<const0>\;
  LOCKSTEP_Master_Out(2924) <= \<const0>\;
  LOCKSTEP_Master_Out(2925) <= \<const0>\;
  LOCKSTEP_Master_Out(2926) <= \<const0>\;
  LOCKSTEP_Master_Out(2927) <= \<const0>\;
  LOCKSTEP_Master_Out(2928) <= \<const0>\;
  LOCKSTEP_Master_Out(2929) <= \<const0>\;
  LOCKSTEP_Master_Out(2930) <= \<const0>\;
  LOCKSTEP_Master_Out(2931) <= \<const0>\;
  LOCKSTEP_Master_Out(2932) <= \<const0>\;
  LOCKSTEP_Master_Out(2933) <= \<const0>\;
  LOCKSTEP_Master_Out(2934) <= \<const0>\;
  LOCKSTEP_Master_Out(2935) <= \<const0>\;
  LOCKSTEP_Master_Out(2936) <= \<const0>\;
  LOCKSTEP_Master_Out(2937) <= \<const0>\;
  LOCKSTEP_Master_Out(2938) <= \<const0>\;
  LOCKSTEP_Master_Out(2939) <= \<const0>\;
  LOCKSTEP_Master_Out(2940) <= \<const0>\;
  LOCKSTEP_Master_Out(2941) <= \<const0>\;
  LOCKSTEP_Master_Out(2942) <= \<const0>\;
  LOCKSTEP_Master_Out(2943) <= \<const0>\;
  LOCKSTEP_Master_Out(2944) <= \<const0>\;
  LOCKSTEP_Master_Out(2945) <= \<const0>\;
  LOCKSTEP_Master_Out(2946) <= \<const0>\;
  LOCKSTEP_Master_Out(2947) <= \<const0>\;
  LOCKSTEP_Master_Out(2948) <= \<const0>\;
  LOCKSTEP_Master_Out(2949) <= \<const0>\;
  LOCKSTEP_Master_Out(2950) <= \<const0>\;
  LOCKSTEP_Master_Out(2951) <= \<const0>\;
  LOCKSTEP_Master_Out(2952) <= \<const0>\;
  LOCKSTEP_Master_Out(2953) <= \<const0>\;
  LOCKSTEP_Master_Out(2954) <= \<const0>\;
  LOCKSTEP_Master_Out(2955) <= \<const0>\;
  LOCKSTEP_Master_Out(2956) <= \<const0>\;
  LOCKSTEP_Master_Out(2957) <= \<const0>\;
  LOCKSTEP_Master_Out(2958) <= \<const0>\;
  LOCKSTEP_Master_Out(2959) <= \<const0>\;
  LOCKSTEP_Master_Out(2960) <= \<const0>\;
  LOCKSTEP_Master_Out(2961) <= \<const0>\;
  LOCKSTEP_Master_Out(2962) <= \<const0>\;
  LOCKSTEP_Master_Out(2963) <= \<const0>\;
  LOCKSTEP_Master_Out(2964) <= \<const0>\;
  LOCKSTEP_Master_Out(2965) <= \<const0>\;
  LOCKSTEP_Master_Out(2966) <= \<const0>\;
  LOCKSTEP_Master_Out(2967) <= \<const0>\;
  LOCKSTEP_Master_Out(2968) <= \<const0>\;
  LOCKSTEP_Master_Out(2969) <= \<const0>\;
  LOCKSTEP_Master_Out(2970) <= \<const0>\;
  LOCKSTEP_Master_Out(2971) <= \<const0>\;
  LOCKSTEP_Master_Out(2972) <= \<const0>\;
  LOCKSTEP_Master_Out(2973) <= \<const0>\;
  LOCKSTEP_Master_Out(2974) <= \<const0>\;
  LOCKSTEP_Master_Out(2975) <= \<const0>\;
  LOCKSTEP_Master_Out(2976) <= \<const0>\;
  LOCKSTEP_Master_Out(2977) <= \<const0>\;
  LOCKSTEP_Master_Out(2978) <= \<const0>\;
  LOCKSTEP_Master_Out(2979) <= \<const0>\;
  LOCKSTEP_Master_Out(2980) <= \<const0>\;
  LOCKSTEP_Master_Out(2981) <= \<const0>\;
  LOCKSTEP_Master_Out(2982) <= \<const0>\;
  LOCKSTEP_Master_Out(2983) <= \<const0>\;
  LOCKSTEP_Master_Out(2984) <= \<const0>\;
  LOCKSTEP_Master_Out(2985) <= \<const0>\;
  LOCKSTEP_Master_Out(2986) <= \<const0>\;
  LOCKSTEP_Master_Out(2987) <= \<const0>\;
  LOCKSTEP_Master_Out(2988) <= \<const0>\;
  LOCKSTEP_Master_Out(2989) <= \<const0>\;
  LOCKSTEP_Master_Out(2990) <= \<const0>\;
  LOCKSTEP_Master_Out(2991) <= \<const0>\;
  LOCKSTEP_Master_Out(2992) <= \<const0>\;
  LOCKSTEP_Master_Out(2993) <= \<const0>\;
  LOCKSTEP_Master_Out(2994) <= \<const0>\;
  LOCKSTEP_Master_Out(2995) <= \<const0>\;
  LOCKSTEP_Master_Out(2996) <= \<const0>\;
  LOCKSTEP_Master_Out(2997) <= \<const0>\;
  LOCKSTEP_Master_Out(2998) <= \<const0>\;
  LOCKSTEP_Master_Out(2999) <= \<const0>\;
  LOCKSTEP_Master_Out(3000) <= \<const0>\;
  LOCKSTEP_Master_Out(3001) <= \<const0>\;
  LOCKSTEP_Master_Out(3002) <= \<const0>\;
  LOCKSTEP_Master_Out(3003) <= \<const0>\;
  LOCKSTEP_Master_Out(3004) <= \<const0>\;
  LOCKSTEP_Master_Out(3005) <= \<const0>\;
  LOCKSTEP_Master_Out(3006) <= \<const0>\;
  LOCKSTEP_Master_Out(3007) <= \<const0>\;
  LOCKSTEP_Master_Out(3008) <= \<const0>\;
  LOCKSTEP_Master_Out(3009) <= \<const0>\;
  LOCKSTEP_Master_Out(3010) <= \<const0>\;
  LOCKSTEP_Master_Out(3011) <= \<const0>\;
  LOCKSTEP_Master_Out(3012) <= \<const0>\;
  LOCKSTEP_Master_Out(3013) <= \<const0>\;
  LOCKSTEP_Master_Out(3014) <= \<const0>\;
  LOCKSTEP_Master_Out(3015) <= \<const0>\;
  LOCKSTEP_Master_Out(3016) <= \<const0>\;
  LOCKSTEP_Master_Out(3017) <= \<const0>\;
  LOCKSTEP_Master_Out(3018) <= \<const0>\;
  LOCKSTEP_Master_Out(3019) <= \<const0>\;
  LOCKSTEP_Master_Out(3020) <= \<const0>\;
  LOCKSTEP_Master_Out(3021) <= \<const0>\;
  LOCKSTEP_Master_Out(3022) <= \<const0>\;
  LOCKSTEP_Master_Out(3023) <= \<const0>\;
  LOCKSTEP_Master_Out(3024) <= \<const0>\;
  LOCKSTEP_Master_Out(3025) <= \<const0>\;
  LOCKSTEP_Master_Out(3026) <= \<const0>\;
  LOCKSTEP_Master_Out(3027) <= \<const0>\;
  LOCKSTEP_Master_Out(3028) <= \<const0>\;
  LOCKSTEP_Master_Out(3029) <= \<const0>\;
  LOCKSTEP_Master_Out(3030) <= \<const0>\;
  LOCKSTEP_Master_Out(3031) <= \<const0>\;
  LOCKSTEP_Master_Out(3032) <= \<const0>\;
  LOCKSTEP_Master_Out(3033) <= \<const0>\;
  LOCKSTEP_Master_Out(3034) <= \<const0>\;
  LOCKSTEP_Master_Out(3035) <= \<const0>\;
  LOCKSTEP_Master_Out(3036) <= \<const0>\;
  LOCKSTEP_Master_Out(3037) <= \<const0>\;
  LOCKSTEP_Master_Out(3038) <= \<const0>\;
  LOCKSTEP_Master_Out(3039) <= \<const0>\;
  LOCKSTEP_Master_Out(3040) <= \<const0>\;
  LOCKSTEP_Master_Out(3041) <= \<const0>\;
  LOCKSTEP_Master_Out(3042) <= \<const0>\;
  LOCKSTEP_Master_Out(3043) <= \<const0>\;
  LOCKSTEP_Master_Out(3044) <= \<const0>\;
  LOCKSTEP_Master_Out(3045) <= \<const0>\;
  LOCKSTEP_Master_Out(3046) <= \<const0>\;
  LOCKSTEP_Master_Out(3047) <= \<const0>\;
  LOCKSTEP_Master_Out(3048) <= \<const0>\;
  LOCKSTEP_Master_Out(3049) <= \<const0>\;
  LOCKSTEP_Master_Out(3050) <= \<const0>\;
  LOCKSTEP_Master_Out(3051) <= \<const0>\;
  LOCKSTEP_Master_Out(3052) <= \<const0>\;
  LOCKSTEP_Master_Out(3053) <= \<const0>\;
  LOCKSTEP_Master_Out(3054) <= \<const0>\;
  LOCKSTEP_Master_Out(3055) <= \<const0>\;
  LOCKSTEP_Master_Out(3056) <= \<const0>\;
  LOCKSTEP_Master_Out(3057) <= \<const0>\;
  LOCKSTEP_Master_Out(3058) <= \<const0>\;
  LOCKSTEP_Master_Out(3059) <= \<const0>\;
  LOCKSTEP_Master_Out(3060) <= \<const0>\;
  LOCKSTEP_Master_Out(3061) <= \<const0>\;
  LOCKSTEP_Master_Out(3062) <= \<const0>\;
  LOCKSTEP_Master_Out(3063) <= \<const0>\;
  LOCKSTEP_Master_Out(3064) <= \<const0>\;
  LOCKSTEP_Master_Out(3065) <= \<const0>\;
  LOCKSTEP_Master_Out(3066) <= \<const0>\;
  LOCKSTEP_Master_Out(3067) <= \<const0>\;
  LOCKSTEP_Master_Out(3068) <= \<const0>\;
  LOCKSTEP_Master_Out(3069) <= \<const0>\;
  LOCKSTEP_Master_Out(3070) <= \<const0>\;
  LOCKSTEP_Master_Out(3071) <= \<const0>\;
  LOCKSTEP_Master_Out(3072) <= \<const0>\;
  LOCKSTEP_Master_Out(3073) <= \<const0>\;
  LOCKSTEP_Master_Out(3074) <= \<const0>\;
  LOCKSTEP_Master_Out(3075) <= \<const0>\;
  LOCKSTEP_Master_Out(3076) <= \<const0>\;
  LOCKSTEP_Master_Out(3077) <= \<const0>\;
  LOCKSTEP_Master_Out(3078) <= \<const0>\;
  LOCKSTEP_Master_Out(3079) <= \<const0>\;
  LOCKSTEP_Master_Out(3080) <= \<const0>\;
  LOCKSTEP_Master_Out(3081) <= \<const0>\;
  LOCKSTEP_Master_Out(3082) <= \<const0>\;
  LOCKSTEP_Master_Out(3083) <= \<const0>\;
  LOCKSTEP_Master_Out(3084) <= \<const0>\;
  LOCKSTEP_Master_Out(3085) <= \<const0>\;
  LOCKSTEP_Master_Out(3086) <= \<const0>\;
  LOCKSTEP_Master_Out(3087) <= \<const0>\;
  LOCKSTEP_Master_Out(3088) <= \<const0>\;
  LOCKSTEP_Master_Out(3089) <= \<const0>\;
  LOCKSTEP_Master_Out(3090) <= \<const0>\;
  LOCKSTEP_Master_Out(3091) <= \<const0>\;
  LOCKSTEP_Master_Out(3092) <= \<const0>\;
  LOCKSTEP_Master_Out(3093) <= \<const0>\;
  LOCKSTEP_Master_Out(3094) <= \<const0>\;
  LOCKSTEP_Master_Out(3095) <= \<const0>\;
  LOCKSTEP_Master_Out(3096) <= \<const0>\;
  LOCKSTEP_Master_Out(3097) <= \<const0>\;
  LOCKSTEP_Master_Out(3098) <= \<const0>\;
  LOCKSTEP_Master_Out(3099) <= \<const0>\;
  LOCKSTEP_Master_Out(3100) <= \<const0>\;
  LOCKSTEP_Master_Out(3101) <= \<const0>\;
  LOCKSTEP_Master_Out(3102) <= \<const0>\;
  LOCKSTEP_Master_Out(3103) <= \<const0>\;
  LOCKSTEP_Master_Out(3104) <= \<const0>\;
  LOCKSTEP_Master_Out(3105) <= \<const0>\;
  LOCKSTEP_Master_Out(3106) <= \<const0>\;
  LOCKSTEP_Master_Out(3107) <= \<const0>\;
  LOCKSTEP_Master_Out(3108) <= \<const0>\;
  LOCKSTEP_Master_Out(3109) <= \<const0>\;
  LOCKSTEP_Master_Out(3110) <= \<const0>\;
  LOCKSTEP_Master_Out(3111) <= \<const0>\;
  LOCKSTEP_Master_Out(3112) <= \<const0>\;
  LOCKSTEP_Master_Out(3113) <= \<const0>\;
  LOCKSTEP_Master_Out(3114) <= \<const0>\;
  LOCKSTEP_Master_Out(3115) <= \<const0>\;
  LOCKSTEP_Master_Out(3116) <= \<const0>\;
  LOCKSTEP_Master_Out(3117) <= \<const0>\;
  LOCKSTEP_Master_Out(3118) <= \<const0>\;
  LOCKSTEP_Master_Out(3119) <= \<const0>\;
  LOCKSTEP_Master_Out(3120) <= \<const0>\;
  LOCKSTEP_Master_Out(3121) <= \<const0>\;
  LOCKSTEP_Master_Out(3122) <= \<const0>\;
  LOCKSTEP_Master_Out(3123) <= \<const0>\;
  LOCKSTEP_Master_Out(3124) <= \<const0>\;
  LOCKSTEP_Master_Out(3125) <= \<const0>\;
  LOCKSTEP_Master_Out(3126) <= \<const0>\;
  LOCKSTEP_Master_Out(3127) <= \<const0>\;
  LOCKSTEP_Master_Out(3128) <= \<const0>\;
  LOCKSTEP_Master_Out(3129) <= \<const0>\;
  LOCKSTEP_Master_Out(3130) <= \<const0>\;
  LOCKSTEP_Master_Out(3131) <= \<const0>\;
  LOCKSTEP_Master_Out(3132) <= \<const0>\;
  LOCKSTEP_Master_Out(3133) <= \<const0>\;
  LOCKSTEP_Master_Out(3134) <= \<const0>\;
  LOCKSTEP_Master_Out(3135) <= \<const0>\;
  LOCKSTEP_Master_Out(3136) <= \<const0>\;
  LOCKSTEP_Master_Out(3137) <= \<const0>\;
  LOCKSTEP_Master_Out(3138) <= \<const0>\;
  LOCKSTEP_Master_Out(3139) <= \<const0>\;
  LOCKSTEP_Master_Out(3140) <= \<const0>\;
  LOCKSTEP_Master_Out(3141) <= \<const0>\;
  LOCKSTEP_Master_Out(3142) <= \<const0>\;
  LOCKSTEP_Master_Out(3143) <= \<const0>\;
  LOCKSTEP_Master_Out(3144) <= \<const0>\;
  LOCKSTEP_Master_Out(3145) <= \<const0>\;
  LOCKSTEP_Master_Out(3146) <= \<const0>\;
  LOCKSTEP_Master_Out(3147) <= \<const0>\;
  LOCKSTEP_Master_Out(3148) <= \<const0>\;
  LOCKSTEP_Master_Out(3149) <= \<const0>\;
  LOCKSTEP_Master_Out(3150) <= \<const0>\;
  LOCKSTEP_Master_Out(3151) <= \<const0>\;
  LOCKSTEP_Master_Out(3152) <= \<const0>\;
  LOCKSTEP_Master_Out(3153) <= \<const0>\;
  LOCKSTEP_Master_Out(3154) <= \<const0>\;
  LOCKSTEP_Master_Out(3155) <= \<const0>\;
  LOCKSTEP_Master_Out(3156) <= \<const0>\;
  LOCKSTEP_Master_Out(3157) <= \<const0>\;
  LOCKSTEP_Master_Out(3158) <= \<const0>\;
  LOCKSTEP_Master_Out(3159) <= \<const0>\;
  LOCKSTEP_Master_Out(3160) <= \<const0>\;
  LOCKSTEP_Master_Out(3161) <= \<const0>\;
  LOCKSTEP_Master_Out(3162) <= \<const0>\;
  LOCKSTEP_Master_Out(3163) <= \<const0>\;
  LOCKSTEP_Master_Out(3164) <= \<const0>\;
  LOCKSTEP_Master_Out(3165) <= \<const0>\;
  LOCKSTEP_Master_Out(3166) <= \<const0>\;
  LOCKSTEP_Master_Out(3167) <= \<const0>\;
  LOCKSTEP_Master_Out(3168) <= \<const0>\;
  LOCKSTEP_Master_Out(3169) <= \<const0>\;
  LOCKSTEP_Master_Out(3170) <= \<const0>\;
  LOCKSTEP_Master_Out(3171) <= \<const0>\;
  LOCKSTEP_Master_Out(3172) <= \<const0>\;
  LOCKSTEP_Master_Out(3173) <= \<const0>\;
  LOCKSTEP_Master_Out(3174) <= \<const0>\;
  LOCKSTEP_Master_Out(3175) <= \<const0>\;
  LOCKSTEP_Master_Out(3176) <= \<const0>\;
  LOCKSTEP_Master_Out(3177) <= \<const0>\;
  LOCKSTEP_Master_Out(3178) <= \<const0>\;
  LOCKSTEP_Master_Out(3179) <= \<const0>\;
  LOCKSTEP_Master_Out(3180) <= \<const0>\;
  LOCKSTEP_Master_Out(3181) <= \<const0>\;
  LOCKSTEP_Master_Out(3182) <= \<const0>\;
  LOCKSTEP_Master_Out(3183) <= \<const0>\;
  LOCKSTEP_Master_Out(3184) <= \<const0>\;
  LOCKSTEP_Master_Out(3185) <= \<const0>\;
  LOCKSTEP_Master_Out(3186) <= \<const0>\;
  LOCKSTEP_Master_Out(3187) <= \<const0>\;
  LOCKSTEP_Master_Out(3188) <= \<const0>\;
  LOCKSTEP_Master_Out(3189) <= \<const0>\;
  LOCKSTEP_Master_Out(3190) <= \<const0>\;
  LOCKSTEP_Master_Out(3191) <= \<const0>\;
  LOCKSTEP_Master_Out(3192) <= \<const0>\;
  LOCKSTEP_Master_Out(3193) <= \<const0>\;
  LOCKSTEP_Master_Out(3194) <= \<const0>\;
  LOCKSTEP_Master_Out(3195) <= \<const0>\;
  LOCKSTEP_Master_Out(3196) <= \<const0>\;
  LOCKSTEP_Master_Out(3197) <= \<const0>\;
  LOCKSTEP_Master_Out(3198) <= \<const0>\;
  LOCKSTEP_Master_Out(3199) <= \<const0>\;
  LOCKSTEP_Master_Out(3200) <= \<const0>\;
  LOCKSTEP_Master_Out(3201) <= \<const0>\;
  LOCKSTEP_Master_Out(3202) <= \<const0>\;
  LOCKSTEP_Master_Out(3203) <= \<const0>\;
  LOCKSTEP_Master_Out(3204) <= \<const0>\;
  LOCKSTEP_Master_Out(3205) <= \<const0>\;
  LOCKSTEP_Master_Out(3206) <= \<const0>\;
  LOCKSTEP_Master_Out(3207) <= \<const0>\;
  LOCKSTEP_Master_Out(3208) <= \<const0>\;
  LOCKSTEP_Master_Out(3209) <= \<const0>\;
  LOCKSTEP_Master_Out(3210) <= \<const0>\;
  LOCKSTEP_Master_Out(3211) <= \<const0>\;
  LOCKSTEP_Master_Out(3212) <= \<const0>\;
  LOCKSTEP_Master_Out(3213) <= \<const0>\;
  LOCKSTEP_Master_Out(3214) <= \<const0>\;
  LOCKSTEP_Master_Out(3215) <= \<const0>\;
  LOCKSTEP_Master_Out(3216) <= \<const0>\;
  LOCKSTEP_Master_Out(3217) <= \<const0>\;
  LOCKSTEP_Master_Out(3218) <= \<const0>\;
  LOCKSTEP_Master_Out(3219) <= \<const0>\;
  LOCKSTEP_Master_Out(3220) <= \<const0>\;
  LOCKSTEP_Master_Out(3221) <= \<const0>\;
  LOCKSTEP_Master_Out(3222) <= \<const0>\;
  LOCKSTEP_Master_Out(3223) <= \<const0>\;
  LOCKSTEP_Master_Out(3224) <= \<const0>\;
  LOCKSTEP_Master_Out(3225) <= \<const0>\;
  LOCKSTEP_Master_Out(3226) <= \<const0>\;
  LOCKSTEP_Master_Out(3227) <= \<const0>\;
  LOCKSTEP_Master_Out(3228) <= \<const0>\;
  LOCKSTEP_Master_Out(3229) <= \<const0>\;
  LOCKSTEP_Master_Out(3230) <= \<const0>\;
  LOCKSTEP_Master_Out(3231) <= \<const0>\;
  LOCKSTEP_Master_Out(3232) <= \<const0>\;
  LOCKSTEP_Master_Out(3233) <= \<const0>\;
  LOCKSTEP_Master_Out(3234) <= \<const0>\;
  LOCKSTEP_Master_Out(3235) <= \<const0>\;
  LOCKSTEP_Master_Out(3236) <= \<const0>\;
  LOCKSTEP_Master_Out(3237) <= \<const0>\;
  LOCKSTEP_Master_Out(3238) <= \<const0>\;
  LOCKSTEP_Master_Out(3239) <= \<const0>\;
  LOCKSTEP_Master_Out(3240) <= \<const0>\;
  LOCKSTEP_Master_Out(3241) <= \<const0>\;
  LOCKSTEP_Master_Out(3242) <= \<const0>\;
  LOCKSTEP_Master_Out(3243) <= \<const0>\;
  LOCKSTEP_Master_Out(3244) <= \<const0>\;
  LOCKSTEP_Master_Out(3245) <= \<const0>\;
  LOCKSTEP_Master_Out(3246) <= \<const0>\;
  LOCKSTEP_Master_Out(3247) <= \<const0>\;
  LOCKSTEP_Master_Out(3248) <= \<const0>\;
  LOCKSTEP_Master_Out(3249) <= \<const0>\;
  LOCKSTEP_Master_Out(3250) <= \<const0>\;
  LOCKSTEP_Master_Out(3251) <= \<const0>\;
  LOCKSTEP_Master_Out(3252) <= \<const0>\;
  LOCKSTEP_Master_Out(3253) <= \<const0>\;
  LOCKSTEP_Master_Out(3254) <= \<const0>\;
  LOCKSTEP_Master_Out(3255) <= \<const0>\;
  LOCKSTEP_Master_Out(3256) <= \<const0>\;
  LOCKSTEP_Master_Out(3257) <= \<const0>\;
  LOCKSTEP_Master_Out(3258) <= \<const0>\;
  LOCKSTEP_Master_Out(3259) <= \<const0>\;
  LOCKSTEP_Master_Out(3260) <= \<const0>\;
  LOCKSTEP_Master_Out(3261) <= \<const0>\;
  LOCKSTEP_Master_Out(3262) <= \<const0>\;
  LOCKSTEP_Master_Out(3263) <= \<const0>\;
  LOCKSTEP_Master_Out(3264) <= \<const0>\;
  LOCKSTEP_Master_Out(3265) <= \<const0>\;
  LOCKSTEP_Master_Out(3266) <= \<const0>\;
  LOCKSTEP_Master_Out(3267) <= \<const0>\;
  LOCKSTEP_Master_Out(3268) <= \<const0>\;
  LOCKSTEP_Master_Out(3269) <= \<const0>\;
  LOCKSTEP_Master_Out(3270) <= \<const0>\;
  LOCKSTEP_Master_Out(3271) <= \<const0>\;
  LOCKSTEP_Master_Out(3272) <= \<const0>\;
  LOCKSTEP_Master_Out(3273) <= \<const0>\;
  LOCKSTEP_Master_Out(3274) <= \<const0>\;
  LOCKSTEP_Master_Out(3275) <= \<const0>\;
  LOCKSTEP_Master_Out(3276) <= \<const0>\;
  LOCKSTEP_Master_Out(3277) <= \<const0>\;
  LOCKSTEP_Master_Out(3278) <= \<const0>\;
  LOCKSTEP_Master_Out(3279) <= \<const0>\;
  LOCKSTEP_Master_Out(3280) <= \<const0>\;
  LOCKSTEP_Master_Out(3281) <= \<const0>\;
  LOCKSTEP_Master_Out(3282) <= \<const0>\;
  LOCKSTEP_Master_Out(3283) <= \<const0>\;
  LOCKSTEP_Master_Out(3284) <= \<const0>\;
  LOCKSTEP_Master_Out(3285) <= \<const0>\;
  LOCKSTEP_Master_Out(3286) <= \<const0>\;
  LOCKSTEP_Master_Out(3287) <= \<const0>\;
  LOCKSTEP_Master_Out(3288) <= \<const0>\;
  LOCKSTEP_Master_Out(3289) <= \<const0>\;
  LOCKSTEP_Master_Out(3290) <= \<const0>\;
  LOCKSTEP_Master_Out(3291) <= \<const0>\;
  LOCKSTEP_Master_Out(3292) <= \<const0>\;
  LOCKSTEP_Master_Out(3293) <= \<const0>\;
  LOCKSTEP_Master_Out(3294) <= \<const0>\;
  LOCKSTEP_Master_Out(3295) <= \<const0>\;
  LOCKSTEP_Master_Out(3296) <= \<const0>\;
  LOCKSTEP_Master_Out(3297) <= \<const0>\;
  LOCKSTEP_Master_Out(3298) <= \<const0>\;
  LOCKSTEP_Master_Out(3299) <= \<const0>\;
  LOCKSTEP_Master_Out(3300) <= \<const0>\;
  LOCKSTEP_Master_Out(3301) <= \<const0>\;
  LOCKSTEP_Master_Out(3302) <= \<const0>\;
  LOCKSTEP_Master_Out(3303) <= \<const0>\;
  LOCKSTEP_Master_Out(3304) <= \<const0>\;
  LOCKSTEP_Master_Out(3305) <= \<const0>\;
  LOCKSTEP_Master_Out(3306) <= \<const0>\;
  LOCKSTEP_Master_Out(3307) <= \<const0>\;
  LOCKSTEP_Master_Out(3308) <= \<const0>\;
  LOCKSTEP_Master_Out(3309) <= \<const0>\;
  LOCKSTEP_Master_Out(3310) <= \<const0>\;
  LOCKSTEP_Master_Out(3311) <= \<const0>\;
  LOCKSTEP_Master_Out(3312) <= \<const0>\;
  LOCKSTEP_Master_Out(3313) <= \<const0>\;
  LOCKSTEP_Master_Out(3314) <= \<const0>\;
  LOCKSTEP_Master_Out(3315) <= \<const0>\;
  LOCKSTEP_Master_Out(3316) <= \<const0>\;
  LOCKSTEP_Master_Out(3317) <= \<const0>\;
  LOCKSTEP_Master_Out(3318) <= \<const0>\;
  LOCKSTEP_Master_Out(3319) <= \<const0>\;
  LOCKSTEP_Master_Out(3320) <= \<const0>\;
  LOCKSTEP_Master_Out(3321) <= \<const0>\;
  LOCKSTEP_Master_Out(3322) <= \<const0>\;
  LOCKSTEP_Master_Out(3323) <= \<const0>\;
  LOCKSTEP_Master_Out(3324) <= \<const0>\;
  LOCKSTEP_Master_Out(3325) <= \<const0>\;
  LOCKSTEP_Master_Out(3326) <= \<const0>\;
  LOCKSTEP_Master_Out(3327) <= \<const0>\;
  LOCKSTEP_Master_Out(3328) <= \<const0>\;
  LOCKSTEP_Master_Out(3329) <= \<const0>\;
  LOCKSTEP_Master_Out(3330) <= \<const0>\;
  LOCKSTEP_Master_Out(3331) <= \<const0>\;
  LOCKSTEP_Master_Out(3332) <= \<const0>\;
  LOCKSTEP_Master_Out(3333) <= \<const0>\;
  LOCKSTEP_Master_Out(3334) <= \<const0>\;
  LOCKSTEP_Master_Out(3335) <= \<const0>\;
  LOCKSTEP_Master_Out(3336) <= \<const0>\;
  LOCKSTEP_Master_Out(3337) <= \<const0>\;
  LOCKSTEP_Master_Out(3338) <= \<const0>\;
  LOCKSTEP_Master_Out(3339) <= \<const0>\;
  LOCKSTEP_Master_Out(3340) <= \<const0>\;
  LOCKSTEP_Master_Out(3341) <= \<const0>\;
  LOCKSTEP_Master_Out(3342) <= \<const0>\;
  LOCKSTEP_Master_Out(3343) <= \<const0>\;
  LOCKSTEP_Master_Out(3344) <= \<const0>\;
  LOCKSTEP_Master_Out(3345) <= \<const0>\;
  LOCKSTEP_Master_Out(3346) <= \<const0>\;
  LOCKSTEP_Master_Out(3347) <= \<const0>\;
  LOCKSTEP_Master_Out(3348) <= \<const0>\;
  LOCKSTEP_Master_Out(3349) <= \<const0>\;
  LOCKSTEP_Master_Out(3350) <= \<const0>\;
  LOCKSTEP_Master_Out(3351) <= \<const0>\;
  LOCKSTEP_Master_Out(3352) <= \<const0>\;
  LOCKSTEP_Master_Out(3353) <= \<const0>\;
  LOCKSTEP_Master_Out(3354) <= \<const0>\;
  LOCKSTEP_Master_Out(3355) <= \<const0>\;
  LOCKSTEP_Master_Out(3356) <= \<const0>\;
  LOCKSTEP_Master_Out(3357) <= \<const0>\;
  LOCKSTEP_Master_Out(3358) <= \<const0>\;
  LOCKSTEP_Master_Out(3359) <= \<const0>\;
  LOCKSTEP_Master_Out(3360) <= \<const0>\;
  LOCKSTEP_Master_Out(3361) <= \<const0>\;
  LOCKSTEP_Master_Out(3362) <= \<const0>\;
  LOCKSTEP_Master_Out(3363) <= \<const0>\;
  LOCKSTEP_Master_Out(3364) <= \<const0>\;
  LOCKSTEP_Master_Out(3365) <= \<const0>\;
  LOCKSTEP_Master_Out(3366) <= \<const0>\;
  LOCKSTEP_Master_Out(3367) <= \<const0>\;
  LOCKSTEP_Master_Out(3368) <= \<const0>\;
  LOCKSTEP_Master_Out(3369) <= \<const0>\;
  LOCKSTEP_Master_Out(3370) <= \<const0>\;
  LOCKSTEP_Master_Out(3371) <= \<const0>\;
  LOCKSTEP_Master_Out(3372) <= \<const0>\;
  LOCKSTEP_Master_Out(3373) <= \<const0>\;
  LOCKSTEP_Master_Out(3374) <= \<const0>\;
  LOCKSTEP_Master_Out(3375) <= \<const0>\;
  LOCKSTEP_Master_Out(3376) <= \<const0>\;
  LOCKSTEP_Master_Out(3377) <= \<const0>\;
  LOCKSTEP_Master_Out(3378) <= \<const0>\;
  LOCKSTEP_Master_Out(3379) <= \<const0>\;
  LOCKSTEP_Master_Out(3380) <= \<const0>\;
  LOCKSTEP_Master_Out(3381) <= \<const0>\;
  LOCKSTEP_Master_Out(3382) <= \<const0>\;
  LOCKSTEP_Master_Out(3383) <= \<const0>\;
  LOCKSTEP_Master_Out(3384) <= \<const0>\;
  LOCKSTEP_Master_Out(3385) <= \<const0>\;
  LOCKSTEP_Master_Out(3386) <= \<const0>\;
  LOCKSTEP_Master_Out(3387) <= \<const0>\;
  LOCKSTEP_Master_Out(3388) <= \<const0>\;
  LOCKSTEP_Master_Out(3389) <= \<const0>\;
  LOCKSTEP_Master_Out(3390) <= \<const0>\;
  LOCKSTEP_Master_Out(3391) <= \<const0>\;
  LOCKSTEP_Master_Out(3392) <= \<const0>\;
  LOCKSTEP_Master_Out(3393) <= \<const0>\;
  LOCKSTEP_Master_Out(3394) <= \<const0>\;
  LOCKSTEP_Master_Out(3395) <= \<const0>\;
  LOCKSTEP_Master_Out(3396) <= \<const0>\;
  LOCKSTEP_Master_Out(3397) <= \<const0>\;
  LOCKSTEP_Master_Out(3398) <= \<const0>\;
  LOCKSTEP_Master_Out(3399) <= \<const0>\;
  LOCKSTEP_Master_Out(3400) <= \<const0>\;
  LOCKSTEP_Master_Out(3401) <= \<const0>\;
  LOCKSTEP_Master_Out(3402) <= \<const0>\;
  LOCKSTEP_Master_Out(3403) <= \<const0>\;
  LOCKSTEP_Master_Out(3404) <= \<const0>\;
  LOCKSTEP_Master_Out(3405) <= \<const0>\;
  LOCKSTEP_Master_Out(3406) <= \<const0>\;
  LOCKSTEP_Master_Out(3407) <= \<const0>\;
  LOCKSTEP_Master_Out(3408) <= \<const0>\;
  LOCKSTEP_Master_Out(3409) <= \<const0>\;
  LOCKSTEP_Master_Out(3410) <= \<const0>\;
  LOCKSTEP_Master_Out(3411) <= \<const0>\;
  LOCKSTEP_Master_Out(3412) <= \<const0>\;
  LOCKSTEP_Master_Out(3413) <= \<const0>\;
  LOCKSTEP_Master_Out(3414) <= \<const0>\;
  LOCKSTEP_Master_Out(3415) <= \<const0>\;
  LOCKSTEP_Master_Out(3416) <= \<const0>\;
  LOCKSTEP_Master_Out(3417) <= \<const0>\;
  LOCKSTEP_Master_Out(3418) <= \<const0>\;
  LOCKSTEP_Master_Out(3419) <= \<const0>\;
  LOCKSTEP_Master_Out(3420) <= \<const0>\;
  LOCKSTEP_Master_Out(3421) <= \<const0>\;
  LOCKSTEP_Master_Out(3422) <= \<const0>\;
  LOCKSTEP_Master_Out(3423) <= \<const0>\;
  LOCKSTEP_Master_Out(3424) <= \<const0>\;
  LOCKSTEP_Master_Out(3425) <= \<const0>\;
  LOCKSTEP_Master_Out(3426) <= \<const0>\;
  LOCKSTEP_Master_Out(3427) <= \<const0>\;
  LOCKSTEP_Master_Out(3428) <= \<const0>\;
  LOCKSTEP_Master_Out(3429) <= \<const0>\;
  LOCKSTEP_Master_Out(3430) <= \<const0>\;
  LOCKSTEP_Master_Out(3431) <= \<const0>\;
  LOCKSTEP_Master_Out(3432) <= \<const0>\;
  LOCKSTEP_Master_Out(3433) <= \<const0>\;
  LOCKSTEP_Master_Out(3434) <= \<const0>\;
  LOCKSTEP_Master_Out(3435) <= \<const0>\;
  LOCKSTEP_Master_Out(3436) <= \<const0>\;
  LOCKSTEP_Master_Out(3437) <= \<const0>\;
  LOCKSTEP_Master_Out(3438) <= \<const0>\;
  LOCKSTEP_Master_Out(3439) <= \<const0>\;
  LOCKSTEP_Master_Out(3440) <= \<const0>\;
  LOCKSTEP_Master_Out(3441) <= \<const0>\;
  LOCKSTEP_Master_Out(3442) <= \<const0>\;
  LOCKSTEP_Master_Out(3443) <= \<const0>\;
  LOCKSTEP_Master_Out(3444) <= \<const0>\;
  LOCKSTEP_Master_Out(3445) <= \<const0>\;
  LOCKSTEP_Master_Out(3446) <= \<const0>\;
  LOCKSTEP_Master_Out(3447) <= \<const0>\;
  LOCKSTEP_Master_Out(3448) <= \<const0>\;
  LOCKSTEP_Master_Out(3449) <= \<const0>\;
  LOCKSTEP_Master_Out(3450) <= \<const0>\;
  LOCKSTEP_Master_Out(3451) <= \<const0>\;
  LOCKSTEP_Master_Out(3452) <= \<const0>\;
  LOCKSTEP_Master_Out(3453) <= \<const0>\;
  LOCKSTEP_Master_Out(3454) <= \<const0>\;
  LOCKSTEP_Master_Out(3455) <= \<const0>\;
  LOCKSTEP_Master_Out(3456) <= \<const0>\;
  LOCKSTEP_Master_Out(3457) <= \<const0>\;
  LOCKSTEP_Master_Out(3458) <= \<const0>\;
  LOCKSTEP_Master_Out(3459) <= \<const0>\;
  LOCKSTEP_Master_Out(3460) <= \<const0>\;
  LOCKSTEP_Master_Out(3461) <= \<const0>\;
  LOCKSTEP_Master_Out(3462) <= \<const0>\;
  LOCKSTEP_Master_Out(3463) <= \<const0>\;
  LOCKSTEP_Master_Out(3464) <= \<const0>\;
  LOCKSTEP_Master_Out(3465) <= \<const0>\;
  LOCKSTEP_Master_Out(3466) <= \<const0>\;
  LOCKSTEP_Master_Out(3467) <= \<const0>\;
  LOCKSTEP_Master_Out(3468) <= \<const0>\;
  LOCKSTEP_Master_Out(3469) <= \<const0>\;
  LOCKSTEP_Master_Out(3470) <= \<const0>\;
  LOCKSTEP_Master_Out(3471) <= \<const0>\;
  LOCKSTEP_Master_Out(3472) <= \<const0>\;
  LOCKSTEP_Master_Out(3473) <= \<const0>\;
  LOCKSTEP_Master_Out(3474) <= \<const0>\;
  LOCKSTEP_Master_Out(3475) <= \<const0>\;
  LOCKSTEP_Master_Out(3476) <= \<const0>\;
  LOCKSTEP_Master_Out(3477) <= \<const0>\;
  LOCKSTEP_Master_Out(3478) <= \<const0>\;
  LOCKSTEP_Master_Out(3479) <= \<const0>\;
  LOCKSTEP_Master_Out(3480) <= \<const0>\;
  LOCKSTEP_Master_Out(3481) <= \<const0>\;
  LOCKSTEP_Master_Out(3482) <= \<const0>\;
  LOCKSTEP_Master_Out(3483) <= \<const0>\;
  LOCKSTEP_Master_Out(3484) <= \<const0>\;
  LOCKSTEP_Master_Out(3485) <= \<const0>\;
  LOCKSTEP_Master_Out(3486) <= \<const0>\;
  LOCKSTEP_Master_Out(3487) <= \<const0>\;
  LOCKSTEP_Master_Out(3488) <= \<const0>\;
  LOCKSTEP_Master_Out(3489) <= \<const0>\;
  LOCKSTEP_Master_Out(3490) <= \<const0>\;
  LOCKSTEP_Master_Out(3491) <= \<const0>\;
  LOCKSTEP_Master_Out(3492) <= \<const0>\;
  LOCKSTEP_Master_Out(3493) <= \<const0>\;
  LOCKSTEP_Master_Out(3494) <= \<const0>\;
  LOCKSTEP_Master_Out(3495) <= \<const0>\;
  LOCKSTEP_Master_Out(3496) <= \<const0>\;
  LOCKSTEP_Master_Out(3497) <= \<const0>\;
  LOCKSTEP_Master_Out(3498) <= \<const0>\;
  LOCKSTEP_Master_Out(3499) <= \<const0>\;
  LOCKSTEP_Master_Out(3500) <= \<const0>\;
  LOCKSTEP_Master_Out(3501) <= \<const0>\;
  LOCKSTEP_Master_Out(3502) <= \<const0>\;
  LOCKSTEP_Master_Out(3503) <= \<const0>\;
  LOCKSTEP_Master_Out(3504) <= \<const0>\;
  LOCKSTEP_Master_Out(3505) <= \<const0>\;
  LOCKSTEP_Master_Out(3506) <= \<const0>\;
  LOCKSTEP_Master_Out(3507) <= \<const0>\;
  LOCKSTEP_Master_Out(3508) <= \<const0>\;
  LOCKSTEP_Master_Out(3509) <= \<const0>\;
  LOCKSTEP_Master_Out(3510) <= \<const0>\;
  LOCKSTEP_Master_Out(3511) <= \<const0>\;
  LOCKSTEP_Master_Out(3512) <= \<const0>\;
  LOCKSTEP_Master_Out(3513) <= \<const0>\;
  LOCKSTEP_Master_Out(3514) <= \<const0>\;
  LOCKSTEP_Master_Out(3515) <= \<const0>\;
  LOCKSTEP_Master_Out(3516) <= \<const0>\;
  LOCKSTEP_Master_Out(3517) <= \<const0>\;
  LOCKSTEP_Master_Out(3518) <= \<const0>\;
  LOCKSTEP_Master_Out(3519) <= \<const0>\;
  LOCKSTEP_Master_Out(3520) <= \<const0>\;
  LOCKSTEP_Master_Out(3521) <= \<const0>\;
  LOCKSTEP_Master_Out(3522) <= \<const0>\;
  LOCKSTEP_Master_Out(3523) <= \<const0>\;
  LOCKSTEP_Master_Out(3524) <= \<const0>\;
  LOCKSTEP_Master_Out(3525) <= \<const0>\;
  LOCKSTEP_Master_Out(3526) <= \<const0>\;
  LOCKSTEP_Master_Out(3527) <= \<const0>\;
  LOCKSTEP_Master_Out(3528) <= \<const0>\;
  LOCKSTEP_Master_Out(3529) <= \<const0>\;
  LOCKSTEP_Master_Out(3530) <= \<const0>\;
  LOCKSTEP_Master_Out(3531) <= \<const0>\;
  LOCKSTEP_Master_Out(3532) <= \<const0>\;
  LOCKSTEP_Master_Out(3533) <= \<const0>\;
  LOCKSTEP_Master_Out(3534) <= \<const0>\;
  LOCKSTEP_Master_Out(3535) <= \<const0>\;
  LOCKSTEP_Master_Out(3536) <= \<const0>\;
  LOCKSTEP_Master_Out(3537) <= \<const0>\;
  LOCKSTEP_Master_Out(3538) <= \<const0>\;
  LOCKSTEP_Master_Out(3539) <= \<const0>\;
  LOCKSTEP_Master_Out(3540) <= \<const0>\;
  LOCKSTEP_Master_Out(3541) <= \<const0>\;
  LOCKSTEP_Master_Out(3542) <= \<const0>\;
  LOCKSTEP_Master_Out(3543) <= \<const0>\;
  LOCKSTEP_Master_Out(3544) <= \<const0>\;
  LOCKSTEP_Master_Out(3545) <= \<const0>\;
  LOCKSTEP_Master_Out(3546) <= \<const0>\;
  LOCKSTEP_Master_Out(3547) <= \<const0>\;
  LOCKSTEP_Master_Out(3548) <= \<const0>\;
  LOCKSTEP_Master_Out(3549) <= \<const0>\;
  LOCKSTEP_Master_Out(3550) <= \<const0>\;
  LOCKSTEP_Master_Out(3551) <= \<const0>\;
  LOCKSTEP_Master_Out(3552) <= \<const0>\;
  LOCKSTEP_Master_Out(3553) <= \<const0>\;
  LOCKSTEP_Master_Out(3554) <= \<const0>\;
  LOCKSTEP_Master_Out(3555) <= \<const0>\;
  LOCKSTEP_Master_Out(3556) <= \<const0>\;
  LOCKSTEP_Master_Out(3557) <= \<const0>\;
  LOCKSTEP_Master_Out(3558) <= \<const0>\;
  LOCKSTEP_Master_Out(3559) <= \<const0>\;
  LOCKSTEP_Master_Out(3560) <= \<const0>\;
  LOCKSTEP_Master_Out(3561) <= \<const0>\;
  LOCKSTEP_Master_Out(3562) <= \<const0>\;
  LOCKSTEP_Master_Out(3563) <= \<const0>\;
  LOCKSTEP_Master_Out(3564) <= \<const0>\;
  LOCKSTEP_Master_Out(3565) <= \<const0>\;
  LOCKSTEP_Master_Out(3566) <= \<const0>\;
  LOCKSTEP_Master_Out(3567) <= \<const0>\;
  LOCKSTEP_Master_Out(3568) <= \<const0>\;
  LOCKSTEP_Master_Out(3569) <= \<const0>\;
  LOCKSTEP_Master_Out(3570) <= \<const0>\;
  LOCKSTEP_Master_Out(3571) <= \<const0>\;
  LOCKSTEP_Master_Out(3572) <= \<const0>\;
  LOCKSTEP_Master_Out(3573) <= \<const0>\;
  LOCKSTEP_Master_Out(3574) <= \<const0>\;
  LOCKSTEP_Master_Out(3575) <= \<const0>\;
  LOCKSTEP_Master_Out(3576) <= \<const0>\;
  LOCKSTEP_Master_Out(3577) <= \<const0>\;
  LOCKSTEP_Master_Out(3578) <= \<const0>\;
  LOCKSTEP_Master_Out(3579) <= \<const0>\;
  LOCKSTEP_Master_Out(3580) <= \<const0>\;
  LOCKSTEP_Master_Out(3581) <= \<const0>\;
  LOCKSTEP_Master_Out(3582) <= \<const0>\;
  LOCKSTEP_Master_Out(3583) <= \<const0>\;
  LOCKSTEP_Master_Out(3584) <= \<const0>\;
  LOCKSTEP_Master_Out(3585) <= \<const0>\;
  LOCKSTEP_Master_Out(3586) <= \<const0>\;
  LOCKSTEP_Master_Out(3587) <= \<const0>\;
  LOCKSTEP_Master_Out(3588) <= \<const0>\;
  LOCKSTEP_Master_Out(3589) <= \<const0>\;
  LOCKSTEP_Master_Out(3590) <= \<const0>\;
  LOCKSTEP_Master_Out(3591) <= \<const0>\;
  LOCKSTEP_Master_Out(3592) <= \<const0>\;
  LOCKSTEP_Master_Out(3593) <= \<const0>\;
  LOCKSTEP_Master_Out(3594) <= \<const0>\;
  LOCKSTEP_Master_Out(3595) <= \<const0>\;
  LOCKSTEP_Master_Out(3596) <= \<const0>\;
  LOCKSTEP_Master_Out(3597) <= \<const0>\;
  LOCKSTEP_Master_Out(3598) <= \<const0>\;
  LOCKSTEP_Master_Out(3599) <= \<const0>\;
  LOCKSTEP_Master_Out(3600) <= \<const0>\;
  LOCKSTEP_Master_Out(3601) <= \<const0>\;
  LOCKSTEP_Master_Out(3602) <= \<const0>\;
  LOCKSTEP_Master_Out(3603) <= \<const0>\;
  LOCKSTEP_Master_Out(3604) <= \<const0>\;
  LOCKSTEP_Master_Out(3605) <= \<const0>\;
  LOCKSTEP_Master_Out(3606) <= \<const0>\;
  LOCKSTEP_Master_Out(3607) <= \<const0>\;
  LOCKSTEP_Master_Out(3608) <= \<const0>\;
  LOCKSTEP_Master_Out(3609) <= \<const0>\;
  LOCKSTEP_Master_Out(3610) <= \<const0>\;
  LOCKSTEP_Master_Out(3611) <= \<const0>\;
  LOCKSTEP_Master_Out(3612) <= \<const0>\;
  LOCKSTEP_Master_Out(3613) <= \<const0>\;
  LOCKSTEP_Master_Out(3614) <= \<const0>\;
  LOCKSTEP_Master_Out(3615) <= \<const0>\;
  LOCKSTEP_Master_Out(3616) <= \<const0>\;
  LOCKSTEP_Master_Out(3617) <= \<const0>\;
  LOCKSTEP_Master_Out(3618) <= \<const0>\;
  LOCKSTEP_Master_Out(3619) <= \<const0>\;
  LOCKSTEP_Master_Out(3620) <= \<const0>\;
  LOCKSTEP_Master_Out(3621) <= \<const0>\;
  LOCKSTEP_Master_Out(3622) <= \<const0>\;
  LOCKSTEP_Master_Out(3623) <= \<const0>\;
  LOCKSTEP_Master_Out(3624) <= \<const0>\;
  LOCKSTEP_Master_Out(3625) <= \<const0>\;
  LOCKSTEP_Master_Out(3626) <= \<const0>\;
  LOCKSTEP_Master_Out(3627) <= \<const0>\;
  LOCKSTEP_Master_Out(3628) <= \<const0>\;
  LOCKSTEP_Master_Out(3629) <= \<const0>\;
  LOCKSTEP_Master_Out(3630) <= \<const0>\;
  LOCKSTEP_Master_Out(3631) <= \<const0>\;
  LOCKSTEP_Master_Out(3632) <= \<const0>\;
  LOCKSTEP_Master_Out(3633) <= \<const0>\;
  LOCKSTEP_Master_Out(3634) <= \<const0>\;
  LOCKSTEP_Master_Out(3635) <= \<const0>\;
  LOCKSTEP_Master_Out(3636) <= \<const0>\;
  LOCKSTEP_Master_Out(3637) <= \<const0>\;
  LOCKSTEP_Master_Out(3638) <= \<const0>\;
  LOCKSTEP_Master_Out(3639) <= \<const0>\;
  LOCKSTEP_Master_Out(3640) <= \<const0>\;
  LOCKSTEP_Master_Out(3641) <= \<const0>\;
  LOCKSTEP_Master_Out(3642) <= \<const0>\;
  LOCKSTEP_Master_Out(3643) <= \<const0>\;
  LOCKSTEP_Master_Out(3644) <= \<const0>\;
  LOCKSTEP_Master_Out(3645) <= \<const0>\;
  LOCKSTEP_Master_Out(3646) <= \<const0>\;
  LOCKSTEP_Master_Out(3647) <= \<const0>\;
  LOCKSTEP_Master_Out(3648) <= \<const0>\;
  LOCKSTEP_Master_Out(3649) <= \<const0>\;
  LOCKSTEP_Master_Out(3650) <= \<const0>\;
  LOCKSTEP_Master_Out(3651) <= \<const0>\;
  LOCKSTEP_Master_Out(3652) <= \<const0>\;
  LOCKSTEP_Master_Out(3653) <= \<const0>\;
  LOCKSTEP_Master_Out(3654) <= \<const0>\;
  LOCKSTEP_Master_Out(3655) <= \<const0>\;
  LOCKSTEP_Master_Out(3656) <= \<const0>\;
  LOCKSTEP_Master_Out(3657) <= \<const0>\;
  LOCKSTEP_Master_Out(3658) <= \<const0>\;
  LOCKSTEP_Master_Out(3659) <= \<const0>\;
  LOCKSTEP_Master_Out(3660) <= \<const0>\;
  LOCKSTEP_Master_Out(3661) <= \<const0>\;
  LOCKSTEP_Master_Out(3662) <= \<const0>\;
  LOCKSTEP_Master_Out(3663) <= \<const0>\;
  LOCKSTEP_Master_Out(3664) <= \<const0>\;
  LOCKSTEP_Master_Out(3665) <= \<const0>\;
  LOCKSTEP_Master_Out(3666) <= \<const0>\;
  LOCKSTEP_Master_Out(3667) <= \<const0>\;
  LOCKSTEP_Master_Out(3668) <= \<const0>\;
  LOCKSTEP_Master_Out(3669) <= \<const0>\;
  LOCKSTEP_Master_Out(3670) <= \<const0>\;
  LOCKSTEP_Master_Out(3671) <= \<const0>\;
  LOCKSTEP_Master_Out(3672) <= \<const0>\;
  LOCKSTEP_Master_Out(3673) <= \<const0>\;
  LOCKSTEP_Master_Out(3674) <= \<const0>\;
  LOCKSTEP_Master_Out(3675) <= \<const0>\;
  LOCKSTEP_Master_Out(3676) <= \<const0>\;
  LOCKSTEP_Master_Out(3677) <= \<const0>\;
  LOCKSTEP_Master_Out(3678) <= \<const0>\;
  LOCKSTEP_Master_Out(3679) <= \<const0>\;
  LOCKSTEP_Master_Out(3680) <= \<const0>\;
  LOCKSTEP_Master_Out(3681) <= \<const0>\;
  LOCKSTEP_Master_Out(3682) <= \<const0>\;
  LOCKSTEP_Master_Out(3683) <= \<const0>\;
  LOCKSTEP_Master_Out(3684) <= \<const0>\;
  LOCKSTEP_Master_Out(3685) <= \<const0>\;
  LOCKSTEP_Master_Out(3686) <= \<const0>\;
  LOCKSTEP_Master_Out(3687) <= \<const0>\;
  LOCKSTEP_Master_Out(3688) <= \<const0>\;
  LOCKSTEP_Master_Out(3689) <= \<const0>\;
  LOCKSTEP_Master_Out(3690) <= \<const0>\;
  LOCKSTEP_Master_Out(3691) <= \<const0>\;
  LOCKSTEP_Master_Out(3692) <= \<const0>\;
  LOCKSTEP_Master_Out(3693) <= \<const0>\;
  LOCKSTEP_Master_Out(3694) <= \<const0>\;
  LOCKSTEP_Master_Out(3695) <= \<const0>\;
  LOCKSTEP_Master_Out(3696) <= \<const0>\;
  LOCKSTEP_Master_Out(3697) <= \<const0>\;
  LOCKSTEP_Master_Out(3698) <= \<const0>\;
  LOCKSTEP_Master_Out(3699) <= \<const0>\;
  LOCKSTEP_Master_Out(3700) <= \<const0>\;
  LOCKSTEP_Master_Out(3701) <= \<const0>\;
  LOCKSTEP_Master_Out(3702) <= \<const0>\;
  LOCKSTEP_Master_Out(3703) <= \<const0>\;
  LOCKSTEP_Master_Out(3704) <= \<const0>\;
  LOCKSTEP_Master_Out(3705) <= \<const0>\;
  LOCKSTEP_Master_Out(3706) <= \<const0>\;
  LOCKSTEP_Master_Out(3707) <= \<const0>\;
  LOCKSTEP_Master_Out(3708) <= \<const0>\;
  LOCKSTEP_Master_Out(3709) <= \<const0>\;
  LOCKSTEP_Master_Out(3710) <= \<const0>\;
  LOCKSTEP_Master_Out(3711) <= \<const0>\;
  LOCKSTEP_Master_Out(3712) <= \<const0>\;
  LOCKSTEP_Master_Out(3713) <= \<const0>\;
  LOCKSTEP_Master_Out(3714) <= \<const0>\;
  LOCKSTEP_Master_Out(3715) <= \<const0>\;
  LOCKSTEP_Master_Out(3716) <= \<const0>\;
  LOCKSTEP_Master_Out(3717) <= \<const0>\;
  LOCKSTEP_Master_Out(3718) <= \<const0>\;
  LOCKSTEP_Master_Out(3719) <= \<const0>\;
  LOCKSTEP_Master_Out(3720) <= \<const0>\;
  LOCKSTEP_Master_Out(3721) <= \<const0>\;
  LOCKSTEP_Master_Out(3722) <= \<const0>\;
  LOCKSTEP_Master_Out(3723) <= \<const0>\;
  LOCKSTEP_Master_Out(3724) <= \<const0>\;
  LOCKSTEP_Master_Out(3725) <= \<const0>\;
  LOCKSTEP_Master_Out(3726) <= \<const0>\;
  LOCKSTEP_Master_Out(3727) <= \<const0>\;
  LOCKSTEP_Master_Out(3728) <= \<const0>\;
  LOCKSTEP_Master_Out(3729) <= \<const0>\;
  LOCKSTEP_Master_Out(3730) <= \<const0>\;
  LOCKSTEP_Master_Out(3731) <= \<const0>\;
  LOCKSTEP_Master_Out(3732) <= \<const0>\;
  LOCKSTEP_Master_Out(3733) <= \<const0>\;
  LOCKSTEP_Master_Out(3734) <= \<const0>\;
  LOCKSTEP_Master_Out(3735) <= \<const0>\;
  LOCKSTEP_Master_Out(3736) <= \<const0>\;
  LOCKSTEP_Master_Out(3737) <= \<const0>\;
  LOCKSTEP_Master_Out(3738) <= \<const0>\;
  LOCKSTEP_Master_Out(3739) <= \<const0>\;
  LOCKSTEP_Master_Out(3740) <= \<const0>\;
  LOCKSTEP_Master_Out(3741) <= \<const0>\;
  LOCKSTEP_Master_Out(3742) <= \<const0>\;
  LOCKSTEP_Master_Out(3743) <= \<const0>\;
  LOCKSTEP_Master_Out(3744) <= \<const0>\;
  LOCKSTEP_Master_Out(3745) <= \<const0>\;
  LOCKSTEP_Master_Out(3746) <= \<const0>\;
  LOCKSTEP_Master_Out(3747) <= \<const0>\;
  LOCKSTEP_Master_Out(3748) <= \<const0>\;
  LOCKSTEP_Master_Out(3749) <= \<const0>\;
  LOCKSTEP_Master_Out(3750) <= \<const0>\;
  LOCKSTEP_Master_Out(3751) <= \<const0>\;
  LOCKSTEP_Master_Out(3752) <= \<const0>\;
  LOCKSTEP_Master_Out(3753) <= \<const0>\;
  LOCKSTEP_Master_Out(3754) <= \<const0>\;
  LOCKSTEP_Master_Out(3755) <= \<const0>\;
  LOCKSTEP_Master_Out(3756) <= \<const0>\;
  LOCKSTEP_Master_Out(3757) <= \<const0>\;
  LOCKSTEP_Master_Out(3758) <= \<const0>\;
  LOCKSTEP_Master_Out(3759) <= \<const0>\;
  LOCKSTEP_Master_Out(3760) <= \<const0>\;
  LOCKSTEP_Master_Out(3761) <= \<const0>\;
  LOCKSTEP_Master_Out(3762) <= \<const0>\;
  LOCKSTEP_Master_Out(3763) <= \<const0>\;
  LOCKSTEP_Master_Out(3764) <= \<const0>\;
  LOCKSTEP_Master_Out(3765) <= \<const0>\;
  LOCKSTEP_Master_Out(3766) <= \<const0>\;
  LOCKSTEP_Master_Out(3767) <= \<const0>\;
  LOCKSTEP_Master_Out(3768) <= \<const0>\;
  LOCKSTEP_Master_Out(3769) <= \<const0>\;
  LOCKSTEP_Master_Out(3770) <= \<const0>\;
  LOCKSTEP_Master_Out(3771) <= \<const0>\;
  LOCKSTEP_Master_Out(3772) <= \<const0>\;
  LOCKSTEP_Master_Out(3773) <= \<const0>\;
  LOCKSTEP_Master_Out(3774) <= \<const0>\;
  LOCKSTEP_Master_Out(3775) <= \<const0>\;
  LOCKSTEP_Master_Out(3776) <= \<const0>\;
  LOCKSTEP_Master_Out(3777) <= \<const0>\;
  LOCKSTEP_Master_Out(3778) <= \<const0>\;
  LOCKSTEP_Master_Out(3779) <= \<const0>\;
  LOCKSTEP_Master_Out(3780) <= \<const0>\;
  LOCKSTEP_Master_Out(3781) <= \<const0>\;
  LOCKSTEP_Master_Out(3782) <= \<const0>\;
  LOCKSTEP_Master_Out(3783) <= \<const0>\;
  LOCKSTEP_Master_Out(3784) <= \<const0>\;
  LOCKSTEP_Master_Out(3785) <= \<const0>\;
  LOCKSTEP_Master_Out(3786) <= \<const0>\;
  LOCKSTEP_Master_Out(3787) <= \<const0>\;
  LOCKSTEP_Master_Out(3788) <= \<const0>\;
  LOCKSTEP_Master_Out(3789) <= \<const0>\;
  LOCKSTEP_Master_Out(3790) <= \<const0>\;
  LOCKSTEP_Master_Out(3791) <= \<const0>\;
  LOCKSTEP_Master_Out(3792) <= \<const0>\;
  LOCKSTEP_Master_Out(3793) <= \<const0>\;
  LOCKSTEP_Master_Out(3794) <= \<const0>\;
  LOCKSTEP_Master_Out(3795) <= \<const0>\;
  LOCKSTEP_Master_Out(3796) <= \<const0>\;
  LOCKSTEP_Master_Out(3797) <= \<const0>\;
  LOCKSTEP_Master_Out(3798) <= \<const0>\;
  LOCKSTEP_Master_Out(3799) <= \<const0>\;
  LOCKSTEP_Master_Out(3800) <= \<const0>\;
  LOCKSTEP_Master_Out(3801) <= \<const0>\;
  LOCKSTEP_Master_Out(3802) <= \<const0>\;
  LOCKSTEP_Master_Out(3803) <= \<const0>\;
  LOCKSTEP_Master_Out(3804) <= \<const0>\;
  LOCKSTEP_Master_Out(3805) <= \<const0>\;
  LOCKSTEP_Master_Out(3806) <= \<const0>\;
  LOCKSTEP_Master_Out(3807) <= \<const0>\;
  LOCKSTEP_Master_Out(3808) <= \<const0>\;
  LOCKSTEP_Master_Out(3809) <= \<const0>\;
  LOCKSTEP_Master_Out(3810) <= \<const0>\;
  LOCKSTEP_Master_Out(3811) <= \<const0>\;
  LOCKSTEP_Master_Out(3812) <= \<const0>\;
  LOCKSTEP_Master_Out(3813) <= \<const0>\;
  LOCKSTEP_Master_Out(3814) <= \<const0>\;
  LOCKSTEP_Master_Out(3815) <= \<const0>\;
  LOCKSTEP_Master_Out(3816) <= \<const0>\;
  LOCKSTEP_Master_Out(3817) <= \<const0>\;
  LOCKSTEP_Master_Out(3818) <= \<const0>\;
  LOCKSTEP_Master_Out(3819) <= \<const0>\;
  LOCKSTEP_Master_Out(3820) <= \<const0>\;
  LOCKSTEP_Master_Out(3821) <= \<const0>\;
  LOCKSTEP_Master_Out(3822) <= \<const0>\;
  LOCKSTEP_Master_Out(3823) <= \<const0>\;
  LOCKSTEP_Master_Out(3824) <= \<const0>\;
  LOCKSTEP_Master_Out(3825) <= \<const0>\;
  LOCKSTEP_Master_Out(3826) <= \<const0>\;
  LOCKSTEP_Master_Out(3827) <= \<const0>\;
  LOCKSTEP_Master_Out(3828) <= \<const0>\;
  LOCKSTEP_Master_Out(3829) <= \<const0>\;
  LOCKSTEP_Master_Out(3830) <= \<const0>\;
  LOCKSTEP_Master_Out(3831) <= \<const0>\;
  LOCKSTEP_Master_Out(3832) <= \<const0>\;
  LOCKSTEP_Master_Out(3833) <= \<const0>\;
  LOCKSTEP_Master_Out(3834) <= \<const0>\;
  LOCKSTEP_Master_Out(3835) <= \<const0>\;
  LOCKSTEP_Master_Out(3836) <= \<const0>\;
  LOCKSTEP_Master_Out(3837) <= \<const0>\;
  LOCKSTEP_Master_Out(3838) <= \<const0>\;
  LOCKSTEP_Master_Out(3839) <= \<const0>\;
  LOCKSTEP_Master_Out(3840) <= \<const0>\;
  LOCKSTEP_Master_Out(3841) <= \<const0>\;
  LOCKSTEP_Master_Out(3842) <= \<const0>\;
  LOCKSTEP_Master_Out(3843) <= \<const0>\;
  LOCKSTEP_Master_Out(3844) <= \<const0>\;
  LOCKSTEP_Master_Out(3845) <= \<const0>\;
  LOCKSTEP_Master_Out(3846) <= \<const0>\;
  LOCKSTEP_Master_Out(3847) <= \<const0>\;
  LOCKSTEP_Master_Out(3848) <= \<const0>\;
  LOCKSTEP_Master_Out(3849) <= \<const0>\;
  LOCKSTEP_Master_Out(3850) <= \<const0>\;
  LOCKSTEP_Master_Out(3851) <= \<const0>\;
  LOCKSTEP_Master_Out(3852) <= \<const0>\;
  LOCKSTEP_Master_Out(3853) <= \<const0>\;
  LOCKSTEP_Master_Out(3854) <= \<const0>\;
  LOCKSTEP_Master_Out(3855) <= \<const0>\;
  LOCKSTEP_Master_Out(3856) <= \<const0>\;
  LOCKSTEP_Master_Out(3857) <= \<const0>\;
  LOCKSTEP_Master_Out(3858) <= \<const0>\;
  LOCKSTEP_Master_Out(3859) <= \<const0>\;
  LOCKSTEP_Master_Out(3860) <= \<const0>\;
  LOCKSTEP_Master_Out(3861) <= \<const0>\;
  LOCKSTEP_Master_Out(3862) <= \<const0>\;
  LOCKSTEP_Master_Out(3863) <= \<const0>\;
  LOCKSTEP_Master_Out(3864) <= \<const0>\;
  LOCKSTEP_Master_Out(3865) <= \<const0>\;
  LOCKSTEP_Master_Out(3866) <= \<const0>\;
  LOCKSTEP_Master_Out(3867) <= \<const0>\;
  LOCKSTEP_Master_Out(3868) <= \<const0>\;
  LOCKSTEP_Master_Out(3869) <= \<const0>\;
  LOCKSTEP_Master_Out(3870) <= \<const0>\;
  LOCKSTEP_Master_Out(3871) <= \<const0>\;
  LOCKSTEP_Master_Out(3872) <= \<const0>\;
  LOCKSTEP_Master_Out(3873) <= \<const0>\;
  LOCKSTEP_Master_Out(3874) <= \<const0>\;
  LOCKSTEP_Master_Out(3875) <= \<const0>\;
  LOCKSTEP_Master_Out(3876) <= \<const0>\;
  LOCKSTEP_Master_Out(3877) <= \<const0>\;
  LOCKSTEP_Master_Out(3878) <= \<const0>\;
  LOCKSTEP_Master_Out(3879) <= \<const0>\;
  LOCKSTEP_Master_Out(3880) <= \<const0>\;
  LOCKSTEP_Master_Out(3881) <= \<const0>\;
  LOCKSTEP_Master_Out(3882) <= \<const0>\;
  LOCKSTEP_Master_Out(3883) <= \<const0>\;
  LOCKSTEP_Master_Out(3884) <= \<const0>\;
  LOCKSTEP_Master_Out(3885) <= \<const0>\;
  LOCKSTEP_Master_Out(3886) <= \<const0>\;
  LOCKSTEP_Master_Out(3887) <= \<const0>\;
  LOCKSTEP_Master_Out(3888) <= \<const0>\;
  LOCKSTEP_Master_Out(3889) <= \<const0>\;
  LOCKSTEP_Master_Out(3890) <= \<const0>\;
  LOCKSTEP_Master_Out(3891) <= \<const0>\;
  LOCKSTEP_Master_Out(3892) <= \<const0>\;
  LOCKSTEP_Master_Out(3893) <= \<const0>\;
  LOCKSTEP_Master_Out(3894) <= \<const0>\;
  LOCKSTEP_Master_Out(3895) <= \<const0>\;
  LOCKSTEP_Master_Out(3896) <= \<const0>\;
  LOCKSTEP_Master_Out(3897) <= \<const0>\;
  LOCKSTEP_Master_Out(3898) <= \<const0>\;
  LOCKSTEP_Master_Out(3899) <= \<const0>\;
  LOCKSTEP_Master_Out(3900) <= \<const0>\;
  LOCKSTEP_Master_Out(3901) <= \<const0>\;
  LOCKSTEP_Master_Out(3902) <= \<const0>\;
  LOCKSTEP_Master_Out(3903) <= \<const0>\;
  LOCKSTEP_Master_Out(3904) <= \<const0>\;
  LOCKSTEP_Master_Out(3905) <= \<const0>\;
  LOCKSTEP_Master_Out(3906) <= \<const0>\;
  LOCKSTEP_Master_Out(3907) <= \<const0>\;
  LOCKSTEP_Master_Out(3908) <= \<const0>\;
  LOCKSTEP_Master_Out(3909) <= \<const0>\;
  LOCKSTEP_Master_Out(3910) <= \<const0>\;
  LOCKSTEP_Master_Out(3911) <= \<const0>\;
  LOCKSTEP_Master_Out(3912) <= \<const0>\;
  LOCKSTEP_Master_Out(3913) <= \<const0>\;
  LOCKSTEP_Master_Out(3914) <= \<const0>\;
  LOCKSTEP_Master_Out(3915) <= \<const0>\;
  LOCKSTEP_Master_Out(3916) <= \<const0>\;
  LOCKSTEP_Master_Out(3917) <= \<const0>\;
  LOCKSTEP_Master_Out(3918) <= \<const0>\;
  LOCKSTEP_Master_Out(3919) <= \<const0>\;
  LOCKSTEP_Master_Out(3920) <= \<const0>\;
  LOCKSTEP_Master_Out(3921) <= \<const0>\;
  LOCKSTEP_Master_Out(3922) <= \<const0>\;
  LOCKSTEP_Master_Out(3923) <= \<const0>\;
  LOCKSTEP_Master_Out(3924) <= \<const0>\;
  LOCKSTEP_Master_Out(3925) <= \<const0>\;
  LOCKSTEP_Master_Out(3926) <= \<const0>\;
  LOCKSTEP_Master_Out(3927) <= \<const0>\;
  LOCKSTEP_Master_Out(3928) <= \<const0>\;
  LOCKSTEP_Master_Out(3929) <= \<const0>\;
  LOCKSTEP_Master_Out(3930) <= \<const0>\;
  LOCKSTEP_Master_Out(3931) <= \<const0>\;
  LOCKSTEP_Master_Out(3932) <= \<const0>\;
  LOCKSTEP_Master_Out(3933) <= \<const0>\;
  LOCKSTEP_Master_Out(3934) <= \<const0>\;
  LOCKSTEP_Master_Out(3935) <= \<const0>\;
  LOCKSTEP_Master_Out(3936) <= \<const0>\;
  LOCKSTEP_Master_Out(3937) <= \<const0>\;
  LOCKSTEP_Master_Out(3938) <= \<const0>\;
  LOCKSTEP_Master_Out(3939) <= \<const0>\;
  LOCKSTEP_Master_Out(3940) <= \<const0>\;
  LOCKSTEP_Master_Out(3941) <= \<const0>\;
  LOCKSTEP_Master_Out(3942) <= \<const0>\;
  LOCKSTEP_Master_Out(3943) <= \<const0>\;
  LOCKSTEP_Master_Out(3944) <= \<const0>\;
  LOCKSTEP_Master_Out(3945) <= \<const0>\;
  LOCKSTEP_Master_Out(3946) <= \<const0>\;
  LOCKSTEP_Master_Out(3947) <= \<const0>\;
  LOCKSTEP_Master_Out(3948) <= \<const0>\;
  LOCKSTEP_Master_Out(3949) <= \<const0>\;
  LOCKSTEP_Master_Out(3950) <= \<const0>\;
  LOCKSTEP_Master_Out(3951) <= \<const0>\;
  LOCKSTEP_Master_Out(3952) <= \<const0>\;
  LOCKSTEP_Master_Out(3953) <= \<const0>\;
  LOCKSTEP_Master_Out(3954) <= \<const0>\;
  LOCKSTEP_Master_Out(3955) <= \<const0>\;
  LOCKSTEP_Master_Out(3956) <= \<const0>\;
  LOCKSTEP_Master_Out(3957) <= \<const0>\;
  LOCKSTEP_Master_Out(3958) <= \<const0>\;
  LOCKSTEP_Master_Out(3959) <= \<const0>\;
  LOCKSTEP_Master_Out(3960) <= \<const0>\;
  LOCKSTEP_Master_Out(3961) <= \<const0>\;
  LOCKSTEP_Master_Out(3962) <= \<const0>\;
  LOCKSTEP_Master_Out(3963) <= \<const0>\;
  LOCKSTEP_Master_Out(3964) <= \<const0>\;
  LOCKSTEP_Master_Out(3965) <= \<const0>\;
  LOCKSTEP_Master_Out(3966) <= \<const0>\;
  LOCKSTEP_Master_Out(3967) <= \<const0>\;
  LOCKSTEP_Master_Out(3968) <= \<const0>\;
  LOCKSTEP_Master_Out(3969) <= \<const0>\;
  LOCKSTEP_Master_Out(3970) <= \<const0>\;
  LOCKSTEP_Master_Out(3971) <= \<const0>\;
  LOCKSTEP_Master_Out(3972) <= \<const0>\;
  LOCKSTEP_Master_Out(3973) <= \<const0>\;
  LOCKSTEP_Master_Out(3974) <= \<const0>\;
  LOCKSTEP_Master_Out(3975) <= \<const0>\;
  LOCKSTEP_Master_Out(3976) <= \<const0>\;
  LOCKSTEP_Master_Out(3977) <= \<const0>\;
  LOCKSTEP_Master_Out(3978) <= \<const0>\;
  LOCKSTEP_Master_Out(3979) <= \<const0>\;
  LOCKSTEP_Master_Out(3980) <= \<const0>\;
  LOCKSTEP_Master_Out(3981) <= \<const0>\;
  LOCKSTEP_Master_Out(3982) <= \<const0>\;
  LOCKSTEP_Master_Out(3983) <= \<const0>\;
  LOCKSTEP_Master_Out(3984) <= \<const0>\;
  LOCKSTEP_Master_Out(3985) <= \<const0>\;
  LOCKSTEP_Master_Out(3986) <= \<const0>\;
  LOCKSTEP_Master_Out(3987) <= \<const0>\;
  LOCKSTEP_Master_Out(3988) <= \<const0>\;
  LOCKSTEP_Master_Out(3989) <= \<const0>\;
  LOCKSTEP_Master_Out(3990) <= \<const0>\;
  LOCKSTEP_Master_Out(3991) <= \<const0>\;
  LOCKSTEP_Master_Out(3992) <= \<const0>\;
  LOCKSTEP_Master_Out(3993) <= \<const0>\;
  LOCKSTEP_Master_Out(3994) <= \<const0>\;
  LOCKSTEP_Master_Out(3995) <= \<const0>\;
  LOCKSTEP_Master_Out(3996) <= \<const0>\;
  LOCKSTEP_Master_Out(3997) <= \<const0>\;
  LOCKSTEP_Master_Out(3998) <= \<const0>\;
  LOCKSTEP_Master_Out(3999) <= \<const0>\;
  LOCKSTEP_Master_Out(4000) <= \<const0>\;
  LOCKSTEP_Master_Out(4001) <= \<const0>\;
  LOCKSTEP_Master_Out(4002) <= \<const0>\;
  LOCKSTEP_Master_Out(4003) <= \<const0>\;
  LOCKSTEP_Master_Out(4004) <= \<const0>\;
  LOCKSTEP_Master_Out(4005) <= \<const0>\;
  LOCKSTEP_Master_Out(4006) <= \<const0>\;
  LOCKSTEP_Master_Out(4007) <= \<const0>\;
  LOCKSTEP_Master_Out(4008) <= \<const0>\;
  LOCKSTEP_Master_Out(4009) <= \<const0>\;
  LOCKSTEP_Master_Out(4010) <= \<const0>\;
  LOCKSTEP_Master_Out(4011) <= \<const0>\;
  LOCKSTEP_Master_Out(4012) <= \<const0>\;
  LOCKSTEP_Master_Out(4013) <= \<const0>\;
  LOCKSTEP_Master_Out(4014) <= \<const0>\;
  LOCKSTEP_Master_Out(4015) <= \<const0>\;
  LOCKSTEP_Master_Out(4016) <= \<const0>\;
  LOCKSTEP_Master_Out(4017) <= \<const0>\;
  LOCKSTEP_Master_Out(4018) <= \<const0>\;
  LOCKSTEP_Master_Out(4019) <= \<const0>\;
  LOCKSTEP_Master_Out(4020) <= \<const0>\;
  LOCKSTEP_Master_Out(4021) <= \<const0>\;
  LOCKSTEP_Master_Out(4022) <= \<const0>\;
  LOCKSTEP_Master_Out(4023) <= \<const0>\;
  LOCKSTEP_Master_Out(4024) <= \<const0>\;
  LOCKSTEP_Master_Out(4025) <= \<const0>\;
  LOCKSTEP_Master_Out(4026) <= \<const0>\;
  LOCKSTEP_Master_Out(4027) <= \<const0>\;
  LOCKSTEP_Master_Out(4028) <= \<const0>\;
  LOCKSTEP_Master_Out(4029) <= \<const0>\;
  LOCKSTEP_Master_Out(4030) <= \<const0>\;
  LOCKSTEP_Master_Out(4031) <= \<const0>\;
  LOCKSTEP_Master_Out(4032) <= \<const0>\;
  LOCKSTEP_Master_Out(4033) <= \<const0>\;
  LOCKSTEP_Master_Out(4034) <= \<const0>\;
  LOCKSTEP_Master_Out(4035) <= \<const0>\;
  LOCKSTEP_Master_Out(4036) <= \<const0>\;
  LOCKSTEP_Master_Out(4037) <= \<const0>\;
  LOCKSTEP_Master_Out(4038) <= \<const0>\;
  LOCKSTEP_Master_Out(4039) <= \<const0>\;
  LOCKSTEP_Master_Out(4040) <= \<const0>\;
  LOCKSTEP_Master_Out(4041) <= \<const0>\;
  LOCKSTEP_Master_Out(4042) <= \<const0>\;
  LOCKSTEP_Master_Out(4043) <= \<const0>\;
  LOCKSTEP_Master_Out(4044) <= \<const0>\;
  LOCKSTEP_Master_Out(4045) <= \<const0>\;
  LOCKSTEP_Master_Out(4046) <= \<const0>\;
  LOCKSTEP_Master_Out(4047) <= \<const0>\;
  LOCKSTEP_Master_Out(4048) <= \<const0>\;
  LOCKSTEP_Master_Out(4049) <= \<const0>\;
  LOCKSTEP_Master_Out(4050) <= \<const0>\;
  LOCKSTEP_Master_Out(4051) <= \<const0>\;
  LOCKSTEP_Master_Out(4052) <= \<const0>\;
  LOCKSTEP_Master_Out(4053) <= \<const0>\;
  LOCKSTEP_Master_Out(4054) <= \<const0>\;
  LOCKSTEP_Master_Out(4055) <= \<const0>\;
  LOCKSTEP_Master_Out(4056) <= \<const0>\;
  LOCKSTEP_Master_Out(4057) <= \<const0>\;
  LOCKSTEP_Master_Out(4058) <= \<const0>\;
  LOCKSTEP_Master_Out(4059) <= \<const0>\;
  LOCKSTEP_Master_Out(4060) <= \<const0>\;
  LOCKSTEP_Master_Out(4061) <= \<const0>\;
  LOCKSTEP_Master_Out(4062) <= \<const0>\;
  LOCKSTEP_Master_Out(4063) <= \<const0>\;
  LOCKSTEP_Master_Out(4064) <= \<const0>\;
  LOCKSTEP_Master_Out(4065) <= \<const0>\;
  LOCKSTEP_Master_Out(4066) <= \<const0>\;
  LOCKSTEP_Master_Out(4067) <= \<const0>\;
  LOCKSTEP_Master_Out(4068) <= \<const0>\;
  LOCKSTEP_Master_Out(4069) <= \<const0>\;
  LOCKSTEP_Master_Out(4070) <= \<const0>\;
  LOCKSTEP_Master_Out(4071) <= \<const0>\;
  LOCKSTEP_Master_Out(4072) <= \<const0>\;
  LOCKSTEP_Master_Out(4073) <= \<const0>\;
  LOCKSTEP_Master_Out(4074) <= \<const0>\;
  LOCKSTEP_Master_Out(4075) <= \<const0>\;
  LOCKSTEP_Master_Out(4076) <= \<const0>\;
  LOCKSTEP_Master_Out(4077) <= \<const0>\;
  LOCKSTEP_Master_Out(4078) <= \<const0>\;
  LOCKSTEP_Master_Out(4079) <= \<const0>\;
  LOCKSTEP_Master_Out(4080) <= \<const0>\;
  LOCKSTEP_Master_Out(4081) <= \<const0>\;
  LOCKSTEP_Master_Out(4082) <= \<const0>\;
  LOCKSTEP_Master_Out(4083) <= \<const0>\;
  LOCKSTEP_Master_Out(4084) <= \<const0>\;
  LOCKSTEP_Master_Out(4085) <= \<const0>\;
  LOCKSTEP_Master_Out(4086) <= \<const0>\;
  LOCKSTEP_Master_Out(4087) <= \<const0>\;
  LOCKSTEP_Master_Out(4088) <= \<const0>\;
  LOCKSTEP_Master_Out(4089) <= \<const0>\;
  LOCKSTEP_Master_Out(4090) <= \<const0>\;
  LOCKSTEP_Master_Out(4091) <= \<const0>\;
  LOCKSTEP_Master_Out(4092) <= \<const0>\;
  LOCKSTEP_Master_Out(4093) <= \<const0>\;
  LOCKSTEP_Master_Out(4094) <= \<const0>\;
  LOCKSTEP_Master_Out(4095) <= \<const0>\;
  LOCKSTEP_Out(0) <= \<const0>\;
  LOCKSTEP_Out(1) <= \<const0>\;
  LOCKSTEP_Out(2 to 3) <= \^lockstep_out\(2 to 3);
  LOCKSTEP_Out(4) <= \<const0>\;
  LOCKSTEP_Out(5) <= \<const0>\;
  LOCKSTEP_Out(6) <= \<const0>\;
  LOCKSTEP_Out(7) <= \<const0>\;
  LOCKSTEP_Out(8) <= \<const0>\;
  LOCKSTEP_Out(9) <= \<const0>\;
  LOCKSTEP_Out(10) <= \<const0>\;
  LOCKSTEP_Out(11) <= \<const0>\;
  LOCKSTEP_Out(12) <= \<const0>\;
  LOCKSTEP_Out(13) <= \<const0>\;
  LOCKSTEP_Out(14) <= \<const0>\;
  LOCKSTEP_Out(15) <= \<const0>\;
  LOCKSTEP_Out(16) <= \<const0>\;
  LOCKSTEP_Out(17) <= \<const0>\;
  LOCKSTEP_Out(18) <= \<const0>\;
  LOCKSTEP_Out(19) <= \<const0>\;
  LOCKSTEP_Out(20) <= \<const0>\;
  LOCKSTEP_Out(21 to 33) <= \^lockstep_out\(21 to 33);
  LOCKSTEP_Out(34) <= \<const0>\;
  LOCKSTEP_Out(35) <= \<const0>\;
  LOCKSTEP_Out(36) <= \<const0>\;
  LOCKSTEP_Out(37) <= \<const0>\;
  LOCKSTEP_Out(38) <= \<const0>\;
  LOCKSTEP_Out(39) <= \<const0>\;
  LOCKSTEP_Out(40) <= \<const0>\;
  LOCKSTEP_Out(41) <= \<const0>\;
  LOCKSTEP_Out(42) <= \<const0>\;
  LOCKSTEP_Out(43) <= \<const0>\;
  LOCKSTEP_Out(44) <= \<const0>\;
  LOCKSTEP_Out(45) <= \<const0>\;
  LOCKSTEP_Out(46) <= \<const0>\;
  LOCKSTEP_Out(47) <= \<const0>\;
  LOCKSTEP_Out(48) <= \<const0>\;
  LOCKSTEP_Out(49) <= \<const0>\;
  LOCKSTEP_Out(50) <= \<const0>\;
  LOCKSTEP_Out(51) <= \<const0>\;
  LOCKSTEP_Out(52) <= \<const0>\;
  LOCKSTEP_Out(53) <= \<const0>\;
  LOCKSTEP_Out(54) <= \<const0>\;
  LOCKSTEP_Out(55) <= \<const0>\;
  LOCKSTEP_Out(56) <= \<const0>\;
  LOCKSTEP_Out(57) <= \<const0>\;
  LOCKSTEP_Out(58) <= \<const0>\;
  LOCKSTEP_Out(59) <= \<const0>\;
  LOCKSTEP_Out(60) <= \<const0>\;
  LOCKSTEP_Out(61) <= \<const0>\;
  LOCKSTEP_Out(62) <= \<const0>\;
  LOCKSTEP_Out(63) <= \<const0>\;
  LOCKSTEP_Out(64) <= \<const0>\;
  LOCKSTEP_Out(65) <= \<const0>\;
  LOCKSTEP_Out(66) <= \<const0>\;
  LOCKSTEP_Out(67) <= \<const0>\;
  LOCKSTEP_Out(68 to 99) <= \^lockstep_out\(68 to 99);
  LOCKSTEP_Out(100) <= \<const0>\;
  LOCKSTEP_Out(101) <= \<const0>\;
  LOCKSTEP_Out(102) <= \<const0>\;
  LOCKSTEP_Out(103) <= \<const0>\;
  LOCKSTEP_Out(104) <= \<const0>\;
  LOCKSTEP_Out(105) <= \<const0>\;
  LOCKSTEP_Out(106) <= \<const0>\;
  LOCKSTEP_Out(107) <= \<const0>\;
  LOCKSTEP_Out(108) <= \<const0>\;
  LOCKSTEP_Out(109) <= \<const0>\;
  LOCKSTEP_Out(110) <= \<const0>\;
  LOCKSTEP_Out(111) <= \<const0>\;
  LOCKSTEP_Out(112) <= \<const0>\;
  LOCKSTEP_Out(113) <= \<const0>\;
  LOCKSTEP_Out(114) <= \<const0>\;
  LOCKSTEP_Out(115) <= \<const0>\;
  LOCKSTEP_Out(116) <= \<const0>\;
  LOCKSTEP_Out(117) <= \<const0>\;
  LOCKSTEP_Out(118) <= \<const0>\;
  LOCKSTEP_Out(119) <= \<const0>\;
  LOCKSTEP_Out(120) <= \<const0>\;
  LOCKSTEP_Out(121) <= \<const0>\;
  LOCKSTEP_Out(122) <= \<const0>\;
  LOCKSTEP_Out(123) <= \<const0>\;
  LOCKSTEP_Out(124) <= \<const0>\;
  LOCKSTEP_Out(125) <= \<const0>\;
  LOCKSTEP_Out(126) <= \<const0>\;
  LOCKSTEP_Out(127) <= \<const0>\;
  LOCKSTEP_Out(128) <= \<const0>\;
  LOCKSTEP_Out(129) <= \<const0>\;
  LOCKSTEP_Out(130) <= \<const0>\;
  LOCKSTEP_Out(131) <= \<const0>\;
  LOCKSTEP_Out(132 to 163) <= \^lockstep_out\(132 to 163);
  LOCKSTEP_Out(164) <= \<const0>\;
  LOCKSTEP_Out(165) <= \<const0>\;
  LOCKSTEP_Out(166) <= \<const0>\;
  LOCKSTEP_Out(167) <= \<const0>\;
  LOCKSTEP_Out(168) <= \<const0>\;
  LOCKSTEP_Out(169) <= \<const0>\;
  LOCKSTEP_Out(170) <= \<const0>\;
  LOCKSTEP_Out(171) <= \<const0>\;
  LOCKSTEP_Out(172) <= \<const0>\;
  LOCKSTEP_Out(173) <= \<const0>\;
  LOCKSTEP_Out(174) <= \<const0>\;
  LOCKSTEP_Out(175) <= \<const0>\;
  LOCKSTEP_Out(176) <= \<const0>\;
  LOCKSTEP_Out(177) <= \<const0>\;
  LOCKSTEP_Out(178) <= \<const0>\;
  LOCKSTEP_Out(179) <= \<const0>\;
  LOCKSTEP_Out(180) <= \<const0>\;
  LOCKSTEP_Out(181) <= \<const0>\;
  LOCKSTEP_Out(182) <= \<const0>\;
  LOCKSTEP_Out(183) <= \<const0>\;
  LOCKSTEP_Out(184) <= \<const0>\;
  LOCKSTEP_Out(185) <= \<const0>\;
  LOCKSTEP_Out(186) <= \<const0>\;
  LOCKSTEP_Out(187) <= \<const0>\;
  LOCKSTEP_Out(188) <= \<const0>\;
  LOCKSTEP_Out(189) <= \<const0>\;
  LOCKSTEP_Out(190) <= \<const0>\;
  LOCKSTEP_Out(191) <= \<const0>\;
  LOCKSTEP_Out(192) <= \<const0>\;
  LOCKSTEP_Out(193) <= \<const0>\;
  LOCKSTEP_Out(194) <= \<const0>\;
  LOCKSTEP_Out(195) <= \<const0>\;
  LOCKSTEP_Out(196 to 202) <= \^lockstep_out\(196 to 202);
  LOCKSTEP_Out(203) <= \<const0>\;
  LOCKSTEP_Out(204) <= \<const0>\;
  LOCKSTEP_Out(205) <= \<const0>\;
  LOCKSTEP_Out(206) <= \<const0>\;
  LOCKSTEP_Out(207) <= \<const0>\;
  LOCKSTEP_Out(208) <= \<const0>\;
  LOCKSTEP_Out(209) <= \<const0>\;
  LOCKSTEP_Out(210) <= \<const0>\;
  LOCKSTEP_Out(211) <= \<const0>\;
  LOCKSTEP_Out(212) <= \<const0>\;
  LOCKSTEP_Out(213) <= \<const0>\;
  LOCKSTEP_Out(214) <= \<const0>\;
  LOCKSTEP_Out(215) <= \<const0>\;
  LOCKSTEP_Out(216) <= \<const0>\;
  LOCKSTEP_Out(217) <= \<const0>\;
  LOCKSTEP_Out(218) <= \<const0>\;
  LOCKSTEP_Out(219) <= \<const0>\;
  LOCKSTEP_Out(220) <= \<const0>\;
  LOCKSTEP_Out(221) <= \<const0>\;
  LOCKSTEP_Out(222) <= \<const0>\;
  LOCKSTEP_Out(223) <= \<const0>\;
  LOCKSTEP_Out(224) <= \<const0>\;
  LOCKSTEP_Out(225) <= \<const0>\;
  LOCKSTEP_Out(226) <= \<const0>\;
  LOCKSTEP_Out(227) <= \<const0>\;
  LOCKSTEP_Out(228) <= \<const0>\;
  LOCKSTEP_Out(229) <= \<const0>\;
  LOCKSTEP_Out(230) <= \<const0>\;
  LOCKSTEP_Out(231) <= \<const0>\;
  LOCKSTEP_Out(232) <= \<const0>\;
  LOCKSTEP_Out(233) <= \<const0>\;
  LOCKSTEP_Out(234) <= \<const0>\;
  LOCKSTEP_Out(235) <= \<const0>\;
  LOCKSTEP_Out(236) <= \<const0>\;
  LOCKSTEP_Out(237) <= \<const0>\;
  LOCKSTEP_Out(238) <= \<const0>\;
  LOCKSTEP_Out(239) <= \<const0>\;
  LOCKSTEP_Out(240) <= \<const0>\;
  LOCKSTEP_Out(241) <= \<const0>\;
  LOCKSTEP_Out(242) <= \<const0>\;
  LOCKSTEP_Out(243) <= \<const0>\;
  LOCKSTEP_Out(244) <= \<const0>\;
  LOCKSTEP_Out(245) <= \<const0>\;
  LOCKSTEP_Out(246) <= \<const0>\;
  LOCKSTEP_Out(247) <= \<const0>\;
  LOCKSTEP_Out(248) <= \<const0>\;
  LOCKSTEP_Out(249) <= \<const0>\;
  LOCKSTEP_Out(250) <= \<const0>\;
  LOCKSTEP_Out(251) <= \<const0>\;
  LOCKSTEP_Out(252) <= \<const0>\;
  LOCKSTEP_Out(253) <= \<const0>\;
  LOCKSTEP_Out(254) <= \<const0>\;
  LOCKSTEP_Out(255) <= \<const0>\;
  LOCKSTEP_Out(256) <= \<const0>\;
  LOCKSTEP_Out(257) <= \<const0>\;
  LOCKSTEP_Out(258) <= \<const0>\;
  LOCKSTEP_Out(259) <= \<const0>\;
  LOCKSTEP_Out(260) <= \<const0>\;
  LOCKSTEP_Out(261) <= \<const0>\;
  LOCKSTEP_Out(262) <= \<const0>\;
  LOCKSTEP_Out(263) <= \<const0>\;
  LOCKSTEP_Out(264) <= \<const0>\;
  LOCKSTEP_Out(265) <= \<const0>\;
  LOCKSTEP_Out(266) <= \<const0>\;
  LOCKSTEP_Out(267) <= \<const0>\;
  LOCKSTEP_Out(268) <= \<const0>\;
  LOCKSTEP_Out(269) <= \<const0>\;
  LOCKSTEP_Out(270) <= \<const0>\;
  LOCKSTEP_Out(271) <= \<const0>\;
  LOCKSTEP_Out(272) <= \<const0>\;
  LOCKSTEP_Out(273) <= \<const0>\;
  LOCKSTEP_Out(274) <= \<const0>\;
  LOCKSTEP_Out(275) <= \<const0>\;
  LOCKSTEP_Out(276) <= \<const0>\;
  LOCKSTEP_Out(277) <= \<const0>\;
  LOCKSTEP_Out(278) <= \<const0>\;
  LOCKSTEP_Out(279) <= \<const0>\;
  LOCKSTEP_Out(280) <= \<const0>\;
  LOCKSTEP_Out(281) <= \<const0>\;
  LOCKSTEP_Out(282) <= \<const0>\;
  LOCKSTEP_Out(283) <= \<const0>\;
  LOCKSTEP_Out(284) <= \<const0>\;
  LOCKSTEP_Out(285) <= \<const0>\;
  LOCKSTEP_Out(286) <= \<const0>\;
  LOCKSTEP_Out(287) <= \<const0>\;
  LOCKSTEP_Out(288) <= \<const0>\;
  LOCKSTEP_Out(289) <= \<const0>\;
  LOCKSTEP_Out(290) <= \<const0>\;
  LOCKSTEP_Out(291) <= \<const0>\;
  LOCKSTEP_Out(292) <= \<const0>\;
  LOCKSTEP_Out(293) <= \<const0>\;
  LOCKSTEP_Out(294) <= \<const0>\;
  LOCKSTEP_Out(295) <= \<const0>\;
  LOCKSTEP_Out(296) <= \<const0>\;
  LOCKSTEP_Out(297) <= \<const0>\;
  LOCKSTEP_Out(298) <= \<const0>\;
  LOCKSTEP_Out(299) <= \<const0>\;
  LOCKSTEP_Out(300) <= \<const0>\;
  LOCKSTEP_Out(301) <= \<const0>\;
  LOCKSTEP_Out(302) <= \<const0>\;
  LOCKSTEP_Out(303) <= \<const0>\;
  LOCKSTEP_Out(304) <= \<const0>\;
  LOCKSTEP_Out(305) <= \<const0>\;
  LOCKSTEP_Out(306) <= \<const0>\;
  LOCKSTEP_Out(307) <= \<const0>\;
  LOCKSTEP_Out(308) <= \<const0>\;
  LOCKSTEP_Out(309) <= \<const0>\;
  LOCKSTEP_Out(310) <= \<const0>\;
  LOCKSTEP_Out(311) <= \<const0>\;
  LOCKSTEP_Out(312) <= \<const0>\;
  LOCKSTEP_Out(313) <= \<const0>\;
  LOCKSTEP_Out(314) <= \<const0>\;
  LOCKSTEP_Out(315) <= \<const0>\;
  LOCKSTEP_Out(316) <= \<const0>\;
  LOCKSTEP_Out(317) <= \<const0>\;
  LOCKSTEP_Out(318) <= \<const0>\;
  LOCKSTEP_Out(319) <= \<const0>\;
  LOCKSTEP_Out(320) <= \<const0>\;
  LOCKSTEP_Out(321) <= \<const0>\;
  LOCKSTEP_Out(322) <= \<const0>\;
  LOCKSTEP_Out(323) <= \<const0>\;
  LOCKSTEP_Out(324) <= \<const0>\;
  LOCKSTEP_Out(325) <= \<const0>\;
  LOCKSTEP_Out(326) <= \<const0>\;
  LOCKSTEP_Out(327) <= \<const0>\;
  LOCKSTEP_Out(328) <= \<const0>\;
  LOCKSTEP_Out(329) <= \<const0>\;
  LOCKSTEP_Out(330) <= \<const0>\;
  LOCKSTEP_Out(331) <= \<const0>\;
  LOCKSTEP_Out(332) <= \<const0>\;
  LOCKSTEP_Out(333) <= \<const0>\;
  LOCKSTEP_Out(334) <= \<const0>\;
  LOCKSTEP_Out(335) <= \<const0>\;
  LOCKSTEP_Out(336) <= \<const0>\;
  LOCKSTEP_Out(337) <= \<const0>\;
  LOCKSTEP_Out(338) <= \<const0>\;
  LOCKSTEP_Out(339) <= \<const0>\;
  LOCKSTEP_Out(340) <= \<const0>\;
  LOCKSTEP_Out(341) <= \<const0>\;
  LOCKSTEP_Out(342) <= \<const0>\;
  LOCKSTEP_Out(343) <= \<const0>\;
  LOCKSTEP_Out(344) <= \<const0>\;
  LOCKSTEP_Out(345) <= \<const0>\;
  LOCKSTEP_Out(346) <= \<const0>\;
  LOCKSTEP_Out(347) <= \<const0>\;
  LOCKSTEP_Out(348) <= \<const0>\;
  LOCKSTEP_Out(349) <= \<const0>\;
  LOCKSTEP_Out(350) <= \<const0>\;
  LOCKSTEP_Out(351) <= \<const0>\;
  LOCKSTEP_Out(352) <= \<const0>\;
  LOCKSTEP_Out(353) <= \<const0>\;
  LOCKSTEP_Out(354) <= \<const0>\;
  LOCKSTEP_Out(355) <= \<const0>\;
  LOCKSTEP_Out(356) <= \<const0>\;
  LOCKSTEP_Out(357) <= \<const0>\;
  LOCKSTEP_Out(358) <= \<const0>\;
  LOCKSTEP_Out(359) <= \<const0>\;
  LOCKSTEP_Out(360) <= \<const0>\;
  LOCKSTEP_Out(361) <= \<const0>\;
  LOCKSTEP_Out(362) <= \<const0>\;
  LOCKSTEP_Out(363) <= \<const0>\;
  LOCKSTEP_Out(364) <= \<const0>\;
  LOCKSTEP_Out(365) <= \<const0>\;
  LOCKSTEP_Out(366) <= \<const0>\;
  LOCKSTEP_Out(367) <= \<const0>\;
  LOCKSTEP_Out(368) <= \<const0>\;
  LOCKSTEP_Out(369) <= \<const0>\;
  LOCKSTEP_Out(370) <= \<const0>\;
  LOCKSTEP_Out(371) <= \<const0>\;
  LOCKSTEP_Out(372) <= \<const0>\;
  LOCKSTEP_Out(373) <= \<const0>\;
  LOCKSTEP_Out(374) <= \<const0>\;
  LOCKSTEP_Out(375) <= \<const0>\;
  LOCKSTEP_Out(376) <= \<const0>\;
  LOCKSTEP_Out(377) <= \<const0>\;
  LOCKSTEP_Out(378) <= \<const0>\;
  LOCKSTEP_Out(379) <= \<const0>\;
  LOCKSTEP_Out(380) <= \<const0>\;
  LOCKSTEP_Out(381) <= \<const0>\;
  LOCKSTEP_Out(382) <= \<const0>\;
  LOCKSTEP_Out(383) <= \<const0>\;
  LOCKSTEP_Out(384) <= \<const0>\;
  LOCKSTEP_Out(385) <= \<const0>\;
  LOCKSTEP_Out(386) <= \<const0>\;
  LOCKSTEP_Out(387) <= \<const0>\;
  LOCKSTEP_Out(388) <= \<const0>\;
  LOCKSTEP_Out(389) <= \<const0>\;
  LOCKSTEP_Out(390) <= \<const0>\;
  LOCKSTEP_Out(391) <= \<const0>\;
  LOCKSTEP_Out(392) <= \<const0>\;
  LOCKSTEP_Out(393) <= \<const0>\;
  LOCKSTEP_Out(394) <= \<const0>\;
  LOCKSTEP_Out(395) <= \<const0>\;
  LOCKSTEP_Out(396) <= \<const0>\;
  LOCKSTEP_Out(397) <= \<const0>\;
  LOCKSTEP_Out(398) <= \<const0>\;
  LOCKSTEP_Out(399) <= \<const0>\;
  LOCKSTEP_Out(400) <= \<const0>\;
  LOCKSTEP_Out(401) <= \<const0>\;
  LOCKSTEP_Out(402) <= \<const0>\;
  LOCKSTEP_Out(403) <= \<const0>\;
  LOCKSTEP_Out(404) <= \<const0>\;
  LOCKSTEP_Out(405) <= \<const0>\;
  LOCKSTEP_Out(406) <= \<const0>\;
  LOCKSTEP_Out(407) <= \<const0>\;
  LOCKSTEP_Out(408) <= \<const0>\;
  LOCKSTEP_Out(409) <= \<const0>\;
  LOCKSTEP_Out(410) <= \<const0>\;
  LOCKSTEP_Out(411) <= \<const0>\;
  LOCKSTEP_Out(412) <= \<const0>\;
  LOCKSTEP_Out(413) <= \<const0>\;
  LOCKSTEP_Out(414) <= \<const0>\;
  LOCKSTEP_Out(415) <= \<const0>\;
  LOCKSTEP_Out(416) <= \<const0>\;
  LOCKSTEP_Out(417) <= \<const0>\;
  LOCKSTEP_Out(418) <= \<const0>\;
  LOCKSTEP_Out(419) <= \<const0>\;
  LOCKSTEP_Out(420) <= \<const0>\;
  LOCKSTEP_Out(421) <= \<const0>\;
  LOCKSTEP_Out(422) <= \<const0>\;
  LOCKSTEP_Out(423) <= \<const0>\;
  LOCKSTEP_Out(424) <= \<const0>\;
  LOCKSTEP_Out(425) <= \<const0>\;
  LOCKSTEP_Out(426) <= \<const0>\;
  LOCKSTEP_Out(427) <= \<const0>\;
  LOCKSTEP_Out(428) <= \<const0>\;
  LOCKSTEP_Out(429) <= \<const0>\;
  LOCKSTEP_Out(430) <= \<const0>\;
  LOCKSTEP_Out(431) <= \<const0>\;
  LOCKSTEP_Out(432) <= \<const0>\;
  LOCKSTEP_Out(433) <= \<const0>\;
  LOCKSTEP_Out(434) <= \<const0>\;
  LOCKSTEP_Out(435) <= \<const0>\;
  LOCKSTEP_Out(436) <= \<const0>\;
  LOCKSTEP_Out(437) <= \<const0>\;
  LOCKSTEP_Out(438) <= \<const0>\;
  LOCKSTEP_Out(439) <= \<const0>\;
  LOCKSTEP_Out(440) <= \<const0>\;
  LOCKSTEP_Out(441) <= \<const0>\;
  LOCKSTEP_Out(442) <= \<const0>\;
  LOCKSTEP_Out(443) <= \<const0>\;
  LOCKSTEP_Out(444) <= \<const0>\;
  LOCKSTEP_Out(445) <= \<const0>\;
  LOCKSTEP_Out(446) <= \<const0>\;
  LOCKSTEP_Out(447) <= \<const0>\;
  LOCKSTEP_Out(448) <= \<const0>\;
  LOCKSTEP_Out(449) <= \<const0>\;
  LOCKSTEP_Out(450) <= \<const0>\;
  LOCKSTEP_Out(451) <= \<const0>\;
  LOCKSTEP_Out(452) <= \<const0>\;
  LOCKSTEP_Out(453) <= \<const0>\;
  LOCKSTEP_Out(454) <= \<const0>\;
  LOCKSTEP_Out(455) <= \<const0>\;
  LOCKSTEP_Out(456) <= \<const0>\;
  LOCKSTEP_Out(457) <= \<const0>\;
  LOCKSTEP_Out(458) <= \<const0>\;
  LOCKSTEP_Out(459) <= \<const0>\;
  LOCKSTEP_Out(460) <= \<const0>\;
  LOCKSTEP_Out(461) <= \<const0>\;
  LOCKSTEP_Out(462) <= \<const0>\;
  LOCKSTEP_Out(463) <= \<const0>\;
  LOCKSTEP_Out(464) <= \<const0>\;
  LOCKSTEP_Out(465) <= \<const0>\;
  LOCKSTEP_Out(466) <= \<const0>\;
  LOCKSTEP_Out(467) <= \<const0>\;
  LOCKSTEP_Out(468) <= \<const0>\;
  LOCKSTEP_Out(469) <= \<const0>\;
  LOCKSTEP_Out(470) <= \<const0>\;
  LOCKSTEP_Out(471) <= \<const0>\;
  LOCKSTEP_Out(472) <= \<const0>\;
  LOCKSTEP_Out(473) <= \<const0>\;
  LOCKSTEP_Out(474) <= \<const0>\;
  LOCKSTEP_Out(475) <= \<const0>\;
  LOCKSTEP_Out(476) <= \<const0>\;
  LOCKSTEP_Out(477) <= \<const0>\;
  LOCKSTEP_Out(478) <= \<const0>\;
  LOCKSTEP_Out(479) <= \<const0>\;
  LOCKSTEP_Out(480) <= \<const0>\;
  LOCKSTEP_Out(481) <= \<const0>\;
  LOCKSTEP_Out(482) <= \<const0>\;
  LOCKSTEP_Out(483) <= \<const0>\;
  LOCKSTEP_Out(484) <= \<const0>\;
  LOCKSTEP_Out(485) <= \<const0>\;
  LOCKSTEP_Out(486) <= \<const0>\;
  LOCKSTEP_Out(487) <= \<const0>\;
  LOCKSTEP_Out(488) <= \<const0>\;
  LOCKSTEP_Out(489) <= \<const0>\;
  LOCKSTEP_Out(490) <= \<const0>\;
  LOCKSTEP_Out(491) <= \<const0>\;
  LOCKSTEP_Out(492) <= \<const0>\;
  LOCKSTEP_Out(493) <= \<const0>\;
  LOCKSTEP_Out(494) <= \<const0>\;
  LOCKSTEP_Out(495) <= \<const0>\;
  LOCKSTEP_Out(496) <= \<const0>\;
  LOCKSTEP_Out(497) <= \<const0>\;
  LOCKSTEP_Out(498) <= \<const0>\;
  LOCKSTEP_Out(499) <= \<const0>\;
  LOCKSTEP_Out(500) <= \<const0>\;
  LOCKSTEP_Out(501) <= \<const0>\;
  LOCKSTEP_Out(502) <= \<const0>\;
  LOCKSTEP_Out(503) <= \<const0>\;
  LOCKSTEP_Out(504) <= \<const0>\;
  LOCKSTEP_Out(505) <= \<const0>\;
  LOCKSTEP_Out(506) <= \<const0>\;
  LOCKSTEP_Out(507) <= \<const0>\;
  LOCKSTEP_Out(508) <= \<const0>\;
  LOCKSTEP_Out(509) <= \<const0>\;
  LOCKSTEP_Out(510) <= \<const0>\;
  LOCKSTEP_Out(511) <= \<const0>\;
  LOCKSTEP_Out(512) <= \<const0>\;
  LOCKSTEP_Out(513) <= \<const0>\;
  LOCKSTEP_Out(514) <= \<const0>\;
  LOCKSTEP_Out(515) <= \<const0>\;
  LOCKSTEP_Out(516) <= \<const0>\;
  LOCKSTEP_Out(517) <= \<const0>\;
  LOCKSTEP_Out(518) <= \<const0>\;
  LOCKSTEP_Out(519) <= \<const0>\;
  LOCKSTEP_Out(520) <= \<const0>\;
  LOCKSTEP_Out(521) <= \<const0>\;
  LOCKSTEP_Out(522) <= \<const0>\;
  LOCKSTEP_Out(523) <= \<const0>\;
  LOCKSTEP_Out(524) <= \<const0>\;
  LOCKSTEP_Out(525) <= \<const0>\;
  LOCKSTEP_Out(526) <= \<const0>\;
  LOCKSTEP_Out(527) <= \<const0>\;
  LOCKSTEP_Out(528) <= \<const0>\;
  LOCKSTEP_Out(529) <= \<const0>\;
  LOCKSTEP_Out(530) <= \<const0>\;
  LOCKSTEP_Out(531) <= \<const0>\;
  LOCKSTEP_Out(532) <= \<const0>\;
  LOCKSTEP_Out(533) <= \<const0>\;
  LOCKSTEP_Out(534) <= \<const0>\;
  LOCKSTEP_Out(535) <= \<const0>\;
  LOCKSTEP_Out(536) <= \<const0>\;
  LOCKSTEP_Out(537) <= \<const0>\;
  LOCKSTEP_Out(538) <= \<const0>\;
  LOCKSTEP_Out(539) <= \<const0>\;
  LOCKSTEP_Out(540) <= \<const0>\;
  LOCKSTEP_Out(541) <= \<const0>\;
  LOCKSTEP_Out(542) <= \<const0>\;
  LOCKSTEP_Out(543) <= \<const0>\;
  LOCKSTEP_Out(544) <= \<const0>\;
  LOCKSTEP_Out(545) <= \<const0>\;
  LOCKSTEP_Out(546) <= \<const0>\;
  LOCKSTEP_Out(547) <= \<const0>\;
  LOCKSTEP_Out(548) <= \<const0>\;
  LOCKSTEP_Out(549) <= \<const0>\;
  LOCKSTEP_Out(550) <= \<const0>\;
  LOCKSTEP_Out(551) <= \<const0>\;
  LOCKSTEP_Out(552) <= \<const0>\;
  LOCKSTEP_Out(553) <= \<const0>\;
  LOCKSTEP_Out(554) <= \<const0>\;
  LOCKSTEP_Out(555) <= \<const0>\;
  LOCKSTEP_Out(556) <= \<const0>\;
  LOCKSTEP_Out(557) <= \<const0>\;
  LOCKSTEP_Out(558) <= \<const0>\;
  LOCKSTEP_Out(559) <= \<const0>\;
  LOCKSTEP_Out(560) <= \<const0>\;
  LOCKSTEP_Out(561) <= \<const0>\;
  LOCKSTEP_Out(562) <= \<const0>\;
  LOCKSTEP_Out(563) <= \<const0>\;
  LOCKSTEP_Out(564) <= \<const0>\;
  LOCKSTEP_Out(565) <= \<const0>\;
  LOCKSTEP_Out(566) <= \<const0>\;
  LOCKSTEP_Out(567) <= \<const0>\;
  LOCKSTEP_Out(568) <= \<const0>\;
  LOCKSTEP_Out(569) <= \<const0>\;
  LOCKSTEP_Out(570) <= \<const0>\;
  LOCKSTEP_Out(571) <= \<const0>\;
  LOCKSTEP_Out(572) <= \<const0>\;
  LOCKSTEP_Out(573) <= \<const0>\;
  LOCKSTEP_Out(574) <= \<const0>\;
  LOCKSTEP_Out(575) <= \<const0>\;
  LOCKSTEP_Out(576) <= \<const0>\;
  LOCKSTEP_Out(577) <= \<const0>\;
  LOCKSTEP_Out(578) <= \<const0>\;
  LOCKSTEP_Out(579) <= \<const0>\;
  LOCKSTEP_Out(580) <= \<const0>\;
  LOCKSTEP_Out(581) <= \<const0>\;
  LOCKSTEP_Out(582) <= \<const0>\;
  LOCKSTEP_Out(583) <= \<const0>\;
  LOCKSTEP_Out(584) <= \<const0>\;
  LOCKSTEP_Out(585) <= \<const0>\;
  LOCKSTEP_Out(586) <= \<const0>\;
  LOCKSTEP_Out(587) <= \<const0>\;
  LOCKSTEP_Out(588) <= \<const0>\;
  LOCKSTEP_Out(589) <= \<const0>\;
  LOCKSTEP_Out(590) <= \<const0>\;
  LOCKSTEP_Out(591) <= \<const0>\;
  LOCKSTEP_Out(592) <= \<const0>\;
  LOCKSTEP_Out(593) <= \<const0>\;
  LOCKSTEP_Out(594) <= \<const0>\;
  LOCKSTEP_Out(595) <= \<const0>\;
  LOCKSTEP_Out(596) <= \<const0>\;
  LOCKSTEP_Out(597) <= \<const0>\;
  LOCKSTEP_Out(598) <= \<const0>\;
  LOCKSTEP_Out(599) <= \<const0>\;
  LOCKSTEP_Out(600) <= \<const0>\;
  LOCKSTEP_Out(601) <= \<const0>\;
  LOCKSTEP_Out(602) <= \<const0>\;
  LOCKSTEP_Out(603) <= \<const0>\;
  LOCKSTEP_Out(604) <= \<const0>\;
  LOCKSTEP_Out(605) <= \<const0>\;
  LOCKSTEP_Out(606) <= \<const0>\;
  LOCKSTEP_Out(607) <= \<const0>\;
  LOCKSTEP_Out(608) <= \<const0>\;
  LOCKSTEP_Out(609) <= \<const0>\;
  LOCKSTEP_Out(610) <= \<const0>\;
  LOCKSTEP_Out(611) <= \<const0>\;
  LOCKSTEP_Out(612) <= \<const0>\;
  LOCKSTEP_Out(613) <= \<const0>\;
  LOCKSTEP_Out(614) <= \<const0>\;
  LOCKSTEP_Out(615) <= \<const0>\;
  LOCKSTEP_Out(616) <= \<const0>\;
  LOCKSTEP_Out(617) <= \<const0>\;
  LOCKSTEP_Out(618) <= \<const0>\;
  LOCKSTEP_Out(619) <= \<const0>\;
  LOCKSTEP_Out(620) <= \<const0>\;
  LOCKSTEP_Out(621) <= \<const0>\;
  LOCKSTEP_Out(622) <= \<const0>\;
  LOCKSTEP_Out(623) <= \<const0>\;
  LOCKSTEP_Out(624) <= \<const0>\;
  LOCKSTEP_Out(625) <= \<const0>\;
  LOCKSTEP_Out(626) <= \<const0>\;
  LOCKSTEP_Out(627) <= \<const0>\;
  LOCKSTEP_Out(628) <= \<const0>\;
  LOCKSTEP_Out(629) <= \<const0>\;
  LOCKSTEP_Out(630) <= \<const0>\;
  LOCKSTEP_Out(631) <= \<const0>\;
  LOCKSTEP_Out(632) <= \<const0>\;
  LOCKSTEP_Out(633) <= \<const0>\;
  LOCKSTEP_Out(634) <= \<const0>\;
  LOCKSTEP_Out(635) <= \<const0>\;
  LOCKSTEP_Out(636) <= \<const0>\;
  LOCKSTEP_Out(637) <= \<const0>\;
  LOCKSTEP_Out(638) <= \<const0>\;
  LOCKSTEP_Out(639) <= \<const0>\;
  LOCKSTEP_Out(640) <= \<const0>\;
  LOCKSTEP_Out(641) <= \<const0>\;
  LOCKSTEP_Out(642) <= \<const0>\;
  LOCKSTEP_Out(643) <= \<const0>\;
  LOCKSTEP_Out(644) <= \<const0>\;
  LOCKSTEP_Out(645) <= \<const0>\;
  LOCKSTEP_Out(646) <= \<const0>\;
  LOCKSTEP_Out(647) <= \<const0>\;
  LOCKSTEP_Out(648) <= \<const0>\;
  LOCKSTEP_Out(649) <= \<const0>\;
  LOCKSTEP_Out(650) <= \<const0>\;
  LOCKSTEP_Out(651) <= \<const0>\;
  LOCKSTEP_Out(652) <= \<const0>\;
  LOCKSTEP_Out(653) <= \<const0>\;
  LOCKSTEP_Out(654) <= \<const0>\;
  LOCKSTEP_Out(655) <= \<const0>\;
  LOCKSTEP_Out(656) <= \<const0>\;
  LOCKSTEP_Out(657) <= \<const0>\;
  LOCKSTEP_Out(658) <= \<const0>\;
  LOCKSTEP_Out(659) <= \<const0>\;
  LOCKSTEP_Out(660) <= \<const0>\;
  LOCKSTEP_Out(661) <= \<const0>\;
  LOCKSTEP_Out(662) <= \<const0>\;
  LOCKSTEP_Out(663) <= \<const0>\;
  LOCKSTEP_Out(664) <= \<const0>\;
  LOCKSTEP_Out(665) <= \<const0>\;
  LOCKSTEP_Out(666) <= \<const0>\;
  LOCKSTEP_Out(667) <= \<const0>\;
  LOCKSTEP_Out(668) <= \<const0>\;
  LOCKSTEP_Out(669) <= \<const0>\;
  LOCKSTEP_Out(670) <= \<const0>\;
  LOCKSTEP_Out(671) <= \<const0>\;
  LOCKSTEP_Out(672) <= \<const0>\;
  LOCKSTEP_Out(673) <= \<const0>\;
  LOCKSTEP_Out(674) <= \<const0>\;
  LOCKSTEP_Out(675) <= \<const0>\;
  LOCKSTEP_Out(676) <= \<const0>\;
  LOCKSTEP_Out(677) <= \<const0>\;
  LOCKSTEP_Out(678) <= \<const0>\;
  LOCKSTEP_Out(679) <= \<const0>\;
  LOCKSTEP_Out(680) <= \<const0>\;
  LOCKSTEP_Out(681) <= \<const0>\;
  LOCKSTEP_Out(682) <= \<const0>\;
  LOCKSTEP_Out(683) <= \<const0>\;
  LOCKSTEP_Out(684) <= \<const0>\;
  LOCKSTEP_Out(685) <= \<const0>\;
  LOCKSTEP_Out(686) <= \<const0>\;
  LOCKSTEP_Out(687) <= \<const0>\;
  LOCKSTEP_Out(688) <= \<const0>\;
  LOCKSTEP_Out(689) <= \<const0>\;
  LOCKSTEP_Out(690) <= \<const0>\;
  LOCKSTEP_Out(691) <= \<const0>\;
  LOCKSTEP_Out(692) <= \<const0>\;
  LOCKSTEP_Out(693) <= \<const0>\;
  LOCKSTEP_Out(694) <= \<const0>\;
  LOCKSTEP_Out(695) <= \<const0>\;
  LOCKSTEP_Out(696) <= \<const0>\;
  LOCKSTEP_Out(697) <= \<const0>\;
  LOCKSTEP_Out(698) <= \<const0>\;
  LOCKSTEP_Out(699) <= \<const0>\;
  LOCKSTEP_Out(700) <= \<const0>\;
  LOCKSTEP_Out(701) <= \<const0>\;
  LOCKSTEP_Out(702) <= \<const0>\;
  LOCKSTEP_Out(703) <= \<const0>\;
  LOCKSTEP_Out(704) <= \<const0>\;
  LOCKSTEP_Out(705) <= \<const0>\;
  LOCKSTEP_Out(706) <= \<const0>\;
  LOCKSTEP_Out(707) <= \<const0>\;
  LOCKSTEP_Out(708) <= \<const0>\;
  LOCKSTEP_Out(709) <= \<const0>\;
  LOCKSTEP_Out(710) <= \<const0>\;
  LOCKSTEP_Out(711) <= \<const0>\;
  LOCKSTEP_Out(712) <= \<const0>\;
  LOCKSTEP_Out(713) <= \<const0>\;
  LOCKSTEP_Out(714) <= \<const0>\;
  LOCKSTEP_Out(715) <= \<const0>\;
  LOCKSTEP_Out(716) <= \<const0>\;
  LOCKSTEP_Out(717) <= \<const0>\;
  LOCKSTEP_Out(718) <= \<const0>\;
  LOCKSTEP_Out(719) <= \<const0>\;
  LOCKSTEP_Out(720) <= \<const0>\;
  LOCKSTEP_Out(721) <= \<const0>\;
  LOCKSTEP_Out(722) <= \<const0>\;
  LOCKSTEP_Out(723) <= \<const0>\;
  LOCKSTEP_Out(724) <= \<const0>\;
  LOCKSTEP_Out(725) <= \<const0>\;
  LOCKSTEP_Out(726) <= \<const0>\;
  LOCKSTEP_Out(727) <= \<const0>\;
  LOCKSTEP_Out(728) <= \<const0>\;
  LOCKSTEP_Out(729) <= \<const0>\;
  LOCKSTEP_Out(730) <= \<const0>\;
  LOCKSTEP_Out(731) <= \<const0>\;
  LOCKSTEP_Out(732) <= \<const0>\;
  LOCKSTEP_Out(733) <= \<const0>\;
  LOCKSTEP_Out(734) <= \<const0>\;
  LOCKSTEP_Out(735) <= \<const0>\;
  LOCKSTEP_Out(736) <= \<const0>\;
  LOCKSTEP_Out(737) <= \<const0>\;
  LOCKSTEP_Out(738) <= \<const0>\;
  LOCKSTEP_Out(739) <= \<const0>\;
  LOCKSTEP_Out(740) <= \<const0>\;
  LOCKSTEP_Out(741) <= \<const0>\;
  LOCKSTEP_Out(742) <= \<const0>\;
  LOCKSTEP_Out(743) <= \<const0>\;
  LOCKSTEP_Out(744) <= \<const0>\;
  LOCKSTEP_Out(745) <= \<const0>\;
  LOCKSTEP_Out(746) <= \<const0>\;
  LOCKSTEP_Out(747) <= \<const0>\;
  LOCKSTEP_Out(748) <= \<const0>\;
  LOCKSTEP_Out(749) <= \<const0>\;
  LOCKSTEP_Out(750) <= \<const0>\;
  LOCKSTEP_Out(751) <= \<const0>\;
  LOCKSTEP_Out(752) <= \<const0>\;
  LOCKSTEP_Out(753) <= \<const0>\;
  LOCKSTEP_Out(754) <= \<const0>\;
  LOCKSTEP_Out(755) <= \<const0>\;
  LOCKSTEP_Out(756) <= \<const0>\;
  LOCKSTEP_Out(757) <= \<const0>\;
  LOCKSTEP_Out(758) <= \<const0>\;
  LOCKSTEP_Out(759) <= \<const0>\;
  LOCKSTEP_Out(760) <= \<const0>\;
  LOCKSTEP_Out(761) <= \<const0>\;
  LOCKSTEP_Out(762) <= \<const0>\;
  LOCKSTEP_Out(763) <= \<const0>\;
  LOCKSTEP_Out(764) <= \<const0>\;
  LOCKSTEP_Out(765) <= \<const0>\;
  LOCKSTEP_Out(766) <= \<const0>\;
  LOCKSTEP_Out(767) <= \<const0>\;
  LOCKSTEP_Out(768) <= \<const0>\;
  LOCKSTEP_Out(769) <= \<const0>\;
  LOCKSTEP_Out(770) <= \<const0>\;
  LOCKSTEP_Out(771) <= \<const0>\;
  LOCKSTEP_Out(772) <= \<const0>\;
  LOCKSTEP_Out(773) <= \<const0>\;
  LOCKSTEP_Out(774) <= \<const0>\;
  LOCKSTEP_Out(775) <= \<const0>\;
  LOCKSTEP_Out(776) <= \<const0>\;
  LOCKSTEP_Out(777) <= \<const0>\;
  LOCKSTEP_Out(778) <= \<const0>\;
  LOCKSTEP_Out(779) <= \<const0>\;
  LOCKSTEP_Out(780) <= \<const0>\;
  LOCKSTEP_Out(781) <= \<const0>\;
  LOCKSTEP_Out(782) <= \<const0>\;
  LOCKSTEP_Out(783) <= \<const0>\;
  LOCKSTEP_Out(784) <= \<const0>\;
  LOCKSTEP_Out(785) <= \<const0>\;
  LOCKSTEP_Out(786) <= \<const0>\;
  LOCKSTEP_Out(787) <= \<const0>\;
  LOCKSTEP_Out(788) <= \<const0>\;
  LOCKSTEP_Out(789) <= \<const0>\;
  LOCKSTEP_Out(790) <= \<const0>\;
  LOCKSTEP_Out(791) <= \<const0>\;
  LOCKSTEP_Out(792) <= \<const0>\;
  LOCKSTEP_Out(793) <= \<const0>\;
  LOCKSTEP_Out(794) <= \<const0>\;
  LOCKSTEP_Out(795) <= \<const0>\;
  LOCKSTEP_Out(796) <= \<const0>\;
  LOCKSTEP_Out(797) <= \<const0>\;
  LOCKSTEP_Out(798) <= \<const0>\;
  LOCKSTEP_Out(799) <= \<const0>\;
  LOCKSTEP_Out(800) <= \<const0>\;
  LOCKSTEP_Out(801) <= \<const0>\;
  LOCKSTEP_Out(802) <= \<const0>\;
  LOCKSTEP_Out(803) <= \<const0>\;
  LOCKSTEP_Out(804) <= \<const0>\;
  LOCKSTEP_Out(805) <= \<const0>\;
  LOCKSTEP_Out(806) <= \<const0>\;
  LOCKSTEP_Out(807) <= \<const0>\;
  LOCKSTEP_Out(808) <= \<const0>\;
  LOCKSTEP_Out(809) <= \<const0>\;
  LOCKSTEP_Out(810) <= \<const0>\;
  LOCKSTEP_Out(811) <= \<const0>\;
  LOCKSTEP_Out(812) <= \<const0>\;
  LOCKSTEP_Out(813) <= \<const0>\;
  LOCKSTEP_Out(814) <= \<const0>\;
  LOCKSTEP_Out(815) <= \<const0>\;
  LOCKSTEP_Out(816) <= \<const0>\;
  LOCKSTEP_Out(817) <= \<const0>\;
  LOCKSTEP_Out(818) <= \<const0>\;
  LOCKSTEP_Out(819) <= \<const0>\;
  LOCKSTEP_Out(820) <= \<const0>\;
  LOCKSTEP_Out(821) <= \<const0>\;
  LOCKSTEP_Out(822) <= \<const0>\;
  LOCKSTEP_Out(823) <= \<const0>\;
  LOCKSTEP_Out(824) <= \<const0>\;
  LOCKSTEP_Out(825) <= \<const0>\;
  LOCKSTEP_Out(826) <= \<const0>\;
  LOCKSTEP_Out(827) <= \<const0>\;
  LOCKSTEP_Out(828) <= \<const0>\;
  LOCKSTEP_Out(829) <= \<const0>\;
  LOCKSTEP_Out(830) <= \<const0>\;
  LOCKSTEP_Out(831) <= \<const0>\;
  LOCKSTEP_Out(832) <= \<const0>\;
  LOCKSTEP_Out(833) <= \<const0>\;
  LOCKSTEP_Out(834) <= \<const0>\;
  LOCKSTEP_Out(835) <= \<const0>\;
  LOCKSTEP_Out(836) <= \<const0>\;
  LOCKSTEP_Out(837) <= \<const0>\;
  LOCKSTEP_Out(838) <= \<const0>\;
  LOCKSTEP_Out(839) <= \<const0>\;
  LOCKSTEP_Out(840) <= \<const0>\;
  LOCKSTEP_Out(841) <= \<const0>\;
  LOCKSTEP_Out(842) <= \<const0>\;
  LOCKSTEP_Out(843) <= \<const0>\;
  LOCKSTEP_Out(844) <= \<const0>\;
  LOCKSTEP_Out(845) <= \<const0>\;
  LOCKSTEP_Out(846) <= \<const0>\;
  LOCKSTEP_Out(847) <= \<const0>\;
  LOCKSTEP_Out(848) <= \<const0>\;
  LOCKSTEP_Out(849) <= \<const0>\;
  LOCKSTEP_Out(850) <= \<const0>\;
  LOCKSTEP_Out(851) <= \<const0>\;
  LOCKSTEP_Out(852) <= \<const0>\;
  LOCKSTEP_Out(853) <= \<const0>\;
  LOCKSTEP_Out(854) <= \<const0>\;
  LOCKSTEP_Out(855) <= \<const0>\;
  LOCKSTEP_Out(856) <= \<const0>\;
  LOCKSTEP_Out(857) <= \<const0>\;
  LOCKSTEP_Out(858) <= \<const0>\;
  LOCKSTEP_Out(859) <= \<const0>\;
  LOCKSTEP_Out(860) <= \<const0>\;
  LOCKSTEP_Out(861) <= \<const0>\;
  LOCKSTEP_Out(862) <= \<const0>\;
  LOCKSTEP_Out(863) <= \<const0>\;
  LOCKSTEP_Out(864) <= \<const0>\;
  LOCKSTEP_Out(865) <= \<const0>\;
  LOCKSTEP_Out(866) <= \<const0>\;
  LOCKSTEP_Out(867) <= \<const0>\;
  LOCKSTEP_Out(868) <= \<const0>\;
  LOCKSTEP_Out(869) <= \<const0>\;
  LOCKSTEP_Out(870) <= \<const0>\;
  LOCKSTEP_Out(871) <= \<const0>\;
  LOCKSTEP_Out(872) <= \<const0>\;
  LOCKSTEP_Out(873) <= \<const0>\;
  LOCKSTEP_Out(874) <= \<const0>\;
  LOCKSTEP_Out(875) <= \<const0>\;
  LOCKSTEP_Out(876) <= \<const0>\;
  LOCKSTEP_Out(877) <= \<const0>\;
  LOCKSTEP_Out(878) <= \<const0>\;
  LOCKSTEP_Out(879) <= \<const0>\;
  LOCKSTEP_Out(880) <= \<const0>\;
  LOCKSTEP_Out(881) <= \<const0>\;
  LOCKSTEP_Out(882) <= \<const0>\;
  LOCKSTEP_Out(883) <= \<const0>\;
  LOCKSTEP_Out(884) <= \<const0>\;
  LOCKSTEP_Out(885) <= \<const0>\;
  LOCKSTEP_Out(886) <= \<const0>\;
  LOCKSTEP_Out(887) <= \<const0>\;
  LOCKSTEP_Out(888) <= \<const0>\;
  LOCKSTEP_Out(889) <= \<const0>\;
  LOCKSTEP_Out(890) <= \<const0>\;
  LOCKSTEP_Out(891) <= \<const0>\;
  LOCKSTEP_Out(892) <= \<const0>\;
  LOCKSTEP_Out(893) <= \<const0>\;
  LOCKSTEP_Out(894) <= \<const0>\;
  LOCKSTEP_Out(895) <= \<const0>\;
  LOCKSTEP_Out(896) <= \<const0>\;
  LOCKSTEP_Out(897) <= \<const0>\;
  LOCKSTEP_Out(898) <= \<const0>\;
  LOCKSTEP_Out(899) <= \<const0>\;
  LOCKSTEP_Out(900) <= \<const0>\;
  LOCKSTEP_Out(901) <= \<const0>\;
  LOCKSTEP_Out(902) <= \<const0>\;
  LOCKSTEP_Out(903) <= \<const0>\;
  LOCKSTEP_Out(904) <= \<const0>\;
  LOCKSTEP_Out(905) <= \<const0>\;
  LOCKSTEP_Out(906) <= \<const0>\;
  LOCKSTEP_Out(907) <= \<const0>\;
  LOCKSTEP_Out(908) <= \<const0>\;
  LOCKSTEP_Out(909) <= \<const0>\;
  LOCKSTEP_Out(910) <= \<const0>\;
  LOCKSTEP_Out(911) <= \<const0>\;
  LOCKSTEP_Out(912) <= \<const0>\;
  LOCKSTEP_Out(913) <= \<const0>\;
  LOCKSTEP_Out(914) <= \<const0>\;
  LOCKSTEP_Out(915) <= \<const0>\;
  LOCKSTEP_Out(916) <= \<const0>\;
  LOCKSTEP_Out(917) <= \<const0>\;
  LOCKSTEP_Out(918) <= \<const0>\;
  LOCKSTEP_Out(919) <= \<const0>\;
  LOCKSTEP_Out(920) <= \<const0>\;
  LOCKSTEP_Out(921) <= \<const0>\;
  LOCKSTEP_Out(922) <= \<const0>\;
  LOCKSTEP_Out(923) <= \<const0>\;
  LOCKSTEP_Out(924) <= \<const0>\;
  LOCKSTEP_Out(925) <= \<const0>\;
  LOCKSTEP_Out(926) <= \<const0>\;
  LOCKSTEP_Out(927) <= \<const0>\;
  LOCKSTEP_Out(928) <= \<const0>\;
  LOCKSTEP_Out(929) <= \<const0>\;
  LOCKSTEP_Out(930) <= \<const0>\;
  LOCKSTEP_Out(931) <= \<const0>\;
  LOCKSTEP_Out(932) <= \<const0>\;
  LOCKSTEP_Out(933) <= \<const0>\;
  LOCKSTEP_Out(934) <= \<const0>\;
  LOCKSTEP_Out(935) <= \<const0>\;
  LOCKSTEP_Out(936) <= \<const0>\;
  LOCKSTEP_Out(937) <= \<const0>\;
  LOCKSTEP_Out(938) <= \<const0>\;
  LOCKSTEP_Out(939) <= \<const0>\;
  LOCKSTEP_Out(940) <= \<const0>\;
  LOCKSTEP_Out(941) <= \<const0>\;
  LOCKSTEP_Out(942) <= \<const0>\;
  LOCKSTEP_Out(943) <= \<const0>\;
  LOCKSTEP_Out(944) <= \<const0>\;
  LOCKSTEP_Out(945) <= \<const0>\;
  LOCKSTEP_Out(946) <= \<const0>\;
  LOCKSTEP_Out(947) <= \<const0>\;
  LOCKSTEP_Out(948) <= \<const0>\;
  LOCKSTEP_Out(949) <= \<const0>\;
  LOCKSTEP_Out(950) <= \<const0>\;
  LOCKSTEP_Out(951) <= \<const0>\;
  LOCKSTEP_Out(952) <= \<const0>\;
  LOCKSTEP_Out(953) <= \<const0>\;
  LOCKSTEP_Out(954) <= \<const0>\;
  LOCKSTEP_Out(955) <= \<const0>\;
  LOCKSTEP_Out(956) <= \<const0>\;
  LOCKSTEP_Out(957) <= \<const0>\;
  LOCKSTEP_Out(958) <= \<const0>\;
  LOCKSTEP_Out(959) <= \<const0>\;
  LOCKSTEP_Out(960) <= \<const0>\;
  LOCKSTEP_Out(961) <= \<const0>\;
  LOCKSTEP_Out(962) <= \<const0>\;
  LOCKSTEP_Out(963) <= \<const0>\;
  LOCKSTEP_Out(964) <= \<const0>\;
  LOCKSTEP_Out(965) <= \<const0>\;
  LOCKSTEP_Out(966) <= \<const0>\;
  LOCKSTEP_Out(967) <= \<const0>\;
  LOCKSTEP_Out(968) <= \<const0>\;
  LOCKSTEP_Out(969) <= \<const0>\;
  LOCKSTEP_Out(970) <= \<const0>\;
  LOCKSTEP_Out(971) <= \<const0>\;
  LOCKSTEP_Out(972) <= \<const0>\;
  LOCKSTEP_Out(973) <= \<const0>\;
  LOCKSTEP_Out(974) <= \<const0>\;
  LOCKSTEP_Out(975) <= \<const0>\;
  LOCKSTEP_Out(976) <= \<const0>\;
  LOCKSTEP_Out(977) <= \<const0>\;
  LOCKSTEP_Out(978) <= \<const0>\;
  LOCKSTEP_Out(979) <= \<const0>\;
  LOCKSTEP_Out(980) <= \<const0>\;
  LOCKSTEP_Out(981) <= \<const0>\;
  LOCKSTEP_Out(982) <= \<const0>\;
  LOCKSTEP_Out(983) <= \<const0>\;
  LOCKSTEP_Out(984) <= \<const0>\;
  LOCKSTEP_Out(985) <= \<const0>\;
  LOCKSTEP_Out(986) <= \<const0>\;
  LOCKSTEP_Out(987) <= \<const0>\;
  LOCKSTEP_Out(988) <= \<const0>\;
  LOCKSTEP_Out(989) <= \<const0>\;
  LOCKSTEP_Out(990) <= \<const0>\;
  LOCKSTEP_Out(991) <= \<const0>\;
  LOCKSTEP_Out(992) <= \<const0>\;
  LOCKSTEP_Out(993) <= \<const0>\;
  LOCKSTEP_Out(994) <= \<const0>\;
  LOCKSTEP_Out(995) <= \<const0>\;
  LOCKSTEP_Out(996) <= \<const0>\;
  LOCKSTEP_Out(997) <= \<const0>\;
  LOCKSTEP_Out(998) <= \<const0>\;
  LOCKSTEP_Out(999) <= \<const0>\;
  LOCKSTEP_Out(1000) <= \<const0>\;
  LOCKSTEP_Out(1001) <= \<const0>\;
  LOCKSTEP_Out(1002) <= \<const0>\;
  LOCKSTEP_Out(1003) <= \<const0>\;
  LOCKSTEP_Out(1004) <= \<const0>\;
  LOCKSTEP_Out(1005) <= \<const0>\;
  LOCKSTEP_Out(1006) <= \<const0>\;
  LOCKSTEP_Out(1007) <= \<const0>\;
  LOCKSTEP_Out(1008) <= \<const0>\;
  LOCKSTEP_Out(1009) <= \<const0>\;
  LOCKSTEP_Out(1010) <= \<const0>\;
  LOCKSTEP_Out(1011) <= \<const0>\;
  LOCKSTEP_Out(1012) <= \<const0>\;
  LOCKSTEP_Out(1013) <= \<const0>\;
  LOCKSTEP_Out(1014) <= \<const0>\;
  LOCKSTEP_Out(1015) <= \<const0>\;
  LOCKSTEP_Out(1016) <= \<const0>\;
  LOCKSTEP_Out(1017) <= \<const0>\;
  LOCKSTEP_Out(1018) <= \<const0>\;
  LOCKSTEP_Out(1019) <= \<const0>\;
  LOCKSTEP_Out(1020) <= \<const0>\;
  LOCKSTEP_Out(1021) <= \<const0>\;
  LOCKSTEP_Out(1022) <= \<const0>\;
  LOCKSTEP_Out(1023) <= \<const0>\;
  LOCKSTEP_Out(1024) <= \<const0>\;
  LOCKSTEP_Out(1025) <= \<const0>\;
  LOCKSTEP_Out(1026) <= \<const0>\;
  LOCKSTEP_Out(1027) <= \<const0>\;
  LOCKSTEP_Out(1028) <= \<const0>\;
  LOCKSTEP_Out(1029) <= \<const0>\;
  LOCKSTEP_Out(1030) <= \<const0>\;
  LOCKSTEP_Out(1031) <= \<const0>\;
  LOCKSTEP_Out(1032) <= \<const0>\;
  LOCKSTEP_Out(1033) <= \<const0>\;
  LOCKSTEP_Out(1034) <= \<const0>\;
  LOCKSTEP_Out(1035) <= \<const0>\;
  LOCKSTEP_Out(1036) <= \<const0>\;
  LOCKSTEP_Out(1037) <= \<const0>\;
  LOCKSTEP_Out(1038) <= \<const0>\;
  LOCKSTEP_Out(1039) <= \<const0>\;
  LOCKSTEP_Out(1040) <= \<const0>\;
  LOCKSTEP_Out(1041) <= \<const0>\;
  LOCKSTEP_Out(1042) <= \<const0>\;
  LOCKSTEP_Out(1043) <= \<const0>\;
  LOCKSTEP_Out(1044) <= \<const0>\;
  LOCKSTEP_Out(1045) <= \<const0>\;
  LOCKSTEP_Out(1046) <= \<const0>\;
  LOCKSTEP_Out(1047) <= \<const0>\;
  LOCKSTEP_Out(1048) <= \<const0>\;
  LOCKSTEP_Out(1049) <= \<const0>\;
  LOCKSTEP_Out(1050) <= \<const0>\;
  LOCKSTEP_Out(1051) <= \<const0>\;
  LOCKSTEP_Out(1052) <= \<const0>\;
  LOCKSTEP_Out(1053) <= \<const0>\;
  LOCKSTEP_Out(1054) <= \<const0>\;
  LOCKSTEP_Out(1055) <= \<const0>\;
  LOCKSTEP_Out(1056) <= \<const0>\;
  LOCKSTEP_Out(1057) <= \<const0>\;
  LOCKSTEP_Out(1058) <= \<const0>\;
  LOCKSTEP_Out(1059) <= \<const0>\;
  LOCKSTEP_Out(1060) <= \<const0>\;
  LOCKSTEP_Out(1061) <= \<const0>\;
  LOCKSTEP_Out(1062) <= \<const0>\;
  LOCKSTEP_Out(1063) <= \<const0>\;
  LOCKSTEP_Out(1064) <= \<const0>\;
  LOCKSTEP_Out(1065) <= \<const0>\;
  LOCKSTEP_Out(1066) <= \<const0>\;
  LOCKSTEP_Out(1067) <= \<const0>\;
  LOCKSTEP_Out(1068) <= \<const0>\;
  LOCKSTEP_Out(1069) <= \<const0>\;
  LOCKSTEP_Out(1070) <= \<const0>\;
  LOCKSTEP_Out(1071) <= \<const0>\;
  LOCKSTEP_Out(1072) <= \<const0>\;
  LOCKSTEP_Out(1073) <= \<const0>\;
  LOCKSTEP_Out(1074) <= \<const0>\;
  LOCKSTEP_Out(1075) <= \<const0>\;
  LOCKSTEP_Out(1076) <= \<const0>\;
  LOCKSTEP_Out(1077) <= \<const0>\;
  LOCKSTEP_Out(1078) <= \<const0>\;
  LOCKSTEP_Out(1079) <= \<const0>\;
  LOCKSTEP_Out(1080) <= \<const0>\;
  LOCKSTEP_Out(1081) <= \<const0>\;
  LOCKSTEP_Out(1082) <= \<const0>\;
  LOCKSTEP_Out(1083) <= \<const0>\;
  LOCKSTEP_Out(1084) <= \<const0>\;
  LOCKSTEP_Out(1085) <= \<const0>\;
  LOCKSTEP_Out(1086) <= \<const0>\;
  LOCKSTEP_Out(1087) <= \<const0>\;
  LOCKSTEP_Out(1088) <= \<const0>\;
  LOCKSTEP_Out(1089) <= \<const0>\;
  LOCKSTEP_Out(1090) <= \<const0>\;
  LOCKSTEP_Out(1091) <= \<const0>\;
  LOCKSTEP_Out(1092) <= \<const0>\;
  LOCKSTEP_Out(1093) <= \<const0>\;
  LOCKSTEP_Out(1094) <= \<const0>\;
  LOCKSTEP_Out(1095) <= \<const0>\;
  LOCKSTEP_Out(1096) <= \<const0>\;
  LOCKSTEP_Out(1097) <= \<const0>\;
  LOCKSTEP_Out(1098) <= \<const0>\;
  LOCKSTEP_Out(1099) <= \<const0>\;
  LOCKSTEP_Out(1100) <= \<const0>\;
  LOCKSTEP_Out(1101) <= \<const0>\;
  LOCKSTEP_Out(1102) <= \<const0>\;
  LOCKSTEP_Out(1103) <= \<const0>\;
  LOCKSTEP_Out(1104) <= \<const0>\;
  LOCKSTEP_Out(1105) <= \<const0>\;
  LOCKSTEP_Out(1106) <= \<const0>\;
  LOCKSTEP_Out(1107) <= \<const0>\;
  LOCKSTEP_Out(1108) <= \<const0>\;
  LOCKSTEP_Out(1109) <= \<const0>\;
  LOCKSTEP_Out(1110) <= \<const0>\;
  LOCKSTEP_Out(1111) <= \<const0>\;
  LOCKSTEP_Out(1112) <= \<const0>\;
  LOCKSTEP_Out(1113) <= \<const0>\;
  LOCKSTEP_Out(1114) <= \<const0>\;
  LOCKSTEP_Out(1115) <= \<const0>\;
  LOCKSTEP_Out(1116) <= \<const0>\;
  LOCKSTEP_Out(1117) <= \<const0>\;
  LOCKSTEP_Out(1118) <= \<const0>\;
  LOCKSTEP_Out(1119) <= \<const0>\;
  LOCKSTEP_Out(1120) <= \<const0>\;
  LOCKSTEP_Out(1121) <= \<const0>\;
  LOCKSTEP_Out(1122) <= \<const0>\;
  LOCKSTEP_Out(1123) <= \<const0>\;
  LOCKSTEP_Out(1124) <= \<const0>\;
  LOCKSTEP_Out(1125) <= \<const0>\;
  LOCKSTEP_Out(1126) <= \<const0>\;
  LOCKSTEP_Out(1127) <= \<const0>\;
  LOCKSTEP_Out(1128) <= \<const0>\;
  LOCKSTEP_Out(1129) <= \<const0>\;
  LOCKSTEP_Out(1130) <= \<const0>\;
  LOCKSTEP_Out(1131) <= \<const0>\;
  LOCKSTEP_Out(1132) <= \<const0>\;
  LOCKSTEP_Out(1133) <= \<const0>\;
  LOCKSTEP_Out(1134) <= \<const0>\;
  LOCKSTEP_Out(1135) <= \<const0>\;
  LOCKSTEP_Out(1136) <= \<const0>\;
  LOCKSTEP_Out(1137) <= \<const0>\;
  LOCKSTEP_Out(1138) <= \<const0>\;
  LOCKSTEP_Out(1139) <= \<const0>\;
  LOCKSTEP_Out(1140) <= \<const0>\;
  LOCKSTEP_Out(1141) <= \<const0>\;
  LOCKSTEP_Out(1142) <= \<const0>\;
  LOCKSTEP_Out(1143) <= \<const0>\;
  LOCKSTEP_Out(1144) <= \<const0>\;
  LOCKSTEP_Out(1145) <= \<const0>\;
  LOCKSTEP_Out(1146) <= \<const0>\;
  LOCKSTEP_Out(1147) <= \<const0>\;
  LOCKSTEP_Out(1148) <= \<const0>\;
  LOCKSTEP_Out(1149) <= \<const0>\;
  LOCKSTEP_Out(1150) <= \<const0>\;
  LOCKSTEP_Out(1151) <= \<const0>\;
  LOCKSTEP_Out(1152) <= \<const0>\;
  LOCKSTEP_Out(1153) <= \<const0>\;
  LOCKSTEP_Out(1154) <= \<const0>\;
  LOCKSTEP_Out(1155) <= \<const0>\;
  LOCKSTEP_Out(1156) <= \<const0>\;
  LOCKSTEP_Out(1157) <= \<const0>\;
  LOCKSTEP_Out(1158) <= \<const0>\;
  LOCKSTEP_Out(1159) <= \<const0>\;
  LOCKSTEP_Out(1160) <= \<const0>\;
  LOCKSTEP_Out(1161) <= \<const0>\;
  LOCKSTEP_Out(1162) <= \<const0>\;
  LOCKSTEP_Out(1163) <= \<const0>\;
  LOCKSTEP_Out(1164) <= \<const0>\;
  LOCKSTEP_Out(1165) <= \<const0>\;
  LOCKSTEP_Out(1166) <= \<const0>\;
  LOCKSTEP_Out(1167) <= \<const0>\;
  LOCKSTEP_Out(1168) <= \<const0>\;
  LOCKSTEP_Out(1169) <= \<const0>\;
  LOCKSTEP_Out(1170) <= \<const0>\;
  LOCKSTEP_Out(1171) <= \<const0>\;
  LOCKSTEP_Out(1172) <= \<const0>\;
  LOCKSTEP_Out(1173) <= \<const0>\;
  LOCKSTEP_Out(1174) <= \<const0>\;
  LOCKSTEP_Out(1175) <= \<const0>\;
  LOCKSTEP_Out(1176) <= \<const0>\;
  LOCKSTEP_Out(1177) <= \<const0>\;
  LOCKSTEP_Out(1178) <= \<const0>\;
  LOCKSTEP_Out(1179) <= \<const0>\;
  LOCKSTEP_Out(1180) <= \<const0>\;
  LOCKSTEP_Out(1181) <= \<const0>\;
  LOCKSTEP_Out(1182) <= \<const0>\;
  LOCKSTEP_Out(1183) <= \<const0>\;
  LOCKSTEP_Out(1184) <= \<const0>\;
  LOCKSTEP_Out(1185) <= \<const0>\;
  LOCKSTEP_Out(1186) <= \<const0>\;
  LOCKSTEP_Out(1187) <= \<const0>\;
  LOCKSTEP_Out(1188) <= \<const0>\;
  LOCKSTEP_Out(1189) <= \<const0>\;
  LOCKSTEP_Out(1190) <= \<const0>\;
  LOCKSTEP_Out(1191) <= \<const0>\;
  LOCKSTEP_Out(1192) <= \<const0>\;
  LOCKSTEP_Out(1193) <= \<const0>\;
  LOCKSTEP_Out(1194) <= \<const0>\;
  LOCKSTEP_Out(1195) <= \<const0>\;
  LOCKSTEP_Out(1196) <= \<const0>\;
  LOCKSTEP_Out(1197) <= \<const0>\;
  LOCKSTEP_Out(1198) <= \<const0>\;
  LOCKSTEP_Out(1199) <= \<const0>\;
  LOCKSTEP_Out(1200) <= \<const0>\;
  LOCKSTEP_Out(1201) <= \<const0>\;
  LOCKSTEP_Out(1202) <= \<const0>\;
  LOCKSTEP_Out(1203) <= \<const0>\;
  LOCKSTEP_Out(1204) <= \<const0>\;
  LOCKSTEP_Out(1205) <= \<const0>\;
  LOCKSTEP_Out(1206) <= \<const0>\;
  LOCKSTEP_Out(1207) <= \<const0>\;
  LOCKSTEP_Out(1208) <= \<const0>\;
  LOCKSTEP_Out(1209) <= \<const0>\;
  LOCKSTEP_Out(1210) <= \<const0>\;
  LOCKSTEP_Out(1211) <= \<const0>\;
  LOCKSTEP_Out(1212) <= \<const0>\;
  LOCKSTEP_Out(1213) <= \<const0>\;
  LOCKSTEP_Out(1214) <= \<const0>\;
  LOCKSTEP_Out(1215) <= \<const0>\;
  LOCKSTEP_Out(1216) <= \<const0>\;
  LOCKSTEP_Out(1217) <= \<const0>\;
  LOCKSTEP_Out(1218) <= \<const0>\;
  LOCKSTEP_Out(1219) <= \<const0>\;
  LOCKSTEP_Out(1220) <= \<const0>\;
  LOCKSTEP_Out(1221) <= \<const0>\;
  LOCKSTEP_Out(1222) <= \<const0>\;
  LOCKSTEP_Out(1223) <= \<const0>\;
  LOCKSTEP_Out(1224) <= \<const0>\;
  LOCKSTEP_Out(1225) <= \<const0>\;
  LOCKSTEP_Out(1226) <= \<const0>\;
  LOCKSTEP_Out(1227) <= \<const0>\;
  LOCKSTEP_Out(1228) <= \<const0>\;
  LOCKSTEP_Out(1229) <= \<const0>\;
  LOCKSTEP_Out(1230) <= \<const0>\;
  LOCKSTEP_Out(1231) <= \<const0>\;
  LOCKSTEP_Out(1232) <= \<const0>\;
  LOCKSTEP_Out(1233) <= \<const0>\;
  LOCKSTEP_Out(1234) <= \<const0>\;
  LOCKSTEP_Out(1235) <= \<const0>\;
  LOCKSTEP_Out(1236) <= \<const0>\;
  LOCKSTEP_Out(1237) <= \<const0>\;
  LOCKSTEP_Out(1238) <= \<const0>\;
  LOCKSTEP_Out(1239) <= \<const0>\;
  LOCKSTEP_Out(1240) <= \<const0>\;
  LOCKSTEP_Out(1241) <= \<const0>\;
  LOCKSTEP_Out(1242) <= \<const0>\;
  LOCKSTEP_Out(1243) <= \<const0>\;
  LOCKSTEP_Out(1244) <= \<const0>\;
  LOCKSTEP_Out(1245) <= \<const0>\;
  LOCKSTEP_Out(1246) <= \<const0>\;
  LOCKSTEP_Out(1247) <= \<const0>\;
  LOCKSTEP_Out(1248) <= \<const0>\;
  LOCKSTEP_Out(1249) <= \<const0>\;
  LOCKSTEP_Out(1250) <= \<const0>\;
  LOCKSTEP_Out(1251) <= \<const0>\;
  LOCKSTEP_Out(1252) <= \<const0>\;
  LOCKSTEP_Out(1253) <= \<const0>\;
  LOCKSTEP_Out(1254) <= \<const0>\;
  LOCKSTEP_Out(1255) <= \<const0>\;
  LOCKSTEP_Out(1256) <= \<const0>\;
  LOCKSTEP_Out(1257) <= \<const0>\;
  LOCKSTEP_Out(1258) <= \<const0>\;
  LOCKSTEP_Out(1259) <= \<const0>\;
  LOCKSTEP_Out(1260) <= \<const0>\;
  LOCKSTEP_Out(1261) <= \<const0>\;
  LOCKSTEP_Out(1262) <= \<const0>\;
  LOCKSTEP_Out(1263) <= \<const0>\;
  LOCKSTEP_Out(1264) <= \<const0>\;
  LOCKSTEP_Out(1265) <= \<const0>\;
  LOCKSTEP_Out(1266) <= \<const0>\;
  LOCKSTEP_Out(1267) <= \<const0>\;
  LOCKSTEP_Out(1268) <= \<const0>\;
  LOCKSTEP_Out(1269) <= \<const0>\;
  LOCKSTEP_Out(1270) <= \<const0>\;
  LOCKSTEP_Out(1271) <= \<const0>\;
  LOCKSTEP_Out(1272) <= \<const0>\;
  LOCKSTEP_Out(1273) <= \<const0>\;
  LOCKSTEP_Out(1274) <= \<const0>\;
  LOCKSTEP_Out(1275) <= \<const0>\;
  LOCKSTEP_Out(1276) <= \<const0>\;
  LOCKSTEP_Out(1277) <= \<const0>\;
  LOCKSTEP_Out(1278) <= \<const0>\;
  LOCKSTEP_Out(1279) <= \<const0>\;
  LOCKSTEP_Out(1280) <= \<const0>\;
  LOCKSTEP_Out(1281) <= \<const0>\;
  LOCKSTEP_Out(1282) <= \<const0>\;
  LOCKSTEP_Out(1283) <= \<const0>\;
  LOCKSTEP_Out(1284) <= \<const0>\;
  LOCKSTEP_Out(1285) <= \<const0>\;
  LOCKSTEP_Out(1286) <= \<const0>\;
  LOCKSTEP_Out(1287) <= \<const0>\;
  LOCKSTEP_Out(1288) <= \<const0>\;
  LOCKSTEP_Out(1289) <= \<const0>\;
  LOCKSTEP_Out(1290) <= \<const0>\;
  LOCKSTEP_Out(1291) <= \<const0>\;
  LOCKSTEP_Out(1292) <= \<const0>\;
  LOCKSTEP_Out(1293) <= \<const0>\;
  LOCKSTEP_Out(1294) <= \<const0>\;
  LOCKSTEP_Out(1295) <= \<const0>\;
  LOCKSTEP_Out(1296) <= \<const0>\;
  LOCKSTEP_Out(1297) <= \<const0>\;
  LOCKSTEP_Out(1298) <= \<const0>\;
  LOCKSTEP_Out(1299) <= \<const0>\;
  LOCKSTEP_Out(1300) <= \<const0>\;
  LOCKSTEP_Out(1301) <= \<const0>\;
  LOCKSTEP_Out(1302) <= \<const0>\;
  LOCKSTEP_Out(1303) <= \<const0>\;
  LOCKSTEP_Out(1304) <= \<const0>\;
  LOCKSTEP_Out(1305) <= \<const0>\;
  LOCKSTEP_Out(1306) <= \<const0>\;
  LOCKSTEP_Out(1307) <= \<const0>\;
  LOCKSTEP_Out(1308) <= \<const0>\;
  LOCKSTEP_Out(1309) <= \<const0>\;
  LOCKSTEP_Out(1310) <= \<const0>\;
  LOCKSTEP_Out(1311) <= \<const0>\;
  LOCKSTEP_Out(1312) <= \<const0>\;
  LOCKSTEP_Out(1313) <= \<const0>\;
  LOCKSTEP_Out(1314) <= \<const0>\;
  LOCKSTEP_Out(1315) <= \<const0>\;
  LOCKSTEP_Out(1316) <= \<const0>\;
  LOCKSTEP_Out(1317) <= \<const0>\;
  LOCKSTEP_Out(1318) <= \<const0>\;
  LOCKSTEP_Out(1319) <= \<const0>\;
  LOCKSTEP_Out(1320) <= \<const0>\;
  LOCKSTEP_Out(1321) <= \<const0>\;
  LOCKSTEP_Out(1322) <= \<const0>\;
  LOCKSTEP_Out(1323) <= \<const0>\;
  LOCKSTEP_Out(1324) <= \<const0>\;
  LOCKSTEP_Out(1325) <= \<const0>\;
  LOCKSTEP_Out(1326) <= \<const0>\;
  LOCKSTEP_Out(1327) <= \<const0>\;
  LOCKSTEP_Out(1328) <= \<const0>\;
  LOCKSTEP_Out(1329) <= \<const0>\;
  LOCKSTEP_Out(1330) <= \<const0>\;
  LOCKSTEP_Out(1331) <= \<const0>\;
  LOCKSTEP_Out(1332) <= \<const0>\;
  LOCKSTEP_Out(1333) <= \<const0>\;
  LOCKSTEP_Out(1334) <= \<const0>\;
  LOCKSTEP_Out(1335) <= \<const0>\;
  LOCKSTEP_Out(1336) <= \<const0>\;
  LOCKSTEP_Out(1337) <= \<const0>\;
  LOCKSTEP_Out(1338) <= \<const0>\;
  LOCKSTEP_Out(1339) <= \<const0>\;
  LOCKSTEP_Out(1340) <= \<const0>\;
  LOCKSTEP_Out(1341) <= \<const0>\;
  LOCKSTEP_Out(1342) <= \<const0>\;
  LOCKSTEP_Out(1343) <= \<const0>\;
  LOCKSTEP_Out(1344) <= \<const0>\;
  LOCKSTEP_Out(1345) <= \<const0>\;
  LOCKSTEP_Out(1346) <= \<const0>\;
  LOCKSTEP_Out(1347) <= \<const0>\;
  LOCKSTEP_Out(1348) <= \<const0>\;
  LOCKSTEP_Out(1349) <= \<const0>\;
  LOCKSTEP_Out(1350) <= \<const0>\;
  LOCKSTEP_Out(1351) <= \<const0>\;
  LOCKSTEP_Out(1352) <= \<const0>\;
  LOCKSTEP_Out(1353) <= \<const0>\;
  LOCKSTEP_Out(1354) <= \<const0>\;
  LOCKSTEP_Out(1355) <= \<const0>\;
  LOCKSTEP_Out(1356) <= \<const0>\;
  LOCKSTEP_Out(1357) <= \<const0>\;
  LOCKSTEP_Out(1358) <= \<const0>\;
  LOCKSTEP_Out(1359) <= \<const0>\;
  LOCKSTEP_Out(1360) <= \<const0>\;
  LOCKSTEP_Out(1361) <= \<const0>\;
  LOCKSTEP_Out(1362) <= \<const0>\;
  LOCKSTEP_Out(1363) <= \<const0>\;
  LOCKSTEP_Out(1364) <= \<const0>\;
  LOCKSTEP_Out(1365) <= \<const0>\;
  LOCKSTEP_Out(1366) <= \<const0>\;
  LOCKSTEP_Out(1367) <= \<const0>\;
  LOCKSTEP_Out(1368) <= \<const0>\;
  LOCKSTEP_Out(1369) <= \<const0>\;
  LOCKSTEP_Out(1370) <= \<const0>\;
  LOCKSTEP_Out(1371) <= \<const0>\;
  LOCKSTEP_Out(1372) <= \<const0>\;
  LOCKSTEP_Out(1373) <= \<const0>\;
  LOCKSTEP_Out(1374) <= \<const0>\;
  LOCKSTEP_Out(1375) <= \<const0>\;
  LOCKSTEP_Out(1376) <= \<const0>\;
  LOCKSTEP_Out(1377) <= \<const0>\;
  LOCKSTEP_Out(1378) <= \<const0>\;
  LOCKSTEP_Out(1379) <= \<const0>\;
  LOCKSTEP_Out(1380) <= \<const0>\;
  LOCKSTEP_Out(1381) <= \<const0>\;
  LOCKSTEP_Out(1382) <= \<const0>\;
  LOCKSTEP_Out(1383) <= \<const0>\;
  LOCKSTEP_Out(1384) <= \<const0>\;
  LOCKSTEP_Out(1385) <= \<const0>\;
  LOCKSTEP_Out(1386) <= \<const0>\;
  LOCKSTEP_Out(1387) <= \<const0>\;
  LOCKSTEP_Out(1388) <= \<const0>\;
  LOCKSTEP_Out(1389) <= \<const0>\;
  LOCKSTEP_Out(1390) <= \<const0>\;
  LOCKSTEP_Out(1391) <= \<const0>\;
  LOCKSTEP_Out(1392) <= \<const0>\;
  LOCKSTEP_Out(1393) <= \<const0>\;
  LOCKSTEP_Out(1394) <= \<const0>\;
  LOCKSTEP_Out(1395) <= \<const0>\;
  LOCKSTEP_Out(1396) <= \<const0>\;
  LOCKSTEP_Out(1397) <= \<const0>\;
  LOCKSTEP_Out(1398) <= \<const0>\;
  LOCKSTEP_Out(1399) <= \<const0>\;
  LOCKSTEP_Out(1400) <= \<const0>\;
  LOCKSTEP_Out(1401) <= \<const0>\;
  LOCKSTEP_Out(1402) <= \<const0>\;
  LOCKSTEP_Out(1403) <= \<const0>\;
  LOCKSTEP_Out(1404) <= \<const0>\;
  LOCKSTEP_Out(1405) <= \<const0>\;
  LOCKSTEP_Out(1406) <= \<const0>\;
  LOCKSTEP_Out(1407) <= \<const0>\;
  LOCKSTEP_Out(1408) <= \<const0>\;
  LOCKSTEP_Out(1409) <= \<const0>\;
  LOCKSTEP_Out(1410) <= \<const0>\;
  LOCKSTEP_Out(1411) <= \<const0>\;
  LOCKSTEP_Out(1412) <= \<const0>\;
  LOCKSTEP_Out(1413) <= \<const0>\;
  LOCKSTEP_Out(1414) <= \<const0>\;
  LOCKSTEP_Out(1415) <= \<const0>\;
  LOCKSTEP_Out(1416) <= \<const0>\;
  LOCKSTEP_Out(1417) <= \<const0>\;
  LOCKSTEP_Out(1418) <= \<const0>\;
  LOCKSTEP_Out(1419) <= \<const0>\;
  LOCKSTEP_Out(1420) <= \<const0>\;
  LOCKSTEP_Out(1421) <= \<const0>\;
  LOCKSTEP_Out(1422) <= \<const0>\;
  LOCKSTEP_Out(1423) <= \<const0>\;
  LOCKSTEP_Out(1424) <= \<const0>\;
  LOCKSTEP_Out(1425) <= \<const0>\;
  LOCKSTEP_Out(1426) <= \<const0>\;
  LOCKSTEP_Out(1427) <= \<const0>\;
  LOCKSTEP_Out(1428) <= \<const0>\;
  LOCKSTEP_Out(1429) <= \<const0>\;
  LOCKSTEP_Out(1430) <= \<const0>\;
  LOCKSTEP_Out(1431) <= \<const0>\;
  LOCKSTEP_Out(1432) <= \<const0>\;
  LOCKSTEP_Out(1433) <= \<const0>\;
  LOCKSTEP_Out(1434) <= \<const0>\;
  LOCKSTEP_Out(1435) <= \<const0>\;
  LOCKSTEP_Out(1436) <= \<const0>\;
  LOCKSTEP_Out(1437) <= \<const0>\;
  LOCKSTEP_Out(1438) <= \<const0>\;
  LOCKSTEP_Out(1439) <= \<const0>\;
  LOCKSTEP_Out(1440) <= \<const0>\;
  LOCKSTEP_Out(1441) <= \<const0>\;
  LOCKSTEP_Out(1442) <= \<const0>\;
  LOCKSTEP_Out(1443) <= \<const0>\;
  LOCKSTEP_Out(1444) <= \<const0>\;
  LOCKSTEP_Out(1445) <= \<const0>\;
  LOCKSTEP_Out(1446) <= \<const0>\;
  LOCKSTEP_Out(1447) <= \<const0>\;
  LOCKSTEP_Out(1448) <= \<const0>\;
  LOCKSTEP_Out(1449) <= \<const0>\;
  LOCKSTEP_Out(1450) <= \<const0>\;
  LOCKSTEP_Out(1451) <= \<const0>\;
  LOCKSTEP_Out(1452) <= \<const0>\;
  LOCKSTEP_Out(1453) <= \<const0>\;
  LOCKSTEP_Out(1454) <= \<const0>\;
  LOCKSTEP_Out(1455) <= \<const0>\;
  LOCKSTEP_Out(1456) <= \<const0>\;
  LOCKSTEP_Out(1457) <= \<const0>\;
  LOCKSTEP_Out(1458) <= \<const0>\;
  LOCKSTEP_Out(1459) <= \<const0>\;
  LOCKSTEP_Out(1460) <= \<const0>\;
  LOCKSTEP_Out(1461) <= \<const0>\;
  LOCKSTEP_Out(1462) <= \<const0>\;
  LOCKSTEP_Out(1463) <= \<const0>\;
  LOCKSTEP_Out(1464) <= \<const0>\;
  LOCKSTEP_Out(1465) <= \<const0>\;
  LOCKSTEP_Out(1466) <= \<const0>\;
  LOCKSTEP_Out(1467) <= \<const0>\;
  LOCKSTEP_Out(1468) <= \<const0>\;
  LOCKSTEP_Out(1469) <= \<const0>\;
  LOCKSTEP_Out(1470) <= \<const0>\;
  LOCKSTEP_Out(1471) <= \<const0>\;
  LOCKSTEP_Out(1472) <= \<const0>\;
  LOCKSTEP_Out(1473) <= \<const0>\;
  LOCKSTEP_Out(1474) <= \<const0>\;
  LOCKSTEP_Out(1475) <= \<const0>\;
  LOCKSTEP_Out(1476) <= \<const0>\;
  LOCKSTEP_Out(1477) <= \<const0>\;
  LOCKSTEP_Out(1478) <= \<const0>\;
  LOCKSTEP_Out(1479) <= \<const0>\;
  LOCKSTEP_Out(1480) <= \<const0>\;
  LOCKSTEP_Out(1481) <= \<const0>\;
  LOCKSTEP_Out(1482) <= \<const0>\;
  LOCKSTEP_Out(1483) <= \<const0>\;
  LOCKSTEP_Out(1484) <= \<const0>\;
  LOCKSTEP_Out(1485) <= \<const0>\;
  LOCKSTEP_Out(1486) <= \<const0>\;
  LOCKSTEP_Out(1487) <= \<const0>\;
  LOCKSTEP_Out(1488) <= \<const0>\;
  LOCKSTEP_Out(1489) <= \<const0>\;
  LOCKSTEP_Out(1490) <= \<const0>\;
  LOCKSTEP_Out(1491) <= \<const0>\;
  LOCKSTEP_Out(1492) <= \<const0>\;
  LOCKSTEP_Out(1493) <= \<const0>\;
  LOCKSTEP_Out(1494) <= \<const0>\;
  LOCKSTEP_Out(1495) <= \<const0>\;
  LOCKSTEP_Out(1496) <= \<const0>\;
  LOCKSTEP_Out(1497) <= \<const0>\;
  LOCKSTEP_Out(1498) <= \<const0>\;
  LOCKSTEP_Out(1499) <= \<const0>\;
  LOCKSTEP_Out(1500) <= \<const0>\;
  LOCKSTEP_Out(1501) <= \<const0>\;
  LOCKSTEP_Out(1502) <= \<const0>\;
  LOCKSTEP_Out(1503) <= \<const0>\;
  LOCKSTEP_Out(1504) <= \<const0>\;
  LOCKSTEP_Out(1505) <= \<const0>\;
  LOCKSTEP_Out(1506) <= \<const0>\;
  LOCKSTEP_Out(1507) <= \<const0>\;
  LOCKSTEP_Out(1508) <= \<const0>\;
  LOCKSTEP_Out(1509) <= \<const0>\;
  LOCKSTEP_Out(1510) <= \<const0>\;
  LOCKSTEP_Out(1511) <= \<const0>\;
  LOCKSTEP_Out(1512) <= \<const0>\;
  LOCKSTEP_Out(1513) <= \<const0>\;
  LOCKSTEP_Out(1514) <= \<const0>\;
  LOCKSTEP_Out(1515) <= \<const0>\;
  LOCKSTEP_Out(1516) <= \<const0>\;
  LOCKSTEP_Out(1517) <= \<const0>\;
  LOCKSTEP_Out(1518) <= \<const0>\;
  LOCKSTEP_Out(1519) <= \<const0>\;
  LOCKSTEP_Out(1520) <= \<const0>\;
  LOCKSTEP_Out(1521) <= \<const0>\;
  LOCKSTEP_Out(1522) <= \<const0>\;
  LOCKSTEP_Out(1523) <= \<const0>\;
  LOCKSTEP_Out(1524) <= \<const0>\;
  LOCKSTEP_Out(1525) <= \<const0>\;
  LOCKSTEP_Out(1526) <= \<const0>\;
  LOCKSTEP_Out(1527) <= \<const0>\;
  LOCKSTEP_Out(1528) <= \<const0>\;
  LOCKSTEP_Out(1529) <= \<const0>\;
  LOCKSTEP_Out(1530) <= \<const0>\;
  LOCKSTEP_Out(1531) <= \<const0>\;
  LOCKSTEP_Out(1532) <= \<const0>\;
  LOCKSTEP_Out(1533) <= \<const0>\;
  LOCKSTEP_Out(1534) <= \<const0>\;
  LOCKSTEP_Out(1535) <= \<const0>\;
  LOCKSTEP_Out(1536) <= \<const0>\;
  LOCKSTEP_Out(1537) <= \<const0>\;
  LOCKSTEP_Out(1538) <= \<const0>\;
  LOCKSTEP_Out(1539) <= \<const0>\;
  LOCKSTEP_Out(1540) <= \<const0>\;
  LOCKSTEP_Out(1541) <= \<const0>\;
  LOCKSTEP_Out(1542) <= \<const0>\;
  LOCKSTEP_Out(1543) <= \<const0>\;
  LOCKSTEP_Out(1544) <= \<const0>\;
  LOCKSTEP_Out(1545) <= \<const0>\;
  LOCKSTEP_Out(1546) <= \<const0>\;
  LOCKSTEP_Out(1547) <= \<const0>\;
  LOCKSTEP_Out(1548) <= \<const0>\;
  LOCKSTEP_Out(1549) <= \<const0>\;
  LOCKSTEP_Out(1550) <= \<const0>\;
  LOCKSTEP_Out(1551) <= \<const0>\;
  LOCKSTEP_Out(1552) <= \<const0>\;
  LOCKSTEP_Out(1553) <= \<const0>\;
  LOCKSTEP_Out(1554) <= \<const0>\;
  LOCKSTEP_Out(1555) <= \<const0>\;
  LOCKSTEP_Out(1556) <= \<const0>\;
  LOCKSTEP_Out(1557) <= \<const0>\;
  LOCKSTEP_Out(1558) <= \<const0>\;
  LOCKSTEP_Out(1559) <= \<const0>\;
  LOCKSTEP_Out(1560) <= \<const0>\;
  LOCKSTEP_Out(1561) <= \<const0>\;
  LOCKSTEP_Out(1562) <= \<const0>\;
  LOCKSTEP_Out(1563) <= \<const0>\;
  LOCKSTEP_Out(1564) <= \<const0>\;
  LOCKSTEP_Out(1565) <= \<const0>\;
  LOCKSTEP_Out(1566) <= \<const0>\;
  LOCKSTEP_Out(1567) <= \<const0>\;
  LOCKSTEP_Out(1568) <= \<const0>\;
  LOCKSTEP_Out(1569) <= \<const0>\;
  LOCKSTEP_Out(1570) <= \<const0>\;
  LOCKSTEP_Out(1571) <= \<const0>\;
  LOCKSTEP_Out(1572) <= \<const0>\;
  LOCKSTEP_Out(1573) <= \<const0>\;
  LOCKSTEP_Out(1574) <= \<const0>\;
  LOCKSTEP_Out(1575) <= \<const0>\;
  LOCKSTEP_Out(1576) <= \<const0>\;
  LOCKSTEP_Out(1577) <= \<const0>\;
  LOCKSTEP_Out(1578) <= \<const0>\;
  LOCKSTEP_Out(1579) <= \<const0>\;
  LOCKSTEP_Out(1580) <= \<const0>\;
  LOCKSTEP_Out(1581) <= \<const0>\;
  LOCKSTEP_Out(1582) <= \<const0>\;
  LOCKSTEP_Out(1583) <= \<const0>\;
  LOCKSTEP_Out(1584) <= \<const0>\;
  LOCKSTEP_Out(1585) <= \<const0>\;
  LOCKSTEP_Out(1586) <= \<const0>\;
  LOCKSTEP_Out(1587) <= \<const0>\;
  LOCKSTEP_Out(1588) <= \<const0>\;
  LOCKSTEP_Out(1589) <= \<const0>\;
  LOCKSTEP_Out(1590) <= \<const0>\;
  LOCKSTEP_Out(1591) <= \<const0>\;
  LOCKSTEP_Out(1592) <= \<const0>\;
  LOCKSTEP_Out(1593) <= \<const0>\;
  LOCKSTEP_Out(1594) <= \<const0>\;
  LOCKSTEP_Out(1595) <= \<const0>\;
  LOCKSTEP_Out(1596) <= \<const0>\;
  LOCKSTEP_Out(1597) <= \<const0>\;
  LOCKSTEP_Out(1598) <= \<const0>\;
  LOCKSTEP_Out(1599) <= \<const0>\;
  LOCKSTEP_Out(1600) <= \<const0>\;
  LOCKSTEP_Out(1601) <= \<const0>\;
  LOCKSTEP_Out(1602) <= \<const0>\;
  LOCKSTEP_Out(1603) <= \<const0>\;
  LOCKSTEP_Out(1604) <= \<const0>\;
  LOCKSTEP_Out(1605) <= \<const0>\;
  LOCKSTEP_Out(1606) <= \<const0>\;
  LOCKSTEP_Out(1607) <= \<const0>\;
  LOCKSTEP_Out(1608) <= \<const0>\;
  LOCKSTEP_Out(1609) <= \<const0>\;
  LOCKSTEP_Out(1610) <= \<const0>\;
  LOCKSTEP_Out(1611) <= \<const0>\;
  LOCKSTEP_Out(1612) <= \<const0>\;
  LOCKSTEP_Out(1613) <= \<const0>\;
  LOCKSTEP_Out(1614) <= \<const0>\;
  LOCKSTEP_Out(1615) <= \<const0>\;
  LOCKSTEP_Out(1616) <= \<const0>\;
  LOCKSTEP_Out(1617) <= \<const0>\;
  LOCKSTEP_Out(1618) <= \<const0>\;
  LOCKSTEP_Out(1619) <= \<const0>\;
  LOCKSTEP_Out(1620) <= \<const0>\;
  LOCKSTEP_Out(1621) <= \<const0>\;
  LOCKSTEP_Out(1622) <= \<const0>\;
  LOCKSTEP_Out(1623) <= \<const0>\;
  LOCKSTEP_Out(1624) <= \<const0>\;
  LOCKSTEP_Out(1625) <= \<const0>\;
  LOCKSTEP_Out(1626) <= \<const0>\;
  LOCKSTEP_Out(1627) <= \<const0>\;
  LOCKSTEP_Out(1628) <= \<const0>\;
  LOCKSTEP_Out(1629) <= \<const0>\;
  LOCKSTEP_Out(1630) <= \<const0>\;
  LOCKSTEP_Out(1631) <= \<const0>\;
  LOCKSTEP_Out(1632) <= \<const0>\;
  LOCKSTEP_Out(1633) <= \<const0>\;
  LOCKSTEP_Out(1634) <= \<const0>\;
  LOCKSTEP_Out(1635) <= \<const0>\;
  LOCKSTEP_Out(1636) <= \<const0>\;
  LOCKSTEP_Out(1637) <= \<const0>\;
  LOCKSTEP_Out(1638) <= \<const0>\;
  LOCKSTEP_Out(1639) <= \<const0>\;
  LOCKSTEP_Out(1640) <= \<const0>\;
  LOCKSTEP_Out(1641) <= \<const0>\;
  LOCKSTEP_Out(1642) <= \<const0>\;
  LOCKSTEP_Out(1643) <= \<const0>\;
  LOCKSTEP_Out(1644) <= \<const0>\;
  LOCKSTEP_Out(1645) <= \<const0>\;
  LOCKSTEP_Out(1646) <= \<const0>\;
  LOCKSTEP_Out(1647) <= \<const0>\;
  LOCKSTEP_Out(1648) <= \<const0>\;
  LOCKSTEP_Out(1649) <= \<const0>\;
  LOCKSTEP_Out(1650) <= \<const0>\;
  LOCKSTEP_Out(1651) <= \<const0>\;
  LOCKSTEP_Out(1652) <= \<const0>\;
  LOCKSTEP_Out(1653) <= \<const0>\;
  LOCKSTEP_Out(1654) <= \<const0>\;
  LOCKSTEP_Out(1655) <= \<const0>\;
  LOCKSTEP_Out(1656) <= \<const0>\;
  LOCKSTEP_Out(1657) <= \<const0>\;
  LOCKSTEP_Out(1658) <= \<const0>\;
  LOCKSTEP_Out(1659) <= \<const0>\;
  LOCKSTEP_Out(1660) <= \<const0>\;
  LOCKSTEP_Out(1661) <= \<const0>\;
  LOCKSTEP_Out(1662) <= \<const0>\;
  LOCKSTEP_Out(1663) <= \<const0>\;
  LOCKSTEP_Out(1664) <= \<const0>\;
  LOCKSTEP_Out(1665) <= \<const0>\;
  LOCKSTEP_Out(1666) <= \<const0>\;
  LOCKSTEP_Out(1667) <= \<const0>\;
  LOCKSTEP_Out(1668) <= \<const0>\;
  LOCKSTEP_Out(1669) <= \<const0>\;
  LOCKSTEP_Out(1670) <= \<const0>\;
  LOCKSTEP_Out(1671) <= \<const0>\;
  LOCKSTEP_Out(1672) <= \<const0>\;
  LOCKSTEP_Out(1673) <= \<const0>\;
  LOCKSTEP_Out(1674) <= \<const0>\;
  LOCKSTEP_Out(1675) <= \<const0>\;
  LOCKSTEP_Out(1676) <= \<const0>\;
  LOCKSTEP_Out(1677) <= \<const0>\;
  LOCKSTEP_Out(1678) <= \<const0>\;
  LOCKSTEP_Out(1679) <= \<const0>\;
  LOCKSTEP_Out(1680) <= \<const0>\;
  LOCKSTEP_Out(1681) <= \<const0>\;
  LOCKSTEP_Out(1682) <= \<const0>\;
  LOCKSTEP_Out(1683) <= \<const0>\;
  LOCKSTEP_Out(1684) <= \<const0>\;
  LOCKSTEP_Out(1685) <= \<const0>\;
  LOCKSTEP_Out(1686) <= \<const0>\;
  LOCKSTEP_Out(1687) <= \<const0>\;
  LOCKSTEP_Out(1688) <= \<const0>\;
  LOCKSTEP_Out(1689) <= \<const0>\;
  LOCKSTEP_Out(1690) <= \<const0>\;
  LOCKSTEP_Out(1691) <= \<const0>\;
  LOCKSTEP_Out(1692) <= \<const0>\;
  LOCKSTEP_Out(1693) <= \<const0>\;
  LOCKSTEP_Out(1694) <= \<const0>\;
  LOCKSTEP_Out(1695) <= \<const0>\;
  LOCKSTEP_Out(1696) <= \<const0>\;
  LOCKSTEP_Out(1697) <= \<const0>\;
  LOCKSTEP_Out(1698) <= \<const0>\;
  LOCKSTEP_Out(1699) <= \<const0>\;
  LOCKSTEP_Out(1700) <= \<const0>\;
  LOCKSTEP_Out(1701) <= \<const0>\;
  LOCKSTEP_Out(1702) <= \<const0>\;
  LOCKSTEP_Out(1703) <= \<const0>\;
  LOCKSTEP_Out(1704) <= \<const0>\;
  LOCKSTEP_Out(1705) <= \<const0>\;
  LOCKSTEP_Out(1706) <= \<const0>\;
  LOCKSTEP_Out(1707) <= \<const0>\;
  LOCKSTEP_Out(1708) <= \<const0>\;
  LOCKSTEP_Out(1709) <= \<const0>\;
  LOCKSTEP_Out(1710) <= \<const0>\;
  LOCKSTEP_Out(1711) <= \<const0>\;
  LOCKSTEP_Out(1712) <= \<const0>\;
  LOCKSTEP_Out(1713) <= \<const0>\;
  LOCKSTEP_Out(1714) <= \<const0>\;
  LOCKSTEP_Out(1715) <= \<const0>\;
  LOCKSTEP_Out(1716) <= \<const0>\;
  LOCKSTEP_Out(1717) <= \<const0>\;
  LOCKSTEP_Out(1718) <= \<const0>\;
  LOCKSTEP_Out(1719) <= \<const0>\;
  LOCKSTEP_Out(1720) <= \<const0>\;
  LOCKSTEP_Out(1721) <= \<const0>\;
  LOCKSTEP_Out(1722) <= \<const0>\;
  LOCKSTEP_Out(1723) <= \<const0>\;
  LOCKSTEP_Out(1724) <= \<const0>\;
  LOCKSTEP_Out(1725) <= \<const0>\;
  LOCKSTEP_Out(1726) <= \<const0>\;
  LOCKSTEP_Out(1727) <= \<const0>\;
  LOCKSTEP_Out(1728) <= \<const0>\;
  LOCKSTEP_Out(1729) <= \<const0>\;
  LOCKSTEP_Out(1730) <= \<const0>\;
  LOCKSTEP_Out(1731) <= \<const0>\;
  LOCKSTEP_Out(1732) <= \<const0>\;
  LOCKSTEP_Out(1733) <= \<const0>\;
  LOCKSTEP_Out(1734) <= \<const0>\;
  LOCKSTEP_Out(1735) <= \<const0>\;
  LOCKSTEP_Out(1736) <= \<const0>\;
  LOCKSTEP_Out(1737) <= \<const0>\;
  LOCKSTEP_Out(1738) <= \<const0>\;
  LOCKSTEP_Out(1739) <= \<const0>\;
  LOCKSTEP_Out(1740) <= \<const0>\;
  LOCKSTEP_Out(1741) <= \<const0>\;
  LOCKSTEP_Out(1742) <= \<const0>\;
  LOCKSTEP_Out(1743) <= \<const0>\;
  LOCKSTEP_Out(1744) <= \<const0>\;
  LOCKSTEP_Out(1745) <= \<const0>\;
  LOCKSTEP_Out(1746) <= \<const0>\;
  LOCKSTEP_Out(1747) <= \<const0>\;
  LOCKSTEP_Out(1748) <= \<const0>\;
  LOCKSTEP_Out(1749) <= \<const0>\;
  LOCKSTEP_Out(1750) <= \<const0>\;
  LOCKSTEP_Out(1751) <= \<const0>\;
  LOCKSTEP_Out(1752) <= \<const0>\;
  LOCKSTEP_Out(1753) <= \<const0>\;
  LOCKSTEP_Out(1754) <= \<const0>\;
  LOCKSTEP_Out(1755) <= \<const0>\;
  LOCKSTEP_Out(1756) <= \<const0>\;
  LOCKSTEP_Out(1757) <= \<const0>\;
  LOCKSTEP_Out(1758) <= \<const0>\;
  LOCKSTEP_Out(1759) <= \<const0>\;
  LOCKSTEP_Out(1760) <= \<const0>\;
  LOCKSTEP_Out(1761) <= \<const0>\;
  LOCKSTEP_Out(1762) <= \<const0>\;
  LOCKSTEP_Out(1763) <= \<const0>\;
  LOCKSTEP_Out(1764) <= \<const0>\;
  LOCKSTEP_Out(1765) <= \<const0>\;
  LOCKSTEP_Out(1766) <= \<const0>\;
  LOCKSTEP_Out(1767) <= \<const0>\;
  LOCKSTEP_Out(1768) <= \<const0>\;
  LOCKSTEP_Out(1769) <= \<const0>\;
  LOCKSTEP_Out(1770) <= \<const0>\;
  LOCKSTEP_Out(1771) <= \<const0>\;
  LOCKSTEP_Out(1772) <= \<const0>\;
  LOCKSTEP_Out(1773) <= \<const0>\;
  LOCKSTEP_Out(1774) <= \<const0>\;
  LOCKSTEP_Out(1775) <= \<const0>\;
  LOCKSTEP_Out(1776) <= \<const0>\;
  LOCKSTEP_Out(1777) <= \<const0>\;
  LOCKSTEP_Out(1778) <= \<const0>\;
  LOCKSTEP_Out(1779) <= \<const0>\;
  LOCKSTEP_Out(1780) <= \<const0>\;
  LOCKSTEP_Out(1781) <= \<const0>\;
  LOCKSTEP_Out(1782) <= \<const0>\;
  LOCKSTEP_Out(1783) <= \<const0>\;
  LOCKSTEP_Out(1784) <= \<const0>\;
  LOCKSTEP_Out(1785) <= \<const0>\;
  LOCKSTEP_Out(1786) <= \<const0>\;
  LOCKSTEP_Out(1787) <= \<const0>\;
  LOCKSTEP_Out(1788) <= \<const0>\;
  LOCKSTEP_Out(1789) <= \<const0>\;
  LOCKSTEP_Out(1790) <= \<const0>\;
  LOCKSTEP_Out(1791) <= \<const0>\;
  LOCKSTEP_Out(1792) <= \<const0>\;
  LOCKSTEP_Out(1793) <= \<const0>\;
  LOCKSTEP_Out(1794) <= \<const0>\;
  LOCKSTEP_Out(1795) <= \<const0>\;
  LOCKSTEP_Out(1796) <= \<const0>\;
  LOCKSTEP_Out(1797) <= \<const0>\;
  LOCKSTEP_Out(1798) <= \<const0>\;
  LOCKSTEP_Out(1799) <= \<const0>\;
  LOCKSTEP_Out(1800) <= \<const0>\;
  LOCKSTEP_Out(1801) <= \<const0>\;
  LOCKSTEP_Out(1802) <= \<const0>\;
  LOCKSTEP_Out(1803) <= \<const0>\;
  LOCKSTEP_Out(1804) <= \<const0>\;
  LOCKSTEP_Out(1805) <= \<const0>\;
  LOCKSTEP_Out(1806) <= \<const0>\;
  LOCKSTEP_Out(1807) <= \<const0>\;
  LOCKSTEP_Out(1808) <= \<const0>\;
  LOCKSTEP_Out(1809) <= \<const0>\;
  LOCKSTEP_Out(1810) <= \<const0>\;
  LOCKSTEP_Out(1811) <= \<const0>\;
  LOCKSTEP_Out(1812) <= \<const0>\;
  LOCKSTEP_Out(1813) <= \<const0>\;
  LOCKSTEP_Out(1814) <= \<const0>\;
  LOCKSTEP_Out(1815) <= \<const0>\;
  LOCKSTEP_Out(1816) <= \<const0>\;
  LOCKSTEP_Out(1817) <= \<const0>\;
  LOCKSTEP_Out(1818) <= \<const0>\;
  LOCKSTEP_Out(1819) <= \<const0>\;
  LOCKSTEP_Out(1820) <= \<const0>\;
  LOCKSTEP_Out(1821) <= \<const0>\;
  LOCKSTEP_Out(1822) <= \<const0>\;
  LOCKSTEP_Out(1823) <= \<const0>\;
  LOCKSTEP_Out(1824) <= \<const0>\;
  LOCKSTEP_Out(1825) <= \<const0>\;
  LOCKSTEP_Out(1826) <= \<const0>\;
  LOCKSTEP_Out(1827) <= \<const0>\;
  LOCKSTEP_Out(1828) <= \<const0>\;
  LOCKSTEP_Out(1829) <= \<const0>\;
  LOCKSTEP_Out(1830) <= \<const0>\;
  LOCKSTEP_Out(1831) <= \<const0>\;
  LOCKSTEP_Out(1832) <= \<const0>\;
  LOCKSTEP_Out(1833) <= \<const0>\;
  LOCKSTEP_Out(1834) <= \<const0>\;
  LOCKSTEP_Out(1835) <= \<const0>\;
  LOCKSTEP_Out(1836) <= \<const0>\;
  LOCKSTEP_Out(1837) <= \<const0>\;
  LOCKSTEP_Out(1838) <= \<const0>\;
  LOCKSTEP_Out(1839) <= \<const0>\;
  LOCKSTEP_Out(1840) <= \<const0>\;
  LOCKSTEP_Out(1841) <= \<const0>\;
  LOCKSTEP_Out(1842) <= \<const0>\;
  LOCKSTEP_Out(1843) <= \<const0>\;
  LOCKSTEP_Out(1844) <= \<const0>\;
  LOCKSTEP_Out(1845) <= \<const0>\;
  LOCKSTEP_Out(1846) <= \<const0>\;
  LOCKSTEP_Out(1847) <= \<const0>\;
  LOCKSTEP_Out(1848) <= \<const0>\;
  LOCKSTEP_Out(1849) <= \<const0>\;
  LOCKSTEP_Out(1850) <= \<const0>\;
  LOCKSTEP_Out(1851) <= \<const0>\;
  LOCKSTEP_Out(1852) <= \<const0>\;
  LOCKSTEP_Out(1853) <= \<const0>\;
  LOCKSTEP_Out(1854) <= \<const0>\;
  LOCKSTEP_Out(1855) <= \<const0>\;
  LOCKSTEP_Out(1856) <= \<const0>\;
  LOCKSTEP_Out(1857) <= \<const0>\;
  LOCKSTEP_Out(1858) <= \<const0>\;
  LOCKSTEP_Out(1859) <= \<const0>\;
  LOCKSTEP_Out(1860) <= \<const0>\;
  LOCKSTEP_Out(1861) <= \<const0>\;
  LOCKSTEP_Out(1862) <= \<const0>\;
  LOCKSTEP_Out(1863) <= \<const0>\;
  LOCKSTEP_Out(1864) <= \<const0>\;
  LOCKSTEP_Out(1865) <= \<const0>\;
  LOCKSTEP_Out(1866) <= \<const0>\;
  LOCKSTEP_Out(1867) <= \<const0>\;
  LOCKSTEP_Out(1868) <= \<const0>\;
  LOCKSTEP_Out(1869) <= \<const0>\;
  LOCKSTEP_Out(1870) <= \<const0>\;
  LOCKSTEP_Out(1871) <= \<const0>\;
  LOCKSTEP_Out(1872) <= \<const0>\;
  LOCKSTEP_Out(1873) <= \<const0>\;
  LOCKSTEP_Out(1874) <= \<const0>\;
  LOCKSTEP_Out(1875) <= \<const0>\;
  LOCKSTEP_Out(1876) <= \<const0>\;
  LOCKSTEP_Out(1877) <= \<const0>\;
  LOCKSTEP_Out(1878) <= \<const0>\;
  LOCKSTEP_Out(1879) <= \<const0>\;
  LOCKSTEP_Out(1880) <= \<const0>\;
  LOCKSTEP_Out(1881) <= \<const0>\;
  LOCKSTEP_Out(1882) <= \<const0>\;
  LOCKSTEP_Out(1883) <= \<const0>\;
  LOCKSTEP_Out(1884) <= \<const0>\;
  LOCKSTEP_Out(1885) <= \<const0>\;
  LOCKSTEP_Out(1886) <= \<const0>\;
  LOCKSTEP_Out(1887) <= \<const0>\;
  LOCKSTEP_Out(1888) <= \<const0>\;
  LOCKSTEP_Out(1889) <= \<const0>\;
  LOCKSTEP_Out(1890) <= \<const0>\;
  LOCKSTEP_Out(1891) <= \<const0>\;
  LOCKSTEP_Out(1892) <= \<const0>\;
  LOCKSTEP_Out(1893) <= \<const0>\;
  LOCKSTEP_Out(1894) <= \<const0>\;
  LOCKSTEP_Out(1895) <= \<const0>\;
  LOCKSTEP_Out(1896) <= \<const0>\;
  LOCKSTEP_Out(1897) <= \<const0>\;
  LOCKSTEP_Out(1898) <= \<const0>\;
  LOCKSTEP_Out(1899) <= \<const0>\;
  LOCKSTEP_Out(1900) <= \<const0>\;
  LOCKSTEP_Out(1901) <= \<const0>\;
  LOCKSTEP_Out(1902) <= \<const0>\;
  LOCKSTEP_Out(1903) <= \<const0>\;
  LOCKSTEP_Out(1904) <= \<const0>\;
  LOCKSTEP_Out(1905) <= \<const0>\;
  LOCKSTEP_Out(1906) <= \<const0>\;
  LOCKSTEP_Out(1907) <= \<const0>\;
  LOCKSTEP_Out(1908) <= \<const0>\;
  LOCKSTEP_Out(1909) <= \<const0>\;
  LOCKSTEP_Out(1910) <= \<const0>\;
  LOCKSTEP_Out(1911) <= \<const0>\;
  LOCKSTEP_Out(1912) <= \<const0>\;
  LOCKSTEP_Out(1913) <= \<const0>\;
  LOCKSTEP_Out(1914) <= \<const0>\;
  LOCKSTEP_Out(1915) <= \<const0>\;
  LOCKSTEP_Out(1916) <= \<const0>\;
  LOCKSTEP_Out(1917) <= \<const0>\;
  LOCKSTEP_Out(1918) <= \<const0>\;
  LOCKSTEP_Out(1919) <= \<const0>\;
  LOCKSTEP_Out(1920) <= \<const0>\;
  LOCKSTEP_Out(1921) <= \<const0>\;
  LOCKSTEP_Out(1922) <= \<const0>\;
  LOCKSTEP_Out(1923) <= \<const0>\;
  LOCKSTEP_Out(1924) <= \<const0>\;
  LOCKSTEP_Out(1925) <= \<const0>\;
  LOCKSTEP_Out(1926) <= \<const0>\;
  LOCKSTEP_Out(1927) <= \<const0>\;
  LOCKSTEP_Out(1928) <= \<const0>\;
  LOCKSTEP_Out(1929) <= \<const0>\;
  LOCKSTEP_Out(1930) <= \<const0>\;
  LOCKSTEP_Out(1931) <= \<const0>\;
  LOCKSTEP_Out(1932) <= \<const0>\;
  LOCKSTEP_Out(1933) <= \<const0>\;
  LOCKSTEP_Out(1934) <= \<const0>\;
  LOCKSTEP_Out(1935) <= \<const0>\;
  LOCKSTEP_Out(1936) <= \<const0>\;
  LOCKSTEP_Out(1937) <= \<const0>\;
  LOCKSTEP_Out(1938) <= \<const0>\;
  LOCKSTEP_Out(1939) <= \<const0>\;
  LOCKSTEP_Out(1940) <= \<const0>\;
  LOCKSTEP_Out(1941) <= \<const0>\;
  LOCKSTEP_Out(1942) <= \<const0>\;
  LOCKSTEP_Out(1943) <= \<const0>\;
  LOCKSTEP_Out(1944) <= \<const0>\;
  LOCKSTEP_Out(1945) <= \<const0>\;
  LOCKSTEP_Out(1946) <= \<const0>\;
  LOCKSTEP_Out(1947) <= \<const0>\;
  LOCKSTEP_Out(1948) <= \<const0>\;
  LOCKSTEP_Out(1949) <= \<const0>\;
  LOCKSTEP_Out(1950) <= \<const0>\;
  LOCKSTEP_Out(1951) <= \<const0>\;
  LOCKSTEP_Out(1952) <= \<const0>\;
  LOCKSTEP_Out(1953) <= \<const0>\;
  LOCKSTEP_Out(1954) <= \<const0>\;
  LOCKSTEP_Out(1955) <= \<const0>\;
  LOCKSTEP_Out(1956) <= \<const0>\;
  LOCKSTEP_Out(1957) <= \<const0>\;
  LOCKSTEP_Out(1958) <= \<const0>\;
  LOCKSTEP_Out(1959) <= \<const0>\;
  LOCKSTEP_Out(1960) <= \<const0>\;
  LOCKSTEP_Out(1961) <= \<const0>\;
  LOCKSTEP_Out(1962) <= \<const0>\;
  LOCKSTEP_Out(1963) <= \<const0>\;
  LOCKSTEP_Out(1964) <= \<const0>\;
  LOCKSTEP_Out(1965) <= \<const0>\;
  LOCKSTEP_Out(1966) <= \<const0>\;
  LOCKSTEP_Out(1967) <= \<const0>\;
  LOCKSTEP_Out(1968) <= \<const0>\;
  LOCKSTEP_Out(1969) <= \<const0>\;
  LOCKSTEP_Out(1970) <= \<const0>\;
  LOCKSTEP_Out(1971) <= \<const0>\;
  LOCKSTEP_Out(1972) <= \<const0>\;
  LOCKSTEP_Out(1973) <= \<const0>\;
  LOCKSTEP_Out(1974) <= \<const0>\;
  LOCKSTEP_Out(1975) <= \<const0>\;
  LOCKSTEP_Out(1976) <= \<const0>\;
  LOCKSTEP_Out(1977) <= \<const0>\;
  LOCKSTEP_Out(1978) <= \<const0>\;
  LOCKSTEP_Out(1979) <= \<const0>\;
  LOCKSTEP_Out(1980) <= \<const0>\;
  LOCKSTEP_Out(1981) <= \<const0>\;
  LOCKSTEP_Out(1982) <= \<const0>\;
  LOCKSTEP_Out(1983) <= \<const0>\;
  LOCKSTEP_Out(1984) <= \<const0>\;
  LOCKSTEP_Out(1985) <= \<const0>\;
  LOCKSTEP_Out(1986) <= \<const0>\;
  LOCKSTEP_Out(1987) <= \<const0>\;
  LOCKSTEP_Out(1988) <= \<const0>\;
  LOCKSTEP_Out(1989) <= \<const0>\;
  LOCKSTEP_Out(1990) <= \<const0>\;
  LOCKSTEP_Out(1991) <= \<const0>\;
  LOCKSTEP_Out(1992) <= \<const0>\;
  LOCKSTEP_Out(1993) <= \<const0>\;
  LOCKSTEP_Out(1994) <= \<const0>\;
  LOCKSTEP_Out(1995) <= \<const0>\;
  LOCKSTEP_Out(1996) <= \<const0>\;
  LOCKSTEP_Out(1997) <= \<const0>\;
  LOCKSTEP_Out(1998) <= \<const0>\;
  LOCKSTEP_Out(1999) <= \<const0>\;
  LOCKSTEP_Out(2000) <= \<const0>\;
  LOCKSTEP_Out(2001) <= \<const0>\;
  LOCKSTEP_Out(2002) <= \<const0>\;
  LOCKSTEP_Out(2003) <= \<const0>\;
  LOCKSTEP_Out(2004) <= \<const0>\;
  LOCKSTEP_Out(2005) <= \<const0>\;
  LOCKSTEP_Out(2006) <= \<const0>\;
  LOCKSTEP_Out(2007) <= \<const0>\;
  LOCKSTEP_Out(2008) <= \<const0>\;
  LOCKSTEP_Out(2009) <= \<const0>\;
  LOCKSTEP_Out(2010) <= \<const0>\;
  LOCKSTEP_Out(2011) <= \<const0>\;
  LOCKSTEP_Out(2012) <= \<const0>\;
  LOCKSTEP_Out(2013) <= \<const0>\;
  LOCKSTEP_Out(2014) <= \<const0>\;
  LOCKSTEP_Out(2015) <= \<const0>\;
  LOCKSTEP_Out(2016) <= \<const0>\;
  LOCKSTEP_Out(2017) <= \<const0>\;
  LOCKSTEP_Out(2018) <= \<const0>\;
  LOCKSTEP_Out(2019) <= \<const0>\;
  LOCKSTEP_Out(2020) <= \<const0>\;
  LOCKSTEP_Out(2021) <= \<const0>\;
  LOCKSTEP_Out(2022) <= \<const0>\;
  LOCKSTEP_Out(2023) <= \<const0>\;
  LOCKSTEP_Out(2024) <= \<const0>\;
  LOCKSTEP_Out(2025) <= \<const0>\;
  LOCKSTEP_Out(2026) <= \<const0>\;
  LOCKSTEP_Out(2027) <= \<const0>\;
  LOCKSTEP_Out(2028) <= \<const0>\;
  LOCKSTEP_Out(2029) <= \<const0>\;
  LOCKSTEP_Out(2030) <= \<const0>\;
  LOCKSTEP_Out(2031) <= \<const0>\;
  LOCKSTEP_Out(2032) <= \<const0>\;
  LOCKSTEP_Out(2033) <= \<const0>\;
  LOCKSTEP_Out(2034) <= \<const0>\;
  LOCKSTEP_Out(2035) <= \<const0>\;
  LOCKSTEP_Out(2036) <= \<const0>\;
  LOCKSTEP_Out(2037) <= \<const0>\;
  LOCKSTEP_Out(2038) <= \<const0>\;
  LOCKSTEP_Out(2039) <= \<const0>\;
  LOCKSTEP_Out(2040) <= \<const0>\;
  LOCKSTEP_Out(2041) <= \<const0>\;
  LOCKSTEP_Out(2042) <= \<const0>\;
  LOCKSTEP_Out(2043) <= \<const0>\;
  LOCKSTEP_Out(2044) <= \<const0>\;
  LOCKSTEP_Out(2045) <= \<const0>\;
  LOCKSTEP_Out(2046) <= \<const0>\;
  LOCKSTEP_Out(2047) <= \<const0>\;
  LOCKSTEP_Out(2048) <= \<const0>\;
  LOCKSTEP_Out(2049) <= \<const0>\;
  LOCKSTEP_Out(2050) <= \<const0>\;
  LOCKSTEP_Out(2051) <= \<const0>\;
  LOCKSTEP_Out(2052) <= \<const0>\;
  LOCKSTEP_Out(2053) <= \<const0>\;
  LOCKSTEP_Out(2054) <= \<const0>\;
  LOCKSTEP_Out(2055) <= \<const0>\;
  LOCKSTEP_Out(2056) <= \<const0>\;
  LOCKSTEP_Out(2057) <= \<const0>\;
  LOCKSTEP_Out(2058) <= \<const0>\;
  LOCKSTEP_Out(2059) <= \<const0>\;
  LOCKSTEP_Out(2060) <= \<const0>\;
  LOCKSTEP_Out(2061) <= \<const0>\;
  LOCKSTEP_Out(2062) <= \<const0>\;
  LOCKSTEP_Out(2063) <= \<const0>\;
  LOCKSTEP_Out(2064) <= \<const0>\;
  LOCKSTEP_Out(2065) <= \<const0>\;
  LOCKSTEP_Out(2066) <= \<const0>\;
  LOCKSTEP_Out(2067) <= \<const0>\;
  LOCKSTEP_Out(2068) <= \<const0>\;
  LOCKSTEP_Out(2069) <= \<const0>\;
  LOCKSTEP_Out(2070) <= \<const0>\;
  LOCKSTEP_Out(2071) <= \<const0>\;
  LOCKSTEP_Out(2072) <= \<const0>\;
  LOCKSTEP_Out(2073) <= \<const0>\;
  LOCKSTEP_Out(2074) <= \<const0>\;
  LOCKSTEP_Out(2075) <= \<const0>\;
  LOCKSTEP_Out(2076) <= \<const0>\;
  LOCKSTEP_Out(2077) <= \<const0>\;
  LOCKSTEP_Out(2078) <= \<const0>\;
  LOCKSTEP_Out(2079) <= \<const0>\;
  LOCKSTEP_Out(2080) <= \<const0>\;
  LOCKSTEP_Out(2081) <= \<const0>\;
  LOCKSTEP_Out(2082) <= \<const0>\;
  LOCKSTEP_Out(2083) <= \<const0>\;
  LOCKSTEP_Out(2084) <= \<const0>\;
  LOCKSTEP_Out(2085) <= \<const0>\;
  LOCKSTEP_Out(2086) <= \<const0>\;
  LOCKSTEP_Out(2087) <= \<const0>\;
  LOCKSTEP_Out(2088) <= \<const0>\;
  LOCKSTEP_Out(2089) <= \<const0>\;
  LOCKSTEP_Out(2090) <= \<const0>\;
  LOCKSTEP_Out(2091) <= \<const0>\;
  LOCKSTEP_Out(2092) <= \<const0>\;
  LOCKSTEP_Out(2093) <= \<const0>\;
  LOCKSTEP_Out(2094) <= \<const0>\;
  LOCKSTEP_Out(2095) <= \<const0>\;
  LOCKSTEP_Out(2096) <= \<const0>\;
  LOCKSTEP_Out(2097) <= \<const0>\;
  LOCKSTEP_Out(2098) <= \<const0>\;
  LOCKSTEP_Out(2099) <= \<const0>\;
  LOCKSTEP_Out(2100) <= \<const0>\;
  LOCKSTEP_Out(2101) <= \<const0>\;
  LOCKSTEP_Out(2102) <= \<const0>\;
  LOCKSTEP_Out(2103) <= \<const0>\;
  LOCKSTEP_Out(2104) <= \<const0>\;
  LOCKSTEP_Out(2105) <= \<const0>\;
  LOCKSTEP_Out(2106) <= \<const0>\;
  LOCKSTEP_Out(2107) <= \<const0>\;
  LOCKSTEP_Out(2108) <= \<const0>\;
  LOCKSTEP_Out(2109) <= \<const0>\;
  LOCKSTEP_Out(2110) <= \<const0>\;
  LOCKSTEP_Out(2111) <= \<const0>\;
  LOCKSTEP_Out(2112) <= \<const0>\;
  LOCKSTEP_Out(2113) <= \<const0>\;
  LOCKSTEP_Out(2114) <= \<const0>\;
  LOCKSTEP_Out(2115) <= \<const0>\;
  LOCKSTEP_Out(2116) <= \<const0>\;
  LOCKSTEP_Out(2117) <= \<const0>\;
  LOCKSTEP_Out(2118) <= \<const0>\;
  LOCKSTEP_Out(2119) <= \<const0>\;
  LOCKSTEP_Out(2120) <= \<const0>\;
  LOCKSTEP_Out(2121) <= \<const0>\;
  LOCKSTEP_Out(2122) <= \<const0>\;
  LOCKSTEP_Out(2123) <= \<const0>\;
  LOCKSTEP_Out(2124) <= \<const0>\;
  LOCKSTEP_Out(2125) <= \<const0>\;
  LOCKSTEP_Out(2126) <= \<const0>\;
  LOCKSTEP_Out(2127) <= \<const0>\;
  LOCKSTEP_Out(2128) <= \<const0>\;
  LOCKSTEP_Out(2129) <= \<const0>\;
  LOCKSTEP_Out(2130) <= \<const0>\;
  LOCKSTEP_Out(2131) <= \<const0>\;
  LOCKSTEP_Out(2132) <= \<const0>\;
  LOCKSTEP_Out(2133) <= \<const0>\;
  LOCKSTEP_Out(2134) <= \<const0>\;
  LOCKSTEP_Out(2135) <= \<const0>\;
  LOCKSTEP_Out(2136) <= \<const0>\;
  LOCKSTEP_Out(2137) <= \<const0>\;
  LOCKSTEP_Out(2138) <= \<const0>\;
  LOCKSTEP_Out(2139) <= \<const0>\;
  LOCKSTEP_Out(2140) <= \<const0>\;
  LOCKSTEP_Out(2141) <= \<const0>\;
  LOCKSTEP_Out(2142) <= \<const0>\;
  LOCKSTEP_Out(2143) <= \<const0>\;
  LOCKSTEP_Out(2144) <= \<const0>\;
  LOCKSTEP_Out(2145) <= \<const0>\;
  LOCKSTEP_Out(2146) <= \<const0>\;
  LOCKSTEP_Out(2147) <= \<const0>\;
  LOCKSTEP_Out(2148) <= \<const0>\;
  LOCKSTEP_Out(2149) <= \<const0>\;
  LOCKSTEP_Out(2150) <= \<const0>\;
  LOCKSTEP_Out(2151) <= \<const0>\;
  LOCKSTEP_Out(2152) <= \<const0>\;
  LOCKSTEP_Out(2153) <= \<const0>\;
  LOCKSTEP_Out(2154) <= \<const0>\;
  LOCKSTEP_Out(2155) <= \<const0>\;
  LOCKSTEP_Out(2156) <= \<const0>\;
  LOCKSTEP_Out(2157) <= \<const0>\;
  LOCKSTEP_Out(2158) <= \<const0>\;
  LOCKSTEP_Out(2159) <= \<const0>\;
  LOCKSTEP_Out(2160) <= \<const0>\;
  LOCKSTEP_Out(2161) <= \<const0>\;
  LOCKSTEP_Out(2162) <= \<const0>\;
  LOCKSTEP_Out(2163) <= \<const0>\;
  LOCKSTEP_Out(2164) <= \<const0>\;
  LOCKSTEP_Out(2165) <= \<const0>\;
  LOCKSTEP_Out(2166) <= \<const0>\;
  LOCKSTEP_Out(2167) <= \<const0>\;
  LOCKSTEP_Out(2168) <= \<const0>\;
  LOCKSTEP_Out(2169) <= \<const0>\;
  LOCKSTEP_Out(2170) <= \<const0>\;
  LOCKSTEP_Out(2171) <= \<const0>\;
  LOCKSTEP_Out(2172) <= \<const0>\;
  LOCKSTEP_Out(2173) <= \<const0>\;
  LOCKSTEP_Out(2174) <= \<const0>\;
  LOCKSTEP_Out(2175) <= \<const0>\;
  LOCKSTEP_Out(2176) <= \<const0>\;
  LOCKSTEP_Out(2177) <= \<const0>\;
  LOCKSTEP_Out(2178) <= \<const0>\;
  LOCKSTEP_Out(2179) <= \<const0>\;
  LOCKSTEP_Out(2180) <= \<const0>\;
  LOCKSTEP_Out(2181) <= \<const0>\;
  LOCKSTEP_Out(2182) <= \<const0>\;
  LOCKSTEP_Out(2183) <= \<const0>\;
  LOCKSTEP_Out(2184) <= \<const0>\;
  LOCKSTEP_Out(2185) <= \<const0>\;
  LOCKSTEP_Out(2186) <= \<const0>\;
  LOCKSTEP_Out(2187) <= \<const0>\;
  LOCKSTEP_Out(2188) <= \<const0>\;
  LOCKSTEP_Out(2189) <= \<const0>\;
  LOCKSTEP_Out(2190) <= \<const0>\;
  LOCKSTEP_Out(2191) <= \<const0>\;
  LOCKSTEP_Out(2192) <= \<const0>\;
  LOCKSTEP_Out(2193) <= \<const0>\;
  LOCKSTEP_Out(2194) <= \<const0>\;
  LOCKSTEP_Out(2195) <= \<const0>\;
  LOCKSTEP_Out(2196) <= \<const0>\;
  LOCKSTEP_Out(2197) <= \<const0>\;
  LOCKSTEP_Out(2198) <= \<const0>\;
  LOCKSTEP_Out(2199) <= \<const0>\;
  LOCKSTEP_Out(2200) <= \<const0>\;
  LOCKSTEP_Out(2201) <= \<const0>\;
  LOCKSTEP_Out(2202) <= \<const0>\;
  LOCKSTEP_Out(2203) <= \<const0>\;
  LOCKSTEP_Out(2204) <= \<const0>\;
  LOCKSTEP_Out(2205) <= \<const0>\;
  LOCKSTEP_Out(2206) <= \<const0>\;
  LOCKSTEP_Out(2207) <= \<const0>\;
  LOCKSTEP_Out(2208) <= \<const0>\;
  LOCKSTEP_Out(2209) <= \<const0>\;
  LOCKSTEP_Out(2210) <= \<const0>\;
  LOCKSTEP_Out(2211) <= \<const0>\;
  LOCKSTEP_Out(2212) <= \<const0>\;
  LOCKSTEP_Out(2213) <= \<const0>\;
  LOCKSTEP_Out(2214) <= \<const0>\;
  LOCKSTEP_Out(2215) <= \<const0>\;
  LOCKSTEP_Out(2216) <= \<const0>\;
  LOCKSTEP_Out(2217) <= \<const0>\;
  LOCKSTEP_Out(2218) <= \<const0>\;
  LOCKSTEP_Out(2219) <= \<const0>\;
  LOCKSTEP_Out(2220) <= \<const0>\;
  LOCKSTEP_Out(2221) <= \<const0>\;
  LOCKSTEP_Out(2222) <= \<const0>\;
  LOCKSTEP_Out(2223) <= \<const0>\;
  LOCKSTEP_Out(2224) <= \<const0>\;
  LOCKSTEP_Out(2225) <= \<const0>\;
  LOCKSTEP_Out(2226) <= \<const0>\;
  LOCKSTEP_Out(2227) <= \<const0>\;
  LOCKSTEP_Out(2228) <= \<const0>\;
  LOCKSTEP_Out(2229) <= \<const0>\;
  LOCKSTEP_Out(2230) <= \<const0>\;
  LOCKSTEP_Out(2231) <= \<const0>\;
  LOCKSTEP_Out(2232) <= \<const0>\;
  LOCKSTEP_Out(2233) <= \<const0>\;
  LOCKSTEP_Out(2234) <= \<const0>\;
  LOCKSTEP_Out(2235) <= \<const0>\;
  LOCKSTEP_Out(2236) <= \<const0>\;
  LOCKSTEP_Out(2237) <= \<const0>\;
  LOCKSTEP_Out(2238) <= \<const0>\;
  LOCKSTEP_Out(2239) <= \<const0>\;
  LOCKSTEP_Out(2240) <= \<const0>\;
  LOCKSTEP_Out(2241) <= \<const0>\;
  LOCKSTEP_Out(2242) <= \<const0>\;
  LOCKSTEP_Out(2243) <= \<const0>\;
  LOCKSTEP_Out(2244) <= \<const0>\;
  LOCKSTEP_Out(2245) <= \<const0>\;
  LOCKSTEP_Out(2246) <= \<const0>\;
  LOCKSTEP_Out(2247) <= \<const0>\;
  LOCKSTEP_Out(2248) <= \<const0>\;
  LOCKSTEP_Out(2249) <= \<const0>\;
  LOCKSTEP_Out(2250) <= \<const0>\;
  LOCKSTEP_Out(2251) <= \<const0>\;
  LOCKSTEP_Out(2252) <= \<const0>\;
  LOCKSTEP_Out(2253) <= \<const0>\;
  LOCKSTEP_Out(2254) <= \<const0>\;
  LOCKSTEP_Out(2255) <= \<const0>\;
  LOCKSTEP_Out(2256) <= \<const0>\;
  LOCKSTEP_Out(2257) <= \<const0>\;
  LOCKSTEP_Out(2258) <= \<const0>\;
  LOCKSTEP_Out(2259) <= \<const0>\;
  LOCKSTEP_Out(2260) <= \<const0>\;
  LOCKSTEP_Out(2261) <= \<const0>\;
  LOCKSTEP_Out(2262) <= \<const0>\;
  LOCKSTEP_Out(2263) <= \<const0>\;
  LOCKSTEP_Out(2264) <= \<const0>\;
  LOCKSTEP_Out(2265) <= \<const0>\;
  LOCKSTEP_Out(2266) <= \<const0>\;
  LOCKSTEP_Out(2267) <= \<const0>\;
  LOCKSTEP_Out(2268) <= \<const0>\;
  LOCKSTEP_Out(2269) <= \<const0>\;
  LOCKSTEP_Out(2270) <= \<const0>\;
  LOCKSTEP_Out(2271) <= \<const0>\;
  LOCKSTEP_Out(2272) <= \<const0>\;
  LOCKSTEP_Out(2273) <= \<const0>\;
  LOCKSTEP_Out(2274) <= \<const0>\;
  LOCKSTEP_Out(2275) <= \<const0>\;
  LOCKSTEP_Out(2276) <= \<const0>\;
  LOCKSTEP_Out(2277) <= \<const0>\;
  LOCKSTEP_Out(2278) <= \<const0>\;
  LOCKSTEP_Out(2279) <= \<const0>\;
  LOCKSTEP_Out(2280) <= \<const0>\;
  LOCKSTEP_Out(2281) <= \<const0>\;
  LOCKSTEP_Out(2282) <= \<const0>\;
  LOCKSTEP_Out(2283) <= \<const0>\;
  LOCKSTEP_Out(2284) <= \<const0>\;
  LOCKSTEP_Out(2285) <= \<const0>\;
  LOCKSTEP_Out(2286) <= \<const0>\;
  LOCKSTEP_Out(2287) <= \<const0>\;
  LOCKSTEP_Out(2288) <= \<const0>\;
  LOCKSTEP_Out(2289) <= \<const0>\;
  LOCKSTEP_Out(2290) <= \<const0>\;
  LOCKSTEP_Out(2291) <= \<const0>\;
  LOCKSTEP_Out(2292) <= \<const0>\;
  LOCKSTEP_Out(2293) <= \<const0>\;
  LOCKSTEP_Out(2294) <= \<const0>\;
  LOCKSTEP_Out(2295) <= \<const0>\;
  LOCKSTEP_Out(2296) <= \<const0>\;
  LOCKSTEP_Out(2297) <= \<const0>\;
  LOCKSTEP_Out(2298) <= \<const0>\;
  LOCKSTEP_Out(2299) <= \<const0>\;
  LOCKSTEP_Out(2300) <= \<const0>\;
  LOCKSTEP_Out(2301) <= \<const0>\;
  LOCKSTEP_Out(2302) <= \<const0>\;
  LOCKSTEP_Out(2303) <= \<const0>\;
  LOCKSTEP_Out(2304) <= \<const0>\;
  LOCKSTEP_Out(2305) <= \<const0>\;
  LOCKSTEP_Out(2306) <= \<const0>\;
  LOCKSTEP_Out(2307) <= \<const0>\;
  LOCKSTEP_Out(2308) <= \<const0>\;
  LOCKSTEP_Out(2309) <= \<const0>\;
  LOCKSTEP_Out(2310) <= \<const0>\;
  LOCKSTEP_Out(2311) <= \<const0>\;
  LOCKSTEP_Out(2312) <= \<const0>\;
  LOCKSTEP_Out(2313) <= \<const0>\;
  LOCKSTEP_Out(2314) <= \<const0>\;
  LOCKSTEP_Out(2315) <= \<const0>\;
  LOCKSTEP_Out(2316) <= \<const0>\;
  LOCKSTEP_Out(2317) <= \<const0>\;
  LOCKSTEP_Out(2318) <= \<const0>\;
  LOCKSTEP_Out(2319) <= \<const0>\;
  LOCKSTEP_Out(2320) <= \<const0>\;
  LOCKSTEP_Out(2321) <= \<const0>\;
  LOCKSTEP_Out(2322) <= \<const0>\;
  LOCKSTEP_Out(2323) <= \<const0>\;
  LOCKSTEP_Out(2324) <= \<const0>\;
  LOCKSTEP_Out(2325) <= \<const0>\;
  LOCKSTEP_Out(2326) <= \<const0>\;
  LOCKSTEP_Out(2327) <= \<const0>\;
  LOCKSTEP_Out(2328) <= \<const0>\;
  LOCKSTEP_Out(2329) <= \<const0>\;
  LOCKSTEP_Out(2330) <= \<const0>\;
  LOCKSTEP_Out(2331) <= \<const0>\;
  LOCKSTEP_Out(2332) <= \<const0>\;
  LOCKSTEP_Out(2333) <= \<const0>\;
  LOCKSTEP_Out(2334) <= \<const0>\;
  LOCKSTEP_Out(2335) <= \<const0>\;
  LOCKSTEP_Out(2336) <= \<const0>\;
  LOCKSTEP_Out(2337) <= \<const0>\;
  LOCKSTEP_Out(2338) <= \<const0>\;
  LOCKSTEP_Out(2339) <= \<const0>\;
  LOCKSTEP_Out(2340) <= \<const0>\;
  LOCKSTEP_Out(2341) <= \<const0>\;
  LOCKSTEP_Out(2342) <= \<const0>\;
  LOCKSTEP_Out(2343) <= \<const0>\;
  LOCKSTEP_Out(2344) <= \<const0>\;
  LOCKSTEP_Out(2345) <= \<const0>\;
  LOCKSTEP_Out(2346) <= \<const0>\;
  LOCKSTEP_Out(2347) <= \<const0>\;
  LOCKSTEP_Out(2348) <= \<const0>\;
  LOCKSTEP_Out(2349) <= \<const0>\;
  LOCKSTEP_Out(2350) <= \<const0>\;
  LOCKSTEP_Out(2351) <= \<const0>\;
  LOCKSTEP_Out(2352) <= \<const0>\;
  LOCKSTEP_Out(2353) <= \<const0>\;
  LOCKSTEP_Out(2354) <= \<const0>\;
  LOCKSTEP_Out(2355) <= \<const0>\;
  LOCKSTEP_Out(2356) <= \<const0>\;
  LOCKSTEP_Out(2357) <= \<const0>\;
  LOCKSTEP_Out(2358) <= \<const0>\;
  LOCKSTEP_Out(2359) <= \<const0>\;
  LOCKSTEP_Out(2360) <= \<const0>\;
  LOCKSTEP_Out(2361) <= \<const0>\;
  LOCKSTEP_Out(2362) <= \<const0>\;
  LOCKSTEP_Out(2363) <= \<const0>\;
  LOCKSTEP_Out(2364) <= \<const0>\;
  LOCKSTEP_Out(2365) <= \<const0>\;
  LOCKSTEP_Out(2366) <= \<const0>\;
  LOCKSTEP_Out(2367) <= \<const0>\;
  LOCKSTEP_Out(2368) <= \<const0>\;
  LOCKSTEP_Out(2369) <= \<const0>\;
  LOCKSTEP_Out(2370) <= \<const0>\;
  LOCKSTEP_Out(2371) <= \<const0>\;
  LOCKSTEP_Out(2372) <= \<const0>\;
  LOCKSTEP_Out(2373) <= \<const0>\;
  LOCKSTEP_Out(2374) <= \<const0>\;
  LOCKSTEP_Out(2375) <= \<const0>\;
  LOCKSTEP_Out(2376) <= \<const0>\;
  LOCKSTEP_Out(2377) <= \<const0>\;
  LOCKSTEP_Out(2378) <= \<const0>\;
  LOCKSTEP_Out(2379) <= \<const0>\;
  LOCKSTEP_Out(2380) <= \<const0>\;
  LOCKSTEP_Out(2381) <= \<const0>\;
  LOCKSTEP_Out(2382) <= \<const0>\;
  LOCKSTEP_Out(2383) <= \<const0>\;
  LOCKSTEP_Out(2384) <= \<const0>\;
  LOCKSTEP_Out(2385) <= \<const0>\;
  LOCKSTEP_Out(2386) <= \<const0>\;
  LOCKSTEP_Out(2387) <= \<const0>\;
  LOCKSTEP_Out(2388) <= \<const0>\;
  LOCKSTEP_Out(2389) <= \<const0>\;
  LOCKSTEP_Out(2390) <= \<const0>\;
  LOCKSTEP_Out(2391) <= \<const0>\;
  LOCKSTEP_Out(2392) <= \<const0>\;
  LOCKSTEP_Out(2393) <= \<const0>\;
  LOCKSTEP_Out(2394) <= \<const0>\;
  LOCKSTEP_Out(2395) <= \<const0>\;
  LOCKSTEP_Out(2396) <= \<const0>\;
  LOCKSTEP_Out(2397) <= \<const0>\;
  LOCKSTEP_Out(2398) <= \<const0>\;
  LOCKSTEP_Out(2399) <= \<const0>\;
  LOCKSTEP_Out(2400) <= \<const0>\;
  LOCKSTEP_Out(2401) <= \<const0>\;
  LOCKSTEP_Out(2402) <= \<const0>\;
  LOCKSTEP_Out(2403) <= \<const0>\;
  LOCKSTEP_Out(2404) <= \<const0>\;
  LOCKSTEP_Out(2405) <= \<const0>\;
  LOCKSTEP_Out(2406) <= \<const0>\;
  LOCKSTEP_Out(2407) <= \<const0>\;
  LOCKSTEP_Out(2408) <= \<const0>\;
  LOCKSTEP_Out(2409) <= \<const0>\;
  LOCKSTEP_Out(2410) <= \<const0>\;
  LOCKSTEP_Out(2411) <= \<const0>\;
  LOCKSTEP_Out(2412) <= \<const0>\;
  LOCKSTEP_Out(2413) <= \<const0>\;
  LOCKSTEP_Out(2414) <= \<const0>\;
  LOCKSTEP_Out(2415) <= \<const0>\;
  LOCKSTEP_Out(2416) <= \<const0>\;
  LOCKSTEP_Out(2417) <= \<const0>\;
  LOCKSTEP_Out(2418) <= \<const0>\;
  LOCKSTEP_Out(2419) <= \<const0>\;
  LOCKSTEP_Out(2420) <= \<const0>\;
  LOCKSTEP_Out(2421) <= \<const0>\;
  LOCKSTEP_Out(2422) <= \<const0>\;
  LOCKSTEP_Out(2423) <= \<const0>\;
  LOCKSTEP_Out(2424) <= \<const0>\;
  LOCKSTEP_Out(2425) <= \<const0>\;
  LOCKSTEP_Out(2426) <= \<const0>\;
  LOCKSTEP_Out(2427) <= \<const0>\;
  LOCKSTEP_Out(2428) <= \<const0>\;
  LOCKSTEP_Out(2429) <= \<const0>\;
  LOCKSTEP_Out(2430) <= \<const0>\;
  LOCKSTEP_Out(2431) <= \<const0>\;
  LOCKSTEP_Out(2432) <= \<const0>\;
  LOCKSTEP_Out(2433) <= \<const0>\;
  LOCKSTEP_Out(2434) <= \<const0>\;
  LOCKSTEP_Out(2435) <= \<const0>\;
  LOCKSTEP_Out(2436) <= \<const0>\;
  LOCKSTEP_Out(2437) <= \<const0>\;
  LOCKSTEP_Out(2438) <= \<const0>\;
  LOCKSTEP_Out(2439) <= \<const0>\;
  LOCKSTEP_Out(2440) <= \<const0>\;
  LOCKSTEP_Out(2441) <= \<const0>\;
  LOCKSTEP_Out(2442) <= \<const0>\;
  LOCKSTEP_Out(2443) <= \<const0>\;
  LOCKSTEP_Out(2444) <= \<const0>\;
  LOCKSTEP_Out(2445) <= \<const0>\;
  LOCKSTEP_Out(2446) <= \<const0>\;
  LOCKSTEP_Out(2447) <= \<const0>\;
  LOCKSTEP_Out(2448) <= \<const0>\;
  LOCKSTEP_Out(2449) <= \<const0>\;
  LOCKSTEP_Out(2450) <= \<const0>\;
  LOCKSTEP_Out(2451) <= \<const0>\;
  LOCKSTEP_Out(2452) <= \<const0>\;
  LOCKSTEP_Out(2453) <= \<const0>\;
  LOCKSTEP_Out(2454) <= \<const0>\;
  LOCKSTEP_Out(2455) <= \<const0>\;
  LOCKSTEP_Out(2456) <= \<const0>\;
  LOCKSTEP_Out(2457) <= \<const0>\;
  LOCKSTEP_Out(2458) <= \<const0>\;
  LOCKSTEP_Out(2459) <= \<const0>\;
  LOCKSTEP_Out(2460) <= \<const0>\;
  LOCKSTEP_Out(2461) <= \<const0>\;
  LOCKSTEP_Out(2462) <= \<const0>\;
  LOCKSTEP_Out(2463) <= \<const0>\;
  LOCKSTEP_Out(2464) <= \<const0>\;
  LOCKSTEP_Out(2465) <= \<const0>\;
  LOCKSTEP_Out(2466) <= \<const0>\;
  LOCKSTEP_Out(2467) <= \<const0>\;
  LOCKSTEP_Out(2468) <= \<const0>\;
  LOCKSTEP_Out(2469) <= \<const0>\;
  LOCKSTEP_Out(2470) <= \<const0>\;
  LOCKSTEP_Out(2471) <= \<const0>\;
  LOCKSTEP_Out(2472) <= \<const0>\;
  LOCKSTEP_Out(2473) <= \<const0>\;
  LOCKSTEP_Out(2474) <= \<const0>\;
  LOCKSTEP_Out(2475) <= \<const0>\;
  LOCKSTEP_Out(2476) <= \<const0>\;
  LOCKSTEP_Out(2477) <= \<const0>\;
  LOCKSTEP_Out(2478) <= \<const0>\;
  LOCKSTEP_Out(2479) <= \<const0>\;
  LOCKSTEP_Out(2480) <= \<const0>\;
  LOCKSTEP_Out(2481) <= \<const0>\;
  LOCKSTEP_Out(2482) <= \<const0>\;
  LOCKSTEP_Out(2483) <= \<const0>\;
  LOCKSTEP_Out(2484) <= \<const0>\;
  LOCKSTEP_Out(2485) <= \<const0>\;
  LOCKSTEP_Out(2486) <= \<const0>\;
  LOCKSTEP_Out(2487) <= \<const0>\;
  LOCKSTEP_Out(2488) <= \<const0>\;
  LOCKSTEP_Out(2489) <= \<const0>\;
  LOCKSTEP_Out(2490) <= \<const0>\;
  LOCKSTEP_Out(2491) <= \<const0>\;
  LOCKSTEP_Out(2492) <= \<const0>\;
  LOCKSTEP_Out(2493) <= \<const0>\;
  LOCKSTEP_Out(2494) <= \<const0>\;
  LOCKSTEP_Out(2495) <= \<const0>\;
  LOCKSTEP_Out(2496) <= \<const0>\;
  LOCKSTEP_Out(2497) <= \<const0>\;
  LOCKSTEP_Out(2498) <= \<const0>\;
  LOCKSTEP_Out(2499) <= \<const0>\;
  LOCKSTEP_Out(2500) <= \<const0>\;
  LOCKSTEP_Out(2501) <= \<const0>\;
  LOCKSTEP_Out(2502) <= \<const0>\;
  LOCKSTEP_Out(2503) <= \<const0>\;
  LOCKSTEP_Out(2504) <= \<const0>\;
  LOCKSTEP_Out(2505) <= \<const0>\;
  LOCKSTEP_Out(2506) <= \<const0>\;
  LOCKSTEP_Out(2507) <= \<const0>\;
  LOCKSTEP_Out(2508) <= \<const0>\;
  LOCKSTEP_Out(2509) <= \<const0>\;
  LOCKSTEP_Out(2510) <= \<const0>\;
  LOCKSTEP_Out(2511) <= \<const0>\;
  LOCKSTEP_Out(2512) <= \<const0>\;
  LOCKSTEP_Out(2513) <= \<const0>\;
  LOCKSTEP_Out(2514) <= \<const0>\;
  LOCKSTEP_Out(2515) <= \<const0>\;
  LOCKSTEP_Out(2516) <= \<const0>\;
  LOCKSTEP_Out(2517) <= \<const0>\;
  LOCKSTEP_Out(2518) <= \<const0>\;
  LOCKSTEP_Out(2519) <= \<const0>\;
  LOCKSTEP_Out(2520) <= \<const0>\;
  LOCKSTEP_Out(2521) <= \<const0>\;
  LOCKSTEP_Out(2522) <= \<const0>\;
  LOCKSTEP_Out(2523) <= \<const0>\;
  LOCKSTEP_Out(2524) <= \<const0>\;
  LOCKSTEP_Out(2525) <= \<const0>\;
  LOCKSTEP_Out(2526) <= \<const0>\;
  LOCKSTEP_Out(2527) <= \<const0>\;
  LOCKSTEP_Out(2528) <= \<const0>\;
  LOCKSTEP_Out(2529) <= \<const0>\;
  LOCKSTEP_Out(2530) <= \<const0>\;
  LOCKSTEP_Out(2531) <= \<const0>\;
  LOCKSTEP_Out(2532) <= \<const0>\;
  LOCKSTEP_Out(2533) <= \<const0>\;
  LOCKSTEP_Out(2534) <= \<const0>\;
  LOCKSTEP_Out(2535) <= \<const0>\;
  LOCKSTEP_Out(2536) <= \<const0>\;
  LOCKSTEP_Out(2537) <= \<const0>\;
  LOCKSTEP_Out(2538) <= \<const0>\;
  LOCKSTEP_Out(2539) <= \<const0>\;
  LOCKSTEP_Out(2540) <= \<const0>\;
  LOCKSTEP_Out(2541) <= \<const0>\;
  LOCKSTEP_Out(2542) <= \<const0>\;
  LOCKSTEP_Out(2543) <= \<const0>\;
  LOCKSTEP_Out(2544) <= \<const0>\;
  LOCKSTEP_Out(2545) <= \<const0>\;
  LOCKSTEP_Out(2546) <= \<const0>\;
  LOCKSTEP_Out(2547) <= \<const0>\;
  LOCKSTEP_Out(2548) <= \<const0>\;
  LOCKSTEP_Out(2549) <= \<const0>\;
  LOCKSTEP_Out(2550) <= \<const0>\;
  LOCKSTEP_Out(2551) <= \<const0>\;
  LOCKSTEP_Out(2552) <= \<const0>\;
  LOCKSTEP_Out(2553) <= \<const0>\;
  LOCKSTEP_Out(2554) <= \<const0>\;
  LOCKSTEP_Out(2555) <= \<const0>\;
  LOCKSTEP_Out(2556) <= \<const0>\;
  LOCKSTEP_Out(2557) <= \<const0>\;
  LOCKSTEP_Out(2558) <= \<const0>\;
  LOCKSTEP_Out(2559) <= \<const0>\;
  LOCKSTEP_Out(2560) <= \<const0>\;
  LOCKSTEP_Out(2561) <= \<const0>\;
  LOCKSTEP_Out(2562) <= \<const0>\;
  LOCKSTEP_Out(2563) <= \<const0>\;
  LOCKSTEP_Out(2564) <= \<const0>\;
  LOCKSTEP_Out(2565) <= \<const0>\;
  LOCKSTEP_Out(2566) <= \<const0>\;
  LOCKSTEP_Out(2567) <= \<const0>\;
  LOCKSTEP_Out(2568) <= \<const0>\;
  LOCKSTEP_Out(2569) <= \<const0>\;
  LOCKSTEP_Out(2570) <= \<const0>\;
  LOCKSTEP_Out(2571) <= \<const0>\;
  LOCKSTEP_Out(2572) <= \<const0>\;
  LOCKSTEP_Out(2573) <= \<const0>\;
  LOCKSTEP_Out(2574) <= \<const0>\;
  LOCKSTEP_Out(2575) <= \<const0>\;
  LOCKSTEP_Out(2576) <= \<const0>\;
  LOCKSTEP_Out(2577) <= \<const0>\;
  LOCKSTEP_Out(2578) <= \<const0>\;
  LOCKSTEP_Out(2579) <= \<const0>\;
  LOCKSTEP_Out(2580) <= \<const0>\;
  LOCKSTEP_Out(2581) <= \<const0>\;
  LOCKSTEP_Out(2582) <= \<const0>\;
  LOCKSTEP_Out(2583) <= \<const0>\;
  LOCKSTEP_Out(2584) <= \<const0>\;
  LOCKSTEP_Out(2585) <= \<const0>\;
  LOCKSTEP_Out(2586) <= \<const0>\;
  LOCKSTEP_Out(2587) <= \<const0>\;
  LOCKSTEP_Out(2588) <= \<const0>\;
  LOCKSTEP_Out(2589) <= \<const0>\;
  LOCKSTEP_Out(2590) <= \<const0>\;
  LOCKSTEP_Out(2591) <= \<const0>\;
  LOCKSTEP_Out(2592) <= \<const0>\;
  LOCKSTEP_Out(2593) <= \<const0>\;
  LOCKSTEP_Out(2594) <= \<const0>\;
  LOCKSTEP_Out(2595) <= \<const0>\;
  LOCKSTEP_Out(2596) <= \<const0>\;
  LOCKSTEP_Out(2597) <= \<const0>\;
  LOCKSTEP_Out(2598) <= \<const0>\;
  LOCKSTEP_Out(2599) <= \<const0>\;
  LOCKSTEP_Out(2600) <= \<const0>\;
  LOCKSTEP_Out(2601) <= \<const0>\;
  LOCKSTEP_Out(2602) <= \<const0>\;
  LOCKSTEP_Out(2603) <= \<const0>\;
  LOCKSTEP_Out(2604) <= \<const0>\;
  LOCKSTEP_Out(2605) <= \<const0>\;
  LOCKSTEP_Out(2606) <= \<const0>\;
  LOCKSTEP_Out(2607) <= \<const0>\;
  LOCKSTEP_Out(2608) <= \<const0>\;
  LOCKSTEP_Out(2609) <= \<const0>\;
  LOCKSTEP_Out(2610) <= \<const0>\;
  LOCKSTEP_Out(2611) <= \<const0>\;
  LOCKSTEP_Out(2612) <= \<const0>\;
  LOCKSTEP_Out(2613) <= \<const0>\;
  LOCKSTEP_Out(2614) <= \<const0>\;
  LOCKSTEP_Out(2615) <= \<const0>\;
  LOCKSTEP_Out(2616) <= \<const0>\;
  LOCKSTEP_Out(2617) <= \<const0>\;
  LOCKSTEP_Out(2618) <= \<const0>\;
  LOCKSTEP_Out(2619) <= \<const0>\;
  LOCKSTEP_Out(2620) <= \<const0>\;
  LOCKSTEP_Out(2621) <= \<const0>\;
  LOCKSTEP_Out(2622) <= \<const0>\;
  LOCKSTEP_Out(2623) <= \<const0>\;
  LOCKSTEP_Out(2624) <= \<const0>\;
  LOCKSTEP_Out(2625) <= \<const0>\;
  LOCKSTEP_Out(2626) <= \<const0>\;
  LOCKSTEP_Out(2627) <= \<const0>\;
  LOCKSTEP_Out(2628) <= \<const0>\;
  LOCKSTEP_Out(2629) <= \<const0>\;
  LOCKSTEP_Out(2630) <= \<const0>\;
  LOCKSTEP_Out(2631) <= \<const0>\;
  LOCKSTEP_Out(2632) <= \<const0>\;
  LOCKSTEP_Out(2633) <= \<const0>\;
  LOCKSTEP_Out(2634) <= \<const0>\;
  LOCKSTEP_Out(2635) <= \<const0>\;
  LOCKSTEP_Out(2636) <= \<const0>\;
  LOCKSTEP_Out(2637) <= \<const0>\;
  LOCKSTEP_Out(2638) <= \<const0>\;
  LOCKSTEP_Out(2639) <= \<const0>\;
  LOCKSTEP_Out(2640) <= \<const0>\;
  LOCKSTEP_Out(2641) <= \<const0>\;
  LOCKSTEP_Out(2642) <= \<const0>\;
  LOCKSTEP_Out(2643) <= \<const0>\;
  LOCKSTEP_Out(2644) <= \<const0>\;
  LOCKSTEP_Out(2645) <= \<const0>\;
  LOCKSTEP_Out(2646) <= \<const0>\;
  LOCKSTEP_Out(2647) <= \<const0>\;
  LOCKSTEP_Out(2648) <= \<const0>\;
  LOCKSTEP_Out(2649) <= \<const0>\;
  LOCKSTEP_Out(2650) <= \<const0>\;
  LOCKSTEP_Out(2651) <= \<const0>\;
  LOCKSTEP_Out(2652) <= \<const0>\;
  LOCKSTEP_Out(2653) <= \<const0>\;
  LOCKSTEP_Out(2654) <= \<const0>\;
  LOCKSTEP_Out(2655) <= \<const0>\;
  LOCKSTEP_Out(2656) <= \<const0>\;
  LOCKSTEP_Out(2657) <= \<const0>\;
  LOCKSTEP_Out(2658) <= \<const0>\;
  LOCKSTEP_Out(2659) <= \<const0>\;
  LOCKSTEP_Out(2660) <= \<const0>\;
  LOCKSTEP_Out(2661) <= \<const0>\;
  LOCKSTEP_Out(2662) <= \<const0>\;
  LOCKSTEP_Out(2663) <= \<const0>\;
  LOCKSTEP_Out(2664) <= \<const0>\;
  LOCKSTEP_Out(2665) <= \<const0>\;
  LOCKSTEP_Out(2666) <= \<const0>\;
  LOCKSTEP_Out(2667) <= \<const0>\;
  LOCKSTEP_Out(2668) <= \<const0>\;
  LOCKSTEP_Out(2669) <= \<const0>\;
  LOCKSTEP_Out(2670) <= \<const0>\;
  LOCKSTEP_Out(2671) <= \<const0>\;
  LOCKSTEP_Out(2672) <= \<const0>\;
  LOCKSTEP_Out(2673) <= \<const0>\;
  LOCKSTEP_Out(2674) <= \<const0>\;
  LOCKSTEP_Out(2675) <= \<const0>\;
  LOCKSTEP_Out(2676) <= \<const0>\;
  LOCKSTEP_Out(2677) <= \<const0>\;
  LOCKSTEP_Out(2678) <= \<const0>\;
  LOCKSTEP_Out(2679) <= \<const0>\;
  LOCKSTEP_Out(2680) <= \<const0>\;
  LOCKSTEP_Out(2681) <= \<const0>\;
  LOCKSTEP_Out(2682) <= \<const0>\;
  LOCKSTEP_Out(2683) <= \<const0>\;
  LOCKSTEP_Out(2684) <= \<const0>\;
  LOCKSTEP_Out(2685) <= \<const0>\;
  LOCKSTEP_Out(2686) <= \<const0>\;
  LOCKSTEP_Out(2687) <= \<const0>\;
  LOCKSTEP_Out(2688) <= \<const0>\;
  LOCKSTEP_Out(2689) <= \<const0>\;
  LOCKSTEP_Out(2690) <= \<const0>\;
  LOCKSTEP_Out(2691) <= \<const0>\;
  LOCKSTEP_Out(2692) <= \<const0>\;
  LOCKSTEP_Out(2693) <= \<const0>\;
  LOCKSTEP_Out(2694) <= \<const0>\;
  LOCKSTEP_Out(2695) <= \<const0>\;
  LOCKSTEP_Out(2696) <= \<const0>\;
  LOCKSTEP_Out(2697) <= \<const0>\;
  LOCKSTEP_Out(2698) <= \<const0>\;
  LOCKSTEP_Out(2699) <= \<const0>\;
  LOCKSTEP_Out(2700) <= \<const0>\;
  LOCKSTEP_Out(2701) <= \<const0>\;
  LOCKSTEP_Out(2702) <= \<const0>\;
  LOCKSTEP_Out(2703) <= \<const0>\;
  LOCKSTEP_Out(2704) <= \<const0>\;
  LOCKSTEP_Out(2705) <= \<const0>\;
  LOCKSTEP_Out(2706) <= \<const0>\;
  LOCKSTEP_Out(2707) <= \<const0>\;
  LOCKSTEP_Out(2708) <= \<const0>\;
  LOCKSTEP_Out(2709) <= \<const0>\;
  LOCKSTEP_Out(2710) <= \<const0>\;
  LOCKSTEP_Out(2711) <= \<const0>\;
  LOCKSTEP_Out(2712) <= \<const0>\;
  LOCKSTEP_Out(2713) <= \<const0>\;
  LOCKSTEP_Out(2714) <= \<const0>\;
  LOCKSTEP_Out(2715) <= \<const0>\;
  LOCKSTEP_Out(2716) <= \<const0>\;
  LOCKSTEP_Out(2717) <= \<const0>\;
  LOCKSTEP_Out(2718) <= \<const0>\;
  LOCKSTEP_Out(2719) <= \<const0>\;
  LOCKSTEP_Out(2720) <= \<const0>\;
  LOCKSTEP_Out(2721) <= \<const0>\;
  LOCKSTEP_Out(2722) <= \<const0>\;
  LOCKSTEP_Out(2723) <= \<const0>\;
  LOCKSTEP_Out(2724) <= \<const0>\;
  LOCKSTEP_Out(2725) <= \<const0>\;
  LOCKSTEP_Out(2726) <= \<const0>\;
  LOCKSTEP_Out(2727) <= \<const0>\;
  LOCKSTEP_Out(2728) <= \<const0>\;
  LOCKSTEP_Out(2729) <= \<const0>\;
  LOCKSTEP_Out(2730) <= \<const0>\;
  LOCKSTEP_Out(2731) <= \<const0>\;
  LOCKSTEP_Out(2732) <= \<const0>\;
  LOCKSTEP_Out(2733) <= \<const0>\;
  LOCKSTEP_Out(2734) <= \<const0>\;
  LOCKSTEP_Out(2735) <= \<const0>\;
  LOCKSTEP_Out(2736) <= \<const0>\;
  LOCKSTEP_Out(2737) <= \<const0>\;
  LOCKSTEP_Out(2738) <= \<const0>\;
  LOCKSTEP_Out(2739) <= \<const0>\;
  LOCKSTEP_Out(2740) <= \<const0>\;
  LOCKSTEP_Out(2741) <= \<const0>\;
  LOCKSTEP_Out(2742) <= \<const0>\;
  LOCKSTEP_Out(2743) <= \<const0>\;
  LOCKSTEP_Out(2744) <= \<const0>\;
  LOCKSTEP_Out(2745) <= \<const0>\;
  LOCKSTEP_Out(2746) <= \<const0>\;
  LOCKSTEP_Out(2747) <= \<const0>\;
  LOCKSTEP_Out(2748) <= \<const0>\;
  LOCKSTEP_Out(2749) <= \<const0>\;
  LOCKSTEP_Out(2750) <= \<const0>\;
  LOCKSTEP_Out(2751) <= \<const0>\;
  LOCKSTEP_Out(2752) <= \<const0>\;
  LOCKSTEP_Out(2753) <= \<const0>\;
  LOCKSTEP_Out(2754) <= \<const0>\;
  LOCKSTEP_Out(2755) <= \<const0>\;
  LOCKSTEP_Out(2756) <= \<const0>\;
  LOCKSTEP_Out(2757) <= \<const0>\;
  LOCKSTEP_Out(2758) <= \<const0>\;
  LOCKSTEP_Out(2759) <= \<const0>\;
  LOCKSTEP_Out(2760) <= \<const0>\;
  LOCKSTEP_Out(2761) <= \<const0>\;
  LOCKSTEP_Out(2762) <= \<const0>\;
  LOCKSTEP_Out(2763) <= \<const0>\;
  LOCKSTEP_Out(2764) <= \<const0>\;
  LOCKSTEP_Out(2765) <= \<const0>\;
  LOCKSTEP_Out(2766) <= \<const0>\;
  LOCKSTEP_Out(2767) <= \<const0>\;
  LOCKSTEP_Out(2768) <= \<const0>\;
  LOCKSTEP_Out(2769) <= \<const0>\;
  LOCKSTEP_Out(2770) <= \<const0>\;
  LOCKSTEP_Out(2771) <= \<const0>\;
  LOCKSTEP_Out(2772) <= \<const0>\;
  LOCKSTEP_Out(2773) <= \<const0>\;
  LOCKSTEP_Out(2774) <= \<const0>\;
  LOCKSTEP_Out(2775) <= \<const0>\;
  LOCKSTEP_Out(2776) <= \<const0>\;
  LOCKSTEP_Out(2777) <= \<const0>\;
  LOCKSTEP_Out(2778) <= \<const0>\;
  LOCKSTEP_Out(2779) <= \<const0>\;
  LOCKSTEP_Out(2780) <= \<const0>\;
  LOCKSTEP_Out(2781) <= \<const0>\;
  LOCKSTEP_Out(2782) <= \<const0>\;
  LOCKSTEP_Out(2783) <= \<const0>\;
  LOCKSTEP_Out(2784) <= \<const0>\;
  LOCKSTEP_Out(2785) <= \<const0>\;
  LOCKSTEP_Out(2786) <= \<const0>\;
  LOCKSTEP_Out(2787) <= \<const0>\;
  LOCKSTEP_Out(2788) <= \<const0>\;
  LOCKSTEP_Out(2789) <= \<const0>\;
  LOCKSTEP_Out(2790) <= \<const0>\;
  LOCKSTEP_Out(2791) <= \<const0>\;
  LOCKSTEP_Out(2792) <= \<const0>\;
  LOCKSTEP_Out(2793) <= \<const0>\;
  LOCKSTEP_Out(2794) <= \<const0>\;
  LOCKSTEP_Out(2795) <= \<const0>\;
  LOCKSTEP_Out(2796) <= \<const0>\;
  LOCKSTEP_Out(2797) <= \<const0>\;
  LOCKSTEP_Out(2798) <= \<const0>\;
  LOCKSTEP_Out(2799) <= \<const0>\;
  LOCKSTEP_Out(2800) <= \<const0>\;
  LOCKSTEP_Out(2801) <= \<const0>\;
  LOCKSTEP_Out(2802) <= \<const0>\;
  LOCKSTEP_Out(2803) <= \<const0>\;
  LOCKSTEP_Out(2804) <= \<const0>\;
  LOCKSTEP_Out(2805) <= \<const0>\;
  LOCKSTEP_Out(2806) <= \<const0>\;
  LOCKSTEP_Out(2807) <= \<const0>\;
  LOCKSTEP_Out(2808) <= \<const0>\;
  LOCKSTEP_Out(2809) <= \<const0>\;
  LOCKSTEP_Out(2810) <= \<const0>\;
  LOCKSTEP_Out(2811) <= \<const0>\;
  LOCKSTEP_Out(2812) <= \<const0>\;
  LOCKSTEP_Out(2813) <= \<const0>\;
  LOCKSTEP_Out(2814) <= \<const0>\;
  LOCKSTEP_Out(2815) <= \<const0>\;
  LOCKSTEP_Out(2816) <= \<const0>\;
  LOCKSTEP_Out(2817) <= \<const0>\;
  LOCKSTEP_Out(2818) <= \<const0>\;
  LOCKSTEP_Out(2819) <= \<const0>\;
  LOCKSTEP_Out(2820) <= \<const0>\;
  LOCKSTEP_Out(2821) <= \<const0>\;
  LOCKSTEP_Out(2822) <= \<const0>\;
  LOCKSTEP_Out(2823) <= \<const0>\;
  LOCKSTEP_Out(2824) <= \<const0>\;
  LOCKSTEP_Out(2825) <= \<const0>\;
  LOCKSTEP_Out(2826) <= \<const0>\;
  LOCKSTEP_Out(2827) <= \<const0>\;
  LOCKSTEP_Out(2828) <= \<const0>\;
  LOCKSTEP_Out(2829) <= \<const0>\;
  LOCKSTEP_Out(2830) <= \<const0>\;
  LOCKSTEP_Out(2831) <= \<const0>\;
  LOCKSTEP_Out(2832) <= \<const0>\;
  LOCKSTEP_Out(2833) <= \<const0>\;
  LOCKSTEP_Out(2834) <= \<const0>\;
  LOCKSTEP_Out(2835) <= \<const0>\;
  LOCKSTEP_Out(2836) <= \<const0>\;
  LOCKSTEP_Out(2837) <= \<const0>\;
  LOCKSTEP_Out(2838) <= \<const0>\;
  LOCKSTEP_Out(2839) <= \<const0>\;
  LOCKSTEP_Out(2840) <= \<const0>\;
  LOCKSTEP_Out(2841) <= \<const0>\;
  LOCKSTEP_Out(2842) <= \<const0>\;
  LOCKSTEP_Out(2843) <= \<const0>\;
  LOCKSTEP_Out(2844) <= \<const0>\;
  LOCKSTEP_Out(2845) <= \<const0>\;
  LOCKSTEP_Out(2846) <= \<const0>\;
  LOCKSTEP_Out(2847) <= \<const0>\;
  LOCKSTEP_Out(2848) <= \<const0>\;
  LOCKSTEP_Out(2849) <= \<const0>\;
  LOCKSTEP_Out(2850) <= \<const0>\;
  LOCKSTEP_Out(2851) <= \<const0>\;
  LOCKSTEP_Out(2852) <= \<const0>\;
  LOCKSTEP_Out(2853) <= \<const0>\;
  LOCKSTEP_Out(2854) <= \<const0>\;
  LOCKSTEP_Out(2855) <= \<const0>\;
  LOCKSTEP_Out(2856) <= \<const0>\;
  LOCKSTEP_Out(2857) <= \<const0>\;
  LOCKSTEP_Out(2858) <= \<const0>\;
  LOCKSTEP_Out(2859) <= \<const0>\;
  LOCKSTEP_Out(2860) <= \<const0>\;
  LOCKSTEP_Out(2861) <= \<const0>\;
  LOCKSTEP_Out(2862) <= \<const0>\;
  LOCKSTEP_Out(2863) <= \<const0>\;
  LOCKSTEP_Out(2864) <= \<const0>\;
  LOCKSTEP_Out(2865) <= \<const0>\;
  LOCKSTEP_Out(2866) <= \<const0>\;
  LOCKSTEP_Out(2867) <= \<const0>\;
  LOCKSTEP_Out(2868) <= \<const0>\;
  LOCKSTEP_Out(2869) <= \<const0>\;
  LOCKSTEP_Out(2870) <= \<const0>\;
  LOCKSTEP_Out(2871) <= \<const0>\;
  LOCKSTEP_Out(2872) <= \<const0>\;
  LOCKSTEP_Out(2873) <= \<const0>\;
  LOCKSTEP_Out(2874) <= \<const0>\;
  LOCKSTEP_Out(2875) <= \<const0>\;
  LOCKSTEP_Out(2876) <= \<const0>\;
  LOCKSTEP_Out(2877) <= \<const0>\;
  LOCKSTEP_Out(2878) <= \<const0>\;
  LOCKSTEP_Out(2879) <= \<const0>\;
  LOCKSTEP_Out(2880) <= \<const0>\;
  LOCKSTEP_Out(2881 to 2913) <= \^lockstep_out\(2881 to 2913);
  LOCKSTEP_Out(2914) <= \<const0>\;
  LOCKSTEP_Out(2915) <= \<const0>\;
  LOCKSTEP_Out(2916) <= \<const0>\;
  LOCKSTEP_Out(2917) <= \<const0>\;
  LOCKSTEP_Out(2918) <= \<const0>\;
  LOCKSTEP_Out(2919) <= \<const0>\;
  LOCKSTEP_Out(2920) <= \<const0>\;
  LOCKSTEP_Out(2921) <= \<const0>\;
  LOCKSTEP_Out(2922) <= \<const0>\;
  LOCKSTEP_Out(2923) <= \<const0>\;
  LOCKSTEP_Out(2924) <= \<const0>\;
  LOCKSTEP_Out(2925) <= \<const0>\;
  LOCKSTEP_Out(2926) <= \<const0>\;
  LOCKSTEP_Out(2927) <= \<const0>\;
  LOCKSTEP_Out(2928) <= \<const0>\;
  LOCKSTEP_Out(2929) <= \<const0>\;
  LOCKSTEP_Out(2930) <= \<const0>\;
  LOCKSTEP_Out(2931 to 2943) <= \^lockstep_out\(2931 to 2943);
  LOCKSTEP_Out(2944) <= \<const0>\;
  LOCKSTEP_Out(2945) <= \<const0>\;
  LOCKSTEP_Out(2946) <= \<const0>\;
  LOCKSTEP_Out(2947) <= \<const0>\;
  LOCKSTEP_Out(2948) <= \<const0>\;
  LOCKSTEP_Out(2949) <= \<const0>\;
  LOCKSTEP_Out(2950) <= \<const0>\;
  LOCKSTEP_Out(2951) <= \<const0>\;
  LOCKSTEP_Out(2952) <= \<const0>\;
  LOCKSTEP_Out(2953) <= \<const0>\;
  LOCKSTEP_Out(2954) <= \<const0>\;
  LOCKSTEP_Out(2955) <= \<const0>\;
  LOCKSTEP_Out(2956) <= \<const0>\;
  LOCKSTEP_Out(2957) <= \<const0>\;
  LOCKSTEP_Out(2958) <= \<const0>\;
  LOCKSTEP_Out(2959) <= \<const0>\;
  LOCKSTEP_Out(2960) <= \<const0>\;
  LOCKSTEP_Out(2961) <= \<const0>\;
  LOCKSTEP_Out(2962) <= \<const0>\;
  LOCKSTEP_Out(2963) <= \<const0>\;
  LOCKSTEP_Out(2964) <= \<const0>\;
  LOCKSTEP_Out(2965) <= \<const0>\;
  LOCKSTEP_Out(2966) <= \<const0>\;
  LOCKSTEP_Out(2967) <= \<const0>\;
  LOCKSTEP_Out(2968) <= \<const0>\;
  LOCKSTEP_Out(2969) <= \<const0>\;
  LOCKSTEP_Out(2970) <= \<const0>\;
  LOCKSTEP_Out(2971) <= \<const0>\;
  LOCKSTEP_Out(2972) <= \<const0>\;
  LOCKSTEP_Out(2973) <= \<const0>\;
  LOCKSTEP_Out(2974) <= \<const0>\;
  LOCKSTEP_Out(2975) <= \<const0>\;
  LOCKSTEP_Out(2976) <= \<const0>\;
  LOCKSTEP_Out(2977) <= \<const0>\;
  LOCKSTEP_Out(2978 to 2983) <= \^lockstep_out\(2978 to 2983);
  LOCKSTEP_Out(2984) <= \<const0>\;
  LOCKSTEP_Out(2985) <= \<const0>\;
  LOCKSTEP_Out(2986) <= \<const0>\;
  LOCKSTEP_Out(2987) <= \<const0>\;
  LOCKSTEP_Out(2988) <= \<const0>\;
  LOCKSTEP_Out(2989) <= \<const0>\;
  LOCKSTEP_Out(2990) <= \<const0>\;
  LOCKSTEP_Out(2991) <= \<const0>\;
  LOCKSTEP_Out(2992) <= \<const0>\;
  LOCKSTEP_Out(2993) <= \<const0>\;
  LOCKSTEP_Out(2994) <= \<const0>\;
  LOCKSTEP_Out(2995 to 2997) <= \^lockstep_out\(2995 to 2997);
  LOCKSTEP_Out(2998) <= \<const0>\;
  LOCKSTEP_Out(2999) <= \<const0>\;
  LOCKSTEP_Out(3000) <= \<const0>\;
  LOCKSTEP_Out(3001) <= \<const0>\;
  LOCKSTEP_Out(3002) <= \<const0>\;
  LOCKSTEP_Out(3003) <= \<const0>\;
  LOCKSTEP_Out(3004) <= \<const0>\;
  LOCKSTEP_Out(3005) <= \<const0>\;
  LOCKSTEP_Out(3006) <= \<const0>\;
  LOCKSTEP_Out(3007 to 3038) <= \^lockstep_out\(3007 to 3038);
  LOCKSTEP_Out(3039) <= \<const0>\;
  LOCKSTEP_Out(3040) <= \<const0>\;
  LOCKSTEP_Out(3041) <= \<const0>\;
  LOCKSTEP_Out(3042) <= \<const0>\;
  LOCKSTEP_Out(3043) <= \<const0>\;
  LOCKSTEP_Out(3044) <= \<const0>\;
  LOCKSTEP_Out(3045) <= \<const0>\;
  LOCKSTEP_Out(3046) <= \<const0>\;
  LOCKSTEP_Out(3047) <= \<const0>\;
  LOCKSTEP_Out(3048) <= \<const0>\;
  LOCKSTEP_Out(3049) <= \<const0>\;
  LOCKSTEP_Out(3050) <= \<const0>\;
  LOCKSTEP_Out(3051) <= \<const0>\;
  LOCKSTEP_Out(3052) <= \<const0>\;
  LOCKSTEP_Out(3053) <= \<const0>\;
  LOCKSTEP_Out(3054) <= \<const0>\;
  LOCKSTEP_Out(3055) <= \<const0>\;
  LOCKSTEP_Out(3056) <= \<const0>\;
  LOCKSTEP_Out(3057) <= \<const0>\;
  LOCKSTEP_Out(3058) <= \<const0>\;
  LOCKSTEP_Out(3059) <= \<const0>\;
  LOCKSTEP_Out(3060) <= \<const0>\;
  LOCKSTEP_Out(3061) <= \<const0>\;
  LOCKSTEP_Out(3062) <= \<const0>\;
  LOCKSTEP_Out(3063) <= \<const0>\;
  LOCKSTEP_Out(3064) <= \<const0>\;
  LOCKSTEP_Out(3065) <= \<const0>\;
  LOCKSTEP_Out(3066) <= \<const0>\;
  LOCKSTEP_Out(3067) <= \<const0>\;
  LOCKSTEP_Out(3068) <= \<const0>\;
  LOCKSTEP_Out(3069) <= \<const0>\;
  LOCKSTEP_Out(3070) <= \<const0>\;
  LOCKSTEP_Out(3071) <= \^lockstep_out\(3073);
  LOCKSTEP_Out(3072) <= \<const0>\;
  LOCKSTEP_Out(3073) <= \^lockstep_out\(3073);
  LOCKSTEP_Out(3074) <= \<const0>\;
  LOCKSTEP_Out(3075) <= \^lockstep_out\(3073);
  LOCKSTEP_Out(3076) <= \<const0>\;
  LOCKSTEP_Out(3077 to 3110) <= \^lockstep_out\(3077 to 3110);
  LOCKSTEP_Out(3111) <= \<const0>\;
  LOCKSTEP_Out(3112) <= \<const0>\;
  LOCKSTEP_Out(3113) <= \<const0>\;
  LOCKSTEP_Out(3114) <= \<const0>\;
  LOCKSTEP_Out(3115) <= \<const0>\;
  LOCKSTEP_Out(3116) <= \<const0>\;
  LOCKSTEP_Out(3117) <= \<const0>\;
  LOCKSTEP_Out(3118) <= \<const0>\;
  LOCKSTEP_Out(3119) <= \<const0>\;
  LOCKSTEP_Out(3120) <= \<const0>\;
  LOCKSTEP_Out(3121) <= \<const0>\;
  LOCKSTEP_Out(3122) <= \<const0>\;
  LOCKSTEP_Out(3123) <= \<const0>\;
  LOCKSTEP_Out(3124) <= \<const0>\;
  LOCKSTEP_Out(3125) <= \<const0>\;
  LOCKSTEP_Out(3126) <= \<const0>\;
  LOCKSTEP_Out(3127) <= \<const0>\;
  LOCKSTEP_Out(3128) <= \<const0>\;
  LOCKSTEP_Out(3129) <= \<const0>\;
  LOCKSTEP_Out(3130) <= \<const0>\;
  LOCKSTEP_Out(3131) <= \<const0>\;
  LOCKSTEP_Out(3132) <= \<const0>\;
  LOCKSTEP_Out(3133) <= \<const0>\;
  LOCKSTEP_Out(3134) <= \<const0>\;
  LOCKSTEP_Out(3135) <= \<const0>\;
  LOCKSTEP_Out(3136) <= \<const0>\;
  LOCKSTEP_Out(3137) <= \<const0>\;
  LOCKSTEP_Out(3138) <= \<const0>\;
  LOCKSTEP_Out(3139) <= \<const0>\;
  LOCKSTEP_Out(3140) <= \<const0>\;
  LOCKSTEP_Out(3141) <= \<const0>\;
  LOCKSTEP_Out(3142) <= \<const0>\;
  LOCKSTEP_Out(3143 to 3174) <= \^lockstep_out\(3143 to 3174);
  LOCKSTEP_Out(3175) <= \<const0>\;
  LOCKSTEP_Out(3176) <= \<const0>\;
  LOCKSTEP_Out(3177) <= \<const0>\;
  LOCKSTEP_Out(3178) <= \<const0>\;
  LOCKSTEP_Out(3179) <= \<const0>\;
  LOCKSTEP_Out(3180) <= \<const0>\;
  LOCKSTEP_Out(3181) <= \<const0>\;
  LOCKSTEP_Out(3182) <= \<const0>\;
  LOCKSTEP_Out(3183) <= \<const0>\;
  LOCKSTEP_Out(3184) <= \<const0>\;
  LOCKSTEP_Out(3185) <= \<const0>\;
  LOCKSTEP_Out(3186) <= \<const0>\;
  LOCKSTEP_Out(3187) <= \<const0>\;
  LOCKSTEP_Out(3188) <= \<const0>\;
  LOCKSTEP_Out(3189) <= \<const0>\;
  LOCKSTEP_Out(3190) <= \<const0>\;
  LOCKSTEP_Out(3191) <= \<const0>\;
  LOCKSTEP_Out(3192) <= \<const0>\;
  LOCKSTEP_Out(3193) <= \<const0>\;
  LOCKSTEP_Out(3194) <= \<const0>\;
  LOCKSTEP_Out(3195) <= \<const0>\;
  LOCKSTEP_Out(3196) <= \<const0>\;
  LOCKSTEP_Out(3197) <= \<const0>\;
  LOCKSTEP_Out(3198) <= \<const0>\;
  LOCKSTEP_Out(3199) <= \<const0>\;
  LOCKSTEP_Out(3200) <= \<const0>\;
  LOCKSTEP_Out(3201) <= \<const0>\;
  LOCKSTEP_Out(3202) <= \<const0>\;
  LOCKSTEP_Out(3203) <= \<const0>\;
  LOCKSTEP_Out(3204) <= \<const0>\;
  LOCKSTEP_Out(3205) <= \<const0>\;
  LOCKSTEP_Out(3206) <= \<const0>\;
  LOCKSTEP_Out(3207 to 3210) <= \^lockstep_out\(3207 to 3210);
  LOCKSTEP_Out(3211) <= \<const0>\;
  LOCKSTEP_Out(3212) <= \<const0>\;
  LOCKSTEP_Out(3213) <= \<const0>\;
  LOCKSTEP_Out(3214) <= \<const0>\;
  LOCKSTEP_Out(3215 to 3217) <= \^lockstep_out\(3215 to 3217);
  LOCKSTEP_Out(3218) <= \<const0>\;
  LOCKSTEP_Out(3219) <= \<const0>\;
  LOCKSTEP_Out(3220) <= \<const0>\;
  LOCKSTEP_Out(3221) <= \<const0>\;
  LOCKSTEP_Out(3222) <= \<const0>\;
  LOCKSTEP_Out(3223) <= \<const0>\;
  LOCKSTEP_Out(3224) <= \<const0>\;
  LOCKSTEP_Out(3225) <= \^lockstep_out\(3225);
  LOCKSTEP_Out(3226) <= \^lockstep_out\(3227);
  LOCKSTEP_Out(3227) <= \^lockstep_out\(3227);
  LOCKSTEP_Out(3228) <= \<const0>\;
  LOCKSTEP_Out(3229) <= \<const0>\;
  LOCKSTEP_Out(3230) <= \<const0>\;
  LOCKSTEP_Out(3231) <= \<const0>\;
  LOCKSTEP_Out(3232) <= \<const0>\;
  LOCKSTEP_Out(3233) <= \<const0>\;
  LOCKSTEP_Out(3234) <= \<const0>\;
  LOCKSTEP_Out(3235) <= \<const0>\;
  LOCKSTEP_Out(3236) <= \<const0>\;
  LOCKSTEP_Out(3237) <= \<const0>\;
  LOCKSTEP_Out(3238) <= \<const0>\;
  LOCKSTEP_Out(3239) <= \<const0>\;
  LOCKSTEP_Out(3240) <= \<const0>\;
  LOCKSTEP_Out(3241) <= \<const0>\;
  LOCKSTEP_Out(3242) <= \<const0>\;
  LOCKSTEP_Out(3243) <= \<const0>\;
  LOCKSTEP_Out(3244) <= \<const0>\;
  LOCKSTEP_Out(3245) <= \<const0>\;
  LOCKSTEP_Out(3246) <= \<const0>\;
  LOCKSTEP_Out(3247) <= \<const0>\;
  LOCKSTEP_Out(3248) <= \<const0>\;
  LOCKSTEP_Out(3249) <= \<const0>\;
  LOCKSTEP_Out(3250) <= \<const0>\;
  LOCKSTEP_Out(3251) <= \<const0>\;
  LOCKSTEP_Out(3252) <= \<const0>\;
  LOCKSTEP_Out(3253) <= \<const0>\;
  LOCKSTEP_Out(3254) <= \<const0>\;
  LOCKSTEP_Out(3255) <= \<const0>\;
  LOCKSTEP_Out(3256) <= \<const0>\;
  LOCKSTEP_Out(3257) <= \<const0>\;
  LOCKSTEP_Out(3258) <= \<const0>\;
  LOCKSTEP_Out(3259) <= \<const0>\;
  LOCKSTEP_Out(3260) <= \<const0>\;
  LOCKSTEP_Out(3261) <= \<const0>\;
  LOCKSTEP_Out(3262) <= \<const0>\;
  LOCKSTEP_Out(3263) <= \<const0>\;
  LOCKSTEP_Out(3264) <= \<const0>\;
  LOCKSTEP_Out(3265) <= \<const0>\;
  LOCKSTEP_Out(3266) <= \<const0>\;
  LOCKSTEP_Out(3267) <= \<const0>\;
  LOCKSTEP_Out(3268) <= \<const0>\;
  LOCKSTEP_Out(3269) <= \<const0>\;
  LOCKSTEP_Out(3270) <= \<const0>\;
  LOCKSTEP_Out(3271) <= \<const0>\;
  LOCKSTEP_Out(3272) <= \<const0>\;
  LOCKSTEP_Out(3273) <= \<const0>\;
  LOCKSTEP_Out(3274) <= \<const0>\;
  LOCKSTEP_Out(3275) <= \<const0>\;
  LOCKSTEP_Out(3276) <= \<const0>\;
  LOCKSTEP_Out(3277) <= \<const0>\;
  LOCKSTEP_Out(3278) <= \<const0>\;
  LOCKSTEP_Out(3279) <= \<const0>\;
  LOCKSTEP_Out(3280) <= \<const0>\;
  LOCKSTEP_Out(3281) <= \<const0>\;
  LOCKSTEP_Out(3282) <= \<const0>\;
  LOCKSTEP_Out(3283) <= \<const0>\;
  LOCKSTEP_Out(3284) <= \<const0>\;
  LOCKSTEP_Out(3285) <= \<const0>\;
  LOCKSTEP_Out(3286) <= \<const0>\;
  LOCKSTEP_Out(3287) <= \<const0>\;
  LOCKSTEP_Out(3288) <= \<const0>\;
  LOCKSTEP_Out(3289) <= \<const0>\;
  LOCKSTEP_Out(3290) <= \<const0>\;
  LOCKSTEP_Out(3291) <= \<const0>\;
  LOCKSTEP_Out(3292) <= \<const0>\;
  LOCKSTEP_Out(3293) <= \<const0>\;
  LOCKSTEP_Out(3294) <= \<const0>\;
  LOCKSTEP_Out(3295) <= \<const0>\;
  LOCKSTEP_Out(3296) <= \<const0>\;
  LOCKSTEP_Out(3297) <= \<const0>\;
  LOCKSTEP_Out(3298) <= \<const0>\;
  LOCKSTEP_Out(3299) <= \<const0>\;
  LOCKSTEP_Out(3300) <= \<const0>\;
  LOCKSTEP_Out(3301) <= \<const0>\;
  LOCKSTEP_Out(3302) <= \<const0>\;
  LOCKSTEP_Out(3303) <= \<const0>\;
  LOCKSTEP_Out(3304) <= \<const0>\;
  LOCKSTEP_Out(3305) <= \<const0>\;
  LOCKSTEP_Out(3306) <= \<const0>\;
  LOCKSTEP_Out(3307) <= \<const0>\;
  LOCKSTEP_Out(3308) <= \<const0>\;
  LOCKSTEP_Out(3309) <= \<const0>\;
  LOCKSTEP_Out(3310) <= \<const0>\;
  LOCKSTEP_Out(3311) <= \<const0>\;
  LOCKSTEP_Out(3312) <= \<const0>\;
  LOCKSTEP_Out(3313) <= \<const0>\;
  LOCKSTEP_Out(3314) <= \<const0>\;
  LOCKSTEP_Out(3315) <= \<const0>\;
  LOCKSTEP_Out(3316) <= \<const0>\;
  LOCKSTEP_Out(3317) <= \<const0>\;
  LOCKSTEP_Out(3318) <= \<const0>\;
  LOCKSTEP_Out(3319) <= \<const0>\;
  LOCKSTEP_Out(3320) <= \<const0>\;
  LOCKSTEP_Out(3321) <= \<const0>\;
  LOCKSTEP_Out(3322) <= \<const0>\;
  LOCKSTEP_Out(3323) <= \<const0>\;
  LOCKSTEP_Out(3324) <= \<const0>\;
  LOCKSTEP_Out(3325) <= \<const0>\;
  LOCKSTEP_Out(3326) <= \<const0>\;
  LOCKSTEP_Out(3327) <= \<const0>\;
  LOCKSTEP_Out(3328) <= \<const0>\;
  LOCKSTEP_Out(3329) <= \<const0>\;
  LOCKSTEP_Out(3330) <= \<const0>\;
  LOCKSTEP_Out(3331) <= \<const0>\;
  LOCKSTEP_Out(3332) <= \<const0>\;
  LOCKSTEP_Out(3333) <= \<const0>\;
  LOCKSTEP_Out(3334) <= \<const0>\;
  LOCKSTEP_Out(3335) <= \<const0>\;
  LOCKSTEP_Out(3336) <= \<const0>\;
  LOCKSTEP_Out(3337) <= \<const0>\;
  LOCKSTEP_Out(3338) <= \<const0>\;
  LOCKSTEP_Out(3339) <= \<const0>\;
  LOCKSTEP_Out(3340) <= \<const0>\;
  LOCKSTEP_Out(3341) <= \<const0>\;
  LOCKSTEP_Out(3342) <= \<const0>\;
  LOCKSTEP_Out(3343) <= \<const0>\;
  LOCKSTEP_Out(3344) <= \<const0>\;
  LOCKSTEP_Out(3345) <= \<const0>\;
  LOCKSTEP_Out(3346) <= \<const0>\;
  LOCKSTEP_Out(3347) <= \<const0>\;
  LOCKSTEP_Out(3348) <= \<const0>\;
  LOCKSTEP_Out(3349) <= \<const0>\;
  LOCKSTEP_Out(3350) <= \<const0>\;
  LOCKSTEP_Out(3351) <= \<const0>\;
  LOCKSTEP_Out(3352) <= \<const0>\;
  LOCKSTEP_Out(3353) <= \<const0>\;
  LOCKSTEP_Out(3354) <= \<const0>\;
  LOCKSTEP_Out(3355) <= \<const0>\;
  LOCKSTEP_Out(3356) <= \<const0>\;
  LOCKSTEP_Out(3357) <= \<const0>\;
  LOCKSTEP_Out(3358) <= \<const0>\;
  LOCKSTEP_Out(3359) <= \<const0>\;
  LOCKSTEP_Out(3360) <= \<const0>\;
  LOCKSTEP_Out(3361) <= \<const0>\;
  LOCKSTEP_Out(3362) <= \<const0>\;
  LOCKSTEP_Out(3363) <= \<const0>\;
  LOCKSTEP_Out(3364) <= \<const0>\;
  LOCKSTEP_Out(3365) <= \<const0>\;
  LOCKSTEP_Out(3366) <= \<const0>\;
  LOCKSTEP_Out(3367) <= \<const0>\;
  LOCKSTEP_Out(3368) <= \<const0>\;
  LOCKSTEP_Out(3369) <= \<const0>\;
  LOCKSTEP_Out(3370) <= \<const0>\;
  LOCKSTEP_Out(3371) <= \<const0>\;
  LOCKSTEP_Out(3372) <= \<const0>\;
  LOCKSTEP_Out(3373) <= \<const0>\;
  LOCKSTEP_Out(3374) <= \<const0>\;
  LOCKSTEP_Out(3375) <= \<const0>\;
  LOCKSTEP_Out(3376) <= \<const0>\;
  LOCKSTEP_Out(3377) <= \<const0>\;
  LOCKSTEP_Out(3378) <= \<const0>\;
  LOCKSTEP_Out(3379) <= \<const0>\;
  LOCKSTEP_Out(3380) <= \<const0>\;
  LOCKSTEP_Out(3381) <= \<const0>\;
  LOCKSTEP_Out(3382) <= \<const0>\;
  LOCKSTEP_Out(3383) <= \<const0>\;
  LOCKSTEP_Out(3384) <= \<const0>\;
  LOCKSTEP_Out(3385) <= \<const0>\;
  LOCKSTEP_Out(3386) <= \<const0>\;
  LOCKSTEP_Out(3387) <= \<const0>\;
  LOCKSTEP_Out(3388) <= \<const0>\;
  LOCKSTEP_Out(3389) <= \<const0>\;
  LOCKSTEP_Out(3390) <= \<const0>\;
  LOCKSTEP_Out(3391) <= \<const0>\;
  LOCKSTEP_Out(3392) <= \<const0>\;
  LOCKSTEP_Out(3393) <= \<const0>\;
  LOCKSTEP_Out(3394) <= \<const0>\;
  LOCKSTEP_Out(3395) <= \<const0>\;
  LOCKSTEP_Out(3396) <= \<const0>\;
  LOCKSTEP_Out(3397) <= \<const0>\;
  LOCKSTEP_Out(3398) <= \<const0>\;
  LOCKSTEP_Out(3399) <= \<const0>\;
  LOCKSTEP_Out(3400) <= \<const0>\;
  LOCKSTEP_Out(3401) <= \<const0>\;
  LOCKSTEP_Out(3402) <= \<const0>\;
  LOCKSTEP_Out(3403) <= \<const0>\;
  LOCKSTEP_Out(3404) <= \<const0>\;
  LOCKSTEP_Out(3405) <= \<const0>\;
  LOCKSTEP_Out(3406) <= \<const0>\;
  LOCKSTEP_Out(3407) <= \<const0>\;
  LOCKSTEP_Out(3408) <= \<const0>\;
  LOCKSTEP_Out(3409) <= \<const0>\;
  LOCKSTEP_Out(3410) <= \<const0>\;
  LOCKSTEP_Out(3411) <= \<const0>\;
  LOCKSTEP_Out(3412) <= \<const0>\;
  LOCKSTEP_Out(3413) <= \<const0>\;
  LOCKSTEP_Out(3414) <= \<const0>\;
  LOCKSTEP_Out(3415) <= \<const0>\;
  LOCKSTEP_Out(3416) <= \<const0>\;
  LOCKSTEP_Out(3417) <= \<const0>\;
  LOCKSTEP_Out(3418) <= \<const0>\;
  LOCKSTEP_Out(3419) <= \<const0>\;
  LOCKSTEP_Out(3420) <= \<const0>\;
  LOCKSTEP_Out(3421) <= \<const0>\;
  LOCKSTEP_Out(3422) <= \<const0>\;
  LOCKSTEP_Out(3423) <= \<const0>\;
  LOCKSTEP_Out(3424) <= \<const0>\;
  LOCKSTEP_Out(3425) <= \<const0>\;
  LOCKSTEP_Out(3426) <= \<const0>\;
  LOCKSTEP_Out(3427) <= \<const0>\;
  LOCKSTEP_Out(3428) <= \<const0>\;
  LOCKSTEP_Out(3429) <= \<const0>\;
  LOCKSTEP_Out(3430) <= \<const0>\;
  LOCKSTEP_Out(3431) <= \<const0>\;
  LOCKSTEP_Out(3432) <= \<const0>\;
  LOCKSTEP_Out(3433) <= \<const0>\;
  LOCKSTEP_Out(3434) <= \<const0>\;
  LOCKSTEP_Out(3435) <= \<const0>\;
  LOCKSTEP_Out(3436) <= \<const0>\;
  LOCKSTEP_Out(3437) <= \<const0>\;
  LOCKSTEP_Out(3438) <= \<const0>\;
  LOCKSTEP_Out(3439) <= \<const0>\;
  LOCKSTEP_Out(3440) <= \<const0>\;
  LOCKSTEP_Out(3441) <= \<const0>\;
  LOCKSTEP_Out(3442) <= \<const0>\;
  LOCKSTEP_Out(3443) <= \<const0>\;
  LOCKSTEP_Out(3444) <= \<const0>\;
  LOCKSTEP_Out(3445) <= \<const0>\;
  LOCKSTEP_Out(3446) <= \<const0>\;
  LOCKSTEP_Out(3447) <= \<const0>\;
  LOCKSTEP_Out(3448) <= \<const0>\;
  LOCKSTEP_Out(3449) <= \<const0>\;
  LOCKSTEP_Out(3450) <= \<const0>\;
  LOCKSTEP_Out(3451) <= \<const0>\;
  LOCKSTEP_Out(3452) <= \<const0>\;
  LOCKSTEP_Out(3453) <= \<const0>\;
  LOCKSTEP_Out(3454) <= \<const0>\;
  LOCKSTEP_Out(3455) <= \<const0>\;
  LOCKSTEP_Out(3456) <= \<const0>\;
  LOCKSTEP_Out(3457) <= \<const0>\;
  LOCKSTEP_Out(3458) <= \<const0>\;
  LOCKSTEP_Out(3459) <= \<const0>\;
  LOCKSTEP_Out(3460) <= \<const0>\;
  LOCKSTEP_Out(3461) <= \<const0>\;
  LOCKSTEP_Out(3462) <= \<const0>\;
  LOCKSTEP_Out(3463) <= \<const0>\;
  LOCKSTEP_Out(3464) <= \<const0>\;
  LOCKSTEP_Out(3465) <= \<const0>\;
  LOCKSTEP_Out(3466) <= \<const0>\;
  LOCKSTEP_Out(3467) <= \<const0>\;
  LOCKSTEP_Out(3468) <= \<const0>\;
  LOCKSTEP_Out(3469) <= \<const0>\;
  LOCKSTEP_Out(3470) <= \<const0>\;
  LOCKSTEP_Out(3471) <= \<const0>\;
  LOCKSTEP_Out(3472) <= \<const0>\;
  LOCKSTEP_Out(3473) <= \<const0>\;
  LOCKSTEP_Out(3474) <= \<const0>\;
  LOCKSTEP_Out(3475) <= \<const0>\;
  LOCKSTEP_Out(3476) <= \<const0>\;
  LOCKSTEP_Out(3477) <= \<const0>\;
  LOCKSTEP_Out(3478) <= \<const0>\;
  LOCKSTEP_Out(3479) <= \<const0>\;
  LOCKSTEP_Out(3480) <= \<const0>\;
  LOCKSTEP_Out(3481) <= \<const0>\;
  LOCKSTEP_Out(3482) <= \<const0>\;
  LOCKSTEP_Out(3483) <= \<const0>\;
  LOCKSTEP_Out(3484) <= \<const0>\;
  LOCKSTEP_Out(3485) <= \<const0>\;
  LOCKSTEP_Out(3486) <= \<const0>\;
  LOCKSTEP_Out(3487) <= \<const0>\;
  LOCKSTEP_Out(3488) <= \<const0>\;
  LOCKSTEP_Out(3489) <= \<const0>\;
  LOCKSTEP_Out(3490) <= \<const0>\;
  LOCKSTEP_Out(3491) <= \<const0>\;
  LOCKSTEP_Out(3492) <= \<const0>\;
  LOCKSTEP_Out(3493) <= \<const0>\;
  LOCKSTEP_Out(3494) <= \<const0>\;
  LOCKSTEP_Out(3495) <= \<const0>\;
  LOCKSTEP_Out(3496) <= \<const0>\;
  LOCKSTEP_Out(3497) <= \<const0>\;
  LOCKSTEP_Out(3498) <= \<const0>\;
  LOCKSTEP_Out(3499) <= \<const0>\;
  LOCKSTEP_Out(3500) <= \<const0>\;
  LOCKSTEP_Out(3501) <= \<const0>\;
  LOCKSTEP_Out(3502) <= \<const0>\;
  LOCKSTEP_Out(3503) <= \<const0>\;
  LOCKSTEP_Out(3504) <= \<const0>\;
  LOCKSTEP_Out(3505) <= \<const0>\;
  LOCKSTEP_Out(3506) <= \<const0>\;
  LOCKSTEP_Out(3507) <= \<const0>\;
  LOCKSTEP_Out(3508) <= \<const0>\;
  LOCKSTEP_Out(3509) <= \<const0>\;
  LOCKSTEP_Out(3510) <= \<const0>\;
  LOCKSTEP_Out(3511) <= \<const0>\;
  LOCKSTEP_Out(3512) <= \<const0>\;
  LOCKSTEP_Out(3513) <= \<const0>\;
  LOCKSTEP_Out(3514) <= \<const0>\;
  LOCKSTEP_Out(3515) <= \<const0>\;
  LOCKSTEP_Out(3516) <= \<const0>\;
  LOCKSTEP_Out(3517) <= \<const0>\;
  LOCKSTEP_Out(3518) <= \<const0>\;
  LOCKSTEP_Out(3519) <= \<const0>\;
  LOCKSTEP_Out(3520) <= \<const0>\;
  LOCKSTEP_Out(3521) <= \<const0>\;
  LOCKSTEP_Out(3522) <= \<const0>\;
  LOCKSTEP_Out(3523) <= \<const0>\;
  LOCKSTEP_Out(3524) <= \<const0>\;
  LOCKSTEP_Out(3525) <= \<const0>\;
  LOCKSTEP_Out(3526) <= \<const0>\;
  LOCKSTEP_Out(3527) <= \<const0>\;
  LOCKSTEP_Out(3528) <= \<const0>\;
  LOCKSTEP_Out(3529) <= \<const0>\;
  LOCKSTEP_Out(3530) <= \<const0>\;
  LOCKSTEP_Out(3531) <= \<const0>\;
  LOCKSTEP_Out(3532) <= \<const0>\;
  LOCKSTEP_Out(3533) <= \<const0>\;
  LOCKSTEP_Out(3534) <= \<const0>\;
  LOCKSTEP_Out(3535) <= \<const0>\;
  LOCKSTEP_Out(3536) <= \<const0>\;
  LOCKSTEP_Out(3537) <= \<const0>\;
  LOCKSTEP_Out(3538) <= \<const0>\;
  LOCKSTEP_Out(3539) <= \<const0>\;
  LOCKSTEP_Out(3540) <= \<const0>\;
  LOCKSTEP_Out(3541) <= \<const0>\;
  LOCKSTEP_Out(3542) <= \<const0>\;
  LOCKSTEP_Out(3543) <= \<const0>\;
  LOCKSTEP_Out(3544) <= \<const0>\;
  LOCKSTEP_Out(3545) <= \<const0>\;
  LOCKSTEP_Out(3546) <= \<const0>\;
  LOCKSTEP_Out(3547) <= \<const0>\;
  LOCKSTEP_Out(3548) <= \<const0>\;
  LOCKSTEP_Out(3549) <= \<const0>\;
  LOCKSTEP_Out(3550) <= \<const0>\;
  LOCKSTEP_Out(3551) <= \<const0>\;
  LOCKSTEP_Out(3552) <= \<const0>\;
  LOCKSTEP_Out(3553) <= \<const0>\;
  LOCKSTEP_Out(3554) <= \<const0>\;
  LOCKSTEP_Out(3555) <= \<const0>\;
  LOCKSTEP_Out(3556) <= \<const0>\;
  LOCKSTEP_Out(3557) <= \<const0>\;
  LOCKSTEP_Out(3558) <= \<const0>\;
  LOCKSTEP_Out(3559) <= \<const0>\;
  LOCKSTEP_Out(3560) <= \<const0>\;
  LOCKSTEP_Out(3561) <= \<const0>\;
  LOCKSTEP_Out(3562) <= \<const0>\;
  LOCKSTEP_Out(3563) <= \<const0>\;
  LOCKSTEP_Out(3564) <= \<const0>\;
  LOCKSTEP_Out(3565) <= \<const0>\;
  LOCKSTEP_Out(3566) <= \<const0>\;
  LOCKSTEP_Out(3567) <= \<const0>\;
  LOCKSTEP_Out(3568) <= \<const0>\;
  LOCKSTEP_Out(3569) <= \<const0>\;
  LOCKSTEP_Out(3570) <= \<const0>\;
  LOCKSTEP_Out(3571) <= \<const0>\;
  LOCKSTEP_Out(3572) <= \<const0>\;
  LOCKSTEP_Out(3573) <= \<const0>\;
  LOCKSTEP_Out(3574) <= \<const0>\;
  LOCKSTEP_Out(3575) <= \<const0>\;
  LOCKSTEP_Out(3576) <= \<const0>\;
  LOCKSTEP_Out(3577) <= \<const0>\;
  LOCKSTEP_Out(3578) <= \<const0>\;
  LOCKSTEP_Out(3579) <= \<const0>\;
  LOCKSTEP_Out(3580) <= \<const0>\;
  LOCKSTEP_Out(3581) <= \<const0>\;
  LOCKSTEP_Out(3582) <= \<const0>\;
  LOCKSTEP_Out(3583) <= \<const0>\;
  LOCKSTEP_Out(3584) <= \<const0>\;
  LOCKSTEP_Out(3585) <= \<const0>\;
  LOCKSTEP_Out(3586) <= \<const0>\;
  LOCKSTEP_Out(3587) <= \<const0>\;
  LOCKSTEP_Out(3588) <= \<const0>\;
  LOCKSTEP_Out(3589) <= \<const0>\;
  LOCKSTEP_Out(3590) <= \<const0>\;
  LOCKSTEP_Out(3591) <= \<const0>\;
  LOCKSTEP_Out(3592) <= \<const0>\;
  LOCKSTEP_Out(3593) <= \<const0>\;
  LOCKSTEP_Out(3594) <= \<const0>\;
  LOCKSTEP_Out(3595) <= \<const0>\;
  LOCKSTEP_Out(3596) <= \<const0>\;
  LOCKSTEP_Out(3597) <= \<const0>\;
  LOCKSTEP_Out(3598) <= \<const0>\;
  LOCKSTEP_Out(3599) <= \<const0>\;
  LOCKSTEP_Out(3600) <= \<const0>\;
  LOCKSTEP_Out(3601) <= \<const0>\;
  LOCKSTEP_Out(3602) <= \<const0>\;
  LOCKSTEP_Out(3603) <= \<const0>\;
  LOCKSTEP_Out(3604) <= \<const0>\;
  LOCKSTEP_Out(3605) <= \<const0>\;
  LOCKSTEP_Out(3606) <= \<const0>\;
  LOCKSTEP_Out(3607) <= \<const0>\;
  LOCKSTEP_Out(3608) <= \<const0>\;
  LOCKSTEP_Out(3609) <= \<const0>\;
  LOCKSTEP_Out(3610) <= \<const0>\;
  LOCKSTEP_Out(3611) <= \<const0>\;
  LOCKSTEP_Out(3612) <= \<const0>\;
  LOCKSTEP_Out(3613) <= \<const0>\;
  LOCKSTEP_Out(3614) <= \<const0>\;
  LOCKSTEP_Out(3615) <= \<const0>\;
  LOCKSTEP_Out(3616) <= \<const0>\;
  LOCKSTEP_Out(3617) <= \<const0>\;
  LOCKSTEP_Out(3618) <= \<const0>\;
  LOCKSTEP_Out(3619) <= \<const0>\;
  LOCKSTEP_Out(3620) <= \<const0>\;
  LOCKSTEP_Out(3621) <= \<const0>\;
  LOCKSTEP_Out(3622) <= \<const0>\;
  LOCKSTEP_Out(3623) <= \<const0>\;
  LOCKSTEP_Out(3624) <= \<const0>\;
  LOCKSTEP_Out(3625) <= \<const0>\;
  LOCKSTEP_Out(3626) <= \<const0>\;
  LOCKSTEP_Out(3627) <= \<const0>\;
  LOCKSTEP_Out(3628) <= \<const0>\;
  LOCKSTEP_Out(3629) <= \<const0>\;
  LOCKSTEP_Out(3630) <= \<const0>\;
  LOCKSTEP_Out(3631) <= \<const0>\;
  LOCKSTEP_Out(3632) <= \<const0>\;
  LOCKSTEP_Out(3633) <= \<const0>\;
  LOCKSTEP_Out(3634) <= \<const0>\;
  LOCKSTEP_Out(3635) <= \<const0>\;
  LOCKSTEP_Out(3636) <= \<const0>\;
  LOCKSTEP_Out(3637) <= \<const0>\;
  LOCKSTEP_Out(3638) <= \<const0>\;
  LOCKSTEP_Out(3639) <= \<const0>\;
  LOCKSTEP_Out(3640) <= \<const0>\;
  LOCKSTEP_Out(3641) <= \<const0>\;
  LOCKSTEP_Out(3642) <= \<const0>\;
  LOCKSTEP_Out(3643) <= \<const0>\;
  LOCKSTEP_Out(3644) <= \<const0>\;
  LOCKSTEP_Out(3645) <= \<const0>\;
  LOCKSTEP_Out(3646) <= \<const0>\;
  LOCKSTEP_Out(3647) <= \<const0>\;
  LOCKSTEP_Out(3648) <= \<const0>\;
  LOCKSTEP_Out(3649) <= \<const0>\;
  LOCKSTEP_Out(3650) <= \<const0>\;
  LOCKSTEP_Out(3651) <= \<const0>\;
  LOCKSTEP_Out(3652) <= \<const0>\;
  LOCKSTEP_Out(3653) <= \<const0>\;
  LOCKSTEP_Out(3654) <= \<const0>\;
  LOCKSTEP_Out(3655) <= \<const0>\;
  LOCKSTEP_Out(3656) <= \<const0>\;
  LOCKSTEP_Out(3657) <= \<const0>\;
  LOCKSTEP_Out(3658) <= \<const0>\;
  LOCKSTEP_Out(3659) <= \<const0>\;
  LOCKSTEP_Out(3660) <= \<const0>\;
  LOCKSTEP_Out(3661) <= \<const0>\;
  LOCKSTEP_Out(3662) <= \<const0>\;
  LOCKSTEP_Out(3663) <= \<const0>\;
  LOCKSTEP_Out(3664) <= \<const0>\;
  LOCKSTEP_Out(3665) <= \<const0>\;
  LOCKSTEP_Out(3666) <= \<const0>\;
  LOCKSTEP_Out(3667) <= \<const0>\;
  LOCKSTEP_Out(3668) <= \<const0>\;
  LOCKSTEP_Out(3669) <= \<const0>\;
  LOCKSTEP_Out(3670) <= \<const0>\;
  LOCKSTEP_Out(3671) <= \<const0>\;
  LOCKSTEP_Out(3672) <= \<const0>\;
  LOCKSTEP_Out(3673) <= \<const0>\;
  LOCKSTEP_Out(3674) <= \<const0>\;
  LOCKSTEP_Out(3675) <= \<const0>\;
  LOCKSTEP_Out(3676) <= \<const0>\;
  LOCKSTEP_Out(3677) <= \<const0>\;
  LOCKSTEP_Out(3678) <= \<const0>\;
  LOCKSTEP_Out(3679) <= \<const0>\;
  LOCKSTEP_Out(3680) <= \<const0>\;
  LOCKSTEP_Out(3681) <= \<const0>\;
  LOCKSTEP_Out(3682) <= \<const0>\;
  LOCKSTEP_Out(3683) <= \<const0>\;
  LOCKSTEP_Out(3684) <= \<const0>\;
  LOCKSTEP_Out(3685) <= \<const0>\;
  LOCKSTEP_Out(3686) <= \<const0>\;
  LOCKSTEP_Out(3687) <= \<const0>\;
  LOCKSTEP_Out(3688) <= \<const0>\;
  LOCKSTEP_Out(3689) <= \<const0>\;
  LOCKSTEP_Out(3690) <= \<const0>\;
  LOCKSTEP_Out(3691) <= \<const0>\;
  LOCKSTEP_Out(3692) <= \<const0>\;
  LOCKSTEP_Out(3693) <= \<const0>\;
  LOCKSTEP_Out(3694) <= \<const0>\;
  LOCKSTEP_Out(3695) <= \<const0>\;
  LOCKSTEP_Out(3696) <= \<const0>\;
  LOCKSTEP_Out(3697) <= \<const0>\;
  LOCKSTEP_Out(3698) <= \<const0>\;
  LOCKSTEP_Out(3699) <= \<const0>\;
  LOCKSTEP_Out(3700) <= \<const0>\;
  LOCKSTEP_Out(3701) <= \<const0>\;
  LOCKSTEP_Out(3702) <= \<const0>\;
  LOCKSTEP_Out(3703) <= \<const0>\;
  LOCKSTEP_Out(3704) <= \<const0>\;
  LOCKSTEP_Out(3705) <= \<const0>\;
  LOCKSTEP_Out(3706) <= \<const0>\;
  LOCKSTEP_Out(3707) <= \<const0>\;
  LOCKSTEP_Out(3708) <= \<const0>\;
  LOCKSTEP_Out(3709) <= \<const0>\;
  LOCKSTEP_Out(3710) <= \<const0>\;
  LOCKSTEP_Out(3711) <= \<const0>\;
  LOCKSTEP_Out(3712) <= \<const0>\;
  LOCKSTEP_Out(3713) <= \<const0>\;
  LOCKSTEP_Out(3714) <= \<const0>\;
  LOCKSTEP_Out(3715) <= \<const0>\;
  LOCKSTEP_Out(3716) <= \<const0>\;
  LOCKSTEP_Out(3717) <= \<const0>\;
  LOCKSTEP_Out(3718) <= \<const0>\;
  LOCKSTEP_Out(3719) <= \<const0>\;
  LOCKSTEP_Out(3720) <= \<const0>\;
  LOCKSTEP_Out(3721) <= \<const0>\;
  LOCKSTEP_Out(3722) <= \<const0>\;
  LOCKSTEP_Out(3723) <= \<const0>\;
  LOCKSTEP_Out(3724) <= \<const0>\;
  LOCKSTEP_Out(3725) <= \<const0>\;
  LOCKSTEP_Out(3726) <= \<const0>\;
  LOCKSTEP_Out(3727) <= \<const0>\;
  LOCKSTEP_Out(3728) <= \<const0>\;
  LOCKSTEP_Out(3729) <= \<const0>\;
  LOCKSTEP_Out(3730) <= \<const0>\;
  LOCKSTEP_Out(3731) <= \<const0>\;
  LOCKSTEP_Out(3732) <= \<const0>\;
  LOCKSTEP_Out(3733) <= \<const0>\;
  LOCKSTEP_Out(3734) <= \<const0>\;
  LOCKSTEP_Out(3735) <= \<const0>\;
  LOCKSTEP_Out(3736) <= \<const0>\;
  LOCKSTEP_Out(3737) <= \<const0>\;
  LOCKSTEP_Out(3738) <= \<const0>\;
  LOCKSTEP_Out(3739) <= \<const0>\;
  LOCKSTEP_Out(3740) <= \<const0>\;
  LOCKSTEP_Out(3741) <= \<const0>\;
  LOCKSTEP_Out(3742) <= \<const0>\;
  LOCKSTEP_Out(3743) <= \<const0>\;
  LOCKSTEP_Out(3744) <= \<const0>\;
  LOCKSTEP_Out(3745) <= \<const0>\;
  LOCKSTEP_Out(3746) <= \<const0>\;
  LOCKSTEP_Out(3747) <= \<const0>\;
  LOCKSTEP_Out(3748) <= \<const0>\;
  LOCKSTEP_Out(3749) <= \<const0>\;
  LOCKSTEP_Out(3750) <= \<const0>\;
  LOCKSTEP_Out(3751) <= \<const0>\;
  LOCKSTEP_Out(3752) <= \<const0>\;
  LOCKSTEP_Out(3753) <= \<const0>\;
  LOCKSTEP_Out(3754) <= \<const0>\;
  LOCKSTEP_Out(3755) <= \<const0>\;
  LOCKSTEP_Out(3756) <= \<const0>\;
  LOCKSTEP_Out(3757) <= \<const0>\;
  LOCKSTEP_Out(3758) <= \<const0>\;
  LOCKSTEP_Out(3759) <= \<const0>\;
  LOCKSTEP_Out(3760) <= \<const0>\;
  LOCKSTEP_Out(3761) <= \<const0>\;
  LOCKSTEP_Out(3762) <= \<const0>\;
  LOCKSTEP_Out(3763) <= \<const0>\;
  LOCKSTEP_Out(3764) <= \<const0>\;
  LOCKSTEP_Out(3765) <= \<const0>\;
  LOCKSTEP_Out(3766) <= \<const0>\;
  LOCKSTEP_Out(3767) <= \<const0>\;
  LOCKSTEP_Out(3768) <= \<const0>\;
  LOCKSTEP_Out(3769) <= \<const0>\;
  LOCKSTEP_Out(3770) <= \<const0>\;
  LOCKSTEP_Out(3771) <= \<const0>\;
  LOCKSTEP_Out(3772) <= \<const0>\;
  LOCKSTEP_Out(3773) <= \<const0>\;
  LOCKSTEP_Out(3774) <= \<const0>\;
  LOCKSTEP_Out(3775) <= \<const0>\;
  LOCKSTEP_Out(3776) <= \<const0>\;
  LOCKSTEP_Out(3777) <= \<const0>\;
  LOCKSTEP_Out(3778) <= \<const0>\;
  LOCKSTEP_Out(3779) <= \<const0>\;
  LOCKSTEP_Out(3780) <= \<const0>\;
  LOCKSTEP_Out(3781) <= \<const0>\;
  LOCKSTEP_Out(3782) <= \<const0>\;
  LOCKSTEP_Out(3783) <= \<const0>\;
  LOCKSTEP_Out(3784) <= \<const0>\;
  LOCKSTEP_Out(3785) <= \<const0>\;
  LOCKSTEP_Out(3786) <= \<const0>\;
  LOCKSTEP_Out(3787) <= \<const0>\;
  LOCKSTEP_Out(3788) <= \<const0>\;
  LOCKSTEP_Out(3789) <= \<const0>\;
  LOCKSTEP_Out(3790) <= \<const0>\;
  LOCKSTEP_Out(3791) <= \<const0>\;
  LOCKSTEP_Out(3792) <= \<const0>\;
  LOCKSTEP_Out(3793) <= \<const0>\;
  LOCKSTEP_Out(3794) <= \<const0>\;
  LOCKSTEP_Out(3795) <= \<const0>\;
  LOCKSTEP_Out(3796) <= \<const0>\;
  LOCKSTEP_Out(3797) <= \<const0>\;
  LOCKSTEP_Out(3798) <= \<const0>\;
  LOCKSTEP_Out(3799) <= \<const0>\;
  LOCKSTEP_Out(3800) <= \<const0>\;
  LOCKSTEP_Out(3801) <= \<const0>\;
  LOCKSTEP_Out(3802) <= \<const0>\;
  LOCKSTEP_Out(3803) <= \<const0>\;
  LOCKSTEP_Out(3804) <= \<const0>\;
  LOCKSTEP_Out(3805) <= \<const0>\;
  LOCKSTEP_Out(3806) <= \<const0>\;
  LOCKSTEP_Out(3807) <= \<const0>\;
  LOCKSTEP_Out(3808) <= \<const0>\;
  LOCKSTEP_Out(3809) <= \<const0>\;
  LOCKSTEP_Out(3810) <= \<const0>\;
  LOCKSTEP_Out(3811) <= \<const0>\;
  LOCKSTEP_Out(3812) <= \<const0>\;
  LOCKSTEP_Out(3813) <= \<const0>\;
  LOCKSTEP_Out(3814) <= \<const0>\;
  LOCKSTEP_Out(3815) <= \<const0>\;
  LOCKSTEP_Out(3816) <= \<const0>\;
  LOCKSTEP_Out(3817) <= \<const0>\;
  LOCKSTEP_Out(3818) <= \<const0>\;
  LOCKSTEP_Out(3819) <= \<const0>\;
  LOCKSTEP_Out(3820) <= \<const0>\;
  LOCKSTEP_Out(3821) <= \<const0>\;
  LOCKSTEP_Out(3822) <= \<const0>\;
  LOCKSTEP_Out(3823) <= \<const0>\;
  LOCKSTEP_Out(3824) <= \<const0>\;
  LOCKSTEP_Out(3825) <= \<const0>\;
  LOCKSTEP_Out(3826) <= \<const0>\;
  LOCKSTEP_Out(3827) <= \<const0>\;
  LOCKSTEP_Out(3828) <= \<const0>\;
  LOCKSTEP_Out(3829) <= \<const0>\;
  LOCKSTEP_Out(3830) <= \<const0>\;
  LOCKSTEP_Out(3831) <= \<const0>\;
  LOCKSTEP_Out(3832) <= \<const0>\;
  LOCKSTEP_Out(3833) <= \<const0>\;
  LOCKSTEP_Out(3834) <= \<const0>\;
  LOCKSTEP_Out(3835) <= \<const0>\;
  LOCKSTEP_Out(3836) <= \<const0>\;
  LOCKSTEP_Out(3837) <= \<const0>\;
  LOCKSTEP_Out(3838) <= \<const0>\;
  LOCKSTEP_Out(3839) <= \<const0>\;
  LOCKSTEP_Out(3840) <= \<const0>\;
  LOCKSTEP_Out(3841) <= \<const0>\;
  LOCKSTEP_Out(3842) <= \<const0>\;
  LOCKSTEP_Out(3843) <= \<const0>\;
  LOCKSTEP_Out(3844) <= \<const0>\;
  LOCKSTEP_Out(3845) <= \<const0>\;
  LOCKSTEP_Out(3846) <= \<const0>\;
  LOCKSTEP_Out(3847) <= \<const0>\;
  LOCKSTEP_Out(3848) <= \<const0>\;
  LOCKSTEP_Out(3849) <= \<const0>\;
  LOCKSTEP_Out(3850) <= \<const0>\;
  LOCKSTEP_Out(3851) <= \<const0>\;
  LOCKSTEP_Out(3852) <= \<const0>\;
  LOCKSTEP_Out(3853) <= \<const0>\;
  LOCKSTEP_Out(3854) <= \<const0>\;
  LOCKSTEP_Out(3855) <= \<const0>\;
  LOCKSTEP_Out(3856) <= \<const0>\;
  LOCKSTEP_Out(3857) <= \<const0>\;
  LOCKSTEP_Out(3858) <= \<const0>\;
  LOCKSTEP_Out(3859) <= \<const0>\;
  LOCKSTEP_Out(3860) <= \<const0>\;
  LOCKSTEP_Out(3861) <= \<const0>\;
  LOCKSTEP_Out(3862) <= \<const0>\;
  LOCKSTEP_Out(3863) <= \<const0>\;
  LOCKSTEP_Out(3864) <= \<const0>\;
  LOCKSTEP_Out(3865) <= \<const0>\;
  LOCKSTEP_Out(3866) <= \<const0>\;
  LOCKSTEP_Out(3867) <= \<const0>\;
  LOCKSTEP_Out(3868) <= \<const0>\;
  LOCKSTEP_Out(3869) <= \<const0>\;
  LOCKSTEP_Out(3870) <= \<const0>\;
  LOCKSTEP_Out(3871) <= \<const0>\;
  LOCKSTEP_Out(3872) <= \<const0>\;
  LOCKSTEP_Out(3873) <= \<const0>\;
  LOCKSTEP_Out(3874) <= \<const0>\;
  LOCKSTEP_Out(3875) <= \<const0>\;
  LOCKSTEP_Out(3876) <= \<const0>\;
  LOCKSTEP_Out(3877) <= \<const0>\;
  LOCKSTEP_Out(3878) <= \<const0>\;
  LOCKSTEP_Out(3879) <= \<const0>\;
  LOCKSTEP_Out(3880) <= \<const0>\;
  LOCKSTEP_Out(3881) <= \<const0>\;
  LOCKSTEP_Out(3882) <= \<const0>\;
  LOCKSTEP_Out(3883) <= \<const0>\;
  LOCKSTEP_Out(3884) <= \<const0>\;
  LOCKSTEP_Out(3885) <= \<const0>\;
  LOCKSTEP_Out(3886) <= \<const0>\;
  LOCKSTEP_Out(3887) <= \<const0>\;
  LOCKSTEP_Out(3888) <= \<const0>\;
  LOCKSTEP_Out(3889) <= \<const0>\;
  LOCKSTEP_Out(3890) <= \<const0>\;
  LOCKSTEP_Out(3891) <= \<const0>\;
  LOCKSTEP_Out(3892) <= \<const0>\;
  LOCKSTEP_Out(3893) <= \<const0>\;
  LOCKSTEP_Out(3894) <= \<const0>\;
  LOCKSTEP_Out(3895) <= \<const0>\;
  LOCKSTEP_Out(3896) <= \<const0>\;
  LOCKSTEP_Out(3897) <= \<const0>\;
  LOCKSTEP_Out(3898) <= \<const0>\;
  LOCKSTEP_Out(3899) <= \<const0>\;
  LOCKSTEP_Out(3900) <= \<const0>\;
  LOCKSTEP_Out(3901) <= \<const0>\;
  LOCKSTEP_Out(3902) <= \<const0>\;
  LOCKSTEP_Out(3903) <= \<const0>\;
  LOCKSTEP_Out(3904) <= \<const0>\;
  LOCKSTEP_Out(3905) <= \<const0>\;
  LOCKSTEP_Out(3906) <= \<const0>\;
  LOCKSTEP_Out(3907) <= \<const0>\;
  LOCKSTEP_Out(3908) <= \<const0>\;
  LOCKSTEP_Out(3909) <= \<const0>\;
  LOCKSTEP_Out(3910) <= \<const0>\;
  LOCKSTEP_Out(3911) <= \<const0>\;
  LOCKSTEP_Out(3912) <= \<const0>\;
  LOCKSTEP_Out(3913) <= \<const0>\;
  LOCKSTEP_Out(3914) <= \<const0>\;
  LOCKSTEP_Out(3915) <= \<const0>\;
  LOCKSTEP_Out(3916) <= \<const0>\;
  LOCKSTEP_Out(3917) <= \<const0>\;
  LOCKSTEP_Out(3918) <= \<const0>\;
  LOCKSTEP_Out(3919) <= \<const0>\;
  LOCKSTEP_Out(3920) <= \<const0>\;
  LOCKSTEP_Out(3921) <= \<const0>\;
  LOCKSTEP_Out(3922) <= \<const0>\;
  LOCKSTEP_Out(3923) <= \<const0>\;
  LOCKSTEP_Out(3924) <= \<const0>\;
  LOCKSTEP_Out(3925) <= \<const0>\;
  LOCKSTEP_Out(3926) <= \<const0>\;
  LOCKSTEP_Out(3927) <= \<const0>\;
  LOCKSTEP_Out(3928) <= \<const0>\;
  LOCKSTEP_Out(3929) <= \<const0>\;
  LOCKSTEP_Out(3930) <= \<const0>\;
  LOCKSTEP_Out(3931) <= \<const0>\;
  LOCKSTEP_Out(3932) <= \<const0>\;
  LOCKSTEP_Out(3933) <= \<const0>\;
  LOCKSTEP_Out(3934) <= \<const0>\;
  LOCKSTEP_Out(3935) <= \<const0>\;
  LOCKSTEP_Out(3936) <= \<const0>\;
  LOCKSTEP_Out(3937) <= \<const0>\;
  LOCKSTEP_Out(3938) <= \<const0>\;
  LOCKSTEP_Out(3939) <= \<const0>\;
  LOCKSTEP_Out(3940) <= \<const0>\;
  LOCKSTEP_Out(3941) <= \<const0>\;
  LOCKSTEP_Out(3942) <= \<const0>\;
  LOCKSTEP_Out(3943) <= \<const0>\;
  LOCKSTEP_Out(3944) <= \<const0>\;
  LOCKSTEP_Out(3945) <= \<const0>\;
  LOCKSTEP_Out(3946) <= \<const0>\;
  LOCKSTEP_Out(3947) <= \<const0>\;
  LOCKSTEP_Out(3948) <= \<const0>\;
  LOCKSTEP_Out(3949) <= \<const0>\;
  LOCKSTEP_Out(3950) <= \<const0>\;
  LOCKSTEP_Out(3951) <= \<const0>\;
  LOCKSTEP_Out(3952) <= \<const0>\;
  LOCKSTEP_Out(3953) <= \<const0>\;
  LOCKSTEP_Out(3954) <= \<const0>\;
  LOCKSTEP_Out(3955) <= \<const0>\;
  LOCKSTEP_Out(3956) <= \<const0>\;
  LOCKSTEP_Out(3957) <= \<const0>\;
  LOCKSTEP_Out(3958) <= \<const0>\;
  LOCKSTEP_Out(3959) <= \<const0>\;
  LOCKSTEP_Out(3960) <= \<const0>\;
  LOCKSTEP_Out(3961) <= \<const0>\;
  LOCKSTEP_Out(3962) <= \<const0>\;
  LOCKSTEP_Out(3963) <= \<const0>\;
  LOCKSTEP_Out(3964) <= \<const0>\;
  LOCKSTEP_Out(3965) <= \<const0>\;
  LOCKSTEP_Out(3966) <= \<const0>\;
  LOCKSTEP_Out(3967) <= \<const0>\;
  LOCKSTEP_Out(3968) <= \<const0>\;
  LOCKSTEP_Out(3969) <= \<const0>\;
  LOCKSTEP_Out(3970) <= \<const0>\;
  LOCKSTEP_Out(3971) <= \<const0>\;
  LOCKSTEP_Out(3972) <= \<const0>\;
  LOCKSTEP_Out(3973) <= \<const0>\;
  LOCKSTEP_Out(3974) <= \<const0>\;
  LOCKSTEP_Out(3975) <= \<const0>\;
  LOCKSTEP_Out(3976) <= \<const0>\;
  LOCKSTEP_Out(3977) <= \<const0>\;
  LOCKSTEP_Out(3978) <= \<const0>\;
  LOCKSTEP_Out(3979) <= \<const0>\;
  LOCKSTEP_Out(3980) <= \<const0>\;
  LOCKSTEP_Out(3981) <= \<const0>\;
  LOCKSTEP_Out(3982) <= \<const0>\;
  LOCKSTEP_Out(3983) <= \<const0>\;
  LOCKSTEP_Out(3984) <= \<const0>\;
  LOCKSTEP_Out(3985) <= \<const0>\;
  LOCKSTEP_Out(3986) <= \<const0>\;
  LOCKSTEP_Out(3987) <= \<const0>\;
  LOCKSTEP_Out(3988) <= \<const0>\;
  LOCKSTEP_Out(3989) <= \<const0>\;
  LOCKSTEP_Out(3990) <= \<const0>\;
  LOCKSTEP_Out(3991) <= \<const0>\;
  LOCKSTEP_Out(3992) <= \<const0>\;
  LOCKSTEP_Out(3993) <= \<const0>\;
  LOCKSTEP_Out(3994) <= \<const0>\;
  LOCKSTEP_Out(3995) <= \<const0>\;
  LOCKSTEP_Out(3996) <= \<const0>\;
  LOCKSTEP_Out(3997) <= \<const0>\;
  LOCKSTEP_Out(3998) <= \<const0>\;
  LOCKSTEP_Out(3999) <= \<const0>\;
  LOCKSTEP_Out(4000) <= \<const0>\;
  LOCKSTEP_Out(4001) <= \<const0>\;
  LOCKSTEP_Out(4002) <= \<const0>\;
  LOCKSTEP_Out(4003) <= \<const0>\;
  LOCKSTEP_Out(4004) <= \<const0>\;
  LOCKSTEP_Out(4005) <= \<const0>\;
  LOCKSTEP_Out(4006) <= \<const0>\;
  LOCKSTEP_Out(4007) <= \<const0>\;
  LOCKSTEP_Out(4008) <= \<const0>\;
  LOCKSTEP_Out(4009) <= \<const0>\;
  LOCKSTEP_Out(4010) <= \<const0>\;
  LOCKSTEP_Out(4011) <= \<const0>\;
  LOCKSTEP_Out(4012) <= \<const0>\;
  LOCKSTEP_Out(4013) <= \<const0>\;
  LOCKSTEP_Out(4014) <= \<const0>\;
  LOCKSTEP_Out(4015) <= \<const0>\;
  LOCKSTEP_Out(4016) <= \<const0>\;
  LOCKSTEP_Out(4017) <= \<const0>\;
  LOCKSTEP_Out(4018) <= \<const0>\;
  LOCKSTEP_Out(4019) <= \<const0>\;
  LOCKSTEP_Out(4020) <= \<const0>\;
  LOCKSTEP_Out(4021) <= \<const0>\;
  LOCKSTEP_Out(4022) <= \<const0>\;
  LOCKSTEP_Out(4023) <= \<const0>\;
  LOCKSTEP_Out(4024) <= \<const0>\;
  LOCKSTEP_Out(4025) <= \<const0>\;
  LOCKSTEP_Out(4026) <= \<const0>\;
  LOCKSTEP_Out(4027) <= \<const0>\;
  LOCKSTEP_Out(4028) <= \<const0>\;
  LOCKSTEP_Out(4029) <= \<const0>\;
  LOCKSTEP_Out(4030) <= \<const0>\;
  LOCKSTEP_Out(4031) <= \<const0>\;
  LOCKSTEP_Out(4032) <= \<const0>\;
  LOCKSTEP_Out(4033) <= \<const0>\;
  LOCKSTEP_Out(4034) <= \<const0>\;
  LOCKSTEP_Out(4035) <= \<const0>\;
  LOCKSTEP_Out(4036) <= \<const0>\;
  LOCKSTEP_Out(4037) <= \<const0>\;
  LOCKSTEP_Out(4038) <= \<const0>\;
  LOCKSTEP_Out(4039) <= \<const0>\;
  LOCKSTEP_Out(4040) <= \<const0>\;
  LOCKSTEP_Out(4041) <= \<const0>\;
  LOCKSTEP_Out(4042) <= \<const0>\;
  LOCKSTEP_Out(4043) <= \<const0>\;
  LOCKSTEP_Out(4044) <= \<const0>\;
  LOCKSTEP_Out(4045) <= \<const0>\;
  LOCKSTEP_Out(4046) <= \<const0>\;
  LOCKSTEP_Out(4047) <= \<const0>\;
  LOCKSTEP_Out(4048) <= \<const0>\;
  LOCKSTEP_Out(4049) <= \<const0>\;
  LOCKSTEP_Out(4050) <= \<const0>\;
  LOCKSTEP_Out(4051) <= \<const0>\;
  LOCKSTEP_Out(4052) <= \<const0>\;
  LOCKSTEP_Out(4053) <= \<const0>\;
  LOCKSTEP_Out(4054) <= \<const0>\;
  LOCKSTEP_Out(4055) <= \<const0>\;
  LOCKSTEP_Out(4056) <= \<const0>\;
  LOCKSTEP_Out(4057) <= \<const0>\;
  LOCKSTEP_Out(4058) <= \<const0>\;
  LOCKSTEP_Out(4059) <= \<const0>\;
  LOCKSTEP_Out(4060) <= \<const0>\;
  LOCKSTEP_Out(4061) <= \<const0>\;
  LOCKSTEP_Out(4062) <= \<const0>\;
  LOCKSTEP_Out(4063) <= \<const0>\;
  LOCKSTEP_Out(4064) <= \<const0>\;
  LOCKSTEP_Out(4065) <= \<const0>\;
  LOCKSTEP_Out(4066) <= \<const0>\;
  LOCKSTEP_Out(4067) <= \<const0>\;
  LOCKSTEP_Out(4068) <= \<const0>\;
  LOCKSTEP_Out(4069) <= \<const0>\;
  LOCKSTEP_Out(4070) <= \<const0>\;
  LOCKSTEP_Out(4071) <= \<const0>\;
  LOCKSTEP_Out(4072) <= \<const0>\;
  LOCKSTEP_Out(4073) <= \<const0>\;
  LOCKSTEP_Out(4074) <= \<const0>\;
  LOCKSTEP_Out(4075) <= \<const0>\;
  LOCKSTEP_Out(4076) <= \<const0>\;
  LOCKSTEP_Out(4077) <= \<const0>\;
  LOCKSTEP_Out(4078) <= \<const0>\;
  LOCKSTEP_Out(4079) <= \<const0>\;
  LOCKSTEP_Out(4080) <= \<const0>\;
  LOCKSTEP_Out(4081) <= \<const0>\;
  LOCKSTEP_Out(4082) <= \<const0>\;
  LOCKSTEP_Out(4083) <= \<const0>\;
  LOCKSTEP_Out(4084) <= \<const0>\;
  LOCKSTEP_Out(4085) <= \<const0>\;
  LOCKSTEP_Out(4086) <= \<const0>\;
  LOCKSTEP_Out(4087) <= \<const0>\;
  LOCKSTEP_Out(4088) <= \<const0>\;
  LOCKSTEP_Out(4089) <= \<const0>\;
  LOCKSTEP_Out(4090) <= \<const0>\;
  LOCKSTEP_Out(4091) <= \<const0>\;
  LOCKSTEP_Out(4092) <= \<const0>\;
  LOCKSTEP_Out(4093) <= \<const0>\;
  LOCKSTEP_Out(4094) <= \<const0>\;
  LOCKSTEP_Out(4095) <= \<const0>\;
  M0_AXIS_TDATA(31) <= \<const0>\;
  M0_AXIS_TDATA(30) <= \<const0>\;
  M0_AXIS_TDATA(29) <= \<const0>\;
  M0_AXIS_TDATA(28) <= \<const0>\;
  M0_AXIS_TDATA(27) <= \<const0>\;
  M0_AXIS_TDATA(26) <= \<const0>\;
  M0_AXIS_TDATA(25) <= \<const0>\;
  M0_AXIS_TDATA(24) <= \<const0>\;
  M0_AXIS_TDATA(23) <= \<const0>\;
  M0_AXIS_TDATA(22) <= \<const0>\;
  M0_AXIS_TDATA(21) <= \<const0>\;
  M0_AXIS_TDATA(20) <= \<const0>\;
  M0_AXIS_TDATA(19) <= \<const0>\;
  M0_AXIS_TDATA(18) <= \<const0>\;
  M0_AXIS_TDATA(17) <= \<const0>\;
  M0_AXIS_TDATA(16) <= \<const0>\;
  M0_AXIS_TDATA(15) <= \<const0>\;
  M0_AXIS_TDATA(14) <= \<const0>\;
  M0_AXIS_TDATA(13) <= \<const0>\;
  M0_AXIS_TDATA(12) <= \<const0>\;
  M0_AXIS_TDATA(11) <= \<const0>\;
  M0_AXIS_TDATA(10) <= \<const0>\;
  M0_AXIS_TDATA(9) <= \<const0>\;
  M0_AXIS_TDATA(8) <= \<const0>\;
  M0_AXIS_TDATA(7) <= \<const0>\;
  M0_AXIS_TDATA(6) <= \<const0>\;
  M0_AXIS_TDATA(5) <= \<const0>\;
  M0_AXIS_TDATA(4) <= \<const0>\;
  M0_AXIS_TDATA(3) <= \<const0>\;
  M0_AXIS_TDATA(2) <= \<const0>\;
  M0_AXIS_TDATA(1) <= \<const0>\;
  M0_AXIS_TDATA(0) <= \<const0>\;
  M0_AXIS_TLAST <= \<const0>\;
  M0_AXIS_TVALID <= \<const0>\;
  M10_AXIS_TDATA(31) <= \<const0>\;
  M10_AXIS_TDATA(30) <= \<const0>\;
  M10_AXIS_TDATA(29) <= \<const0>\;
  M10_AXIS_TDATA(28) <= \<const0>\;
  M10_AXIS_TDATA(27) <= \<const0>\;
  M10_AXIS_TDATA(26) <= \<const0>\;
  M10_AXIS_TDATA(25) <= \<const0>\;
  M10_AXIS_TDATA(24) <= \<const0>\;
  M10_AXIS_TDATA(23) <= \<const0>\;
  M10_AXIS_TDATA(22) <= \<const0>\;
  M10_AXIS_TDATA(21) <= \<const0>\;
  M10_AXIS_TDATA(20) <= \<const0>\;
  M10_AXIS_TDATA(19) <= \<const0>\;
  M10_AXIS_TDATA(18) <= \<const0>\;
  M10_AXIS_TDATA(17) <= \<const0>\;
  M10_AXIS_TDATA(16) <= \<const0>\;
  M10_AXIS_TDATA(15) <= \<const0>\;
  M10_AXIS_TDATA(14) <= \<const0>\;
  M10_AXIS_TDATA(13) <= \<const0>\;
  M10_AXIS_TDATA(12) <= \<const0>\;
  M10_AXIS_TDATA(11) <= \<const0>\;
  M10_AXIS_TDATA(10) <= \<const0>\;
  M10_AXIS_TDATA(9) <= \<const0>\;
  M10_AXIS_TDATA(8) <= \<const0>\;
  M10_AXIS_TDATA(7) <= \<const0>\;
  M10_AXIS_TDATA(6) <= \<const0>\;
  M10_AXIS_TDATA(5) <= \<const0>\;
  M10_AXIS_TDATA(4) <= \<const0>\;
  M10_AXIS_TDATA(3) <= \<const0>\;
  M10_AXIS_TDATA(2) <= \<const0>\;
  M10_AXIS_TDATA(1) <= \<const0>\;
  M10_AXIS_TDATA(0) <= \<const0>\;
  M10_AXIS_TLAST <= \<const0>\;
  M10_AXIS_TVALID <= \<const0>\;
  M11_AXIS_TDATA(31) <= \<const0>\;
  M11_AXIS_TDATA(30) <= \<const0>\;
  M11_AXIS_TDATA(29) <= \<const0>\;
  M11_AXIS_TDATA(28) <= \<const0>\;
  M11_AXIS_TDATA(27) <= \<const0>\;
  M11_AXIS_TDATA(26) <= \<const0>\;
  M11_AXIS_TDATA(25) <= \<const0>\;
  M11_AXIS_TDATA(24) <= \<const0>\;
  M11_AXIS_TDATA(23) <= \<const0>\;
  M11_AXIS_TDATA(22) <= \<const0>\;
  M11_AXIS_TDATA(21) <= \<const0>\;
  M11_AXIS_TDATA(20) <= \<const0>\;
  M11_AXIS_TDATA(19) <= \<const0>\;
  M11_AXIS_TDATA(18) <= \<const0>\;
  M11_AXIS_TDATA(17) <= \<const0>\;
  M11_AXIS_TDATA(16) <= \<const0>\;
  M11_AXIS_TDATA(15) <= \<const0>\;
  M11_AXIS_TDATA(14) <= \<const0>\;
  M11_AXIS_TDATA(13) <= \<const0>\;
  M11_AXIS_TDATA(12) <= \<const0>\;
  M11_AXIS_TDATA(11) <= \<const0>\;
  M11_AXIS_TDATA(10) <= \<const0>\;
  M11_AXIS_TDATA(9) <= \<const0>\;
  M11_AXIS_TDATA(8) <= \<const0>\;
  M11_AXIS_TDATA(7) <= \<const0>\;
  M11_AXIS_TDATA(6) <= \<const0>\;
  M11_AXIS_TDATA(5) <= \<const0>\;
  M11_AXIS_TDATA(4) <= \<const0>\;
  M11_AXIS_TDATA(3) <= \<const0>\;
  M11_AXIS_TDATA(2) <= \<const0>\;
  M11_AXIS_TDATA(1) <= \<const0>\;
  M11_AXIS_TDATA(0) <= \<const0>\;
  M11_AXIS_TLAST <= \<const0>\;
  M11_AXIS_TVALID <= \<const0>\;
  M12_AXIS_TDATA(31) <= \<const0>\;
  M12_AXIS_TDATA(30) <= \<const0>\;
  M12_AXIS_TDATA(29) <= \<const0>\;
  M12_AXIS_TDATA(28) <= \<const0>\;
  M12_AXIS_TDATA(27) <= \<const0>\;
  M12_AXIS_TDATA(26) <= \<const0>\;
  M12_AXIS_TDATA(25) <= \<const0>\;
  M12_AXIS_TDATA(24) <= \<const0>\;
  M12_AXIS_TDATA(23) <= \<const0>\;
  M12_AXIS_TDATA(22) <= \<const0>\;
  M12_AXIS_TDATA(21) <= \<const0>\;
  M12_AXIS_TDATA(20) <= \<const0>\;
  M12_AXIS_TDATA(19) <= \<const0>\;
  M12_AXIS_TDATA(18) <= \<const0>\;
  M12_AXIS_TDATA(17) <= \<const0>\;
  M12_AXIS_TDATA(16) <= \<const0>\;
  M12_AXIS_TDATA(15) <= \<const0>\;
  M12_AXIS_TDATA(14) <= \<const0>\;
  M12_AXIS_TDATA(13) <= \<const0>\;
  M12_AXIS_TDATA(12) <= \<const0>\;
  M12_AXIS_TDATA(11) <= \<const0>\;
  M12_AXIS_TDATA(10) <= \<const0>\;
  M12_AXIS_TDATA(9) <= \<const0>\;
  M12_AXIS_TDATA(8) <= \<const0>\;
  M12_AXIS_TDATA(7) <= \<const0>\;
  M12_AXIS_TDATA(6) <= \<const0>\;
  M12_AXIS_TDATA(5) <= \<const0>\;
  M12_AXIS_TDATA(4) <= \<const0>\;
  M12_AXIS_TDATA(3) <= \<const0>\;
  M12_AXIS_TDATA(2) <= \<const0>\;
  M12_AXIS_TDATA(1) <= \<const0>\;
  M12_AXIS_TDATA(0) <= \<const0>\;
  M12_AXIS_TLAST <= \<const0>\;
  M12_AXIS_TVALID <= \<const0>\;
  M13_AXIS_TDATA(31) <= \<const0>\;
  M13_AXIS_TDATA(30) <= \<const0>\;
  M13_AXIS_TDATA(29) <= \<const0>\;
  M13_AXIS_TDATA(28) <= \<const0>\;
  M13_AXIS_TDATA(27) <= \<const0>\;
  M13_AXIS_TDATA(26) <= \<const0>\;
  M13_AXIS_TDATA(25) <= \<const0>\;
  M13_AXIS_TDATA(24) <= \<const0>\;
  M13_AXIS_TDATA(23) <= \<const0>\;
  M13_AXIS_TDATA(22) <= \<const0>\;
  M13_AXIS_TDATA(21) <= \<const0>\;
  M13_AXIS_TDATA(20) <= \<const0>\;
  M13_AXIS_TDATA(19) <= \<const0>\;
  M13_AXIS_TDATA(18) <= \<const0>\;
  M13_AXIS_TDATA(17) <= \<const0>\;
  M13_AXIS_TDATA(16) <= \<const0>\;
  M13_AXIS_TDATA(15) <= \<const0>\;
  M13_AXIS_TDATA(14) <= \<const0>\;
  M13_AXIS_TDATA(13) <= \<const0>\;
  M13_AXIS_TDATA(12) <= \<const0>\;
  M13_AXIS_TDATA(11) <= \<const0>\;
  M13_AXIS_TDATA(10) <= \<const0>\;
  M13_AXIS_TDATA(9) <= \<const0>\;
  M13_AXIS_TDATA(8) <= \<const0>\;
  M13_AXIS_TDATA(7) <= \<const0>\;
  M13_AXIS_TDATA(6) <= \<const0>\;
  M13_AXIS_TDATA(5) <= \<const0>\;
  M13_AXIS_TDATA(4) <= \<const0>\;
  M13_AXIS_TDATA(3) <= \<const0>\;
  M13_AXIS_TDATA(2) <= \<const0>\;
  M13_AXIS_TDATA(1) <= \<const0>\;
  M13_AXIS_TDATA(0) <= \<const0>\;
  M13_AXIS_TLAST <= \<const0>\;
  M13_AXIS_TVALID <= \<const0>\;
  M14_AXIS_TDATA(31) <= \<const0>\;
  M14_AXIS_TDATA(30) <= \<const0>\;
  M14_AXIS_TDATA(29) <= \<const0>\;
  M14_AXIS_TDATA(28) <= \<const0>\;
  M14_AXIS_TDATA(27) <= \<const0>\;
  M14_AXIS_TDATA(26) <= \<const0>\;
  M14_AXIS_TDATA(25) <= \<const0>\;
  M14_AXIS_TDATA(24) <= \<const0>\;
  M14_AXIS_TDATA(23) <= \<const0>\;
  M14_AXIS_TDATA(22) <= \<const0>\;
  M14_AXIS_TDATA(21) <= \<const0>\;
  M14_AXIS_TDATA(20) <= \<const0>\;
  M14_AXIS_TDATA(19) <= \<const0>\;
  M14_AXIS_TDATA(18) <= \<const0>\;
  M14_AXIS_TDATA(17) <= \<const0>\;
  M14_AXIS_TDATA(16) <= \<const0>\;
  M14_AXIS_TDATA(15) <= \<const0>\;
  M14_AXIS_TDATA(14) <= \<const0>\;
  M14_AXIS_TDATA(13) <= \<const0>\;
  M14_AXIS_TDATA(12) <= \<const0>\;
  M14_AXIS_TDATA(11) <= \<const0>\;
  M14_AXIS_TDATA(10) <= \<const0>\;
  M14_AXIS_TDATA(9) <= \<const0>\;
  M14_AXIS_TDATA(8) <= \<const0>\;
  M14_AXIS_TDATA(7) <= \<const0>\;
  M14_AXIS_TDATA(6) <= \<const0>\;
  M14_AXIS_TDATA(5) <= \<const0>\;
  M14_AXIS_TDATA(4) <= \<const0>\;
  M14_AXIS_TDATA(3) <= \<const0>\;
  M14_AXIS_TDATA(2) <= \<const0>\;
  M14_AXIS_TDATA(1) <= \<const0>\;
  M14_AXIS_TDATA(0) <= \<const0>\;
  M14_AXIS_TLAST <= \<const0>\;
  M14_AXIS_TVALID <= \<const0>\;
  M15_AXIS_TDATA(31) <= \<const0>\;
  M15_AXIS_TDATA(30) <= \<const0>\;
  M15_AXIS_TDATA(29) <= \<const0>\;
  M15_AXIS_TDATA(28) <= \<const0>\;
  M15_AXIS_TDATA(27) <= \<const0>\;
  M15_AXIS_TDATA(26) <= \<const0>\;
  M15_AXIS_TDATA(25) <= \<const0>\;
  M15_AXIS_TDATA(24) <= \<const0>\;
  M15_AXIS_TDATA(23) <= \<const0>\;
  M15_AXIS_TDATA(22) <= \<const0>\;
  M15_AXIS_TDATA(21) <= \<const0>\;
  M15_AXIS_TDATA(20) <= \<const0>\;
  M15_AXIS_TDATA(19) <= \<const0>\;
  M15_AXIS_TDATA(18) <= \<const0>\;
  M15_AXIS_TDATA(17) <= \<const0>\;
  M15_AXIS_TDATA(16) <= \<const0>\;
  M15_AXIS_TDATA(15) <= \<const0>\;
  M15_AXIS_TDATA(14) <= \<const0>\;
  M15_AXIS_TDATA(13) <= \<const0>\;
  M15_AXIS_TDATA(12) <= \<const0>\;
  M15_AXIS_TDATA(11) <= \<const0>\;
  M15_AXIS_TDATA(10) <= \<const0>\;
  M15_AXIS_TDATA(9) <= \<const0>\;
  M15_AXIS_TDATA(8) <= \<const0>\;
  M15_AXIS_TDATA(7) <= \<const0>\;
  M15_AXIS_TDATA(6) <= \<const0>\;
  M15_AXIS_TDATA(5) <= \<const0>\;
  M15_AXIS_TDATA(4) <= \<const0>\;
  M15_AXIS_TDATA(3) <= \<const0>\;
  M15_AXIS_TDATA(2) <= \<const0>\;
  M15_AXIS_TDATA(1) <= \<const0>\;
  M15_AXIS_TDATA(0) <= \<const0>\;
  M15_AXIS_TLAST <= \<const0>\;
  M15_AXIS_TVALID <= \<const0>\;
  M1_AXIS_TDATA(31) <= \<const0>\;
  M1_AXIS_TDATA(30) <= \<const0>\;
  M1_AXIS_TDATA(29) <= \<const0>\;
  M1_AXIS_TDATA(28) <= \<const0>\;
  M1_AXIS_TDATA(27) <= \<const0>\;
  M1_AXIS_TDATA(26) <= \<const0>\;
  M1_AXIS_TDATA(25) <= \<const0>\;
  M1_AXIS_TDATA(24) <= \<const0>\;
  M1_AXIS_TDATA(23) <= \<const0>\;
  M1_AXIS_TDATA(22) <= \<const0>\;
  M1_AXIS_TDATA(21) <= \<const0>\;
  M1_AXIS_TDATA(20) <= \<const0>\;
  M1_AXIS_TDATA(19) <= \<const0>\;
  M1_AXIS_TDATA(18) <= \<const0>\;
  M1_AXIS_TDATA(17) <= \<const0>\;
  M1_AXIS_TDATA(16) <= \<const0>\;
  M1_AXIS_TDATA(15) <= \<const0>\;
  M1_AXIS_TDATA(14) <= \<const0>\;
  M1_AXIS_TDATA(13) <= \<const0>\;
  M1_AXIS_TDATA(12) <= \<const0>\;
  M1_AXIS_TDATA(11) <= \<const0>\;
  M1_AXIS_TDATA(10) <= \<const0>\;
  M1_AXIS_TDATA(9) <= \<const0>\;
  M1_AXIS_TDATA(8) <= \<const0>\;
  M1_AXIS_TDATA(7) <= \<const0>\;
  M1_AXIS_TDATA(6) <= \<const0>\;
  M1_AXIS_TDATA(5) <= \<const0>\;
  M1_AXIS_TDATA(4) <= \<const0>\;
  M1_AXIS_TDATA(3) <= \<const0>\;
  M1_AXIS_TDATA(2) <= \<const0>\;
  M1_AXIS_TDATA(1) <= \<const0>\;
  M1_AXIS_TDATA(0) <= \<const0>\;
  M1_AXIS_TLAST <= \<const0>\;
  M1_AXIS_TVALID <= \<const0>\;
  M2_AXIS_TDATA(31) <= \<const0>\;
  M2_AXIS_TDATA(30) <= \<const0>\;
  M2_AXIS_TDATA(29) <= \<const0>\;
  M2_AXIS_TDATA(28) <= \<const0>\;
  M2_AXIS_TDATA(27) <= \<const0>\;
  M2_AXIS_TDATA(26) <= \<const0>\;
  M2_AXIS_TDATA(25) <= \<const0>\;
  M2_AXIS_TDATA(24) <= \<const0>\;
  M2_AXIS_TDATA(23) <= \<const0>\;
  M2_AXIS_TDATA(22) <= \<const0>\;
  M2_AXIS_TDATA(21) <= \<const0>\;
  M2_AXIS_TDATA(20) <= \<const0>\;
  M2_AXIS_TDATA(19) <= \<const0>\;
  M2_AXIS_TDATA(18) <= \<const0>\;
  M2_AXIS_TDATA(17) <= \<const0>\;
  M2_AXIS_TDATA(16) <= \<const0>\;
  M2_AXIS_TDATA(15) <= \<const0>\;
  M2_AXIS_TDATA(14) <= \<const0>\;
  M2_AXIS_TDATA(13) <= \<const0>\;
  M2_AXIS_TDATA(12) <= \<const0>\;
  M2_AXIS_TDATA(11) <= \<const0>\;
  M2_AXIS_TDATA(10) <= \<const0>\;
  M2_AXIS_TDATA(9) <= \<const0>\;
  M2_AXIS_TDATA(8) <= \<const0>\;
  M2_AXIS_TDATA(7) <= \<const0>\;
  M2_AXIS_TDATA(6) <= \<const0>\;
  M2_AXIS_TDATA(5) <= \<const0>\;
  M2_AXIS_TDATA(4) <= \<const0>\;
  M2_AXIS_TDATA(3) <= \<const0>\;
  M2_AXIS_TDATA(2) <= \<const0>\;
  M2_AXIS_TDATA(1) <= \<const0>\;
  M2_AXIS_TDATA(0) <= \<const0>\;
  M2_AXIS_TLAST <= \<const0>\;
  M2_AXIS_TVALID <= \<const0>\;
  M3_AXIS_TDATA(31) <= \<const0>\;
  M3_AXIS_TDATA(30) <= \<const0>\;
  M3_AXIS_TDATA(29) <= \<const0>\;
  M3_AXIS_TDATA(28) <= \<const0>\;
  M3_AXIS_TDATA(27) <= \<const0>\;
  M3_AXIS_TDATA(26) <= \<const0>\;
  M3_AXIS_TDATA(25) <= \<const0>\;
  M3_AXIS_TDATA(24) <= \<const0>\;
  M3_AXIS_TDATA(23) <= \<const0>\;
  M3_AXIS_TDATA(22) <= \<const0>\;
  M3_AXIS_TDATA(21) <= \<const0>\;
  M3_AXIS_TDATA(20) <= \<const0>\;
  M3_AXIS_TDATA(19) <= \<const0>\;
  M3_AXIS_TDATA(18) <= \<const0>\;
  M3_AXIS_TDATA(17) <= \<const0>\;
  M3_AXIS_TDATA(16) <= \<const0>\;
  M3_AXIS_TDATA(15) <= \<const0>\;
  M3_AXIS_TDATA(14) <= \<const0>\;
  M3_AXIS_TDATA(13) <= \<const0>\;
  M3_AXIS_TDATA(12) <= \<const0>\;
  M3_AXIS_TDATA(11) <= \<const0>\;
  M3_AXIS_TDATA(10) <= \<const0>\;
  M3_AXIS_TDATA(9) <= \<const0>\;
  M3_AXIS_TDATA(8) <= \<const0>\;
  M3_AXIS_TDATA(7) <= \<const0>\;
  M3_AXIS_TDATA(6) <= \<const0>\;
  M3_AXIS_TDATA(5) <= \<const0>\;
  M3_AXIS_TDATA(4) <= \<const0>\;
  M3_AXIS_TDATA(3) <= \<const0>\;
  M3_AXIS_TDATA(2) <= \<const0>\;
  M3_AXIS_TDATA(1) <= \<const0>\;
  M3_AXIS_TDATA(0) <= \<const0>\;
  M3_AXIS_TLAST <= \<const0>\;
  M3_AXIS_TVALID <= \<const0>\;
  M4_AXIS_TDATA(31) <= \<const0>\;
  M4_AXIS_TDATA(30) <= \<const0>\;
  M4_AXIS_TDATA(29) <= \<const0>\;
  M4_AXIS_TDATA(28) <= \<const0>\;
  M4_AXIS_TDATA(27) <= \<const0>\;
  M4_AXIS_TDATA(26) <= \<const0>\;
  M4_AXIS_TDATA(25) <= \<const0>\;
  M4_AXIS_TDATA(24) <= \<const0>\;
  M4_AXIS_TDATA(23) <= \<const0>\;
  M4_AXIS_TDATA(22) <= \<const0>\;
  M4_AXIS_TDATA(21) <= \<const0>\;
  M4_AXIS_TDATA(20) <= \<const0>\;
  M4_AXIS_TDATA(19) <= \<const0>\;
  M4_AXIS_TDATA(18) <= \<const0>\;
  M4_AXIS_TDATA(17) <= \<const0>\;
  M4_AXIS_TDATA(16) <= \<const0>\;
  M4_AXIS_TDATA(15) <= \<const0>\;
  M4_AXIS_TDATA(14) <= \<const0>\;
  M4_AXIS_TDATA(13) <= \<const0>\;
  M4_AXIS_TDATA(12) <= \<const0>\;
  M4_AXIS_TDATA(11) <= \<const0>\;
  M4_AXIS_TDATA(10) <= \<const0>\;
  M4_AXIS_TDATA(9) <= \<const0>\;
  M4_AXIS_TDATA(8) <= \<const0>\;
  M4_AXIS_TDATA(7) <= \<const0>\;
  M4_AXIS_TDATA(6) <= \<const0>\;
  M4_AXIS_TDATA(5) <= \<const0>\;
  M4_AXIS_TDATA(4) <= \<const0>\;
  M4_AXIS_TDATA(3) <= \<const0>\;
  M4_AXIS_TDATA(2) <= \<const0>\;
  M4_AXIS_TDATA(1) <= \<const0>\;
  M4_AXIS_TDATA(0) <= \<const0>\;
  M4_AXIS_TLAST <= \<const0>\;
  M4_AXIS_TVALID <= \<const0>\;
  M5_AXIS_TDATA(31) <= \<const0>\;
  M5_AXIS_TDATA(30) <= \<const0>\;
  M5_AXIS_TDATA(29) <= \<const0>\;
  M5_AXIS_TDATA(28) <= \<const0>\;
  M5_AXIS_TDATA(27) <= \<const0>\;
  M5_AXIS_TDATA(26) <= \<const0>\;
  M5_AXIS_TDATA(25) <= \<const0>\;
  M5_AXIS_TDATA(24) <= \<const0>\;
  M5_AXIS_TDATA(23) <= \<const0>\;
  M5_AXIS_TDATA(22) <= \<const0>\;
  M5_AXIS_TDATA(21) <= \<const0>\;
  M5_AXIS_TDATA(20) <= \<const0>\;
  M5_AXIS_TDATA(19) <= \<const0>\;
  M5_AXIS_TDATA(18) <= \<const0>\;
  M5_AXIS_TDATA(17) <= \<const0>\;
  M5_AXIS_TDATA(16) <= \<const0>\;
  M5_AXIS_TDATA(15) <= \<const0>\;
  M5_AXIS_TDATA(14) <= \<const0>\;
  M5_AXIS_TDATA(13) <= \<const0>\;
  M5_AXIS_TDATA(12) <= \<const0>\;
  M5_AXIS_TDATA(11) <= \<const0>\;
  M5_AXIS_TDATA(10) <= \<const0>\;
  M5_AXIS_TDATA(9) <= \<const0>\;
  M5_AXIS_TDATA(8) <= \<const0>\;
  M5_AXIS_TDATA(7) <= \<const0>\;
  M5_AXIS_TDATA(6) <= \<const0>\;
  M5_AXIS_TDATA(5) <= \<const0>\;
  M5_AXIS_TDATA(4) <= \<const0>\;
  M5_AXIS_TDATA(3) <= \<const0>\;
  M5_AXIS_TDATA(2) <= \<const0>\;
  M5_AXIS_TDATA(1) <= \<const0>\;
  M5_AXIS_TDATA(0) <= \<const0>\;
  M5_AXIS_TLAST <= \<const0>\;
  M5_AXIS_TVALID <= \<const0>\;
  M6_AXIS_TDATA(31) <= \<const0>\;
  M6_AXIS_TDATA(30) <= \<const0>\;
  M6_AXIS_TDATA(29) <= \<const0>\;
  M6_AXIS_TDATA(28) <= \<const0>\;
  M6_AXIS_TDATA(27) <= \<const0>\;
  M6_AXIS_TDATA(26) <= \<const0>\;
  M6_AXIS_TDATA(25) <= \<const0>\;
  M6_AXIS_TDATA(24) <= \<const0>\;
  M6_AXIS_TDATA(23) <= \<const0>\;
  M6_AXIS_TDATA(22) <= \<const0>\;
  M6_AXIS_TDATA(21) <= \<const0>\;
  M6_AXIS_TDATA(20) <= \<const0>\;
  M6_AXIS_TDATA(19) <= \<const0>\;
  M6_AXIS_TDATA(18) <= \<const0>\;
  M6_AXIS_TDATA(17) <= \<const0>\;
  M6_AXIS_TDATA(16) <= \<const0>\;
  M6_AXIS_TDATA(15) <= \<const0>\;
  M6_AXIS_TDATA(14) <= \<const0>\;
  M6_AXIS_TDATA(13) <= \<const0>\;
  M6_AXIS_TDATA(12) <= \<const0>\;
  M6_AXIS_TDATA(11) <= \<const0>\;
  M6_AXIS_TDATA(10) <= \<const0>\;
  M6_AXIS_TDATA(9) <= \<const0>\;
  M6_AXIS_TDATA(8) <= \<const0>\;
  M6_AXIS_TDATA(7) <= \<const0>\;
  M6_AXIS_TDATA(6) <= \<const0>\;
  M6_AXIS_TDATA(5) <= \<const0>\;
  M6_AXIS_TDATA(4) <= \<const0>\;
  M6_AXIS_TDATA(3) <= \<const0>\;
  M6_AXIS_TDATA(2) <= \<const0>\;
  M6_AXIS_TDATA(1) <= \<const0>\;
  M6_AXIS_TDATA(0) <= \<const0>\;
  M6_AXIS_TLAST <= \<const0>\;
  M6_AXIS_TVALID <= \<const0>\;
  M7_AXIS_TDATA(31) <= \<const0>\;
  M7_AXIS_TDATA(30) <= \<const0>\;
  M7_AXIS_TDATA(29) <= \<const0>\;
  M7_AXIS_TDATA(28) <= \<const0>\;
  M7_AXIS_TDATA(27) <= \<const0>\;
  M7_AXIS_TDATA(26) <= \<const0>\;
  M7_AXIS_TDATA(25) <= \<const0>\;
  M7_AXIS_TDATA(24) <= \<const0>\;
  M7_AXIS_TDATA(23) <= \<const0>\;
  M7_AXIS_TDATA(22) <= \<const0>\;
  M7_AXIS_TDATA(21) <= \<const0>\;
  M7_AXIS_TDATA(20) <= \<const0>\;
  M7_AXIS_TDATA(19) <= \<const0>\;
  M7_AXIS_TDATA(18) <= \<const0>\;
  M7_AXIS_TDATA(17) <= \<const0>\;
  M7_AXIS_TDATA(16) <= \<const0>\;
  M7_AXIS_TDATA(15) <= \<const0>\;
  M7_AXIS_TDATA(14) <= \<const0>\;
  M7_AXIS_TDATA(13) <= \<const0>\;
  M7_AXIS_TDATA(12) <= \<const0>\;
  M7_AXIS_TDATA(11) <= \<const0>\;
  M7_AXIS_TDATA(10) <= \<const0>\;
  M7_AXIS_TDATA(9) <= \<const0>\;
  M7_AXIS_TDATA(8) <= \<const0>\;
  M7_AXIS_TDATA(7) <= \<const0>\;
  M7_AXIS_TDATA(6) <= \<const0>\;
  M7_AXIS_TDATA(5) <= \<const0>\;
  M7_AXIS_TDATA(4) <= \<const0>\;
  M7_AXIS_TDATA(3) <= \<const0>\;
  M7_AXIS_TDATA(2) <= \<const0>\;
  M7_AXIS_TDATA(1) <= \<const0>\;
  M7_AXIS_TDATA(0) <= \<const0>\;
  M7_AXIS_TLAST <= \<const0>\;
  M7_AXIS_TVALID <= \<const0>\;
  M8_AXIS_TDATA(31) <= \<const0>\;
  M8_AXIS_TDATA(30) <= \<const0>\;
  M8_AXIS_TDATA(29) <= \<const0>\;
  M8_AXIS_TDATA(28) <= \<const0>\;
  M8_AXIS_TDATA(27) <= \<const0>\;
  M8_AXIS_TDATA(26) <= \<const0>\;
  M8_AXIS_TDATA(25) <= \<const0>\;
  M8_AXIS_TDATA(24) <= \<const0>\;
  M8_AXIS_TDATA(23) <= \<const0>\;
  M8_AXIS_TDATA(22) <= \<const0>\;
  M8_AXIS_TDATA(21) <= \<const0>\;
  M8_AXIS_TDATA(20) <= \<const0>\;
  M8_AXIS_TDATA(19) <= \<const0>\;
  M8_AXIS_TDATA(18) <= \<const0>\;
  M8_AXIS_TDATA(17) <= \<const0>\;
  M8_AXIS_TDATA(16) <= \<const0>\;
  M8_AXIS_TDATA(15) <= \<const0>\;
  M8_AXIS_TDATA(14) <= \<const0>\;
  M8_AXIS_TDATA(13) <= \<const0>\;
  M8_AXIS_TDATA(12) <= \<const0>\;
  M8_AXIS_TDATA(11) <= \<const0>\;
  M8_AXIS_TDATA(10) <= \<const0>\;
  M8_AXIS_TDATA(9) <= \<const0>\;
  M8_AXIS_TDATA(8) <= \<const0>\;
  M8_AXIS_TDATA(7) <= \<const0>\;
  M8_AXIS_TDATA(6) <= \<const0>\;
  M8_AXIS_TDATA(5) <= \<const0>\;
  M8_AXIS_TDATA(4) <= \<const0>\;
  M8_AXIS_TDATA(3) <= \<const0>\;
  M8_AXIS_TDATA(2) <= \<const0>\;
  M8_AXIS_TDATA(1) <= \<const0>\;
  M8_AXIS_TDATA(0) <= \<const0>\;
  M8_AXIS_TLAST <= \<const0>\;
  M8_AXIS_TVALID <= \<const0>\;
  M9_AXIS_TDATA(31) <= \<const0>\;
  M9_AXIS_TDATA(30) <= \<const0>\;
  M9_AXIS_TDATA(29) <= \<const0>\;
  M9_AXIS_TDATA(28) <= \<const0>\;
  M9_AXIS_TDATA(27) <= \<const0>\;
  M9_AXIS_TDATA(26) <= \<const0>\;
  M9_AXIS_TDATA(25) <= \<const0>\;
  M9_AXIS_TDATA(24) <= \<const0>\;
  M9_AXIS_TDATA(23) <= \<const0>\;
  M9_AXIS_TDATA(22) <= \<const0>\;
  M9_AXIS_TDATA(21) <= \<const0>\;
  M9_AXIS_TDATA(20) <= \<const0>\;
  M9_AXIS_TDATA(19) <= \<const0>\;
  M9_AXIS_TDATA(18) <= \<const0>\;
  M9_AXIS_TDATA(17) <= \<const0>\;
  M9_AXIS_TDATA(16) <= \<const0>\;
  M9_AXIS_TDATA(15) <= \<const0>\;
  M9_AXIS_TDATA(14) <= \<const0>\;
  M9_AXIS_TDATA(13) <= \<const0>\;
  M9_AXIS_TDATA(12) <= \<const0>\;
  M9_AXIS_TDATA(11) <= \<const0>\;
  M9_AXIS_TDATA(10) <= \<const0>\;
  M9_AXIS_TDATA(9) <= \<const0>\;
  M9_AXIS_TDATA(8) <= \<const0>\;
  M9_AXIS_TDATA(7) <= \<const0>\;
  M9_AXIS_TDATA(6) <= \<const0>\;
  M9_AXIS_TDATA(5) <= \<const0>\;
  M9_AXIS_TDATA(4) <= \<const0>\;
  M9_AXIS_TDATA(3) <= \<const0>\;
  M9_AXIS_TDATA(2) <= \<const0>\;
  M9_AXIS_TDATA(1) <= \<const0>\;
  M9_AXIS_TDATA(0) <= \<const0>\;
  M9_AXIS_TLAST <= \<const0>\;
  M9_AXIS_TVALID <= \<const0>\;
  MB_Error <= \<const0>\;
  MB_Halted <= \<const0>\;
  M_AXI_DC_ACREADY <= \<const0>\;
  M_AXI_DC_ARADDR(31) <= \<const0>\;
  M_AXI_DC_ARADDR(30) <= \<const0>\;
  M_AXI_DC_ARADDR(29) <= \<const0>\;
  M_AXI_DC_ARADDR(28) <= \<const0>\;
  M_AXI_DC_ARADDR(27) <= \<const0>\;
  M_AXI_DC_ARADDR(26) <= \<const0>\;
  M_AXI_DC_ARADDR(25) <= \<const0>\;
  M_AXI_DC_ARADDR(24) <= \<const0>\;
  M_AXI_DC_ARADDR(23) <= \<const0>\;
  M_AXI_DC_ARADDR(22) <= \<const0>\;
  M_AXI_DC_ARADDR(21) <= \<const0>\;
  M_AXI_DC_ARADDR(20) <= \<const0>\;
  M_AXI_DC_ARADDR(19) <= \<const0>\;
  M_AXI_DC_ARADDR(18) <= \<const0>\;
  M_AXI_DC_ARADDR(17) <= \<const0>\;
  M_AXI_DC_ARADDR(16) <= \<const0>\;
  M_AXI_DC_ARADDR(15) <= \<const0>\;
  M_AXI_DC_ARADDR(14) <= \<const0>\;
  M_AXI_DC_ARADDR(13) <= \<const0>\;
  M_AXI_DC_ARADDR(12) <= \<const0>\;
  M_AXI_DC_ARADDR(11) <= \<const0>\;
  M_AXI_DC_ARADDR(10) <= \<const0>\;
  M_AXI_DC_ARADDR(9) <= \<const0>\;
  M_AXI_DC_ARADDR(8) <= \<const0>\;
  M_AXI_DC_ARADDR(7) <= \<const0>\;
  M_AXI_DC_ARADDR(6) <= \<const0>\;
  M_AXI_DC_ARADDR(5) <= \<const0>\;
  M_AXI_DC_ARADDR(4) <= \<const0>\;
  M_AXI_DC_ARADDR(3) <= \<const0>\;
  M_AXI_DC_ARADDR(2) <= \<const0>\;
  M_AXI_DC_ARADDR(1) <= \<const0>\;
  M_AXI_DC_ARADDR(0) <= \<const0>\;
  M_AXI_DC_ARBAR(1) <= \<const0>\;
  M_AXI_DC_ARBAR(0) <= \<const0>\;
  M_AXI_DC_ARBURST(1) <= \<const0>\;
  M_AXI_DC_ARBURST(0) <= \<const0>\;
  M_AXI_DC_ARCACHE(3) <= \<const0>\;
  M_AXI_DC_ARCACHE(2) <= \<const0>\;
  M_AXI_DC_ARCACHE(1) <= \<const0>\;
  M_AXI_DC_ARCACHE(0) <= \<const0>\;
  M_AXI_DC_ARDOMAIN(1) <= \<const0>\;
  M_AXI_DC_ARDOMAIN(0) <= \<const0>\;
  M_AXI_DC_ARID(0) <= \<const0>\;
  M_AXI_DC_ARLEN(7) <= \<const0>\;
  M_AXI_DC_ARLEN(6) <= \<const0>\;
  M_AXI_DC_ARLEN(5) <= \<const0>\;
  M_AXI_DC_ARLEN(4) <= \<const0>\;
  M_AXI_DC_ARLEN(3) <= \<const0>\;
  M_AXI_DC_ARLEN(2) <= \<const0>\;
  M_AXI_DC_ARLEN(1) <= \<const0>\;
  M_AXI_DC_ARLEN(0) <= \<const0>\;
  M_AXI_DC_ARLOCK <= \<const0>\;
  M_AXI_DC_ARPROT(2) <= \<const0>\;
  M_AXI_DC_ARPROT(1) <= \<const0>\;
  M_AXI_DC_ARPROT(0) <= \<const0>\;
  M_AXI_DC_ARQOS(3) <= \<const0>\;
  M_AXI_DC_ARQOS(2) <= \<const0>\;
  M_AXI_DC_ARQOS(1) <= \<const0>\;
  M_AXI_DC_ARQOS(0) <= \<const0>\;
  M_AXI_DC_ARSIZE(2) <= \<const0>\;
  M_AXI_DC_ARSIZE(1) <= \<const0>\;
  M_AXI_DC_ARSIZE(0) <= \<const0>\;
  M_AXI_DC_ARSNOOP(3) <= \<const0>\;
  M_AXI_DC_ARSNOOP(2) <= \<const0>\;
  M_AXI_DC_ARSNOOP(1) <= \<const0>\;
  M_AXI_DC_ARSNOOP(0) <= \<const0>\;
  M_AXI_DC_ARUSER(4) <= \<const0>\;
  M_AXI_DC_ARUSER(3) <= \<const0>\;
  M_AXI_DC_ARUSER(2) <= \<const0>\;
  M_AXI_DC_ARUSER(1) <= \<const0>\;
  M_AXI_DC_ARUSER(0) <= \<const0>\;
  M_AXI_DC_ARVALID <= \<const0>\;
  M_AXI_DC_AWADDR(31) <= \<const0>\;
  M_AXI_DC_AWADDR(30) <= \<const0>\;
  M_AXI_DC_AWADDR(29) <= \<const0>\;
  M_AXI_DC_AWADDR(28) <= \<const0>\;
  M_AXI_DC_AWADDR(27) <= \<const0>\;
  M_AXI_DC_AWADDR(26) <= \<const0>\;
  M_AXI_DC_AWADDR(25) <= \<const0>\;
  M_AXI_DC_AWADDR(24) <= \<const0>\;
  M_AXI_DC_AWADDR(23) <= \<const0>\;
  M_AXI_DC_AWADDR(22) <= \<const0>\;
  M_AXI_DC_AWADDR(21) <= \<const0>\;
  M_AXI_DC_AWADDR(20) <= \<const0>\;
  M_AXI_DC_AWADDR(19) <= \<const0>\;
  M_AXI_DC_AWADDR(18) <= \<const0>\;
  M_AXI_DC_AWADDR(17) <= \<const0>\;
  M_AXI_DC_AWADDR(16) <= \<const0>\;
  M_AXI_DC_AWADDR(15) <= \<const0>\;
  M_AXI_DC_AWADDR(14) <= \<const0>\;
  M_AXI_DC_AWADDR(13) <= \<const0>\;
  M_AXI_DC_AWADDR(12) <= \<const0>\;
  M_AXI_DC_AWADDR(11) <= \<const0>\;
  M_AXI_DC_AWADDR(10) <= \<const0>\;
  M_AXI_DC_AWADDR(9) <= \<const0>\;
  M_AXI_DC_AWADDR(8) <= \<const0>\;
  M_AXI_DC_AWADDR(7) <= \<const0>\;
  M_AXI_DC_AWADDR(6) <= \<const0>\;
  M_AXI_DC_AWADDR(5) <= \<const0>\;
  M_AXI_DC_AWADDR(4) <= \<const0>\;
  M_AXI_DC_AWADDR(3) <= \<const0>\;
  M_AXI_DC_AWADDR(2) <= \<const0>\;
  M_AXI_DC_AWADDR(1) <= \<const0>\;
  M_AXI_DC_AWADDR(0) <= \<const0>\;
  M_AXI_DC_AWBAR(1) <= \<const0>\;
  M_AXI_DC_AWBAR(0) <= \<const0>\;
  M_AXI_DC_AWBURST(1) <= \<const0>\;
  M_AXI_DC_AWBURST(0) <= \<const0>\;
  M_AXI_DC_AWCACHE(3) <= \<const0>\;
  M_AXI_DC_AWCACHE(2) <= \<const0>\;
  M_AXI_DC_AWCACHE(1) <= \<const0>\;
  M_AXI_DC_AWCACHE(0) <= \<const0>\;
  M_AXI_DC_AWDOMAIN(1) <= \<const0>\;
  M_AXI_DC_AWDOMAIN(0) <= \<const0>\;
  M_AXI_DC_AWID(0) <= \<const0>\;
  M_AXI_DC_AWLEN(7) <= \<const0>\;
  M_AXI_DC_AWLEN(6) <= \<const0>\;
  M_AXI_DC_AWLEN(5) <= \<const0>\;
  M_AXI_DC_AWLEN(4) <= \<const0>\;
  M_AXI_DC_AWLEN(3) <= \<const0>\;
  M_AXI_DC_AWLEN(2) <= \<const0>\;
  M_AXI_DC_AWLEN(1) <= \<const0>\;
  M_AXI_DC_AWLEN(0) <= \<const0>\;
  M_AXI_DC_AWLOCK <= \<const0>\;
  M_AXI_DC_AWPROT(2) <= \<const0>\;
  M_AXI_DC_AWPROT(1) <= \<const0>\;
  M_AXI_DC_AWPROT(0) <= \<const0>\;
  M_AXI_DC_AWQOS(3) <= \<const0>\;
  M_AXI_DC_AWQOS(2) <= \<const0>\;
  M_AXI_DC_AWQOS(1) <= \<const0>\;
  M_AXI_DC_AWQOS(0) <= \<const0>\;
  M_AXI_DC_AWSIZE(2) <= \<const0>\;
  M_AXI_DC_AWSIZE(1) <= \<const0>\;
  M_AXI_DC_AWSIZE(0) <= \<const0>\;
  M_AXI_DC_AWSNOOP(2) <= \<const0>\;
  M_AXI_DC_AWSNOOP(1) <= \<const0>\;
  M_AXI_DC_AWSNOOP(0) <= \<const0>\;
  M_AXI_DC_AWUSER(4) <= \<const0>\;
  M_AXI_DC_AWUSER(3) <= \<const0>\;
  M_AXI_DC_AWUSER(2) <= \<const0>\;
  M_AXI_DC_AWUSER(1) <= \<const0>\;
  M_AXI_DC_AWUSER(0) <= \<const0>\;
  M_AXI_DC_AWVALID <= \<const0>\;
  M_AXI_DC_BREADY <= \<const0>\;
  M_AXI_DC_CDDATA(31) <= \<const0>\;
  M_AXI_DC_CDDATA(30) <= \<const0>\;
  M_AXI_DC_CDDATA(29) <= \<const0>\;
  M_AXI_DC_CDDATA(28) <= \<const0>\;
  M_AXI_DC_CDDATA(27) <= \<const0>\;
  M_AXI_DC_CDDATA(26) <= \<const0>\;
  M_AXI_DC_CDDATA(25) <= \<const0>\;
  M_AXI_DC_CDDATA(24) <= \<const0>\;
  M_AXI_DC_CDDATA(23) <= \<const0>\;
  M_AXI_DC_CDDATA(22) <= \<const0>\;
  M_AXI_DC_CDDATA(21) <= \<const0>\;
  M_AXI_DC_CDDATA(20) <= \<const0>\;
  M_AXI_DC_CDDATA(19) <= \<const0>\;
  M_AXI_DC_CDDATA(18) <= \<const0>\;
  M_AXI_DC_CDDATA(17) <= \<const0>\;
  M_AXI_DC_CDDATA(16) <= \<const0>\;
  M_AXI_DC_CDDATA(15) <= \<const0>\;
  M_AXI_DC_CDDATA(14) <= \<const0>\;
  M_AXI_DC_CDDATA(13) <= \<const0>\;
  M_AXI_DC_CDDATA(12) <= \<const0>\;
  M_AXI_DC_CDDATA(11) <= \<const0>\;
  M_AXI_DC_CDDATA(10) <= \<const0>\;
  M_AXI_DC_CDDATA(9) <= \<const0>\;
  M_AXI_DC_CDDATA(8) <= \<const0>\;
  M_AXI_DC_CDDATA(7) <= \<const0>\;
  M_AXI_DC_CDDATA(6) <= \<const0>\;
  M_AXI_DC_CDDATA(5) <= \<const0>\;
  M_AXI_DC_CDDATA(4) <= \<const0>\;
  M_AXI_DC_CDDATA(3) <= \<const0>\;
  M_AXI_DC_CDDATA(2) <= \<const0>\;
  M_AXI_DC_CDDATA(1) <= \<const0>\;
  M_AXI_DC_CDDATA(0) <= \<const0>\;
  M_AXI_DC_CDLAST <= \<const0>\;
  M_AXI_DC_CDVALID <= \<const0>\;
  M_AXI_DC_CRRESP(4) <= \<const0>\;
  M_AXI_DC_CRRESP(3) <= \<const0>\;
  M_AXI_DC_CRRESP(2) <= \<const0>\;
  M_AXI_DC_CRRESP(1) <= \<const0>\;
  M_AXI_DC_CRRESP(0) <= \<const0>\;
  M_AXI_DC_CRVALID <= \<const0>\;
  M_AXI_DC_RACK <= \<const0>\;
  M_AXI_DC_RREADY <= \<const0>\;
  M_AXI_DC_WACK <= \<const0>\;
  M_AXI_DC_WDATA(31) <= \<const0>\;
  M_AXI_DC_WDATA(30) <= \<const0>\;
  M_AXI_DC_WDATA(29) <= \<const0>\;
  M_AXI_DC_WDATA(28) <= \<const0>\;
  M_AXI_DC_WDATA(27) <= \<const0>\;
  M_AXI_DC_WDATA(26) <= \<const0>\;
  M_AXI_DC_WDATA(25) <= \<const0>\;
  M_AXI_DC_WDATA(24) <= \<const0>\;
  M_AXI_DC_WDATA(23) <= \<const0>\;
  M_AXI_DC_WDATA(22) <= \<const0>\;
  M_AXI_DC_WDATA(21) <= \<const0>\;
  M_AXI_DC_WDATA(20) <= \<const0>\;
  M_AXI_DC_WDATA(19) <= \<const0>\;
  M_AXI_DC_WDATA(18) <= \<const0>\;
  M_AXI_DC_WDATA(17) <= \<const0>\;
  M_AXI_DC_WDATA(16) <= \<const0>\;
  M_AXI_DC_WDATA(15) <= \<const0>\;
  M_AXI_DC_WDATA(14) <= \<const0>\;
  M_AXI_DC_WDATA(13) <= \<const0>\;
  M_AXI_DC_WDATA(12) <= \<const0>\;
  M_AXI_DC_WDATA(11) <= \<const0>\;
  M_AXI_DC_WDATA(10) <= \<const0>\;
  M_AXI_DC_WDATA(9) <= \<const0>\;
  M_AXI_DC_WDATA(8) <= \<const0>\;
  M_AXI_DC_WDATA(7) <= \<const0>\;
  M_AXI_DC_WDATA(6) <= \<const0>\;
  M_AXI_DC_WDATA(5) <= \<const0>\;
  M_AXI_DC_WDATA(4) <= \<const0>\;
  M_AXI_DC_WDATA(3) <= \<const0>\;
  M_AXI_DC_WDATA(2) <= \<const0>\;
  M_AXI_DC_WDATA(1) <= \<const0>\;
  M_AXI_DC_WDATA(0) <= \<const0>\;
  M_AXI_DC_WLAST <= \<const0>\;
  M_AXI_DC_WSTRB(3) <= \<const0>\;
  M_AXI_DC_WSTRB(2) <= \<const0>\;
  M_AXI_DC_WSTRB(1) <= \<const0>\;
  M_AXI_DC_WSTRB(0) <= \<const0>\;
  M_AXI_DC_WUSER(0) <= \<const0>\;
  M_AXI_DC_WVALID <= \<const0>\;
  M_AXI_DP_ARADDR(31) <= \<const0>\;
  M_AXI_DP_ARADDR(30) <= \<const0>\;
  M_AXI_DP_ARADDR(29) <= \<const0>\;
  M_AXI_DP_ARADDR(28) <= \<const0>\;
  M_AXI_DP_ARADDR(27) <= \<const0>\;
  M_AXI_DP_ARADDR(26) <= \<const0>\;
  M_AXI_DP_ARADDR(25) <= \<const0>\;
  M_AXI_DP_ARADDR(24) <= \<const0>\;
  M_AXI_DP_ARADDR(23) <= \<const0>\;
  M_AXI_DP_ARADDR(22) <= \<const0>\;
  M_AXI_DP_ARADDR(21) <= \<const0>\;
  M_AXI_DP_ARADDR(20) <= \<const0>\;
  M_AXI_DP_ARADDR(19) <= \<const0>\;
  M_AXI_DP_ARADDR(18) <= \<const0>\;
  M_AXI_DP_ARADDR(17) <= \<const0>\;
  M_AXI_DP_ARADDR(16) <= \<const0>\;
  M_AXI_DP_ARADDR(15) <= \<const0>\;
  M_AXI_DP_ARADDR(14) <= \<const0>\;
  M_AXI_DP_ARADDR(13) <= \<const0>\;
  M_AXI_DP_ARADDR(12) <= \<const0>\;
  M_AXI_DP_ARADDR(11) <= \<const0>\;
  M_AXI_DP_ARADDR(10) <= \<const0>\;
  M_AXI_DP_ARADDR(9) <= \<const0>\;
  M_AXI_DP_ARADDR(8) <= \<const0>\;
  M_AXI_DP_ARADDR(7) <= \<const0>\;
  M_AXI_DP_ARADDR(6) <= \<const0>\;
  M_AXI_DP_ARADDR(5) <= \<const0>\;
  M_AXI_DP_ARADDR(4) <= \<const0>\;
  M_AXI_DP_ARADDR(3) <= \<const0>\;
  M_AXI_DP_ARADDR(2) <= \<const0>\;
  M_AXI_DP_ARADDR(1) <= \<const0>\;
  M_AXI_DP_ARADDR(0) <= \<const0>\;
  M_AXI_DP_ARBURST(1) <= \<const0>\;
  M_AXI_DP_ARBURST(0) <= \<const0>\;
  M_AXI_DP_ARCACHE(3) <= \<const0>\;
  M_AXI_DP_ARCACHE(2) <= \<const0>\;
  M_AXI_DP_ARCACHE(1) <= \<const0>\;
  M_AXI_DP_ARCACHE(0) <= \<const0>\;
  M_AXI_DP_ARID(0) <= \<const0>\;
  M_AXI_DP_ARLEN(7) <= \<const0>\;
  M_AXI_DP_ARLEN(6) <= \<const0>\;
  M_AXI_DP_ARLEN(5) <= \<const0>\;
  M_AXI_DP_ARLEN(4) <= \<const0>\;
  M_AXI_DP_ARLEN(3) <= \<const0>\;
  M_AXI_DP_ARLEN(2) <= \<const0>\;
  M_AXI_DP_ARLEN(1) <= \<const0>\;
  M_AXI_DP_ARLEN(0) <= \<const0>\;
  M_AXI_DP_ARLOCK <= \<const0>\;
  M_AXI_DP_ARPROT(2) <= \<const0>\;
  M_AXI_DP_ARPROT(1) <= \<const0>\;
  M_AXI_DP_ARPROT(0) <= \<const0>\;
  M_AXI_DP_ARQOS(3) <= \<const0>\;
  M_AXI_DP_ARQOS(2) <= \<const0>\;
  M_AXI_DP_ARQOS(1) <= \<const0>\;
  M_AXI_DP_ARQOS(0) <= \<const0>\;
  M_AXI_DP_ARSIZE(2) <= \<const0>\;
  M_AXI_DP_ARSIZE(1) <= \<const0>\;
  M_AXI_DP_ARSIZE(0) <= \<const0>\;
  M_AXI_DP_ARVALID <= \<const0>\;
  M_AXI_DP_AWADDR(31) <= \<const0>\;
  M_AXI_DP_AWADDR(30) <= \<const0>\;
  M_AXI_DP_AWADDR(29) <= \<const0>\;
  M_AXI_DP_AWADDR(28) <= \<const0>\;
  M_AXI_DP_AWADDR(27) <= \<const0>\;
  M_AXI_DP_AWADDR(26) <= \<const0>\;
  M_AXI_DP_AWADDR(25) <= \<const0>\;
  M_AXI_DP_AWADDR(24) <= \<const0>\;
  M_AXI_DP_AWADDR(23) <= \<const0>\;
  M_AXI_DP_AWADDR(22) <= \<const0>\;
  M_AXI_DP_AWADDR(21) <= \<const0>\;
  M_AXI_DP_AWADDR(20) <= \<const0>\;
  M_AXI_DP_AWADDR(19) <= \<const0>\;
  M_AXI_DP_AWADDR(18) <= \<const0>\;
  M_AXI_DP_AWADDR(17) <= \<const0>\;
  M_AXI_DP_AWADDR(16) <= \<const0>\;
  M_AXI_DP_AWADDR(15) <= \<const0>\;
  M_AXI_DP_AWADDR(14) <= \<const0>\;
  M_AXI_DP_AWADDR(13) <= \<const0>\;
  M_AXI_DP_AWADDR(12) <= \<const0>\;
  M_AXI_DP_AWADDR(11) <= \<const0>\;
  M_AXI_DP_AWADDR(10) <= \<const0>\;
  M_AXI_DP_AWADDR(9) <= \<const0>\;
  M_AXI_DP_AWADDR(8) <= \<const0>\;
  M_AXI_DP_AWADDR(7) <= \<const0>\;
  M_AXI_DP_AWADDR(6) <= \<const0>\;
  M_AXI_DP_AWADDR(5) <= \<const0>\;
  M_AXI_DP_AWADDR(4) <= \<const0>\;
  M_AXI_DP_AWADDR(3) <= \<const0>\;
  M_AXI_DP_AWADDR(2) <= \<const0>\;
  M_AXI_DP_AWADDR(1) <= \<const0>\;
  M_AXI_DP_AWADDR(0) <= \<const0>\;
  M_AXI_DP_AWBURST(1) <= \<const0>\;
  M_AXI_DP_AWBURST(0) <= \<const0>\;
  M_AXI_DP_AWCACHE(3) <= \<const0>\;
  M_AXI_DP_AWCACHE(2) <= \<const0>\;
  M_AXI_DP_AWCACHE(1) <= \<const0>\;
  M_AXI_DP_AWCACHE(0) <= \<const0>\;
  M_AXI_DP_AWID(0) <= \<const0>\;
  M_AXI_DP_AWLEN(7) <= \<const0>\;
  M_AXI_DP_AWLEN(6) <= \<const0>\;
  M_AXI_DP_AWLEN(5) <= \<const0>\;
  M_AXI_DP_AWLEN(4) <= \<const0>\;
  M_AXI_DP_AWLEN(3) <= \<const0>\;
  M_AXI_DP_AWLEN(2) <= \<const0>\;
  M_AXI_DP_AWLEN(1) <= \<const0>\;
  M_AXI_DP_AWLEN(0) <= \<const0>\;
  M_AXI_DP_AWLOCK <= \<const0>\;
  M_AXI_DP_AWPROT(2) <= \<const0>\;
  M_AXI_DP_AWPROT(1) <= \<const0>\;
  M_AXI_DP_AWPROT(0) <= \<const0>\;
  M_AXI_DP_AWQOS(3) <= \<const0>\;
  M_AXI_DP_AWQOS(2) <= \<const0>\;
  M_AXI_DP_AWQOS(1) <= \<const0>\;
  M_AXI_DP_AWQOS(0) <= \<const0>\;
  M_AXI_DP_AWSIZE(2) <= \<const0>\;
  M_AXI_DP_AWSIZE(1) <= \<const0>\;
  M_AXI_DP_AWSIZE(0) <= \<const0>\;
  M_AXI_DP_AWVALID <= \<const0>\;
  M_AXI_DP_BREADY <= \<const0>\;
  M_AXI_DP_RREADY <= \<const0>\;
  M_AXI_DP_WDATA(31) <= \<const0>\;
  M_AXI_DP_WDATA(30) <= \<const0>\;
  M_AXI_DP_WDATA(29) <= \<const0>\;
  M_AXI_DP_WDATA(28) <= \<const0>\;
  M_AXI_DP_WDATA(27) <= \<const0>\;
  M_AXI_DP_WDATA(26) <= \<const0>\;
  M_AXI_DP_WDATA(25) <= \<const0>\;
  M_AXI_DP_WDATA(24) <= \<const0>\;
  M_AXI_DP_WDATA(23) <= \<const0>\;
  M_AXI_DP_WDATA(22) <= \<const0>\;
  M_AXI_DP_WDATA(21) <= \<const0>\;
  M_AXI_DP_WDATA(20) <= \<const0>\;
  M_AXI_DP_WDATA(19) <= \<const0>\;
  M_AXI_DP_WDATA(18) <= \<const0>\;
  M_AXI_DP_WDATA(17) <= \<const0>\;
  M_AXI_DP_WDATA(16) <= \<const0>\;
  M_AXI_DP_WDATA(15) <= \<const0>\;
  M_AXI_DP_WDATA(14) <= \<const0>\;
  M_AXI_DP_WDATA(13) <= \<const0>\;
  M_AXI_DP_WDATA(12) <= \<const0>\;
  M_AXI_DP_WDATA(11) <= \<const0>\;
  M_AXI_DP_WDATA(10) <= \<const0>\;
  M_AXI_DP_WDATA(9) <= \<const0>\;
  M_AXI_DP_WDATA(8) <= \<const0>\;
  M_AXI_DP_WDATA(7) <= \<const0>\;
  M_AXI_DP_WDATA(6) <= \<const0>\;
  M_AXI_DP_WDATA(5) <= \<const0>\;
  M_AXI_DP_WDATA(4) <= \<const0>\;
  M_AXI_DP_WDATA(3) <= \<const0>\;
  M_AXI_DP_WDATA(2) <= \<const0>\;
  M_AXI_DP_WDATA(1) <= \<const0>\;
  M_AXI_DP_WDATA(0) <= \<const0>\;
  M_AXI_DP_WLAST <= \<const0>\;
  M_AXI_DP_WSTRB(3) <= \<const0>\;
  M_AXI_DP_WSTRB(2) <= \<const0>\;
  M_AXI_DP_WSTRB(1) <= \<const0>\;
  M_AXI_DP_WSTRB(0) <= \<const0>\;
  M_AXI_DP_WVALID <= \<const0>\;
  M_AXI_IC_ACREADY <= \<const0>\;
  M_AXI_IC_ARADDR(31) <= \<const0>\;
  M_AXI_IC_ARADDR(30) <= \<const0>\;
  M_AXI_IC_ARADDR(29) <= \<const0>\;
  M_AXI_IC_ARADDR(28) <= \<const0>\;
  M_AXI_IC_ARADDR(27) <= \<const0>\;
  M_AXI_IC_ARADDR(26) <= \<const0>\;
  M_AXI_IC_ARADDR(25) <= \<const0>\;
  M_AXI_IC_ARADDR(24) <= \<const0>\;
  M_AXI_IC_ARADDR(23) <= \<const0>\;
  M_AXI_IC_ARADDR(22) <= \<const0>\;
  M_AXI_IC_ARADDR(21) <= \<const0>\;
  M_AXI_IC_ARADDR(20) <= \<const0>\;
  M_AXI_IC_ARADDR(19) <= \<const0>\;
  M_AXI_IC_ARADDR(18) <= \<const0>\;
  M_AXI_IC_ARADDR(17) <= \<const0>\;
  M_AXI_IC_ARADDR(16) <= \<const0>\;
  M_AXI_IC_ARADDR(15) <= \<const0>\;
  M_AXI_IC_ARADDR(14) <= \<const0>\;
  M_AXI_IC_ARADDR(13) <= \<const0>\;
  M_AXI_IC_ARADDR(12) <= \<const0>\;
  M_AXI_IC_ARADDR(11) <= \<const0>\;
  M_AXI_IC_ARADDR(10) <= \<const0>\;
  M_AXI_IC_ARADDR(9) <= \<const0>\;
  M_AXI_IC_ARADDR(8) <= \<const0>\;
  M_AXI_IC_ARADDR(7) <= \<const0>\;
  M_AXI_IC_ARADDR(6) <= \<const0>\;
  M_AXI_IC_ARADDR(5) <= \<const0>\;
  M_AXI_IC_ARADDR(4) <= \<const0>\;
  M_AXI_IC_ARADDR(3) <= \<const0>\;
  M_AXI_IC_ARADDR(2) <= \<const0>\;
  M_AXI_IC_ARADDR(1) <= \<const0>\;
  M_AXI_IC_ARADDR(0) <= \<const0>\;
  M_AXI_IC_ARBAR(1) <= \<const0>\;
  M_AXI_IC_ARBAR(0) <= \<const0>\;
  M_AXI_IC_ARBURST(1) <= \<const0>\;
  M_AXI_IC_ARBURST(0) <= \<const0>\;
  M_AXI_IC_ARCACHE(3) <= \<const0>\;
  M_AXI_IC_ARCACHE(2) <= \<const0>\;
  M_AXI_IC_ARCACHE(1) <= \<const0>\;
  M_AXI_IC_ARCACHE(0) <= \<const0>\;
  M_AXI_IC_ARDOMAIN(1) <= \<const0>\;
  M_AXI_IC_ARDOMAIN(0) <= \<const0>\;
  M_AXI_IC_ARID(0) <= \<const0>\;
  M_AXI_IC_ARLEN(7) <= \<const0>\;
  M_AXI_IC_ARLEN(6) <= \<const0>\;
  M_AXI_IC_ARLEN(5) <= \<const0>\;
  M_AXI_IC_ARLEN(4) <= \<const0>\;
  M_AXI_IC_ARLEN(3) <= \<const0>\;
  M_AXI_IC_ARLEN(2) <= \<const0>\;
  M_AXI_IC_ARLEN(1) <= \<const0>\;
  M_AXI_IC_ARLEN(0) <= \<const0>\;
  M_AXI_IC_ARLOCK <= \<const0>\;
  M_AXI_IC_ARPROT(2) <= \<const0>\;
  M_AXI_IC_ARPROT(1) <= \<const0>\;
  M_AXI_IC_ARPROT(0) <= \<const0>\;
  M_AXI_IC_ARQOS(3) <= \<const0>\;
  M_AXI_IC_ARQOS(2) <= \<const0>\;
  M_AXI_IC_ARQOS(1) <= \<const0>\;
  M_AXI_IC_ARQOS(0) <= \<const0>\;
  M_AXI_IC_ARSIZE(2) <= \<const0>\;
  M_AXI_IC_ARSIZE(1) <= \<const0>\;
  M_AXI_IC_ARSIZE(0) <= \<const0>\;
  M_AXI_IC_ARSNOOP(3) <= \<const0>\;
  M_AXI_IC_ARSNOOP(2) <= \<const0>\;
  M_AXI_IC_ARSNOOP(1) <= \<const0>\;
  M_AXI_IC_ARSNOOP(0) <= \<const0>\;
  M_AXI_IC_ARUSER(4) <= \<const0>\;
  M_AXI_IC_ARUSER(3) <= \<const0>\;
  M_AXI_IC_ARUSER(2) <= \<const0>\;
  M_AXI_IC_ARUSER(1) <= \<const0>\;
  M_AXI_IC_ARUSER(0) <= \<const0>\;
  M_AXI_IC_ARVALID <= \<const0>\;
  M_AXI_IC_AWADDR(31) <= \<const0>\;
  M_AXI_IC_AWADDR(30) <= \<const0>\;
  M_AXI_IC_AWADDR(29) <= \<const0>\;
  M_AXI_IC_AWADDR(28) <= \<const0>\;
  M_AXI_IC_AWADDR(27) <= \<const0>\;
  M_AXI_IC_AWADDR(26) <= \<const0>\;
  M_AXI_IC_AWADDR(25) <= \<const0>\;
  M_AXI_IC_AWADDR(24) <= \<const0>\;
  M_AXI_IC_AWADDR(23) <= \<const0>\;
  M_AXI_IC_AWADDR(22) <= \<const0>\;
  M_AXI_IC_AWADDR(21) <= \<const0>\;
  M_AXI_IC_AWADDR(20) <= \<const0>\;
  M_AXI_IC_AWADDR(19) <= \<const0>\;
  M_AXI_IC_AWADDR(18) <= \<const0>\;
  M_AXI_IC_AWADDR(17) <= \<const0>\;
  M_AXI_IC_AWADDR(16) <= \<const0>\;
  M_AXI_IC_AWADDR(15) <= \<const0>\;
  M_AXI_IC_AWADDR(14) <= \<const0>\;
  M_AXI_IC_AWADDR(13) <= \<const0>\;
  M_AXI_IC_AWADDR(12) <= \<const0>\;
  M_AXI_IC_AWADDR(11) <= \<const0>\;
  M_AXI_IC_AWADDR(10) <= \<const0>\;
  M_AXI_IC_AWADDR(9) <= \<const0>\;
  M_AXI_IC_AWADDR(8) <= \<const0>\;
  M_AXI_IC_AWADDR(7) <= \<const0>\;
  M_AXI_IC_AWADDR(6) <= \<const0>\;
  M_AXI_IC_AWADDR(5) <= \<const0>\;
  M_AXI_IC_AWADDR(4) <= \<const0>\;
  M_AXI_IC_AWADDR(3) <= \<const0>\;
  M_AXI_IC_AWADDR(2) <= \<const0>\;
  M_AXI_IC_AWADDR(1) <= \<const0>\;
  M_AXI_IC_AWADDR(0) <= \<const0>\;
  M_AXI_IC_AWBAR(1) <= \<const0>\;
  M_AXI_IC_AWBAR(0) <= \<const0>\;
  M_AXI_IC_AWBURST(1) <= \<const0>\;
  M_AXI_IC_AWBURST(0) <= \<const0>\;
  M_AXI_IC_AWCACHE(3) <= \<const0>\;
  M_AXI_IC_AWCACHE(2) <= \<const0>\;
  M_AXI_IC_AWCACHE(1) <= \<const0>\;
  M_AXI_IC_AWCACHE(0) <= \<const0>\;
  M_AXI_IC_AWDOMAIN(1) <= \<const0>\;
  M_AXI_IC_AWDOMAIN(0) <= \<const0>\;
  M_AXI_IC_AWID(0) <= \<const0>\;
  M_AXI_IC_AWLEN(7) <= \<const0>\;
  M_AXI_IC_AWLEN(6) <= \<const0>\;
  M_AXI_IC_AWLEN(5) <= \<const0>\;
  M_AXI_IC_AWLEN(4) <= \<const0>\;
  M_AXI_IC_AWLEN(3) <= \<const0>\;
  M_AXI_IC_AWLEN(2) <= \<const0>\;
  M_AXI_IC_AWLEN(1) <= \<const0>\;
  M_AXI_IC_AWLEN(0) <= \<const0>\;
  M_AXI_IC_AWLOCK <= \<const0>\;
  M_AXI_IC_AWPROT(2) <= \<const0>\;
  M_AXI_IC_AWPROT(1) <= \<const0>\;
  M_AXI_IC_AWPROT(0) <= \<const0>\;
  M_AXI_IC_AWQOS(3) <= \<const0>\;
  M_AXI_IC_AWQOS(2) <= \<const0>\;
  M_AXI_IC_AWQOS(1) <= \<const0>\;
  M_AXI_IC_AWQOS(0) <= \<const0>\;
  M_AXI_IC_AWSIZE(2) <= \<const0>\;
  M_AXI_IC_AWSIZE(1) <= \<const0>\;
  M_AXI_IC_AWSIZE(0) <= \<const0>\;
  M_AXI_IC_AWSNOOP(2) <= \<const0>\;
  M_AXI_IC_AWSNOOP(1) <= \<const0>\;
  M_AXI_IC_AWSNOOP(0) <= \<const0>\;
  M_AXI_IC_AWUSER(4) <= \<const0>\;
  M_AXI_IC_AWUSER(3) <= \<const0>\;
  M_AXI_IC_AWUSER(2) <= \<const0>\;
  M_AXI_IC_AWUSER(1) <= \<const0>\;
  M_AXI_IC_AWUSER(0) <= \<const0>\;
  M_AXI_IC_AWVALID <= \<const0>\;
  M_AXI_IC_BREADY <= \<const0>\;
  M_AXI_IC_CDDATA(31) <= \<const0>\;
  M_AXI_IC_CDDATA(30) <= \<const0>\;
  M_AXI_IC_CDDATA(29) <= \<const0>\;
  M_AXI_IC_CDDATA(28) <= \<const0>\;
  M_AXI_IC_CDDATA(27) <= \<const0>\;
  M_AXI_IC_CDDATA(26) <= \<const0>\;
  M_AXI_IC_CDDATA(25) <= \<const0>\;
  M_AXI_IC_CDDATA(24) <= \<const0>\;
  M_AXI_IC_CDDATA(23) <= \<const0>\;
  M_AXI_IC_CDDATA(22) <= \<const0>\;
  M_AXI_IC_CDDATA(21) <= \<const0>\;
  M_AXI_IC_CDDATA(20) <= \<const0>\;
  M_AXI_IC_CDDATA(19) <= \<const0>\;
  M_AXI_IC_CDDATA(18) <= \<const0>\;
  M_AXI_IC_CDDATA(17) <= \<const0>\;
  M_AXI_IC_CDDATA(16) <= \<const0>\;
  M_AXI_IC_CDDATA(15) <= \<const0>\;
  M_AXI_IC_CDDATA(14) <= \<const0>\;
  M_AXI_IC_CDDATA(13) <= \<const0>\;
  M_AXI_IC_CDDATA(12) <= \<const0>\;
  M_AXI_IC_CDDATA(11) <= \<const0>\;
  M_AXI_IC_CDDATA(10) <= \<const0>\;
  M_AXI_IC_CDDATA(9) <= \<const0>\;
  M_AXI_IC_CDDATA(8) <= \<const0>\;
  M_AXI_IC_CDDATA(7) <= \<const0>\;
  M_AXI_IC_CDDATA(6) <= \<const0>\;
  M_AXI_IC_CDDATA(5) <= \<const0>\;
  M_AXI_IC_CDDATA(4) <= \<const0>\;
  M_AXI_IC_CDDATA(3) <= \<const0>\;
  M_AXI_IC_CDDATA(2) <= \<const0>\;
  M_AXI_IC_CDDATA(1) <= \<const0>\;
  M_AXI_IC_CDDATA(0) <= \<const0>\;
  M_AXI_IC_CDLAST <= \<const0>\;
  M_AXI_IC_CDVALID <= \<const0>\;
  M_AXI_IC_CRRESP(4) <= \<const0>\;
  M_AXI_IC_CRRESP(3) <= \<const0>\;
  M_AXI_IC_CRRESP(2) <= \<const0>\;
  M_AXI_IC_CRRESP(1) <= \<const0>\;
  M_AXI_IC_CRRESP(0) <= \<const0>\;
  M_AXI_IC_CRVALID <= \<const0>\;
  M_AXI_IC_RACK <= \<const0>\;
  M_AXI_IC_RREADY <= \<const0>\;
  M_AXI_IC_WACK <= \<const0>\;
  M_AXI_IC_WDATA(31) <= \<const0>\;
  M_AXI_IC_WDATA(30) <= \<const0>\;
  M_AXI_IC_WDATA(29) <= \<const0>\;
  M_AXI_IC_WDATA(28) <= \<const0>\;
  M_AXI_IC_WDATA(27) <= \<const0>\;
  M_AXI_IC_WDATA(26) <= \<const0>\;
  M_AXI_IC_WDATA(25) <= \<const0>\;
  M_AXI_IC_WDATA(24) <= \<const0>\;
  M_AXI_IC_WDATA(23) <= \<const0>\;
  M_AXI_IC_WDATA(22) <= \<const0>\;
  M_AXI_IC_WDATA(21) <= \<const0>\;
  M_AXI_IC_WDATA(20) <= \<const0>\;
  M_AXI_IC_WDATA(19) <= \<const0>\;
  M_AXI_IC_WDATA(18) <= \<const0>\;
  M_AXI_IC_WDATA(17) <= \<const0>\;
  M_AXI_IC_WDATA(16) <= \<const0>\;
  M_AXI_IC_WDATA(15) <= \<const0>\;
  M_AXI_IC_WDATA(14) <= \<const0>\;
  M_AXI_IC_WDATA(13) <= \<const0>\;
  M_AXI_IC_WDATA(12) <= \<const0>\;
  M_AXI_IC_WDATA(11) <= \<const0>\;
  M_AXI_IC_WDATA(10) <= \<const0>\;
  M_AXI_IC_WDATA(9) <= \<const0>\;
  M_AXI_IC_WDATA(8) <= \<const0>\;
  M_AXI_IC_WDATA(7) <= \<const0>\;
  M_AXI_IC_WDATA(6) <= \<const0>\;
  M_AXI_IC_WDATA(5) <= \<const0>\;
  M_AXI_IC_WDATA(4) <= \<const0>\;
  M_AXI_IC_WDATA(3) <= \<const0>\;
  M_AXI_IC_WDATA(2) <= \<const0>\;
  M_AXI_IC_WDATA(1) <= \<const0>\;
  M_AXI_IC_WDATA(0) <= \<const0>\;
  M_AXI_IC_WLAST <= \<const0>\;
  M_AXI_IC_WSTRB(3) <= \<const0>\;
  M_AXI_IC_WSTRB(2) <= \<const0>\;
  M_AXI_IC_WSTRB(1) <= \<const0>\;
  M_AXI_IC_WSTRB(0) <= \<const0>\;
  M_AXI_IC_WUSER(0) <= \<const0>\;
  M_AXI_IC_WVALID <= \<const0>\;
  M_AXI_IP_ARADDR(31) <= \<const0>\;
  M_AXI_IP_ARADDR(30) <= \<const0>\;
  M_AXI_IP_ARADDR(29) <= \<const0>\;
  M_AXI_IP_ARADDR(28) <= \<const0>\;
  M_AXI_IP_ARADDR(27) <= \<const0>\;
  M_AXI_IP_ARADDR(26) <= \<const0>\;
  M_AXI_IP_ARADDR(25) <= \<const0>\;
  M_AXI_IP_ARADDR(24) <= \<const0>\;
  M_AXI_IP_ARADDR(23) <= \<const0>\;
  M_AXI_IP_ARADDR(22) <= \<const0>\;
  M_AXI_IP_ARADDR(21) <= \<const0>\;
  M_AXI_IP_ARADDR(20) <= \<const0>\;
  M_AXI_IP_ARADDR(19) <= \<const0>\;
  M_AXI_IP_ARADDR(18) <= \<const0>\;
  M_AXI_IP_ARADDR(17) <= \<const0>\;
  M_AXI_IP_ARADDR(16) <= \<const0>\;
  M_AXI_IP_ARADDR(15) <= \<const0>\;
  M_AXI_IP_ARADDR(14) <= \<const0>\;
  M_AXI_IP_ARADDR(13) <= \<const0>\;
  M_AXI_IP_ARADDR(12) <= \<const0>\;
  M_AXI_IP_ARADDR(11) <= \<const0>\;
  M_AXI_IP_ARADDR(10) <= \<const0>\;
  M_AXI_IP_ARADDR(9) <= \<const0>\;
  M_AXI_IP_ARADDR(8) <= \<const0>\;
  M_AXI_IP_ARADDR(7) <= \<const0>\;
  M_AXI_IP_ARADDR(6) <= \<const0>\;
  M_AXI_IP_ARADDR(5) <= \<const0>\;
  M_AXI_IP_ARADDR(4) <= \<const0>\;
  M_AXI_IP_ARADDR(3) <= \<const0>\;
  M_AXI_IP_ARADDR(2) <= \<const0>\;
  M_AXI_IP_ARADDR(1) <= \<const0>\;
  M_AXI_IP_ARADDR(0) <= \<const0>\;
  M_AXI_IP_ARBURST(1) <= \<const0>\;
  M_AXI_IP_ARBURST(0) <= \<const0>\;
  M_AXI_IP_ARCACHE(3) <= \<const0>\;
  M_AXI_IP_ARCACHE(2) <= \<const0>\;
  M_AXI_IP_ARCACHE(1) <= \<const0>\;
  M_AXI_IP_ARCACHE(0) <= \<const0>\;
  M_AXI_IP_ARID(0) <= \<const0>\;
  M_AXI_IP_ARLEN(7) <= \<const0>\;
  M_AXI_IP_ARLEN(6) <= \<const0>\;
  M_AXI_IP_ARLEN(5) <= \<const0>\;
  M_AXI_IP_ARLEN(4) <= \<const0>\;
  M_AXI_IP_ARLEN(3) <= \<const0>\;
  M_AXI_IP_ARLEN(2) <= \<const0>\;
  M_AXI_IP_ARLEN(1) <= \<const0>\;
  M_AXI_IP_ARLEN(0) <= \<const0>\;
  M_AXI_IP_ARLOCK <= \<const0>\;
  M_AXI_IP_ARPROT(2) <= \<const0>\;
  M_AXI_IP_ARPROT(1) <= \<const0>\;
  M_AXI_IP_ARPROT(0) <= \<const0>\;
  M_AXI_IP_ARQOS(3) <= \<const0>\;
  M_AXI_IP_ARQOS(2) <= \<const0>\;
  M_AXI_IP_ARQOS(1) <= \<const0>\;
  M_AXI_IP_ARQOS(0) <= \<const0>\;
  M_AXI_IP_ARSIZE(2) <= \<const0>\;
  M_AXI_IP_ARSIZE(1) <= \<const0>\;
  M_AXI_IP_ARSIZE(0) <= \<const0>\;
  M_AXI_IP_ARVALID <= \<const0>\;
  M_AXI_IP_AWADDR(31) <= \<const0>\;
  M_AXI_IP_AWADDR(30) <= \<const0>\;
  M_AXI_IP_AWADDR(29) <= \<const0>\;
  M_AXI_IP_AWADDR(28) <= \<const0>\;
  M_AXI_IP_AWADDR(27) <= \<const0>\;
  M_AXI_IP_AWADDR(26) <= \<const0>\;
  M_AXI_IP_AWADDR(25) <= \<const0>\;
  M_AXI_IP_AWADDR(24) <= \<const0>\;
  M_AXI_IP_AWADDR(23) <= \<const0>\;
  M_AXI_IP_AWADDR(22) <= \<const0>\;
  M_AXI_IP_AWADDR(21) <= \<const0>\;
  M_AXI_IP_AWADDR(20) <= \<const0>\;
  M_AXI_IP_AWADDR(19) <= \<const0>\;
  M_AXI_IP_AWADDR(18) <= \<const0>\;
  M_AXI_IP_AWADDR(17) <= \<const0>\;
  M_AXI_IP_AWADDR(16) <= \<const0>\;
  M_AXI_IP_AWADDR(15) <= \<const0>\;
  M_AXI_IP_AWADDR(14) <= \<const0>\;
  M_AXI_IP_AWADDR(13) <= \<const0>\;
  M_AXI_IP_AWADDR(12) <= \<const0>\;
  M_AXI_IP_AWADDR(11) <= \<const0>\;
  M_AXI_IP_AWADDR(10) <= \<const0>\;
  M_AXI_IP_AWADDR(9) <= \<const0>\;
  M_AXI_IP_AWADDR(8) <= \<const0>\;
  M_AXI_IP_AWADDR(7) <= \<const0>\;
  M_AXI_IP_AWADDR(6) <= \<const0>\;
  M_AXI_IP_AWADDR(5) <= \<const0>\;
  M_AXI_IP_AWADDR(4) <= \<const0>\;
  M_AXI_IP_AWADDR(3) <= \<const0>\;
  M_AXI_IP_AWADDR(2) <= \<const0>\;
  M_AXI_IP_AWADDR(1) <= \<const0>\;
  M_AXI_IP_AWADDR(0) <= \<const0>\;
  M_AXI_IP_AWBURST(1) <= \<const0>\;
  M_AXI_IP_AWBURST(0) <= \<const0>\;
  M_AXI_IP_AWCACHE(3) <= \<const0>\;
  M_AXI_IP_AWCACHE(2) <= \<const0>\;
  M_AXI_IP_AWCACHE(1) <= \<const0>\;
  M_AXI_IP_AWCACHE(0) <= \<const0>\;
  M_AXI_IP_AWID(0) <= \<const0>\;
  M_AXI_IP_AWLEN(7) <= \<const0>\;
  M_AXI_IP_AWLEN(6) <= \<const0>\;
  M_AXI_IP_AWLEN(5) <= \<const0>\;
  M_AXI_IP_AWLEN(4) <= \<const0>\;
  M_AXI_IP_AWLEN(3) <= \<const0>\;
  M_AXI_IP_AWLEN(2) <= \<const0>\;
  M_AXI_IP_AWLEN(1) <= \<const0>\;
  M_AXI_IP_AWLEN(0) <= \<const0>\;
  M_AXI_IP_AWLOCK <= \<const0>\;
  M_AXI_IP_AWPROT(2) <= \<const0>\;
  M_AXI_IP_AWPROT(1) <= \<const0>\;
  M_AXI_IP_AWPROT(0) <= \<const0>\;
  M_AXI_IP_AWQOS(3) <= \<const0>\;
  M_AXI_IP_AWQOS(2) <= \<const0>\;
  M_AXI_IP_AWQOS(1) <= \<const0>\;
  M_AXI_IP_AWQOS(0) <= \<const0>\;
  M_AXI_IP_AWSIZE(2) <= \<const0>\;
  M_AXI_IP_AWSIZE(1) <= \<const0>\;
  M_AXI_IP_AWSIZE(0) <= \<const0>\;
  M_AXI_IP_AWVALID <= \<const0>\;
  M_AXI_IP_BREADY <= \<const0>\;
  M_AXI_IP_RREADY <= \<const0>\;
  M_AXI_IP_WDATA(31) <= \<const0>\;
  M_AXI_IP_WDATA(30) <= \<const0>\;
  M_AXI_IP_WDATA(29) <= \<const0>\;
  M_AXI_IP_WDATA(28) <= \<const0>\;
  M_AXI_IP_WDATA(27) <= \<const0>\;
  M_AXI_IP_WDATA(26) <= \<const0>\;
  M_AXI_IP_WDATA(25) <= \<const0>\;
  M_AXI_IP_WDATA(24) <= \<const0>\;
  M_AXI_IP_WDATA(23) <= \<const0>\;
  M_AXI_IP_WDATA(22) <= \<const0>\;
  M_AXI_IP_WDATA(21) <= \<const0>\;
  M_AXI_IP_WDATA(20) <= \<const0>\;
  M_AXI_IP_WDATA(19) <= \<const0>\;
  M_AXI_IP_WDATA(18) <= \<const0>\;
  M_AXI_IP_WDATA(17) <= \<const0>\;
  M_AXI_IP_WDATA(16) <= \<const0>\;
  M_AXI_IP_WDATA(15) <= \<const0>\;
  M_AXI_IP_WDATA(14) <= \<const0>\;
  M_AXI_IP_WDATA(13) <= \<const0>\;
  M_AXI_IP_WDATA(12) <= \<const0>\;
  M_AXI_IP_WDATA(11) <= \<const0>\;
  M_AXI_IP_WDATA(10) <= \<const0>\;
  M_AXI_IP_WDATA(9) <= \<const0>\;
  M_AXI_IP_WDATA(8) <= \<const0>\;
  M_AXI_IP_WDATA(7) <= \<const0>\;
  M_AXI_IP_WDATA(6) <= \<const0>\;
  M_AXI_IP_WDATA(5) <= \<const0>\;
  M_AXI_IP_WDATA(4) <= \<const0>\;
  M_AXI_IP_WDATA(3) <= \<const0>\;
  M_AXI_IP_WDATA(2) <= \<const0>\;
  M_AXI_IP_WDATA(1) <= \<const0>\;
  M_AXI_IP_WDATA(0) <= \<const0>\;
  M_AXI_IP_WLAST <= \<const0>\;
  M_AXI_IP_WSTRB(3) <= \<const0>\;
  M_AXI_IP_WSTRB(2) <= \<const0>\;
  M_AXI_IP_WSTRB(1) <= \<const0>\;
  M_AXI_IP_WSTRB(0) <= \<const0>\;
  M_AXI_IP_WVALID <= \<const0>\;
  RAM_From(255) <= \<const0>\;
  RAM_From(254) <= \<const0>\;
  RAM_From(253) <= \<const0>\;
  RAM_From(252) <= \<const0>\;
  RAM_From(251) <= \<const0>\;
  RAM_From(250) <= \<const0>\;
  RAM_From(249) <= \<const0>\;
  RAM_From(248) <= \<const0>\;
  RAM_From(247) <= \<const0>\;
  RAM_From(246) <= \<const0>\;
  RAM_From(245) <= \<const0>\;
  RAM_From(244) <= \<const0>\;
  RAM_From(243) <= \<const0>\;
  RAM_From(242) <= \<const0>\;
  RAM_From(241) <= \<const0>\;
  RAM_From(240) <= \<const0>\;
  RAM_From(239) <= \<const0>\;
  RAM_From(238) <= \<const0>\;
  RAM_From(237) <= \<const0>\;
  RAM_From(236) <= \<const0>\;
  RAM_From(235) <= \<const0>\;
  RAM_From(234) <= \<const0>\;
  RAM_From(233) <= \<const0>\;
  RAM_From(232) <= \<const0>\;
  RAM_From(231) <= \<const0>\;
  RAM_From(230) <= \<const0>\;
  RAM_From(229) <= \<const0>\;
  RAM_From(228) <= \<const0>\;
  RAM_From(227) <= \<const0>\;
  RAM_From(226) <= \<const0>\;
  RAM_From(225) <= \<const0>\;
  RAM_From(224) <= \<const0>\;
  RAM_From(223) <= \<const0>\;
  RAM_From(222) <= \<const0>\;
  RAM_From(221) <= \<const0>\;
  RAM_From(220) <= \<const0>\;
  RAM_From(219) <= \<const0>\;
  RAM_From(218) <= \<const0>\;
  RAM_From(217) <= \<const0>\;
  RAM_From(216) <= \<const0>\;
  RAM_From(215) <= \<const0>\;
  RAM_From(214) <= \<const0>\;
  RAM_From(213) <= \<const0>\;
  RAM_From(212) <= \<const0>\;
  RAM_From(211) <= \<const0>\;
  RAM_From(210) <= \<const0>\;
  RAM_From(209) <= \<const0>\;
  RAM_From(208) <= \<const0>\;
  RAM_From(207) <= \<const0>\;
  RAM_From(206) <= \<const0>\;
  RAM_From(205) <= \<const0>\;
  RAM_From(204) <= \<const0>\;
  RAM_From(203) <= \<const0>\;
  RAM_From(202) <= \<const0>\;
  RAM_From(201) <= \<const0>\;
  RAM_From(200) <= \<const0>\;
  RAM_From(199) <= \<const0>\;
  RAM_From(198) <= \<const0>\;
  RAM_From(197) <= \<const0>\;
  RAM_From(196) <= \<const0>\;
  RAM_From(195) <= \<const0>\;
  RAM_From(194) <= \<const0>\;
  RAM_From(193) <= \<const0>\;
  RAM_From(192) <= \<const0>\;
  RAM_From(191) <= \<const0>\;
  RAM_From(190) <= \<const0>\;
  RAM_From(189) <= \<const0>\;
  RAM_From(188) <= \<const0>\;
  RAM_From(187) <= \<const0>\;
  RAM_From(186) <= \<const0>\;
  RAM_From(185) <= \<const0>\;
  RAM_From(184) <= \<const0>\;
  RAM_From(183) <= \<const0>\;
  RAM_From(182) <= \<const0>\;
  RAM_From(181) <= \<const0>\;
  RAM_From(180) <= \<const0>\;
  RAM_From(179) <= \<const0>\;
  RAM_From(178) <= \<const0>\;
  RAM_From(177) <= \<const0>\;
  RAM_From(176) <= \<const0>\;
  RAM_From(175) <= \<const0>\;
  RAM_From(174) <= \<const0>\;
  RAM_From(173) <= \<const0>\;
  RAM_From(172) <= \<const0>\;
  RAM_From(171) <= \<const0>\;
  RAM_From(170) <= \<const0>\;
  RAM_From(169) <= \<const0>\;
  RAM_From(168) <= \<const0>\;
  RAM_From(167) <= \<const0>\;
  RAM_From(166) <= \<const0>\;
  RAM_From(165) <= \<const0>\;
  RAM_From(164) <= \<const0>\;
  RAM_From(163) <= \<const0>\;
  RAM_From(162) <= \<const0>\;
  RAM_From(161) <= \<const0>\;
  RAM_From(160) <= \<const0>\;
  RAM_From(159) <= \<const0>\;
  RAM_From(158) <= \<const0>\;
  RAM_From(157) <= \<const0>\;
  RAM_From(156) <= \<const0>\;
  RAM_From(155) <= \<const0>\;
  RAM_From(154) <= \<const0>\;
  RAM_From(153) <= \<const0>\;
  RAM_From(152) <= \<const0>\;
  RAM_From(151) <= \<const0>\;
  RAM_From(150) <= \<const0>\;
  RAM_From(149) <= \<const0>\;
  RAM_From(148) <= \<const0>\;
  RAM_From(147) <= \<const0>\;
  RAM_From(146) <= \<const0>\;
  RAM_From(145) <= \<const0>\;
  RAM_From(144) <= \<const0>\;
  RAM_From(143) <= \<const0>\;
  RAM_From(142) <= \<const0>\;
  RAM_From(141) <= \<const0>\;
  RAM_From(140) <= \<const0>\;
  RAM_From(139) <= \<const0>\;
  RAM_From(138) <= \<const0>\;
  RAM_From(137) <= \<const0>\;
  RAM_From(136) <= \<const0>\;
  RAM_From(135) <= \<const0>\;
  RAM_From(134) <= \<const0>\;
  RAM_From(133) <= \<const0>\;
  RAM_From(132) <= \<const0>\;
  RAM_From(131) <= \<const0>\;
  RAM_From(130) <= \<const0>\;
  RAM_From(129) <= \<const0>\;
  RAM_From(128) <= \<const0>\;
  RAM_From(127) <= \<const0>\;
  RAM_From(126) <= \<const0>\;
  RAM_From(125) <= \<const0>\;
  RAM_From(124) <= \<const0>\;
  RAM_From(123) <= \<const0>\;
  RAM_From(122) <= \<const0>\;
  RAM_From(121) <= \<const0>\;
  RAM_From(120) <= \<const0>\;
  RAM_From(119) <= \<const0>\;
  RAM_From(118) <= \<const0>\;
  RAM_From(117) <= \<const0>\;
  RAM_From(116) <= \<const0>\;
  RAM_From(115) <= \<const0>\;
  RAM_From(114) <= \<const0>\;
  RAM_From(113) <= \<const0>\;
  RAM_From(112) <= \<const0>\;
  RAM_From(111) <= \<const0>\;
  RAM_From(110) <= \<const0>\;
  RAM_From(109) <= \<const0>\;
  RAM_From(108) <= \<const0>\;
  RAM_From(107) <= \<const0>\;
  RAM_From(106) <= \<const0>\;
  RAM_From(105) <= \<const0>\;
  RAM_From(104) <= \<const0>\;
  RAM_From(103) <= \<const0>\;
  RAM_From(102) <= \<const0>\;
  RAM_From(101) <= \<const0>\;
  RAM_From(100) <= \<const0>\;
  RAM_From(99) <= \<const0>\;
  RAM_From(98) <= \<const0>\;
  RAM_From(97) <= \<const0>\;
  RAM_From(96) <= \<const0>\;
  RAM_From(95) <= \<const0>\;
  RAM_From(94) <= \<const0>\;
  RAM_From(93) <= \<const0>\;
  RAM_From(92) <= \<const0>\;
  RAM_From(91) <= \<const0>\;
  RAM_From(90) <= \<const0>\;
  RAM_From(89) <= \<const0>\;
  RAM_From(88) <= \<const0>\;
  RAM_From(87) <= \<const0>\;
  RAM_From(86) <= \<const0>\;
  RAM_From(85) <= \<const0>\;
  RAM_From(84) <= \<const0>\;
  RAM_From(83) <= \<const0>\;
  RAM_From(82) <= \<const0>\;
  RAM_From(81) <= \<const0>\;
  RAM_From(80) <= \<const0>\;
  RAM_From(79) <= \<const0>\;
  RAM_From(78) <= \<const0>\;
  RAM_From(77) <= \<const0>\;
  RAM_From(76) <= \<const0>\;
  RAM_From(75) <= \<const0>\;
  RAM_From(74) <= \<const0>\;
  RAM_From(73) <= \<const0>\;
  RAM_From(72) <= \<const0>\;
  RAM_From(71) <= \<const0>\;
  RAM_From(70) <= \<const0>\;
  RAM_From(69) <= \<const0>\;
  RAM_From(68) <= \<const0>\;
  RAM_From(67) <= \<const0>\;
  RAM_From(66) <= \<const0>\;
  RAM_From(65) <= \<const0>\;
  RAM_From(64) <= \<const0>\;
  RAM_From(63) <= \<const0>\;
  RAM_From(62) <= \<const0>\;
  RAM_From(61) <= \<const0>\;
  RAM_From(60) <= \<const0>\;
  RAM_From(59) <= \<const0>\;
  RAM_From(58) <= \<const0>\;
  RAM_From(57) <= \<const0>\;
  RAM_From(56) <= \<const0>\;
  RAM_From(55) <= \<const0>\;
  RAM_From(54) <= \<const0>\;
  RAM_From(53) <= \<const0>\;
  RAM_From(52) <= \<const0>\;
  RAM_From(51) <= \<const0>\;
  RAM_From(50) <= \<const0>\;
  RAM_From(49) <= \<const0>\;
  RAM_From(48) <= \<const0>\;
  RAM_From(47) <= \<const0>\;
  RAM_From(46) <= \<const0>\;
  RAM_From(45) <= \<const0>\;
  RAM_From(44) <= \<const0>\;
  RAM_From(43) <= \<const0>\;
  RAM_From(42) <= \<const0>\;
  RAM_From(41) <= \<const0>\;
  RAM_From(40) <= \<const0>\;
  RAM_From(39) <= \<const0>\;
  RAM_From(38) <= \<const0>\;
  RAM_From(37) <= \<const0>\;
  RAM_From(36) <= \<const0>\;
  RAM_From(35) <= \<const0>\;
  RAM_From(34) <= \<const0>\;
  RAM_From(33) <= \<const0>\;
  RAM_From(32) <= \<const0>\;
  RAM_From(31) <= \<const0>\;
  RAM_From(30) <= \<const0>\;
  RAM_From(29) <= \<const0>\;
  RAM_From(28) <= \<const0>\;
  RAM_From(27) <= \<const0>\;
  RAM_From(26) <= \<const0>\;
  RAM_From(25) <= \<const0>\;
  RAM_From(24) <= \<const0>\;
  RAM_From(23) <= \<const0>\;
  RAM_From(22) <= \<const0>\;
  RAM_From(21) <= \<const0>\;
  RAM_From(20) <= \<const0>\;
  RAM_From(19) <= \<const0>\;
  RAM_From(18) <= \<const0>\;
  RAM_From(17) <= \<const0>\;
  RAM_From(16) <= \<const0>\;
  RAM_From(15) <= \<const0>\;
  RAM_From(14) <= \<const0>\;
  RAM_From(13) <= \<const0>\;
  RAM_From(12) <= \<const0>\;
  RAM_From(11) <= \<const0>\;
  RAM_From(10) <= \<const0>\;
  RAM_From(9) <= \<const0>\;
  RAM_From(8) <= \<const0>\;
  RAM_From(7) <= \<const0>\;
  RAM_From(6) <= \<const0>\;
  RAM_From(5) <= \<const0>\;
  RAM_From(4) <= \<const0>\;
  RAM_From(3) <= \<const0>\;
  RAM_From(2) <= \<const0>\;
  RAM_From(1) <= \<const0>\;
  RAM_From(0) <= \<const0>\;
  Read_Strobe <= \^read_strobe\;
  S0_AXIS_TREADY <= \<const0>\;
  S10_AXIS_TREADY <= \<const0>\;
  S11_AXIS_TREADY <= \<const0>\;
  S12_AXIS_TREADY <= \<const0>\;
  S13_AXIS_TREADY <= \<const0>\;
  S14_AXIS_TREADY <= \<const0>\;
  S15_AXIS_TREADY <= \<const0>\;
  S1_AXIS_TREADY <= \<const0>\;
  S2_AXIS_TREADY <= \<const0>\;
  S3_AXIS_TREADY <= \<const0>\;
  S4_AXIS_TREADY <= \<const0>\;
  S5_AXIS_TREADY <= \<const0>\;
  S6_AXIS_TREADY <= \<const0>\;
  S7_AXIS_TREADY <= \<const0>\;
  S8_AXIS_TREADY <= \<const0>\;
  S9_AXIS_TREADY <= \<const0>\;
  Trace_DCache_Hit <= \<const0>\;
  Trace_DCache_Rdy <= \<const0>\;
  Trace_DCache_Read <= \<const0>\;
  Trace_DCache_Req <= \<const0>\;
  Trace_Data_Access <= \^trace_data_access\;
  Trace_Data_Address(0 to 31) <= \^trace_data_address\(0 to 31);
  Trace_Data_Byte_Enable(0 to 3) <= \^trace_data_byte_enable\(0 to 3);
  Trace_Data_Read <= \^trace_data_read\;
  Trace_Data_Write <= \^trace_data_write\;
  Trace_Data_Write_Value(0 to 31) <= \^trace_data_write_value\(0 to 31);
  Trace_Delay_Slot <= \^trace_delay_slot\;
  Trace_EX_PipeRun <= \<const1>\;
  Trace_Exception_Kind(0) <= \<const0>\;
  Trace_Exception_Kind(1) <= \^trace_exception_kind\(1);
  Trace_Exception_Kind(2) <= \<const0>\;
  Trace_Exception_Kind(3) <= \^trace_exception_kind\(1);
  Trace_Exception_Kind(4) <= \<const0>\;
  Trace_Exception_Taken <= \^trace_exception_kind\(1);
  Trace_ICache_Hit <= \<const0>\;
  Trace_ICache_Rdy <= \<const0>\;
  Trace_ICache_Req <= \<const0>\;
  Trace_Instruction(0 to 31) <= \^trace_instruction\(0 to 31);
  Trace_Jump_Hit <= \<const0>\;
  Trace_Jump_Taken <= \^trace_jump_taken\;
  Trace_MB_Halted <= \<const0>\;
  Trace_MEM_PipeRun <= \<const1>\;
  Trace_MSR_Reg(0) <= \<const0>\;
  Trace_MSR_Reg(1) <= \<const0>\;
  Trace_MSR_Reg(2) <= \<const0>\;
  Trace_MSR_Reg(3) <= \<const0>\;
  Trace_MSR_Reg(4) <= \<const0>\;
  Trace_MSR_Reg(5) <= \<const0>\;
  Trace_MSR_Reg(6) <= \<const0>\;
  Trace_MSR_Reg(7) <= \<const0>\;
  Trace_MSR_Reg(8) <= \<const0>\;
  Trace_MSR_Reg(9) <= \<const0>\;
  Trace_MSR_Reg(10) <= \<const0>\;
  Trace_MSR_Reg(11 to 13) <= \^trace_msr_reg\(11 to 13);
  Trace_MSR_Reg(14) <= \<const0>\;
  Trace_New_Reg_Value(0 to 31) <= \^trace_new_reg_value\(0 to 31);
  Trace_OF_PipeRun <= \^trace_of_piperun\;
  Trace_PC(0) <= \<const0>\;
  Trace_PC(1) <= \<const0>\;
  Trace_PC(2) <= \<const0>\;
  Trace_PC(3) <= \<const0>\;
  Trace_PC(4) <= \<const0>\;
  Trace_PC(5) <= \<const0>\;
  Trace_PC(6) <= \<const0>\;
  Trace_PC(7) <= \<const0>\;
  Trace_PC(8) <= \<const0>\;
  Trace_PC(9) <= \<const0>\;
  Trace_PC(10) <= \<const0>\;
  Trace_PC(11) <= \<const0>\;
  Trace_PC(12) <= \<const0>\;
  Trace_PC(13) <= \<const0>\;
  Trace_PC(14) <= \<const0>\;
  Trace_PC(15) <= \<const0>\;
  Trace_PC(16) <= \<const0>\;
  Trace_PC(17 to 29) <= \^trace_pc\(17 to 29);
  Trace_PC(30) <= \<const0>\;
  Trace_PC(31) <= \<const0>\;
  Trace_PID_Reg(0) <= \<const0>\;
  Trace_PID_Reg(1) <= \<const0>\;
  Trace_PID_Reg(2) <= \<const0>\;
  Trace_PID_Reg(3) <= \<const0>\;
  Trace_PID_Reg(4) <= \<const0>\;
  Trace_PID_Reg(5) <= \<const0>\;
  Trace_PID_Reg(6) <= \<const0>\;
  Trace_PID_Reg(7) <= \<const0>\;
  Trace_Reg_Addr(0 to 4) <= \^trace_reg_addr\(0 to 4);
  Trace_Reg_Write <= \^trace_reg_write\;
  Trace_Valid_Instr <= \^trace_valid_instr\;
  Write_Strobe <= \^write_strobe\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\LOCKSTEP_Out_reg[132]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(0),
      Q => \^lockstep_out\(132),
      R => Reset
    );
\LOCKSTEP_Out_reg[133]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(1),
      Q => \^lockstep_out\(133),
      R => Reset
    );
\LOCKSTEP_Out_reg[134]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(2),
      Q => \^lockstep_out\(134),
      R => Reset
    );
\LOCKSTEP_Out_reg[135]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(3),
      Q => \^lockstep_out\(135),
      R => Reset
    );
\LOCKSTEP_Out_reg[136]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(4),
      Q => \^lockstep_out\(136),
      R => Reset
    );
\LOCKSTEP_Out_reg[137]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(5),
      Q => \^lockstep_out\(137),
      R => Reset
    );
\LOCKSTEP_Out_reg[138]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(6),
      Q => \^lockstep_out\(138),
      R => Reset
    );
\LOCKSTEP_Out_reg[139]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(7),
      Q => \^lockstep_out\(139),
      R => Reset
    );
\LOCKSTEP_Out_reg[140]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(8),
      Q => \^lockstep_out\(140),
      R => Reset
    );
\LOCKSTEP_Out_reg[141]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(9),
      Q => \^lockstep_out\(141),
      R => Reset
    );
\LOCKSTEP_Out_reg[142]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(10),
      Q => \^lockstep_out\(142),
      R => Reset
    );
\LOCKSTEP_Out_reg[143]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(11),
      Q => \^lockstep_out\(143),
      R => Reset
    );
\LOCKSTEP_Out_reg[144]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(12),
      Q => \^lockstep_out\(144),
      R => Reset
    );
\LOCKSTEP_Out_reg[145]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(13),
      Q => \^lockstep_out\(145),
      R => Reset
    );
\LOCKSTEP_Out_reg[146]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(14),
      Q => \^lockstep_out\(146),
      R => Reset
    );
\LOCKSTEP_Out_reg[147]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(15),
      Q => \^lockstep_out\(147),
      R => Reset
    );
\LOCKSTEP_Out_reg[148]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(16),
      Q => \^lockstep_out\(148),
      R => Reset
    );
\LOCKSTEP_Out_reg[149]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(17),
      Q => \^lockstep_out\(149),
      R => Reset
    );
\LOCKSTEP_Out_reg[150]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(18),
      Q => \^lockstep_out\(150),
      R => Reset
    );
\LOCKSTEP_Out_reg[151]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(19),
      Q => \^lockstep_out\(151),
      R => Reset
    );
\LOCKSTEP_Out_reg[152]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(20),
      Q => \^lockstep_out\(152),
      R => Reset
    );
\LOCKSTEP_Out_reg[153]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(21),
      Q => \^lockstep_out\(153),
      R => Reset
    );
\LOCKSTEP_Out_reg[154]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(22),
      Q => \^lockstep_out\(154),
      R => Reset
    );
\LOCKSTEP_Out_reg[155]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(23),
      Q => \^lockstep_out\(155),
      R => Reset
    );
\LOCKSTEP_Out_reg[156]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(24),
      Q => \^lockstep_out\(156),
      R => Reset
    );
\LOCKSTEP_Out_reg[157]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(25),
      Q => \^lockstep_out\(157),
      R => Reset
    );
\LOCKSTEP_Out_reg[158]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(26),
      Q => \^lockstep_out\(158),
      R => Reset
    );
\LOCKSTEP_Out_reg[159]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(27),
      Q => \^lockstep_out\(159),
      R => Reset
    );
\LOCKSTEP_Out_reg[160]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(28),
      Q => \^lockstep_out\(160),
      R => Reset
    );
\LOCKSTEP_Out_reg[161]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(29),
      Q => \^lockstep_out\(161),
      R => Reset
    );
\LOCKSTEP_Out_reg[162]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(30),
      Q => \^lockstep_out\(162),
      R => Reset
    );
\LOCKSTEP_Out_reg[163]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(31),
      Q => \^lockstep_out\(163),
      R => Reset
    );
\LOCKSTEP_Out_reg[196]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d_as\,
      Q => \^lockstep_out\(196),
      R => Reset
    );
\LOCKSTEP_Out_reg[197]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^read_strobe\,
      Q => \^lockstep_out\(197),
      R => Reset
    );
\LOCKSTEP_Out_reg[198]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^write_strobe\,
      Q => \^lockstep_out\(198),
      R => Reset
    );
\LOCKSTEP_Out_reg[199]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^byte_enable\(0),
      Q => \^lockstep_out\(199),
      R => Reset
    );
\LOCKSTEP_Out_reg[200]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^byte_enable\(1),
      Q => \^lockstep_out\(200),
      R => Reset
    );
\LOCKSTEP_Out_reg[201]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^byte_enable\(2),
      Q => \^lockstep_out\(201),
      R => Reset
    );
\LOCKSTEP_Out_reg[202]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^byte_enable\(3),
      Q => \^lockstep_out\(202),
      R => Reset
    );
\LOCKSTEP_Out_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(17),
      Q => \^lockstep_out\(21),
      R => Reset
    );
\LOCKSTEP_Out_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(18),
      Q => \^lockstep_out\(22),
      R => Reset
    );
\LOCKSTEP_Out_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(19),
      Q => \^lockstep_out\(23),
      R => Reset
    );
\LOCKSTEP_Out_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(20),
      Q => \^lockstep_out\(24),
      R => Reset
    );
\LOCKSTEP_Out_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(21),
      Q => \^lockstep_out\(25),
      R => Reset
    );
\LOCKSTEP_Out_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(22),
      Q => \^lockstep_out\(26),
      R => Reset
    );
\LOCKSTEP_Out_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(23),
      Q => \^lockstep_out\(27),
      R => Reset
    );
\LOCKSTEP_Out_reg[2881]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(0),
      Q => \^lockstep_out\(2881),
      R => Reset
    );
\LOCKSTEP_Out_reg[2882]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(1),
      Q => \^lockstep_out\(2882),
      R => Reset
    );
\LOCKSTEP_Out_reg[2883]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(2),
      Q => \^lockstep_out\(2883),
      R => Reset
    );
\LOCKSTEP_Out_reg[2884]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(3),
      Q => \^lockstep_out\(2884),
      R => Reset
    );
\LOCKSTEP_Out_reg[2885]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(4),
      Q => \^lockstep_out\(2885),
      R => Reset
    );
\LOCKSTEP_Out_reg[2886]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(5),
      Q => \^lockstep_out\(2886),
      R => Reset
    );
\LOCKSTEP_Out_reg[2887]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(6),
      Q => \^lockstep_out\(2887),
      R => Reset
    );
\LOCKSTEP_Out_reg[2888]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(7),
      Q => \^lockstep_out\(2888),
      R => Reset
    );
\LOCKSTEP_Out_reg[2889]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(8),
      Q => \^lockstep_out\(2889),
      R => Reset
    );
\LOCKSTEP_Out_reg[2890]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(9),
      Q => \^lockstep_out\(2890),
      R => Reset
    );
\LOCKSTEP_Out_reg[2891]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(10),
      Q => \^lockstep_out\(2891),
      R => Reset
    );
\LOCKSTEP_Out_reg[2892]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(11),
      Q => \^lockstep_out\(2892),
      R => Reset
    );
\LOCKSTEP_Out_reg[2893]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(12),
      Q => \^lockstep_out\(2893),
      R => Reset
    );
\LOCKSTEP_Out_reg[2894]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(13),
      Q => \^lockstep_out\(2894),
      R => Reset
    );
\LOCKSTEP_Out_reg[2895]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(14),
      Q => \^lockstep_out\(2895),
      R => Reset
    );
\LOCKSTEP_Out_reg[2896]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(15),
      Q => \^lockstep_out\(2896),
      R => Reset
    );
\LOCKSTEP_Out_reg[2897]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(16),
      Q => \^lockstep_out\(2897),
      R => Reset
    );
\LOCKSTEP_Out_reg[2898]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(17),
      Q => \^lockstep_out\(2898),
      R => Reset
    );
\LOCKSTEP_Out_reg[2899]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(18),
      Q => \^lockstep_out\(2899),
      R => Reset
    );
\LOCKSTEP_Out_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(24),
      Q => \^lockstep_out\(28),
      R => Reset
    );
\LOCKSTEP_Out_reg[2900]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(19),
      Q => \^lockstep_out\(2900),
      R => Reset
    );
\LOCKSTEP_Out_reg[2901]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(20),
      Q => \^lockstep_out\(2901),
      R => Reset
    );
\LOCKSTEP_Out_reg[2902]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(21),
      Q => \^lockstep_out\(2902),
      R => Reset
    );
\LOCKSTEP_Out_reg[2903]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(22),
      Q => \^lockstep_out\(2903),
      R => Reset
    );
\LOCKSTEP_Out_reg[2904]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(23),
      Q => \^lockstep_out\(2904),
      R => Reset
    );
\LOCKSTEP_Out_reg[2905]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(24),
      Q => \^lockstep_out\(2905),
      R => Reset
    );
\LOCKSTEP_Out_reg[2906]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(25),
      Q => \^lockstep_out\(2906),
      R => Reset
    );
\LOCKSTEP_Out_reg[2907]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(26),
      Q => \^lockstep_out\(2907),
      R => Reset
    );
\LOCKSTEP_Out_reg[2908]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(27),
      Q => \^lockstep_out\(2908),
      R => Reset
    );
\LOCKSTEP_Out_reg[2909]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(28),
      Q => \^lockstep_out\(2909),
      R => Reset
    );
\LOCKSTEP_Out_reg[2910]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(29),
      Q => \^lockstep_out\(2910),
      R => Reset
    );
\LOCKSTEP_Out_reg[2911]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(30),
      Q => \^lockstep_out\(2911),
      R => Reset
    );
\LOCKSTEP_Out_reg[2912]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(31),
      Q => \^lockstep_out\(2912),
      R => Reset
    );
\LOCKSTEP_Out_reg[2913]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_valid_instr\,
      Q => \^lockstep_out\(2913),
      R => Reset
    );
\LOCKSTEP_Out_reg[2931]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(17),
      Q => \^lockstep_out\(2931),
      R => Reset
    );
\LOCKSTEP_Out_reg[2932]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(18),
      Q => \^lockstep_out\(2932),
      R => Reset
    );
\LOCKSTEP_Out_reg[2933]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(19),
      Q => \^lockstep_out\(2933),
      R => Reset
    );
\LOCKSTEP_Out_reg[2934]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(20),
      Q => \^lockstep_out\(2934),
      R => Reset
    );
\LOCKSTEP_Out_reg[2935]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(21),
      Q => \^lockstep_out\(2935),
      R => Reset
    );
\LOCKSTEP_Out_reg[2936]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(22),
      Q => \^lockstep_out\(2936),
      R => Reset
    );
\LOCKSTEP_Out_reg[2937]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(23),
      Q => \^lockstep_out\(2937),
      R => Reset
    );
\LOCKSTEP_Out_reg[2938]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(24),
      Q => \^lockstep_out\(2938),
      R => Reset
    );
\LOCKSTEP_Out_reg[2939]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(25),
      Q => \^lockstep_out\(2939),
      R => Reset
    );
\LOCKSTEP_Out_reg[2940]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(26),
      Q => \^lockstep_out\(2940),
      R => Reset
    );
\LOCKSTEP_Out_reg[2941]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(27),
      Q => \^lockstep_out\(2941),
      R => Reset
    );
\LOCKSTEP_Out_reg[2942]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(28),
      Q => \^lockstep_out\(2942),
      R => Reset
    );
\LOCKSTEP_Out_reg[2943]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(29),
      Q => \^lockstep_out\(2943),
      R => Reset
    );
\LOCKSTEP_Out_reg[2978]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_reg_write\,
      Q => \^lockstep_out\(2978),
      R => Reset
    );
\LOCKSTEP_Out_reg[2979]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_reg_addr\(0),
      Q => \^lockstep_out\(2979),
      R => Reset
    );
\LOCKSTEP_Out_reg[2980]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_reg_addr\(1),
      Q => \^lockstep_out\(2980),
      R => Reset
    );
\LOCKSTEP_Out_reg[2981]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_reg_addr\(2),
      Q => \^lockstep_out\(2981),
      R => Reset
    );
\LOCKSTEP_Out_reg[2982]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_reg_addr\(3),
      Q => \^lockstep_out\(2982),
      R => Reset
    );
\LOCKSTEP_Out_reg[2983]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_reg_addr\(4),
      Q => \^lockstep_out\(2983),
      R => Reset
    );
\LOCKSTEP_Out_reg[2995]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_msr_reg\(11),
      Q => \^lockstep_out\(2995),
      R => Reset
    );
\LOCKSTEP_Out_reg[2996]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_msr_reg\(12),
      Q => \^lockstep_out\(2996),
      R => Reset
    );
\LOCKSTEP_Out_reg[2997]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_msr_reg\(13),
      Q => \^lockstep_out\(2997),
      R => Reset
    );
\LOCKSTEP_Out_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(25),
      Q => \^lockstep_out\(29),
      R => Reset
    );
\LOCKSTEP_Out_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^ifetch\,
      Q => \^lockstep_out\(2),
      R => Reset
    );
\LOCKSTEP_Out_reg[3007]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(0),
      Q => \^lockstep_out\(3007),
      R => Reset
    );
\LOCKSTEP_Out_reg[3008]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(1),
      Q => \^lockstep_out\(3008),
      R => Reset
    );
\LOCKSTEP_Out_reg[3009]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(2),
      Q => \^lockstep_out\(3009),
      R => Reset
    );
\LOCKSTEP_Out_reg[3010]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(3),
      Q => \^lockstep_out\(3010),
      R => Reset
    );
\LOCKSTEP_Out_reg[3011]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(4),
      Q => \^lockstep_out\(3011),
      R => Reset
    );
\LOCKSTEP_Out_reg[3012]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(5),
      Q => \^lockstep_out\(3012),
      R => Reset
    );
\LOCKSTEP_Out_reg[3013]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(6),
      Q => \^lockstep_out\(3013),
      R => Reset
    );
\LOCKSTEP_Out_reg[3014]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(7),
      Q => \^lockstep_out\(3014),
      R => Reset
    );
\LOCKSTEP_Out_reg[3015]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(8),
      Q => \^lockstep_out\(3015),
      R => Reset
    );
\LOCKSTEP_Out_reg[3016]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(9),
      Q => \^lockstep_out\(3016),
      R => Reset
    );
\LOCKSTEP_Out_reg[3017]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(10),
      Q => \^lockstep_out\(3017),
      R => Reset
    );
\LOCKSTEP_Out_reg[3018]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(11),
      Q => \^lockstep_out\(3018),
      R => Reset
    );
\LOCKSTEP_Out_reg[3019]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(12),
      Q => \^lockstep_out\(3019),
      R => Reset
    );
\LOCKSTEP_Out_reg[3020]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(13),
      Q => \^lockstep_out\(3020),
      R => Reset
    );
\LOCKSTEP_Out_reg[3021]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(14),
      Q => \^lockstep_out\(3021),
      R => Reset
    );
\LOCKSTEP_Out_reg[3022]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(15),
      Q => \^lockstep_out\(3022),
      R => Reset
    );
\LOCKSTEP_Out_reg[3023]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(16),
      Q => \^lockstep_out\(3023),
      R => Reset
    );
\LOCKSTEP_Out_reg[3024]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(17),
      Q => \^lockstep_out\(3024),
      R => Reset
    );
\LOCKSTEP_Out_reg[3025]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(18),
      Q => \^lockstep_out\(3025),
      R => Reset
    );
\LOCKSTEP_Out_reg[3026]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(19),
      Q => \^lockstep_out\(3026),
      R => Reset
    );
\LOCKSTEP_Out_reg[3027]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(20),
      Q => \^lockstep_out\(3027),
      R => Reset
    );
\LOCKSTEP_Out_reg[3028]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(21),
      Q => \^lockstep_out\(3028),
      R => Reset
    );
\LOCKSTEP_Out_reg[3029]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(22),
      Q => \^lockstep_out\(3029),
      R => Reset
    );
\LOCKSTEP_Out_reg[3030]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(23),
      Q => \^lockstep_out\(3030),
      R => Reset
    );
\LOCKSTEP_Out_reg[3031]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(24),
      Q => \^lockstep_out\(3031),
      R => Reset
    );
\LOCKSTEP_Out_reg[3032]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(25),
      Q => \^lockstep_out\(3032),
      R => Reset
    );
\LOCKSTEP_Out_reg[3033]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(26),
      Q => \^lockstep_out\(3033),
      R => Reset
    );
\LOCKSTEP_Out_reg[3034]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(27),
      Q => \^lockstep_out\(3034),
      R => Reset
    );
\LOCKSTEP_Out_reg[3035]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(28),
      Q => \^lockstep_out\(3035),
      R => Reset
    );
\LOCKSTEP_Out_reg[3036]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(29),
      Q => \^lockstep_out\(3036),
      R => Reset
    );
\LOCKSTEP_Out_reg[3037]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(30),
      Q => \^lockstep_out\(3037),
      R => Reset
    );
\LOCKSTEP_Out_reg[3038]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(31),
      Q => \^lockstep_out\(3038),
      R => Reset
    );
\LOCKSTEP_Out_reg[3071]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_exception_kind\(1),
      Q => \^lockstep_out\(3073),
      R => Reset
    );
\LOCKSTEP_Out_reg[3077]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_jump_taken\,
      Q => \^lockstep_out\(3077),
      R => Reset
    );
\LOCKSTEP_Out_reg[3078]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_delay_slot\,
      Q => \^lockstep_out\(3078),
      R => Reset
    );
\LOCKSTEP_Out_reg[3079]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(0),
      Q => \^lockstep_out\(3079),
      R => Reset
    );
\LOCKSTEP_Out_reg[3080]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(1),
      Q => \^lockstep_out\(3080),
      R => Reset
    );
\LOCKSTEP_Out_reg[3081]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(2),
      Q => \^lockstep_out\(3081),
      R => Reset
    );
\LOCKSTEP_Out_reg[3082]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(3),
      Q => \^lockstep_out\(3082),
      R => Reset
    );
\LOCKSTEP_Out_reg[3083]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(4),
      Q => \^lockstep_out\(3083),
      R => Reset
    );
\LOCKSTEP_Out_reg[3084]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(5),
      Q => \^lockstep_out\(3084),
      R => Reset
    );
\LOCKSTEP_Out_reg[3085]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(6),
      Q => \^lockstep_out\(3085),
      R => Reset
    );
\LOCKSTEP_Out_reg[3086]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(7),
      Q => \^lockstep_out\(3086),
      R => Reset
    );
\LOCKSTEP_Out_reg[3087]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(8),
      Q => \^lockstep_out\(3087),
      R => Reset
    );
\LOCKSTEP_Out_reg[3088]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(9),
      Q => \^lockstep_out\(3088),
      R => Reset
    );
\LOCKSTEP_Out_reg[3089]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(10),
      Q => \^lockstep_out\(3089),
      R => Reset
    );
\LOCKSTEP_Out_reg[3090]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(11),
      Q => \^lockstep_out\(3090),
      R => Reset
    );
\LOCKSTEP_Out_reg[3091]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(12),
      Q => \^lockstep_out\(3091),
      R => Reset
    );
\LOCKSTEP_Out_reg[3092]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(13),
      Q => \^lockstep_out\(3092),
      R => Reset
    );
\LOCKSTEP_Out_reg[3093]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(14),
      Q => \^lockstep_out\(3093),
      R => Reset
    );
\LOCKSTEP_Out_reg[3094]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(15),
      Q => \^lockstep_out\(3094),
      R => Reset
    );
\LOCKSTEP_Out_reg[3095]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(16),
      Q => \^lockstep_out\(3095),
      R => Reset
    );
\LOCKSTEP_Out_reg[3096]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(17),
      Q => \^lockstep_out\(3096),
      R => Reset
    );
\LOCKSTEP_Out_reg[3097]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(18),
      Q => \^lockstep_out\(3097),
      R => Reset
    );
\LOCKSTEP_Out_reg[3098]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(19),
      Q => \^lockstep_out\(3098),
      R => Reset
    );
\LOCKSTEP_Out_reg[3099]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(20),
      Q => \^lockstep_out\(3099),
      R => Reset
    );
\LOCKSTEP_Out_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(26),
      Q => \^lockstep_out\(30),
      R => Reset
    );
\LOCKSTEP_Out_reg[3100]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(21),
      Q => \^lockstep_out\(3100),
      R => Reset
    );
\LOCKSTEP_Out_reg[3101]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(22),
      Q => \^lockstep_out\(3101),
      R => Reset
    );
\LOCKSTEP_Out_reg[3102]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(23),
      Q => \^lockstep_out\(3102),
      R => Reset
    );
\LOCKSTEP_Out_reg[3103]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(24),
      Q => \^lockstep_out\(3103),
      R => Reset
    );
\LOCKSTEP_Out_reg[3104]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(25),
      Q => \^lockstep_out\(3104),
      R => Reset
    );
\LOCKSTEP_Out_reg[3105]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(26),
      Q => \^lockstep_out\(3105),
      R => Reset
    );
\LOCKSTEP_Out_reg[3106]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(27),
      Q => \^lockstep_out\(3106),
      R => Reset
    );
\LOCKSTEP_Out_reg[3107]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(28),
      Q => \^lockstep_out\(3107),
      R => Reset
    );
\LOCKSTEP_Out_reg[3108]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(29),
      Q => \^lockstep_out\(3108),
      R => Reset
    );
\LOCKSTEP_Out_reg[3109]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(30),
      Q => \^lockstep_out\(3109),
      R => Reset
    );
\LOCKSTEP_Out_reg[3110]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(31),
      Q => \^lockstep_out\(3110),
      R => Reset
    );
\LOCKSTEP_Out_reg[3143]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(0),
      Q => \^lockstep_out\(3143),
      R => Reset
    );
\LOCKSTEP_Out_reg[3144]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(1),
      Q => \^lockstep_out\(3144),
      R => Reset
    );
\LOCKSTEP_Out_reg[3145]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(2),
      Q => \^lockstep_out\(3145),
      R => Reset
    );
\LOCKSTEP_Out_reg[3146]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(3),
      Q => \^lockstep_out\(3146),
      R => Reset
    );
\LOCKSTEP_Out_reg[3147]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(4),
      Q => \^lockstep_out\(3147),
      R => Reset
    );
\LOCKSTEP_Out_reg[3148]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(5),
      Q => \^lockstep_out\(3148),
      R => Reset
    );
\LOCKSTEP_Out_reg[3149]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(6),
      Q => \^lockstep_out\(3149),
      R => Reset
    );
\LOCKSTEP_Out_reg[3150]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(7),
      Q => \^lockstep_out\(3150),
      R => Reset
    );
\LOCKSTEP_Out_reg[3151]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(8),
      Q => \^lockstep_out\(3151),
      R => Reset
    );
\LOCKSTEP_Out_reg[3152]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(9),
      Q => \^lockstep_out\(3152),
      R => Reset
    );
\LOCKSTEP_Out_reg[3153]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(10),
      Q => \^lockstep_out\(3153),
      R => Reset
    );
\LOCKSTEP_Out_reg[3154]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(11),
      Q => \^lockstep_out\(3154),
      R => Reset
    );
\LOCKSTEP_Out_reg[3155]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(12),
      Q => \^lockstep_out\(3155),
      R => Reset
    );
\LOCKSTEP_Out_reg[3156]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(13),
      Q => \^lockstep_out\(3156),
      R => Reset
    );
\LOCKSTEP_Out_reg[3157]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(14),
      Q => \^lockstep_out\(3157),
      R => Reset
    );
\LOCKSTEP_Out_reg[3158]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(15),
      Q => \^lockstep_out\(3158),
      R => Reset
    );
\LOCKSTEP_Out_reg[3159]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(16),
      Q => \^lockstep_out\(3159),
      R => Reset
    );
\LOCKSTEP_Out_reg[3160]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(17),
      Q => \^lockstep_out\(3160),
      R => Reset
    );
\LOCKSTEP_Out_reg[3161]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(18),
      Q => \^lockstep_out\(3161),
      R => Reset
    );
\LOCKSTEP_Out_reg[3162]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(19),
      Q => \^lockstep_out\(3162),
      R => Reset
    );
\LOCKSTEP_Out_reg[3163]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(20),
      Q => \^lockstep_out\(3163),
      R => Reset
    );
\LOCKSTEP_Out_reg[3164]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(21),
      Q => \^lockstep_out\(3164),
      R => Reset
    );
\LOCKSTEP_Out_reg[3165]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(22),
      Q => \^lockstep_out\(3165),
      R => Reset
    );
\LOCKSTEP_Out_reg[3166]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(23),
      Q => \^lockstep_out\(3166),
      R => Reset
    );
\LOCKSTEP_Out_reg[3167]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(24),
      Q => \^lockstep_out\(3167),
      R => Reset
    );
\LOCKSTEP_Out_reg[3168]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(25),
      Q => \^lockstep_out\(3168),
      R => Reset
    );
\LOCKSTEP_Out_reg[3169]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(26),
      Q => \^lockstep_out\(3169),
      R => Reset
    );
\LOCKSTEP_Out_reg[3170]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(27),
      Q => \^lockstep_out\(3170),
      R => Reset
    );
\LOCKSTEP_Out_reg[3171]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(28),
      Q => \^lockstep_out\(3171),
      R => Reset
    );
\LOCKSTEP_Out_reg[3172]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(29),
      Q => \^lockstep_out\(3172),
      R => Reset
    );
\LOCKSTEP_Out_reg[3173]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(30),
      Q => \^lockstep_out\(3173),
      R => Reset
    );
\LOCKSTEP_Out_reg[3174]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(31),
      Q => \^lockstep_out\(3174),
      R => Reset
    );
\LOCKSTEP_Out_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(27),
      Q => \^lockstep_out\(31),
      R => Reset
    );
\LOCKSTEP_Out_reg[3207]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_byte_enable\(0),
      Q => \^lockstep_out\(3207),
      R => Reset
    );
\LOCKSTEP_Out_reg[3208]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_byte_enable\(1),
      Q => \^lockstep_out\(3208),
      R => Reset
    );
\LOCKSTEP_Out_reg[3209]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_byte_enable\(2),
      Q => \^lockstep_out\(3209),
      R => Reset
    );
\LOCKSTEP_Out_reg[3210]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_byte_enable\(3),
      Q => \^lockstep_out\(3210),
      R => Reset
    );
\LOCKSTEP_Out_reg[3215]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_access\,
      Q => \^lockstep_out\(3215),
      R => Reset
    );
\LOCKSTEP_Out_reg[3216]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_read\,
      Q => \^lockstep_out\(3216),
      R => Reset
    );
\LOCKSTEP_Out_reg[3217]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write\,
      Q => \^lockstep_out\(3217),
      R => Reset
    );
\LOCKSTEP_Out_reg[3225]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_of_piperun\,
      Q => \^lockstep_out\(3225),
      R => Reset
    );
\LOCKSTEP_Out_reg[3226]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '1',
      Q => \^lockstep_out\(3227),
      R => Reset
    );
\LOCKSTEP_Out_reg[32]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(28),
      Q => \^lockstep_out\(32),
      R => Reset
    );
\LOCKSTEP_Out_reg[33]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(29),
      Q => \^lockstep_out\(33),
      R => Reset
    );
\LOCKSTEP_Out_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^i_as\,
      Q => \^lockstep_out\(3),
      R => Reset
    );
\LOCKSTEP_Out_reg[68]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(0),
      Q => \^lockstep_out\(68),
      R => Reset
    );
\LOCKSTEP_Out_reg[69]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(1),
      Q => \^lockstep_out\(69),
      R => Reset
    );
\LOCKSTEP_Out_reg[70]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(2),
      Q => \^lockstep_out\(70),
      R => Reset
    );
\LOCKSTEP_Out_reg[71]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(3),
      Q => \^lockstep_out\(71),
      R => Reset
    );
\LOCKSTEP_Out_reg[72]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(4),
      Q => \^lockstep_out\(72),
      R => Reset
    );
\LOCKSTEP_Out_reg[73]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(5),
      Q => \^lockstep_out\(73),
      R => Reset
    );
\LOCKSTEP_Out_reg[74]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(6),
      Q => \^lockstep_out\(74),
      R => Reset
    );
\LOCKSTEP_Out_reg[75]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(7),
      Q => \^lockstep_out\(75),
      R => Reset
    );
\LOCKSTEP_Out_reg[76]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(8),
      Q => \^lockstep_out\(76),
      R => Reset
    );
\LOCKSTEP_Out_reg[77]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(9),
      Q => \^lockstep_out\(77),
      R => Reset
    );
\LOCKSTEP_Out_reg[78]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(10),
      Q => \^lockstep_out\(78),
      R => Reset
    );
\LOCKSTEP_Out_reg[79]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(11),
      Q => \^lockstep_out\(79),
      R => Reset
    );
\LOCKSTEP_Out_reg[80]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(12),
      Q => \^lockstep_out\(80),
      R => Reset
    );
\LOCKSTEP_Out_reg[81]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(13),
      Q => \^lockstep_out\(81),
      R => Reset
    );
\LOCKSTEP_Out_reg[82]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(14),
      Q => \^lockstep_out\(82),
      R => Reset
    );
\LOCKSTEP_Out_reg[83]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(15),
      Q => \^lockstep_out\(83),
      R => Reset
    );
\LOCKSTEP_Out_reg[84]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(16),
      Q => \^lockstep_out\(84),
      R => Reset
    );
\LOCKSTEP_Out_reg[85]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(17),
      Q => \^lockstep_out\(85),
      R => Reset
    );
\LOCKSTEP_Out_reg[86]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(18),
      Q => \^lockstep_out\(86),
      R => Reset
    );
\LOCKSTEP_Out_reg[87]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(19),
      Q => \^lockstep_out\(87),
      R => Reset
    );
\LOCKSTEP_Out_reg[88]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(20),
      Q => \^lockstep_out\(88),
      R => Reset
    );
\LOCKSTEP_Out_reg[89]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(21),
      Q => \^lockstep_out\(89),
      R => Reset
    );
\LOCKSTEP_Out_reg[90]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(22),
      Q => \^lockstep_out\(90),
      R => Reset
    );
\LOCKSTEP_Out_reg[91]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(23),
      Q => \^lockstep_out\(91),
      R => Reset
    );
\LOCKSTEP_Out_reg[92]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(24),
      Q => \^lockstep_out\(92),
      R => Reset
    );
\LOCKSTEP_Out_reg[93]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(25),
      Q => \^lockstep_out\(93),
      R => Reset
    );
\LOCKSTEP_Out_reg[94]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(26),
      Q => \^lockstep_out\(94),
      R => Reset
    );
\LOCKSTEP_Out_reg[95]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(27),
      Q => \^lockstep_out\(95),
      R => Reset
    );
\LOCKSTEP_Out_reg[96]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(28),
      Q => \^lockstep_out\(96),
      R => Reset
    );
\LOCKSTEP_Out_reg[97]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(29),
      Q => \^lockstep_out\(97),
      R => Reset
    );
\LOCKSTEP_Out_reg[98]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(30),
      Q => \^lockstep_out\(98),
      R => Reset
    );
\LOCKSTEP_Out_reg[99]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(31),
      Q => \^lockstep_out\(99),
      R => Reset
    );
MicroBlaze_Core_I: entity work.microblaze_mcs_1_MicroBlaze_Core
     port map (
      Clk => Clk,
      D(247) => \^ifetch\,
      D(246) => \^i_as\,
      D(245) => \^instr_addr\(17),
      D(244) => \^instr_addr\(18),
      D(243) => \^instr_addr\(19),
      D(242) => \^instr_addr\(20),
      D(241) => \^instr_addr\(21),
      D(240) => \^instr_addr\(22),
      D(239) => \^instr_addr\(23),
      D(238) => \^instr_addr\(24),
      D(237) => \^instr_addr\(25),
      D(236) => \^instr_addr\(26),
      D(235) => \^instr_addr\(27),
      D(234) => \^instr_addr\(28),
      D(233) => \^instr_addr\(29),
      D(232) => \^data_addr\(0),
      D(231) => \^data_addr\(1),
      D(230) => \^data_addr\(2),
      D(229) => \^data_addr\(3),
      D(228) => \^data_addr\(4),
      D(227) => \^data_addr\(5),
      D(226) => \^data_addr\(6),
      D(225) => \^data_addr\(7),
      D(224) => \^data_addr\(8),
      D(223) => \^data_addr\(9),
      D(222) => \^data_addr\(10),
      D(221) => \^data_addr\(11),
      D(220) => \^data_addr\(12),
      D(219) => \^data_addr\(13),
      D(218) => \^data_addr\(14),
      D(217) => \^data_addr\(15),
      D(216) => \^data_addr\(16),
      D(215) => \^data_addr\(17),
      D(214) => \^data_addr\(18),
      D(213) => \^data_addr\(19),
      D(212) => \^data_addr\(20),
      D(211) => \^data_addr\(21),
      D(210) => \^data_addr\(22),
      D(209) => \^data_addr\(23),
      D(208) => \^data_addr\(24),
      D(207) => \^data_addr\(25),
      D(206) => \^data_addr\(26),
      D(205) => \^data_addr\(27),
      D(204) => \^data_addr\(28),
      D(203) => \^data_addr\(29),
      D(202) => \^data_addr\(30),
      D(201) => \^data_addr\(31),
      D(200) => \^data_write\(0),
      D(199) => \^data_write\(1),
      D(198) => \^data_write\(2),
      D(197) => \^data_write\(3),
      D(196) => \^data_write\(4),
      D(195) => \^data_write\(5),
      D(194) => \^data_write\(6),
      D(193) => \^data_write\(7),
      D(192) => \^data_write\(8),
      D(191) => \^data_write\(9),
      D(190) => \^data_write\(10),
      D(189) => \^data_write\(11),
      D(188) => \^data_write\(12),
      D(187) => \^data_write\(13),
      D(186) => \^data_write\(14),
      D(185) => \^data_write\(15),
      D(184) => \^data_write\(16),
      D(183) => \^data_write\(17),
      D(182) => \^data_write\(18),
      D(181) => \^data_write\(19),
      D(180) => \^data_write\(20),
      D(179) => \^data_write\(21),
      D(178) => \^data_write\(22),
      D(177) => \^data_write\(23),
      D(176) => \^data_write\(24),
      D(175) => \^data_write\(25),
      D(174) => \^data_write\(26),
      D(173) => \^data_write\(27),
      D(172) => \^data_write\(28),
      D(171) => \^data_write\(29),
      D(170) => \^data_write\(30),
      D(169) => \^data_write\(31),
      D(168) => \^d_as\,
      D(167) => \^read_strobe\,
      D(166) => \^write_strobe\,
      D(165) => \^byte_enable\(0),
      D(164) => \^byte_enable\(1),
      D(163) => \^byte_enable\(2),
      D(162) => \^byte_enable\(3),
      D(161) => \^trace_instruction\(0),
      D(160) => \^trace_instruction\(1),
      D(159) => \^trace_instruction\(2),
      D(158) => \^trace_instruction\(3),
      D(157) => \^trace_instruction\(4),
      D(156) => \^trace_instruction\(5),
      D(155) => \^trace_instruction\(6),
      D(154) => \^trace_instruction\(7),
      D(153) => \^trace_instruction\(8),
      D(152) => \^trace_instruction\(9),
      D(151) => \^trace_instruction\(10),
      D(150) => \^trace_instruction\(11),
      D(149) => \^trace_instruction\(12),
      D(148) => \^trace_instruction\(13),
      D(147) => \^trace_instruction\(14),
      D(146) => \^trace_instruction\(15),
      D(145) => \^trace_instruction\(16),
      D(144) => \^trace_instruction\(17),
      D(143) => \^trace_instruction\(18),
      D(142) => \^trace_instruction\(19),
      D(141) => \^trace_instruction\(20),
      D(140) => \^trace_instruction\(21),
      D(139) => \^trace_instruction\(22),
      D(138) => \^trace_instruction\(23),
      D(137) => \^trace_instruction\(24),
      D(136) => \^trace_instruction\(25),
      D(135) => \^trace_instruction\(26),
      D(134) => \^trace_instruction\(27),
      D(133) => \^trace_instruction\(28),
      D(132) => \^trace_instruction\(29),
      D(131) => \^trace_instruction\(30),
      D(130) => \^trace_instruction\(31),
      D(129) => \^trace_valid_instr\,
      D(128) => \^trace_pc\(17),
      D(127) => \^trace_pc\(18),
      D(126) => \^trace_pc\(19),
      D(125) => \^trace_pc\(20),
      D(124) => \^trace_pc\(21),
      D(123) => \^trace_pc\(22),
      D(122) => \^trace_pc\(23),
      D(121) => \^trace_pc\(24),
      D(120) => \^trace_pc\(25),
      D(119) => \^trace_pc\(26),
      D(118) => \^trace_pc\(27),
      D(117) => \^trace_pc\(28),
      D(116) => \^trace_pc\(29),
      D(115) => \^trace_reg_write\,
      D(114) => \^trace_reg_addr\(0),
      D(113) => \^trace_reg_addr\(1),
      D(112) => \^trace_reg_addr\(2),
      D(111) => \^trace_reg_addr\(3),
      D(110) => \^trace_reg_addr\(4),
      D(109) => \^trace_msr_reg\(11),
      D(108) => \^trace_msr_reg\(12),
      D(107) => \^trace_msr_reg\(13),
      D(106) => \^trace_new_reg_value\(0),
      D(105) => \^trace_new_reg_value\(1),
      D(104) => \^trace_new_reg_value\(2),
      D(103) => \^trace_new_reg_value\(3),
      D(102) => \^trace_new_reg_value\(4),
      D(101) => \^trace_new_reg_value\(5),
      D(100) => \^trace_new_reg_value\(6),
      D(99) => \^trace_new_reg_value\(7),
      D(98) => \^trace_new_reg_value\(8),
      D(97) => \^trace_new_reg_value\(9),
      D(96) => \^trace_new_reg_value\(10),
      D(95) => \^trace_new_reg_value\(11),
      D(94) => \^trace_new_reg_value\(12),
      D(93) => \^trace_new_reg_value\(13),
      D(92) => \^trace_new_reg_value\(14),
      D(91) => \^trace_new_reg_value\(15),
      D(90) => \^trace_new_reg_value\(16),
      D(89) => \^trace_new_reg_value\(17),
      D(88) => \^trace_new_reg_value\(18),
      D(87) => \^trace_new_reg_value\(19),
      D(86) => \^trace_new_reg_value\(20),
      D(85) => \^trace_new_reg_value\(21),
      D(84) => \^trace_new_reg_value\(22),
      D(83) => \^trace_new_reg_value\(23),
      D(82) => \^trace_new_reg_value\(24),
      D(81) => \^trace_new_reg_value\(25),
      D(80) => \^trace_new_reg_value\(26),
      D(79) => \^trace_new_reg_value\(27),
      D(78) => \^trace_new_reg_value\(28),
      D(77) => \^trace_new_reg_value\(29),
      D(76) => \^trace_new_reg_value\(30),
      D(75) => \^trace_new_reg_value\(31),
      D(74) => \^trace_exception_kind\(1),
      D(73) => \^trace_jump_taken\,
      D(72) => \^trace_delay_slot\,
      D(71) => \^trace_data_address\(0),
      D(70) => \^trace_data_address\(1),
      D(69) => \^trace_data_address\(2),
      D(68) => \^trace_data_address\(3),
      D(67) => \^trace_data_address\(4),
      D(66) => \^trace_data_address\(5),
      D(65) => \^trace_data_address\(6),
      D(64) => \^trace_data_address\(7),
      D(63) => \^trace_data_address\(8),
      D(62) => \^trace_data_address\(9),
      D(61) => \^trace_data_address\(10),
      D(60) => \^trace_data_address\(11),
      D(59) => \^trace_data_address\(12),
      D(58) => \^trace_data_address\(13),
      D(57) => \^trace_data_address\(14),
      D(56) => \^trace_data_address\(15),
      D(55) => \^trace_data_address\(16),
      D(54) => \^trace_data_address\(17),
      D(53) => \^trace_data_address\(18),
      D(52) => \^trace_data_address\(19),
      D(51) => \^trace_data_address\(20),
      D(50) => \^trace_data_address\(21),
      D(49) => \^trace_data_address\(22),
      D(48) => \^trace_data_address\(23),
      D(47) => \^trace_data_address\(24),
      D(46) => \^trace_data_address\(25),
      D(45) => \^trace_data_address\(26),
      D(44) => \^trace_data_address\(27),
      D(43) => \^trace_data_address\(28),
      D(42) => \^trace_data_address\(29),
      D(41) => \^trace_data_address\(30),
      D(40) => \^trace_data_address\(31),
      D(39) => \^trace_data_write_value\(0),
      D(38) => \^trace_data_write_value\(1),
      D(37) => \^trace_data_write_value\(2),
      D(36) => \^trace_data_write_value\(3),
      D(35) => \^trace_data_write_value\(4),
      D(34) => \^trace_data_write_value\(5),
      D(33) => \^trace_data_write_value\(6),
      D(32) => \^trace_data_write_value\(7),
      D(31) => \^trace_data_write_value\(8),
      D(30) => \^trace_data_write_value\(9),
      D(29) => \^trace_data_write_value\(10),
      D(28) => \^trace_data_write_value\(11),
      D(27) => \^trace_data_write_value\(12),
      D(26) => \^trace_data_write_value\(13),
      D(25) => \^trace_data_write_value\(14),
      D(24) => \^trace_data_write_value\(15),
      D(23) => \^trace_data_write_value\(16),
      D(22) => \^trace_data_write_value\(17),
      D(21) => \^trace_data_write_value\(18),
      D(20) => \^trace_data_write_value\(19),
      D(19) => \^trace_data_write_value\(20),
      D(18) => \^trace_data_write_value\(21),
      D(17) => \^trace_data_write_value\(22),
      D(16) => \^trace_data_write_value\(23),
      D(15) => \^trace_data_write_value\(24),
      D(14) => \^trace_data_write_value\(25),
      D(13) => \^trace_data_write_value\(26),
      D(12) => \^trace_data_write_value\(27),
      D(11) => \^trace_data_write_value\(28),
      D(10) => \^trace_data_write_value\(29),
      D(9) => \^trace_data_write_value\(30),
      D(8) => \^trace_data_write_value\(31),
      D(7) => \^trace_data_byte_enable\(0),
      D(6) => \^trace_data_byte_enable\(1),
      D(5) => \^trace_data_byte_enable\(2),
      D(4) => \^trace_data_byte_enable\(3),
      D(3) => \^trace_data_access\,
      D(2) => \^trace_data_read\,
      D(1) => \^trace_data_write\,
      D(0) => \^trace_of_piperun\,
      DReady => DReady,
      Data_Read(0 to 31) => Data_Read(0 to 31),
      Hibernate => Hibernate,
      IReady => IReady,
      Instr(0 to 31) => Instr(0 to 31),
      Interrupt => Interrupt,
      Interrupt_Ack(0 to 1) => Interrupt_Ack(0 to 1),
      Interrupt_Address(0 to 31) => Interrupt_Address(0 to 31),
      Mb_Reset => Mb_Reset,
      Pause => Pause,
      Pause_Ack => Pause_Ack,
      Reset => Reset,
      Reset_Mode(0 to 1) => Reset_Mode(0 to 1),
      Sleep => Sleep,
      Suspend => Suspend,
      Wakeup(0 to 1) => Wakeup(0 to 1)
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_bd_3c9d_0_microblaze_I_0 is
  port (
    Clk : in STD_LOGIC;
    Reset : in STD_LOGIC;
    Interrupt : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 31 );
    Interrupt_Ack : out STD_LOGIC_VECTOR ( 0 to 1 );
    Instr_Addr : out STD_LOGIC_VECTOR ( 0 to 31 );
    Instr : in STD_LOGIC_VECTOR ( 0 to 31 );
    IFetch : out STD_LOGIC;
    I_AS : out STD_LOGIC;
    IReady : in STD_LOGIC;
    IWAIT : in STD_LOGIC;
    ICE : in STD_LOGIC;
    IUE : in STD_LOGIC;
    Data_Addr : out STD_LOGIC_VECTOR ( 0 to 31 );
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 31 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 31 );
    D_AS : out STD_LOGIC;
    Read_Strobe : out STD_LOGIC;
    Write_Strobe : out STD_LOGIC;
    DReady : in STD_LOGIC;
    DWait : in STD_LOGIC;
    DCE : in STD_LOGIC;
    DUE : in STD_LOGIC;
    Byte_Enable : out STD_LOGIC_VECTOR ( 0 to 3 )
  );
  attribute CHECK_LICENSE_TYPE : string;
  attribute CHECK_LICENSE_TYPE of microblaze_mcs_1_bd_3c9d_0_microblaze_I_0 : entity is "bd_3c9d_0_microblaze_I_0,MicroBlaze,{}";
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of microblaze_mcs_1_bd_3c9d_0_microblaze_I_0 : entity is "yes";
  attribute X_CORE_INFO : string;
  attribute X_CORE_INFO of microblaze_mcs_1_bd_3c9d_0_microblaze_I_0 : entity is "MicroBlaze,Vivado 2018.2";
end microblaze_mcs_1_bd_3c9d_0_microblaze_I_0;

architecture STRUCTURE of microblaze_mcs_1_bd_3c9d_0_microblaze_I_0 is
  signal NLW_U0_Dbg_ARREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_AWREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_BVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_Continue_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_Intr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_RVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_TDO_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_Trace_Valid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_WREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_Wakeup_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Hibernate_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M0_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M0_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M10_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M10_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M11_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M11_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M12_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M12_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M13_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M13_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M14_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M14_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M15_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M15_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M1_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M1_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M2_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M2_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M3_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M3_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M4_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M4_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M5_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M5_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M6_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M6_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M7_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M7_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M8_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M8_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M9_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M9_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_MB_Error_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_MB_Halted_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_ACREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_ARLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_ARVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_AWLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_AWVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_BREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_CDLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_CDVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_CRVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_RACK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_RREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_WACK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_WLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_WVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DP_ARLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DP_ARVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DP_AWLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DP_AWVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DP_BREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DP_RREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DP_WLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DP_WVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_ACREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_ARLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_ARVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_AWLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_AWVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_BREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_CDLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_CDVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_CRVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_RACK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_RREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_WACK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_WLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_WVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_ARLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_ARVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_AWLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_AWVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_BREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_RREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_WLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_WVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Pause_Ack_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S0_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S10_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S11_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S12_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S13_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S14_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S15_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S1_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S2_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S3_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S4_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S5_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S6_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S7_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S8_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S9_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Sleep_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Suspend_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_DCache_Hit_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_DCache_Rdy_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_DCache_Read_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_DCache_Req_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Data_Access_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Data_Read_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Data_Write_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Delay_Slot_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_EX_PipeRun_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Exception_Taken_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_ICache_Hit_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_ICache_Rdy_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_ICache_Req_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Jump_Hit_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Jump_Taken_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_MB_Halted_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_MEM_PipeRun_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_OF_PipeRun_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Reg_Write_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Valid_Instr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_BRESP_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_Dbg_RDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_Dbg_RRESP_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_Dbg_Trace_Data_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 35 );
  signal NLW_U0_Dbg_Trig_Ack_Out_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 7 );
  signal NLW_U0_Dbg_Trig_In_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 7 );
  signal NLW_U0_LOCKSTEP_Master_Out_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 4095 );
  signal NLW_U0_LOCKSTEP_Out_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 4095 );
  signal NLW_U0_M0_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M10_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M11_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M12_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M13_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M14_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M15_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M1_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M2_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M3_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M4_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M5_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M6_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M7_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M8_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M9_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_DC_ARADDR_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_DC_ARBAR_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DC_ARBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DC_ARCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DC_ARDOMAIN_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DC_ARID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_DC_ARLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_DC_ARPROT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_DC_ARQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DC_ARSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_DC_ARSNOOP_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DC_ARUSER_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_M_AXI_DC_AWADDR_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_DC_AWBAR_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DC_AWBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DC_AWCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DC_AWDOMAIN_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DC_AWID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_DC_AWLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_DC_AWPROT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_DC_AWQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DC_AWSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_DC_AWSNOOP_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_DC_AWUSER_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_M_AXI_DC_CDDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_DC_CRRESP_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_M_AXI_DC_WDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_DC_WSTRB_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DC_WUSER_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_DP_ARADDR_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_DP_ARBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DP_ARCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DP_ARID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_DP_ARLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_DP_ARPROT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_DP_ARQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DP_ARSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_DP_AWADDR_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_DP_AWBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DP_AWCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DP_AWID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_DP_AWLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_DP_AWPROT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_DP_AWQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DP_AWSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_DP_WDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_DP_WSTRB_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IC_ARADDR_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_IC_ARBAR_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IC_ARBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IC_ARCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IC_ARDOMAIN_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IC_ARID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_IC_ARLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_IC_ARPROT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IC_ARQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IC_ARSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IC_ARSNOOP_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IC_ARUSER_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_M_AXI_IC_AWADDR_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_IC_AWBAR_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IC_AWBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IC_AWCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IC_AWDOMAIN_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IC_AWID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_IC_AWLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_IC_AWPROT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IC_AWQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IC_AWSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IC_AWSNOOP_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IC_AWUSER_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_M_AXI_IC_CDDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_IC_CRRESP_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_M_AXI_IC_WDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_IC_WSTRB_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IC_WUSER_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_IP_ARADDR_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_IP_ARBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IP_ARCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IP_ARID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_IP_ARLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_IP_ARPROT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IP_ARQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IP_ARSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IP_AWADDR_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_IP_AWBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IP_AWCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IP_AWID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_IP_AWLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_IP_AWPROT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IP_AWQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IP_AWSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IP_WDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_IP_WSTRB_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_RAM_From_UNCONNECTED : STD_LOGIC_VECTOR ( 255 downto 0 );
  signal NLW_U0_Trace_Data_Address_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 31 );
  signal NLW_U0_Trace_Data_Byte_Enable_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 3 );
  signal NLW_U0_Trace_Data_Write_Value_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 31 );
  signal NLW_U0_Trace_Exception_Kind_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 4 );
  signal NLW_U0_Trace_Instruction_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 31 );
  signal NLW_U0_Trace_MSR_Reg_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 14 );
  signal NLW_U0_Trace_New_Reg_Value_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 31 );
  signal NLW_U0_Trace_PC_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 31 );
  signal NLW_U0_Trace_PID_Reg_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 7 );
  signal NLW_U0_Trace_Reg_Addr_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 4 );
  attribute C_ADDR_TAG_BITS : integer;
  attribute C_ADDR_TAG_BITS of U0 : label is 0;
  attribute C_ALLOW_DCACHE_WR : integer;
  attribute C_ALLOW_DCACHE_WR of U0 : label is 1;
  attribute C_ALLOW_ICACHE_WR : integer;
  attribute C_ALLOW_ICACHE_WR of U0 : label is 1;
  attribute C_AREA_OPTIMIZED : integer;
  attribute C_AREA_OPTIMIZED of U0 : label is 1;
  attribute C_ASYNC_INTERRUPT : integer;
  attribute C_ASYNC_INTERRUPT of U0 : label is 1;
  attribute C_ASYNC_WAKEUP : integer;
  attribute C_ASYNC_WAKEUP of U0 : label is 3;
  attribute C_AVOID_PRIMITIVES : integer;
  attribute C_AVOID_PRIMITIVES of U0 : label is 0;
  attribute C_BASE_VECTORS : string;
  attribute C_BASE_VECTORS of U0 : label is "64'b0000000000000000000000000000000000000000000000000000000000000000";
  attribute C_BRANCH_TARGET_CACHE_SIZE : integer;
  attribute C_BRANCH_TARGET_CACHE_SIZE of U0 : label is 0;
  attribute C_CACHE_BYTE_SIZE : integer;
  attribute C_CACHE_BYTE_SIZE of U0 : label is 8192;
  attribute C_DADDR_SIZE : integer;
  attribute C_DADDR_SIZE of U0 : label is 32;
  attribute C_DATA_SIZE : integer;
  attribute C_DATA_SIZE of U0 : label is 32;
  attribute C_DCACHE_ADDR_TAG : integer;
  attribute C_DCACHE_ADDR_TAG of U0 : label is 0;
  attribute C_DCACHE_ALWAYS_USED : integer;
  attribute C_DCACHE_ALWAYS_USED of U0 : label is 0;
  attribute C_DCACHE_BASEADDR : string;
  attribute C_DCACHE_BASEADDR of U0 : label is "64'b0000000000000000000000000000000000000000000000000000000000000000";
  attribute C_DCACHE_BYTE_SIZE : integer;
  attribute C_DCACHE_BYTE_SIZE of U0 : label is 8192;
  attribute C_DCACHE_DATA_WIDTH : integer;
  attribute C_DCACHE_DATA_WIDTH of U0 : label is 0;
  attribute C_DCACHE_FORCE_TAG_LUTRAM : integer;
  attribute C_DCACHE_FORCE_TAG_LUTRAM of U0 : label is 0;
  attribute C_DCACHE_HIGHADDR : string;
  attribute C_DCACHE_HIGHADDR of U0 : label is "64'b0000000000000000000000000000000000111111111111111111111111111111";
  attribute C_DCACHE_LINE_LEN : integer;
  attribute C_DCACHE_LINE_LEN of U0 : label is 4;
  attribute C_DCACHE_USE_WRITEBACK : integer;
  attribute C_DCACHE_USE_WRITEBACK of U0 : label is 0;
  attribute C_DCACHE_VICTIMS : integer;
  attribute C_DCACHE_VICTIMS of U0 : label is 0;
  attribute C_DEBUG_COUNTER_WIDTH : integer;
  attribute C_DEBUG_COUNTER_WIDTH of U0 : label is 32;
  attribute C_DEBUG_ENABLED : integer;
  attribute C_DEBUG_ENABLED of U0 : label is 0;
  attribute C_DEBUG_EVENT_COUNTERS : integer;
  attribute C_DEBUG_EVENT_COUNTERS of U0 : label is 5;
  attribute C_DEBUG_EXTERNAL_TRACE : integer;
  attribute C_DEBUG_EXTERNAL_TRACE of U0 : label is 0;
  attribute C_DEBUG_INTERFACE : integer;
  attribute C_DEBUG_INTERFACE of U0 : label is 0;
  attribute C_DEBUG_LATENCY_COUNTERS : integer;
  attribute C_DEBUG_LATENCY_COUNTERS of U0 : label is 1;
  attribute C_DEBUG_PROFILE_SIZE : integer;
  attribute C_DEBUG_PROFILE_SIZE of U0 : label is 0;
  attribute C_DEBUG_TRACE_ASYNC_RESET : integer;
  attribute C_DEBUG_TRACE_ASYNC_RESET of U0 : label is 0;
  attribute C_DEBUG_TRACE_SIZE : integer;
  attribute C_DEBUG_TRACE_SIZE of U0 : label is 8192;
  attribute C_DIV_ZERO_EXCEPTION : integer;
  attribute C_DIV_ZERO_EXCEPTION of U0 : label is 0;
  attribute C_DYNAMIC_BUS_SIZING : integer;
  attribute C_DYNAMIC_BUS_SIZING of U0 : label is 0;
  attribute C_D_AXI : integer;
  attribute C_D_AXI of U0 : label is 0;
  attribute C_D_LMB : integer;
  attribute C_D_LMB of U0 : label is 1;
  attribute C_ECC_USE_CE_EXCEPTION : integer;
  attribute C_ECC_USE_CE_EXCEPTION of U0 : label is 0;
  attribute C_EDGE_IS_POSITIVE : integer;
  attribute C_EDGE_IS_POSITIVE of U0 : label is 1;
  attribute C_ENDIANNESS : integer;
  attribute C_ENDIANNESS of U0 : label is 1;
  attribute C_FAMILY : string;
  attribute C_FAMILY of U0 : label is "spartan7";
  attribute C_FAULT_TOLERANT : integer;
  attribute C_FAULT_TOLERANT of U0 : label is 0;
  attribute C_FPU_EXCEPTION : integer;
  attribute C_FPU_EXCEPTION of U0 : label is 0;
  attribute C_FREQ : integer;
  attribute C_FREQ of U0 : label is 100000000;
  attribute C_FSL_EXCEPTION : integer;
  attribute C_FSL_EXCEPTION of U0 : label is 0;
  attribute C_FSL_LINKS : integer;
  attribute C_FSL_LINKS of U0 : label is 0;
  attribute C_IADDR_SIZE : integer;
  attribute C_IADDR_SIZE of U0 : label is 32;
  attribute C_ICACHE_ALWAYS_USED : integer;
  attribute C_ICACHE_ALWAYS_USED of U0 : label is 0;
  attribute C_ICACHE_BASEADDR : string;
  attribute C_ICACHE_BASEADDR of U0 : label is "64'b0000000000000000000000000000000000000000000000000000000000000000";
  attribute C_ICACHE_DATA_WIDTH : integer;
  attribute C_ICACHE_DATA_WIDTH of U0 : label is 0;
  attribute C_ICACHE_FORCE_TAG_LUTRAM : integer;
  attribute C_ICACHE_FORCE_TAG_LUTRAM of U0 : label is 0;
  attribute C_ICACHE_HIGHADDR : string;
  attribute C_ICACHE_HIGHADDR of U0 : label is "64'b0000000000000000000000000000000000111111111111111111111111111111";
  attribute C_ICACHE_LINE_LEN : integer;
  attribute C_ICACHE_LINE_LEN of U0 : label is 4;
  attribute C_ICACHE_STREAMS : integer;
  attribute C_ICACHE_STREAMS of U0 : label is 0;
  attribute C_ICACHE_VICTIMS : integer;
  attribute C_ICACHE_VICTIMS of U0 : label is 0;
  attribute C_ILL_OPCODE_EXCEPTION : integer;
  attribute C_ILL_OPCODE_EXCEPTION of U0 : label is 0;
  attribute C_IMPRECISE_EXCEPTIONS : integer;
  attribute C_IMPRECISE_EXCEPTIONS of U0 : label is 0;
  attribute C_INSTANCE : string;
  attribute C_INSTANCE of U0 : label is "bd_3c9d_0_microblaze_I_0";
  attribute C_INSTR_SIZE : integer;
  attribute C_INSTR_SIZE of U0 : label is 32;
  attribute C_INTERCONNECT : integer;
  attribute C_INTERCONNECT of U0 : label is 2;
  attribute C_INTERRUPT_IS_EDGE : integer;
  attribute C_INTERRUPT_IS_EDGE of U0 : label is 0;
  attribute C_I_AXI : integer;
  attribute C_I_AXI of U0 : label is 0;
  attribute C_I_LMB : integer;
  attribute C_I_LMB of U0 : label is 1;
  attribute C_LOCKSTEP_MASTER : integer;
  attribute C_LOCKSTEP_MASTER of U0 : label is 0;
  attribute C_LOCKSTEP_SLAVE : integer;
  attribute C_LOCKSTEP_SLAVE of U0 : label is 0;
  attribute C_M0_AXIS_DATA_WIDTH : integer;
  attribute C_M0_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M10_AXIS_DATA_WIDTH : integer;
  attribute C_M10_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M11_AXIS_DATA_WIDTH : integer;
  attribute C_M11_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M12_AXIS_DATA_WIDTH : integer;
  attribute C_M12_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M13_AXIS_DATA_WIDTH : integer;
  attribute C_M13_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M14_AXIS_DATA_WIDTH : integer;
  attribute C_M14_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M15_AXIS_DATA_WIDTH : integer;
  attribute C_M15_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M1_AXIS_DATA_WIDTH : integer;
  attribute C_M1_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M2_AXIS_DATA_WIDTH : integer;
  attribute C_M2_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M3_AXIS_DATA_WIDTH : integer;
  attribute C_M3_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M4_AXIS_DATA_WIDTH : integer;
  attribute C_M4_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M5_AXIS_DATA_WIDTH : integer;
  attribute C_M5_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M6_AXIS_DATA_WIDTH : integer;
  attribute C_M6_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M7_AXIS_DATA_WIDTH : integer;
  attribute C_M7_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M8_AXIS_DATA_WIDTH : integer;
  attribute C_M8_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M9_AXIS_DATA_WIDTH : integer;
  attribute C_M9_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_MMU_DTLB_SIZE : integer;
  attribute C_MMU_DTLB_SIZE of U0 : label is 4;
  attribute C_MMU_ITLB_SIZE : integer;
  attribute C_MMU_ITLB_SIZE of U0 : label is 2;
  attribute C_MMU_PRIVILEGED_INSTR : integer;
  attribute C_MMU_PRIVILEGED_INSTR of U0 : label is 0;
  attribute C_MMU_TLB_ACCESS : integer;
  attribute C_MMU_TLB_ACCESS of U0 : label is 3;
  attribute C_MMU_ZONES : integer;
  attribute C_MMU_ZONES of U0 : label is 16;
  attribute C_M_AXI_DC_ADDR_WIDTH : integer;
  attribute C_M_AXI_DC_ADDR_WIDTH of U0 : label is 32;
  attribute C_M_AXI_DC_ARUSER_WIDTH : integer;
  attribute C_M_AXI_DC_ARUSER_WIDTH of U0 : label is 5;
  attribute C_M_AXI_DC_AWUSER_WIDTH : integer;
  attribute C_M_AXI_DC_AWUSER_WIDTH of U0 : label is 5;
  attribute C_M_AXI_DC_BUSER_WIDTH : integer;
  attribute C_M_AXI_DC_BUSER_WIDTH of U0 : label is 1;
  attribute C_M_AXI_DC_DATA_WIDTH : integer;
  attribute C_M_AXI_DC_DATA_WIDTH of U0 : label is 32;
  attribute C_M_AXI_DC_EXCLUSIVE_ACCESS : integer;
  attribute C_M_AXI_DC_EXCLUSIVE_ACCESS of U0 : label is 0;
  attribute C_M_AXI_DC_RUSER_WIDTH : integer;
  attribute C_M_AXI_DC_RUSER_WIDTH of U0 : label is 1;
  attribute C_M_AXI_DC_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_DC_THREAD_ID_WIDTH of U0 : label is 1;
  attribute C_M_AXI_DC_USER_VALUE : integer;
  attribute C_M_AXI_DC_USER_VALUE of U0 : label is 31;
  attribute C_M_AXI_DC_WUSER_WIDTH : integer;
  attribute C_M_AXI_DC_WUSER_WIDTH of U0 : label is 1;
  attribute C_M_AXI_DP_ADDR_WIDTH : integer;
  attribute C_M_AXI_DP_ADDR_WIDTH of U0 : label is 32;
  attribute C_M_AXI_DP_DATA_WIDTH : integer;
  attribute C_M_AXI_DP_DATA_WIDTH of U0 : label is 32;
  attribute C_M_AXI_DP_EXCLUSIVE_ACCESS : integer;
  attribute C_M_AXI_DP_EXCLUSIVE_ACCESS of U0 : label is 0;
  attribute C_M_AXI_DP_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_DP_THREAD_ID_WIDTH of U0 : label is 1;
  attribute C_M_AXI_D_BUS_EXCEPTION : integer;
  attribute C_M_AXI_D_BUS_EXCEPTION of U0 : label is 0;
  attribute C_M_AXI_IC_ADDR_WIDTH : integer;
  attribute C_M_AXI_IC_ADDR_WIDTH of U0 : label is 32;
  attribute C_M_AXI_IC_ARUSER_WIDTH : integer;
  attribute C_M_AXI_IC_ARUSER_WIDTH of U0 : label is 5;
  attribute C_M_AXI_IC_AWUSER_WIDTH : integer;
  attribute C_M_AXI_IC_AWUSER_WIDTH of U0 : label is 5;
  attribute C_M_AXI_IC_BUSER_WIDTH : integer;
  attribute C_M_AXI_IC_BUSER_WIDTH of U0 : label is 1;
  attribute C_M_AXI_IC_DATA_WIDTH : integer;
  attribute C_M_AXI_IC_DATA_WIDTH of U0 : label is 32;
  attribute C_M_AXI_IC_RUSER_WIDTH : integer;
  attribute C_M_AXI_IC_RUSER_WIDTH of U0 : label is 1;
  attribute C_M_AXI_IC_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_IC_THREAD_ID_WIDTH of U0 : label is 1;
  attribute C_M_AXI_IC_USER_VALUE : integer;
  attribute C_M_AXI_IC_USER_VALUE of U0 : label is 31;
  attribute C_M_AXI_IC_WUSER_WIDTH : integer;
  attribute C_M_AXI_IC_WUSER_WIDTH of U0 : label is 1;
  attribute C_M_AXI_IP_ADDR_WIDTH : integer;
  attribute C_M_AXI_IP_ADDR_WIDTH of U0 : label is 32;
  attribute C_M_AXI_IP_DATA_WIDTH : integer;
  attribute C_M_AXI_IP_DATA_WIDTH of U0 : label is 32;
  attribute C_M_AXI_IP_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_IP_THREAD_ID_WIDTH of U0 : label is 1;
  attribute C_M_AXI_I_BUS_EXCEPTION : integer;
  attribute C_M_AXI_I_BUS_EXCEPTION of U0 : label is 0;
  attribute C_NUMBER_OF_PC_BRK : integer;
  attribute C_NUMBER_OF_PC_BRK of U0 : label is 1;
  attribute C_NUMBER_OF_RD_ADDR_BRK : integer;
  attribute C_NUMBER_OF_RD_ADDR_BRK of U0 : label is 0;
  attribute C_NUMBER_OF_WR_ADDR_BRK : integer;
  attribute C_NUMBER_OF_WR_ADDR_BRK of U0 : label is 0;
  attribute C_NUM_SYNC_FF_CLK : integer;
  attribute C_NUM_SYNC_FF_CLK of U0 : label is 2;
  attribute C_NUM_SYNC_FF_CLK_DEBUG : integer;
  attribute C_NUM_SYNC_FF_CLK_DEBUG of U0 : label is 2;
  attribute C_NUM_SYNC_FF_CLK_IRQ : integer;
  attribute C_NUM_SYNC_FF_CLK_IRQ of U0 : label is 1;
  attribute C_NUM_SYNC_FF_DBG_CLK : integer;
  attribute C_NUM_SYNC_FF_DBG_CLK of U0 : label is 1;
  attribute C_NUM_SYNC_FF_DBG_TRACE_CLK : integer;
  attribute C_NUM_SYNC_FF_DBG_TRACE_CLK of U0 : label is 2;
  attribute C_OPCODE_0x0_ILLEGAL : integer;
  attribute C_OPCODE_0x0_ILLEGAL of U0 : label is 0;
  attribute C_OPTIMIZATION : integer;
  attribute C_OPTIMIZATION of U0 : label is 0;
  attribute C_PC_WIDTH : integer;
  attribute C_PC_WIDTH of U0 : label is 15;
  attribute C_PIADDR_SIZE : integer;
  attribute C_PIADDR_SIZE of U0 : label is 32;
  attribute C_PVR : integer;
  attribute C_PVR of U0 : label is 0;
  attribute C_PVR_USER1 : string;
  attribute C_PVR_USER1 of U0 : label is "8'b00000000";
  attribute C_PVR_USER2 : integer;
  attribute C_PVR_USER2 of U0 : label is 0;
  attribute C_RESET_MSR : integer;
  attribute C_RESET_MSR of U0 : label is 0;
  attribute C_S0_AXIS_DATA_WIDTH : integer;
  attribute C_S0_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S10_AXIS_DATA_WIDTH : integer;
  attribute C_S10_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S11_AXIS_DATA_WIDTH : integer;
  attribute C_S11_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S12_AXIS_DATA_WIDTH : integer;
  attribute C_S12_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S13_AXIS_DATA_WIDTH : integer;
  attribute C_S13_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S14_AXIS_DATA_WIDTH : integer;
  attribute C_S14_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S15_AXIS_DATA_WIDTH : integer;
  attribute C_S15_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S1_AXIS_DATA_WIDTH : integer;
  attribute C_S1_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S2_AXIS_DATA_WIDTH : integer;
  attribute C_S2_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S3_AXIS_DATA_WIDTH : integer;
  attribute C_S3_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S4_AXIS_DATA_WIDTH : integer;
  attribute C_S4_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S5_AXIS_DATA_WIDTH : integer;
  attribute C_S5_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S6_AXIS_DATA_WIDTH : integer;
  attribute C_S6_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S7_AXIS_DATA_WIDTH : integer;
  attribute C_S7_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S8_AXIS_DATA_WIDTH : integer;
  attribute C_S8_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S9_AXIS_DATA_WIDTH : integer;
  attribute C_S9_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_SCO : integer;
  attribute C_SCO of U0 : label is 0;
  attribute C_UNALIGNED_EXCEPTIONS : integer;
  attribute C_UNALIGNED_EXCEPTIONS of U0 : label is 0;
  attribute C_USE_BARREL : integer;
  attribute C_USE_BARREL of U0 : label is 0;
  attribute C_USE_BRANCH_TARGET_CACHE : integer;
  attribute C_USE_BRANCH_TARGET_CACHE of U0 : label is 0;
  attribute C_USE_CONFIG_RESET : integer;
  attribute C_USE_CONFIG_RESET of U0 : label is 0;
  attribute C_USE_DCACHE : integer;
  attribute C_USE_DCACHE of U0 : label is 0;
  attribute C_USE_DIV : integer;
  attribute C_USE_DIV of U0 : label is 0;
  attribute C_USE_EXTENDED_FSL_INSTR : integer;
  attribute C_USE_EXTENDED_FSL_INSTR of U0 : label is 0;
  attribute C_USE_EXT_BRK : integer;
  attribute C_USE_EXT_BRK of U0 : label is 0;
  attribute C_USE_EXT_NM_BRK : integer;
  attribute C_USE_EXT_NM_BRK of U0 : label is 0;
  attribute C_USE_FPU : integer;
  attribute C_USE_FPU of U0 : label is 0;
  attribute C_USE_HW_MUL : integer;
  attribute C_USE_HW_MUL of U0 : label is 0;
  attribute C_USE_ICACHE : integer;
  attribute C_USE_ICACHE of U0 : label is 0;
  attribute C_USE_INTERRUPT : integer;
  attribute C_USE_INTERRUPT of U0 : label is 2;
  attribute C_USE_MMU : integer;
  attribute C_USE_MMU of U0 : label is 0;
  attribute C_USE_MSR_INSTR : integer;
  attribute C_USE_MSR_INSTR of U0 : label is 0;
  attribute C_USE_NON_SECURE : integer;
  attribute C_USE_NON_SECURE of U0 : label is 0;
  attribute C_USE_PCMP_INSTR : integer;
  attribute C_USE_PCMP_INSTR of U0 : label is 0;
  attribute C_USE_REORDER_INSTR : integer;
  attribute C_USE_REORDER_INSTR of U0 : label is 0;
  attribute C_USE_STACK_PROTECTION : integer;
  attribute C_USE_STACK_PROTECTION of U0 : label is 0;
  attribute downgradeipidentifiedwarnings of U0 : label is "yes";
  attribute X_INTERFACE_INFO : string;
  attribute X_INTERFACE_INFO of Clk : signal is "xilinx.com:signal:clock:1.0 CLK.CLK CLK";
  attribute X_INTERFACE_PARAMETER : string;
  attribute X_INTERFACE_PARAMETER of Clk : signal is "XIL_INTERFACENAME CLK.CLK, ASSOCIATED_BUSIF M0_AXIS:S0_AXIS:M1_AXIS:S1_AXIS:M2_AXIS:S2_AXIS:M3_AXIS:S3_AXIS:M4_AXIS:S4_AXIS:M5_AXIS:S5_AXIS:M6_AXIS:S6_AXIS:M7_AXIS:S7_AXIS:M8_AXIS:S8_AXIS:M9_AXIS:S9_AXIS:M10_AXIS:S10_AXIS:M11_AXIS:S11_AXIS:M12_AXIS:S12_AXIS:M13_AXIS:S13_AXIS:M14_AXIS:S14_AXIS:M15_AXIS:S15_AXIS:DLMB:ILMB:M_AXI_DP:M_AXI_IP:M_AXI_DC:M_AXI_IC:M_ACE_DC:M_ACE_IC:MON_DLMB:MON_ILMB:MON_AXI_DP:MON_AXI_IP:MON_AXI_DC:MON_AXI_IC:MON_ACE_DC:MON_ACE_IC, ASSOCIATED_RESET Reset, FREQ_HZ 100000000, PHASE 0.000";
  attribute X_INTERFACE_INFO of DCE : signal is "xilinx.com:interface:lmb:1.0 DLMB CE";
  attribute X_INTERFACE_INFO of DReady : signal is "xilinx.com:interface:lmb:1.0 DLMB READY";
  attribute X_INTERFACE_INFO of DUE : signal is "xilinx.com:interface:lmb:1.0 DLMB UE";
  attribute X_INTERFACE_INFO of DWait : signal is "xilinx.com:interface:lmb:1.0 DLMB WAIT";
  attribute X_INTERFACE_INFO of D_AS : signal is "xilinx.com:interface:lmb:1.0 DLMB ADDRSTROBE";
  attribute X_INTERFACE_INFO of ICE : signal is "xilinx.com:interface:lmb:1.0 ILMB CE";
  attribute X_INTERFACE_INFO of IFetch : signal is "xilinx.com:interface:lmb:1.0 ILMB READSTROBE";
  attribute X_INTERFACE_INFO of IReady : signal is "xilinx.com:interface:lmb:1.0 ILMB READY";
  attribute X_INTERFACE_INFO of IUE : signal is "xilinx.com:interface:lmb:1.0 ILMB UE";
  attribute X_INTERFACE_INFO of IWAIT : signal is "xilinx.com:interface:lmb:1.0 ILMB WAIT";
  attribute X_INTERFACE_INFO of I_AS : signal is "xilinx.com:interface:lmb:1.0 ILMB ADDRSTROBE";
  attribute X_INTERFACE_INFO of Interrupt : signal is "xilinx.com:interface:mbinterrupt:1.0 INTERRUPT INTERRUPT";
  attribute X_INTERFACE_PARAMETER of Interrupt : signal is "XIL_INTERFACENAME INTERRUPT, SENSITIVITY LEVEL_HIGH, LOW_LATENCY 1";
  attribute X_INTERFACE_INFO of Read_Strobe : signal is "xilinx.com:interface:lmb:1.0 DLMB READSTROBE";
  attribute X_INTERFACE_INFO of Reset : signal is "xilinx.com:signal:reset:1.0 RST.RESET RST";
  attribute X_INTERFACE_PARAMETER of Reset : signal is "XIL_INTERFACENAME RST.RESET, POLARITY ACTIVE_HIGH, TYPE PROCESSOR";
  attribute X_INTERFACE_INFO of Write_Strobe : signal is "xilinx.com:interface:lmb:1.0 DLMB WRITESTROBE";
  attribute X_INTERFACE_INFO of Byte_Enable : signal is "xilinx.com:interface:lmb:1.0 DLMB BE";
  attribute X_INTERFACE_INFO of Data_Addr : signal is "xilinx.com:interface:lmb:1.0 DLMB ABUS";
  attribute X_INTERFACE_PARAMETER of Data_Addr : signal is "XIL_INTERFACENAME DLMB, ADDR_WIDTH 32, DATA_WIDTH 32, READ_WRITE_MODE READ_WRITE";
  attribute X_INTERFACE_INFO of Data_Read : signal is "xilinx.com:interface:lmb:1.0 DLMB READDBUS";
  attribute X_INTERFACE_INFO of Data_Write : signal is "xilinx.com:interface:lmb:1.0 DLMB WRITEDBUS";
  attribute X_INTERFACE_INFO of Instr : signal is "xilinx.com:interface:lmb:1.0 ILMB READDBUS";
  attribute X_INTERFACE_INFO of Instr_Addr : signal is "xilinx.com:interface:lmb:1.0 ILMB ABUS";
  attribute X_INTERFACE_PARAMETER of Instr_Addr : signal is "XIL_INTERFACENAME ILMB, ADDR_WIDTH 32, DATA_WIDTH 32, READ_WRITE_MODE READ_ONLY";
  attribute X_INTERFACE_INFO of Interrupt_Ack : signal is "xilinx.com:interface:mbinterrupt:1.0 INTERRUPT ACK";
  attribute X_INTERFACE_INFO of Interrupt_Address : signal is "xilinx.com:interface:mbinterrupt:1.0 INTERRUPT ADDRESS";
begin
U0: entity work.microblaze_mcs_1_MicroBlaze
     port map (
      Byte_Enable(0 to 3) => Byte_Enable(0 to 3),
      Clk => Clk,
      Config_Reset => '0',
      DCE => DCE,
      DEBUG_ACLK => '0',
      DEBUG_ARESETN => '0',
      DReady => DReady,
      DUE => DUE,
      DWait => DWait,
      D_AS => D_AS,
      Data_Addr(0 to 31) => Data_Addr(0 to 31),
      Data_Read(0 to 31) => Data_Read(0 to 31),
      Data_Write(0 to 31) => Data_Write(0 to 31),
      Dbg_ARADDR(14 downto 2) => B"0000000000000",
      Dbg_ARREADY => NLW_U0_Dbg_ARREADY_UNCONNECTED,
      Dbg_ARVALID => '0',
      Dbg_AWADDR(14 downto 2) => B"0000000000000",
      Dbg_AWREADY => NLW_U0_Dbg_AWREADY_UNCONNECTED,
      Dbg_AWVALID => '0',
      Dbg_BREADY => '0',
      Dbg_BRESP(1 downto 0) => NLW_U0_Dbg_BRESP_UNCONNECTED(1 downto 0),
      Dbg_BVALID => NLW_U0_Dbg_BVALID_UNCONNECTED,
      Dbg_Capture => '0',
      Dbg_Clk => '0',
      Dbg_Continue => NLW_U0_Dbg_Continue_UNCONNECTED,
      Dbg_Disable => '0',
      Dbg_Intr => NLW_U0_Dbg_Intr_UNCONNECTED,
      Dbg_RDATA(31 downto 0) => NLW_U0_Dbg_RDATA_UNCONNECTED(31 downto 0),
      Dbg_RREADY => '0',
      Dbg_RRESP(1 downto 0) => NLW_U0_Dbg_RRESP_UNCONNECTED(1 downto 0),
      Dbg_RVALID => NLW_U0_Dbg_RVALID_UNCONNECTED,
      Dbg_Reg_En(0 to 7) => B"00000000",
      Dbg_Shift => '0',
      Dbg_Stop => '0',
      Dbg_TDI => '0',
      Dbg_TDO => NLW_U0_Dbg_TDO_UNCONNECTED,
      Dbg_Trace_Clk => '0',
      Dbg_Trace_Data(0 to 35) => NLW_U0_Dbg_Trace_Data_UNCONNECTED(0 to 35),
      Dbg_Trace_Ready => '0',
      Dbg_Trace_Valid => NLW_U0_Dbg_Trace_Valid_UNCONNECTED,
      Dbg_Trig_Ack_In(0 to 7) => B"00000000",
      Dbg_Trig_Ack_Out(0 to 7) => NLW_U0_Dbg_Trig_Ack_Out_UNCONNECTED(0 to 7),
      Dbg_Trig_In(0 to 7) => NLW_U0_Dbg_Trig_In_UNCONNECTED(0 to 7),
      Dbg_Trig_Out(0 to 7) => B"00000000",
      Dbg_Update => '0',
      Dbg_WDATA(31 downto 0) => B"00000000000000000000000000000000",
      Dbg_WREADY => NLW_U0_Dbg_WREADY_UNCONNECTED,
      Dbg_WVALID => '0',
      Dbg_Wakeup => NLW_U0_Dbg_Wakeup_UNCONNECTED,
      Debug_Rst => '0',
      Ext_BRK => '0',
      Ext_NM_BRK => '0',
      Hibernate => NLW_U0_Hibernate_UNCONNECTED,
      ICE => ICE,
      IFetch => IFetch,
      IReady => IReady,
      IUE => IUE,
      IWAIT => IWAIT,
      I_AS => I_AS,
      Instr(0 to 31) => Instr(0 to 31),
      Instr_Addr(0 to 31) => Instr_Addr(0 to 31),
      Interrupt => Interrupt,
      Interrupt_Ack(0 to 1) => Interrupt_Ack(0 to 1),
      Interrupt_Address(0 to 31) => Interrupt_Address(0 to 31),
      LOCKSTEP_Master_Out(0 to 4095) => NLW_U0_LOCKSTEP_Master_Out_UNCONNECTED(0 to 4095),
      LOCKSTEP_Out(0 to 4095) => NLW_U0_LOCKSTEP_Out_UNCONNECTED(0 to 4095),
      LOCKSTEP_Slave_In(0 to
      M0_AXIS_TDATA(31 downto 0) => NLW_U0_M0_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M0_AXIS_TLAST => NLW_U0_M0_AXIS_TLAST_UNCONNECTED,
      M0_AXIS_TREADY => '0',
      M0_AXIS_TVALID => NLW_U0_M0_AXIS_TVALID_UNCONNECTED,
      M10_AXIS_TDATA(31 downto 0) => NLW_U0_M10_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M10_AXIS_TLAST => NLW_U0_M10_AXIS_TLAST_UNCONNECTED,
      M10_AXIS_TREADY => '0',
      M10_AXIS_TVALID => NLW_U0_M10_AXIS_TVALID_UNCONNECTED,
      M11_AXIS_TDATA(31 downto 0) => NLW_U0_M11_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M11_AXIS_TLAST => NLW_U0_M11_AXIS_TLAST_UNCONNECTED,
      M11_AXIS_TREADY => '0',
      M11_AXIS_TVALID => NLW_U0_M11_AXIS_TVALID_UNCONNECTED,
      M12_AXIS_TDATA(31 downto 0) => NLW_U0_M12_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M12_AXIS_TLAST => NLW_U0_M12_AXIS_TLAST_UNCONNECTED,
      M12_AXIS_TREADY => '0',
      M12_AXIS_TVALID => NLW_U0_M12_AXIS_TVALID_UNCONNECTED,
      M13_AXIS_TDATA(31 downto 0) => NLW_U0_M13_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M13_AXIS_TLAST => NLW_U0_M13_AXIS_TLAST_UNCONNECTED,
      M13_AXIS_TREADY => '0',
      M13_AXIS_TVALID => NLW_U0_M13_AXIS_TVALID_UNCONNECTED,
      M14_AXIS_TDATA(31 downto 0) => NLW_U0_M14_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M14_AXIS_TLAST => NLW_U0_M14_AXIS_TLAST_UNCONNECTED,
      M14_AXIS_TREADY => '0',
      M14_AXIS_TVALID => NLW_U0_M14_AXIS_TVALID_UNCONNECTED,
      M15_AXIS_TDATA(31 downto 0) => NLW_U0_M15_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M15_AXIS_TLAST => NLW_U0_M15_AXIS_TLAST_UNCONNECTED,
      M15_AXIS_TREADY => '0',
      M15_AXIS_TVALID => NLW_U0_M15_AXIS_TVALID_UNCONNECTED,
      M1_AXIS_TDATA(31 downto 0) => NLW_U0_M1_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M1_AXIS_TLAST => NLW_U0_M1_AXIS_TLAST_UNCONNECTED,
      M1_AXIS_TREADY => '0',
      M1_AXIS_TVALID => NLW_U0_M1_AXIS_TVALID_UNCONNECTED,
      M2_AXIS_TDATA(31 downto 0) => NLW_U0_M2_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M2_AXIS_TLAST => NLW_U0_M2_AXIS_TLAST_UNCONNECTED,
      M2_AXIS_TREADY => '0',
      M2_AXIS_TVALID => NLW_U0_M2_AXIS_TVALID_UNCONNECTED,
      M3_AXIS_TDATA(31 downto 0) => NLW_U0_M3_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M3_AXIS_TLAST => NLW_U0_M3_AXIS_TLAST_UNCONNECTED,
      M3_AXIS_TREADY => '0',
      M3_AXIS_TVALID => NLW_U0_M3_AXIS_TVALID_UNCONNECTED,
      M4_AXIS_TDATA(31 downto 0) => NLW_U0_M4_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M4_AXIS_TLAST => NLW_U0_M4_AXIS_TLAST_UNCONNECTED,
      M4_AXIS_TREADY => '0',
      M4_AXIS_TVALID => NLW_U0_M4_AXIS_TVALID_UNCONNECTED,
      M5_AXIS_TDATA(31 downto 0) => NLW_U0_M5_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M5_AXIS_TLAST => NLW_U0_M5_AXIS_TLAST_UNCONNECTED,
      M5_AXIS_TREADY => '0',
      M5_AXIS_TVALID => NLW_U0_M5_AXIS_TVALID_UNCONNECTED,
      M6_AXIS_TDATA(31 downto 0) => NLW_U0_M6_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M6_AXIS_TLAST => NLW_U0_M6_AXIS_TLAST_UNCONNECTED,
      M6_AXIS_TREADY => '0',
      M6_AXIS_TVALID => NLW_U0_M6_AXIS_TVALID_UNCONNECTED,
      M7_AXIS_TDATA(31 downto 0) => NLW_U0_M7_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M7_AXIS_TLAST => NLW_U0_M7_AXIS_TLAST_UNCONNECTED,
      M7_AXIS_TREADY => '0',
      M7_AXIS_TVALID => NLW_U0_M7_AXIS_TVALID_UNCONNECTED,
      M8_AXIS_TDATA(31 downto 0) => NLW_U0_M8_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M8_AXIS_TLAST => NLW_U0_M8_AXIS_TLAST_UNCONNECTED,
      M8_AXIS_TREADY => '0',
      M8_AXIS_TVALID => NLW_U0_M8_AXIS_TVALID_UNCONNECTED,
      M9_AXIS_TDATA(31 downto 0) => NLW_U0_M9_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M9_AXIS_TLAST => NLW_U0_M9_AXIS_TLAST_UNCONNECTED,
      M9_AXIS_TREADY => '0',
      M9_AXIS_TVALID => NLW_U0_M9_AXIS_TVALID_UNCONNECTED,
      MB_Error => NLW_U0_MB_Error_UNCONNECTED,
      MB_Halted => NLW_U0_MB_Halted_UNCONNECTED,
      M_AXI_DC_ACADDR(31 downto 0) => B"00000000000000000000000000000000",
      M_AXI_DC_ACPROT(2 downto 0) => B"000",
      M_AXI_DC_ACREADY => NLW_U0_M_AXI_DC_ACREADY_UNCONNECTED,
      M_AXI_DC_ACSNOOP(3 downto 0) => B"0000",
      M_AXI_DC_ACVALID => '0',
      M_AXI_DC_ARADDR(31 downto 0) => NLW_U0_M_AXI_DC_ARADDR_UNCONNECTED(31 downto 0),
      M_AXI_DC_ARBAR(1 downto 0) => NLW_U0_M_AXI_DC_ARBAR_UNCONNECTED(1 downto 0),
      M_AXI_DC_ARBURST(1 downto 0) => NLW_U0_M_AXI_DC_ARBURST_UNCONNECTED(1 downto 0),
      M_AXI_DC_ARCACHE(3 downto 0) => NLW_U0_M_AXI_DC_ARCACHE_UNCONNECTED(3 downto 0),
      M_AXI_DC_ARDOMAIN(1 downto 0) => NLW_U0_M_AXI_DC_ARDOMAIN_UNCONNECTED(1 downto 0),
      M_AXI_DC_ARID(0) => NLW_U0_M_AXI_DC_ARID_UNCONNECTED(0),
      M_AXI_DC_ARLEN(7 downto 0) => NLW_U0_M_AXI_DC_ARLEN_UNCONNECTED(7 downto 0),
      M_AXI_DC_ARLOCK => NLW_U0_M_AXI_DC_ARLOCK_UNCONNECTED,
      M_AXI_DC_ARPROT(2 downto 0) => NLW_U0_M_AXI_DC_ARPROT_UNCONNECTED(2 downto 0),
      M_AXI_DC_ARQOS(3 downto 0) => NLW_U0_M_AXI_DC_ARQOS_UNCONNECTED(3 downto 0),
      M_AXI_DC_ARREADY => '0',
      M_AXI_DC_ARSIZE(2 downto 0) => NLW_U0_M_AXI_DC_ARSIZE_UNCONNECTED(2 downto 0),
      M_AXI_DC_ARSNOOP(3 downto 0) => NLW_U0_M_AXI_DC_ARSNOOP_UNCONNECTED(3 downto 0),
      M_AXI_DC_ARUSER(4 downto 0) => NLW_U0_M_AXI_DC_ARUSER_UNCONNECTED(4 downto 0),
      M_AXI_DC_ARVALID => NLW_U0_M_AXI_DC_ARVALID_UNCONNECTED,
      M_AXI_DC_AWADDR(31 downto 0) => NLW_U0_M_AXI_DC_AWADDR_UNCONNECTED(31 downto 0),
      M_AXI_DC_AWBAR(1 downto 0) => NLW_U0_M_AXI_DC_AWBAR_UNCONNECTED(1 downto 0),
      M_AXI_DC_AWBURST(1 downto 0) => NLW_U0_M_AXI_DC_AWBURST_UNCONNECTED(1 downto 0),
      M_AXI_DC_AWCACHE(3 downto 0) => NLW_U0_M_AXI_DC_AWCACHE_UNCONNECTED(3 downto 0),
      M_AXI_DC_AWDOMAIN(1 downto 0) => NLW_U0_M_AXI_DC_AWDOMAIN_UNCONNECTED(1 downto 0),
      M_AXI_DC_AWID(0) => NLW_U0_M_AXI_DC_AWID_UNCONNECTED(0),
      M_AXI_DC_AWLEN(7 downto 0) => NLW_U0_M_AXI_DC_AWLEN_UNCONNECTED(7 downto 0),
      M_AXI_DC_AWLOCK => NLW_U0_M_AXI_DC_AWLOCK_UNCONNECTED,
      M_AXI_DC_AWPROT(2 downto 0) => NLW_U0_M_AXI_DC_AWPROT_UNCONNECTED(2 downto 0),
      M_AXI_DC_AWQOS(3 downto 0) => NLW_U0_M_AXI_DC_AWQOS_UNCONNECTED(3 downto 0),
      M_AXI_DC_AWREADY => '0',
      M_AXI_DC_AWSIZE(2 downto 0) => NLW_U0_M_AXI_DC_AWSIZE_UNCONNECTED(2 downto 0),
      M_AXI_DC_AWSNOOP(2 downto 0) => NLW_U0_M_AXI_DC_AWSNOOP_UNCONNECTED(2 downto 0),
      M_AXI_DC_AWUSER(4 downto 0) => NLW_U0_M_AXI_DC_AWUSER_UNCONNECTED(4 downto 0),
      M_AXI_DC_AWVALID => NLW_U0_M_AXI_DC_AWVALID_UNCONNECTED,
      M_AXI_DC_BID(0) => '0',
      M_AXI_DC_BREADY => NLW_U0_M_AXI_DC_BREADY_UNCONNECTED,
      M_AXI_DC_BRESP(1 downto 0) => B"00",
      M_AXI_DC_BUSER(0) => '0',
      M_AXI_DC_BVALID => '0',
      M_AXI_DC_CDDATA(31 downto 0) => NLW_U0_M_AXI_DC_CDDATA_UNCONNECTED(31 downto 0),
      M_AXI_DC_CDLAST => NLW_U0_M_AXI_DC_CDLAST_UNCONNECTED,
      M_AXI_DC_CDREADY => '0',
      M_AXI_DC_CDVALID => NLW_U0_M_AXI_DC_CDVALID_UNCONNECTED,
      M_AXI_DC_CRREADY => '0',
      M_AXI_DC_CRRESP(4 downto 0) => NLW_U0_M_AXI_DC_CRRESP_UNCONNECTED(4 downto 0),
      M_AXI_DC_CRVALID => NLW_U0_M_AXI_DC_CRVALID_UNCONNECTED,
      M_AXI_DC_RACK => NLW_U0_M_AXI_DC_RACK_UNCONNECTED,
      M_AXI_DC_RDATA(31 downto 0) => B"00000000000000000000000000000000",
      M_AXI_DC_RID(0) => '0',
      M_AXI_DC_RLAST => '0',
      M_AXI_DC_RREADY => NLW_U0_M_AXI_DC_RREADY_UNCONNECTED,
      M_AXI_DC_RRESP(1 downto 0) => B"00",
      M_AXI_DC_RUSER(0) => '0',
      M_AXI_DC_RVALID => '0',
      M_AXI_DC_WACK => NLW_U0_M_AXI_DC_WACK_UNCONNECTED,
      M_AXI_DC_WDATA(31 downto 0) => NLW_U0_M_AXI_DC_WDATA_UNCONNECTED(31 downto 0),
      M_AXI_DC_WLAST => NLW_U0_M_AXI_DC_WLAST_UNCONNECTED,
      M_AXI_DC_WREADY => '0',
      M_AXI_DC_WSTRB(3 downto 0) => NLW_U0_M_AXI_DC_WSTRB_UNCONNECTED(3 downto 0),
      M_AXI_DC_WUSER(0) => NLW_U0_M_AXI_DC_WUSER_UNCONNECTED(0),
      M_AXI_DC_WVALID => NLW_U0_M_AXI_DC_WVALID_UNCONNECTED,
      M_AXI_DP_ARADDR(31 downto 0) => NLW_U0_M_AXI_DP_ARADDR_UNCONNECTED(31 downto 0),
      M_AXI_DP_ARBURST(1 downto 0) => NLW_U0_M_AXI_DP_ARBURST_UNCONNECTED(1 downto 0),
      M_AXI_DP_ARCACHE(3 downto 0) => NLW_U0_M_AXI_DP_ARCACHE_UNCONNECTED(3 downto 0),
      M_AXI_DP_ARID(0) => NLW_U0_M_AXI_DP_ARID_UNCONNECTED(0),
      M_AXI_DP_ARLEN(7 downto 0) => NLW_U0_M_AXI_DP_ARLEN_UNCONNECTED(7 downto 0),
      M_AXI_DP_ARLOCK => NLW_U0_M_AXI_DP_ARLOCK_UNCONNECTED,
      M_AXI_DP_ARPROT(2 downto 0) => NLW_U0_M_AXI_DP_ARPROT_UNCONNECTED(2 downto 0),
      M_AXI_DP_ARQOS(3 downto 0) => NLW_U0_M_AXI_DP_ARQOS_UNCONNECTED(3 downto 0),
      M_AXI_DP_ARREADY => '0',
      M_AXI_DP_ARSIZE(2 downto 0) => NLW_U0_M_AXI_DP_ARSIZE_UNCONNECTED(2 downto 0),
      M_AXI_DP_ARVALID => NLW_U0_M_AXI_DP_ARVALID_UNCONNECTED,
      M_AXI_DP_AWADDR(31 downto 0) => NLW_U0_M_AXI_DP_AWADDR_UNCONNECTED(31 downto 0),
      M_AXI_DP_AWBURST(1 downto 0) => NLW_U0_M_AXI_DP_AWBURST_UNCONNECTED(1 downto 0),
      M_AXI_DP_AWCACHE(3 downto 0) => NLW_U0_M_AXI_DP_AWCACHE_UNCONNECTED(3 downto 0),
      M_AXI_DP_AWID(0) => NLW_U0_M_AXI_DP_AWID_UNCONNECTED(0),
      M_AXI_DP_AWLEN(7 downto 0) => NLW_U0_M_AXI_DP_AWLEN_UNCONNECTED(7 downto 0),
      M_AXI_DP_AWLOCK => NLW_U0_M_AXI_DP_AWLOCK_UNCONNECTED,
      M_AXI_DP_AWPROT(2 downto 0) => NLW_U0_M_AXI_DP_AWPROT_UNCONNECTED(2 downto 0),
      M_AXI_DP_AWQOS(3 downto 0) => NLW_U0_M_AXI_DP_AWQOS_UNCONNECTED(3 downto 0),
      M_AXI_DP_AWREADY => '0',
      M_AXI_DP_AWSIZE(2 downto 0) => NLW_U0_M_AXI_DP_AWSIZE_UNCONNECTED(2 downto 0),
      M_AXI_DP_AWVALID => NLW_U0_M_AXI_DP_AWVALID_UNCONNECTED,
      M_AXI_DP_BID(0) => '0',
      M_AXI_DP_BREADY => NLW_U0_M_AXI_DP_BREADY_UNCONNECTED,
      M_AXI_DP_BRESP(1 downto 0) => B"00",
      M_AXI_DP_BVALID => '0',
      M_AXI_DP_RDATA(31 downto 0) => B"00000000000000000000000000000000",
      M_AXI_DP_RID(0) => '0',
      M_AXI_DP_RLAST => '0',
      M_AXI_DP_RREADY => NLW_U0_M_AXI_DP_RREADY_UNCONNECTED,
      M_AXI_DP_RRESP(1 downto 0) => B"00",
      M_AXI_DP_RVALID => '0',
      M_AXI_DP_WDATA(31 downto 0) => NLW_U0_M_AXI_DP_WDATA_UNCONNECTED(31 downto 0),
      M_AXI_DP_WLAST => NLW_U0_M_AXI_DP_WLAST_UNCONNECTED,
      M_AXI_DP_WREADY => '0',
      M_AXI_DP_WSTRB(3 downto 0) => NLW_U0_M_AXI_DP_WSTRB_UNCONNECTED(3 downto 0),
      M_AXI_DP_WVALID => NLW_U0_M_AXI_DP_WVALID_UNCONNECTED,
      M_AXI_IC_ACADDR(31 downto 0) => B"00000000000000000000000000000000",
      M_AXI_IC_ACPROT(2 downto 0) => B"000",
      M_AXI_IC_ACREADY => NLW_U0_M_AXI_IC_ACREADY_UNCONNECTED,
      M_AXI_IC_ACSNOOP(3 downto 0) => B"0000",
      M_AXI_IC_ACVALID => '0',
      M_AXI_IC_ARADDR(31 downto 0) => NLW_U0_M_AXI_IC_ARADDR_UNCONNECTED(31 downto 0),
      M_AXI_IC_ARBAR(1 downto 0) => NLW_U0_M_AXI_IC_ARBAR_UNCONNECTED(1 downto 0),
      M_AXI_IC_ARBURST(1 downto 0) => NLW_U0_M_AXI_IC_ARBURST_UNCONNECTED(1 downto 0),
      M_AXI_IC_ARCACHE(3 downto 0) => NLW_U0_M_AXI_IC_ARCACHE_UNCONNECTED(3 downto 0),
      M_AXI_IC_ARDOMAIN(1 downto 0) => NLW_U0_M_AXI_IC_ARDOMAIN_UNCONNECTED(1 downto 0),
      M_AXI_IC_ARID(0) => NLW_U0_M_AXI_IC_ARID_UNCONNECTED(0),
      M_AXI_IC_ARLEN(7 downto 0) => NLW_U0_M_AXI_IC_ARLEN_UNCONNECTED(7 downto 0),
      M_AXI_IC_ARLOCK => NLW_U0_M_AXI_IC_ARLOCK_UNCONNECTED,
      M_AXI_IC_ARPROT(2 downto 0) => NLW_U0_M_AXI_IC_ARPROT_UNCONNECTED(2 downto 0),
      M_AXI_IC_ARQOS(3 downto 0) => NLW_U0_M_AXI_IC_ARQOS_UNCONNECTED(3 downto 0),
      M_AXI_IC_ARREADY => '0',
      M_AXI_IC_ARSIZE(2 downto 0) => NLW_U0_M_AXI_IC_ARSIZE_UNCONNECTED(2 downto 0),
      M_AXI_IC_ARSNOOP(3 downto 0) => NLW_U0_M_AXI_IC_ARSNOOP_UNCONNECTED(3 downto 0),
      M_AXI_IC_ARUSER(4 downto 0) => NLW_U0_M_AXI_IC_ARUSER_UNCONNECTED(4 downto 0),
      M_AXI_IC_ARVALID => NLW_U0_M_AXI_IC_ARVALID_UNCONNECTED,
      M_AXI_IC_AWADDR(31 downto 0) => NLW_U0_M_AXI_IC_AWADDR_UNCONNECTED(31 downto 0),
      M_AXI_IC_AWBAR(1 downto 0) => NLW_U0_M_AXI_IC_AWBAR_UNCONNECTED(1 downto 0),
      M_AXI_IC_AWBURST(1 downto 0) => NLW_U0_M_AXI_IC_AWBURST_UNCONNECTED(1 downto 0),
      M_AXI_IC_AWCACHE(3 downto 0) => NLW_U0_M_AXI_IC_AWCACHE_UNCONNECTED(3 downto 0),
      M_AXI_IC_AWDOMAIN(1 downto 0) => NLW_U0_M_AXI_IC_AWDOMAIN_UNCONNECTED(1 downto 0),
      M_AXI_IC_AWID(0) => NLW_U0_M_AXI_IC_AWID_UNCONNECTED(0),
      M_AXI_IC_AWLEN(7 downto 0) => NLW_U0_M_AXI_IC_AWLEN_UNCONNECTED(7 downto 0),
      M_AXI_IC_AWLOCK => NLW_U0_M_AXI_IC_AWLOCK_UNCONNECTED,
      M_AXI_IC_AWPROT(2 downto 0) => NLW_U0_M_AXI_IC_AWPROT_UNCONNECTED(2 downto 0),
      M_AXI_IC_AWQOS(3 downto 0) => NLW_U0_M_AXI_IC_AWQOS_UNCONNECTED(3 downto 0),
      M_AXI_IC_AWREADY => '0',
      M_AXI_IC_AWSIZE(2 downto 0) => NLW_U0_M_AXI_IC_AWSIZE_UNCONNECTED(2 downto 0),
      M_AXI_IC_AWSNOOP(2 downto 0) => NLW_U0_M_AXI_IC_AWSNOOP_UNCONNECTED(2 downto 0),
      M_AXI_IC_AWUSER(4 downto 0) => NLW_U0_M_AXI_IC_AWUSER_UNCONNECTED(4 downto 0),
      M_AXI_IC_AWVALID => NLW_U0_M_AXI_IC_AWVALID_UNCONNECTED,
      M_AXI_IC_BID(0) => '0',
      M_AXI_IC_BREADY => NLW_U0_M_AXI_IC_BREADY_UNCONNECTED,
      M_AXI_IC_BRESP(1 downto 0) => B"00",
      M_AXI_IC_BUSER(0) => '0',
      M_AXI_IC_BVALID => '0',
      M_AXI_IC_CDDATA(31 downto 0) => NLW_U0_M_AXI_IC_CDDATA_UNCONNECTED(31 downto 0),
      M_AXI_IC_CDLAST => NLW_U0_M_AXI_IC_CDLAST_UNCONNECTED,
      M_AXI_IC_CDREADY => '0',
      M_AXI_IC_CDVALID => NLW_U0_M_AXI_IC_CDVALID_UNCONNECTED,
      M_AXI_IC_CRREADY => '0',
      M_AXI_IC_CRRESP(4 downto 0) => NLW_U0_M_AXI_IC_CRRESP_UNCONNECTED(4 downto 0),
      M_AXI_IC_CRVALID => NLW_U0_M_AXI_IC_CRVALID_UNCONNECTED,
      M_AXI_IC_RACK => NLW_U0_M_AXI_IC_RACK_UNCONNECTED,
      M_AXI_IC_RDATA(31 downto 0) => B"00000000000000000000000000000000",
      M_AXI_IC_RID(0) => '0',
      M_AXI_IC_RLAST => '0',
      M_AXI_IC_RREADY => NLW_U0_M_AXI_IC_RREADY_UNCONNECTED,
      M_AXI_IC_RRESP(1 downto 0) => B"00",
      M_AXI_IC_RUSER(0) => '0',
      M_AXI_IC_RVALID => '0',
      M_AXI_IC_WACK => NLW_U0_M_AXI_IC_WACK_UNCONNECTED,
      M_AXI_IC_WDATA(31 downto 0) => NLW_U0_M_AXI_IC_WDATA_UNCONNECTED(31 downto 0),
      M_AXI_IC_WLAST => NLW_U0_M_AXI_IC_WLAST_UNCONNECTED,
      M_AXI_IC_WREADY => '0',
      M_AXI_IC_WSTRB(3 downto 0) => NLW_U0_M_AXI_IC_WSTRB_UNCONNECTED(3 downto 0),
      M_AXI_IC_WUSER(0) => NLW_U0_M_AXI_IC_WUSER_UNCONNECTED(0),
      M_AXI_IC_WVALID => NLW_U0_M_AXI_IC_WVALID_UNCONNECTED,
      M_AXI_IP_ARADDR(31 downto 0) => NLW_U0_M_AXI_IP_ARADDR_UNCONNECTED(31 downto 0),
      M_AXI_IP_ARBURST(1 downto 0) => NLW_U0_M_AXI_IP_ARBURST_UNCONNECTED(1 downto 0),
      M_AXI_IP_ARCACHE(3 downto 0) => NLW_U0_M_AXI_IP_ARCACHE_UNCONNECTED(3 downto 0),
      M_AXI_IP_ARID(0) => NLW_U0_M_AXI_IP_ARID_UNCONNECTED(0),
      M_AXI_IP_ARLEN(7 downto 0) => NLW_U0_M_AXI_IP_ARLEN_UNCONNECTED(7 downto 0),
      M_AXI_IP_ARLOCK => NLW_U0_M_AXI_IP_ARLOCK_UNCONNECTED,
      M_AXI_IP_ARPROT(2 downto 0) => NLW_U0_M_AXI_IP_ARPROT_UNCONNECTED(2 downto 0),
      M_AXI_IP_ARQOS(3 downto 0) => NLW_U0_M_AXI_IP_ARQOS_UNCONNECTED(3 downto 0),
      M_AXI_IP_ARREADY => '0',
      M_AXI_IP_ARSIZE(2 downto 0) => NLW_U0_M_AXI_IP_ARSIZE_UNCONNECTED(2 downto 0),
      M_AXI_IP_ARVALID => NLW_U0_M_AXI_IP_ARVALID_UNCONNECTED,
      M_AXI_IP_AWADDR(31 downto 0) => NLW_U0_M_AXI_IP_AWADDR_UNCONNECTED(31 downto 0),
      M_AXI_IP_AWBURST(1 downto 0) => NLW_U0_M_AXI_IP_AWBURST_UNCONNECTED(1 downto 0),
      M_AXI_IP_AWCACHE(3 downto 0) => NLW_U0_M_AXI_IP_AWCACHE_UNCONNECTED(3 downto 0),
      M_AXI_IP_AWID(0) => NLW_U0_M_AXI_IP_AWID_UNCONNECTED(0),
      M_AXI_IP_AWLEN(7 downto 0) => NLW_U0_M_AXI_IP_AWLEN_UNCONNECTED(7 downto 0),
      M_AXI_IP_AWLOCK => NLW_U0_M_AXI_IP_AWLOCK_UNCONNECTED,
      M_AXI_IP_AWPROT(2 downto 0) => NLW_U0_M_AXI_IP_AWPROT_UNCONNECTED(2 downto 0),
      M_AXI_IP_AWQOS(3 downto 0) => NLW_U0_M_AXI_IP_AWQOS_UNCONNECTED(3 downto 0),
      M_AXI_IP_AWREADY => '0',
      M_AXI_IP_AWSIZE(2 downto 0) => NLW_U0_M_AXI_IP_AWSIZE_UNCONNECTED(2 downto 0),
      M_AXI_IP_AWVALID => NLW_U0_M_AXI_IP_AWVALID_UNCONNECTED,
      M_AXI_IP_BID(0) => '0',
      M_AXI_IP_BREADY => NLW_U0_M_AXI_IP_BREADY_UNCONNECTED,
      M_AXI_IP_BRESP(1 downto 0) => B"00",
      M_AXI_IP_BVALID => '0',
      M_AXI_IP_RDATA(31 downto 0) => B"00000000000000000000000000000000",
      M_AXI_IP_RID(0) => '0',
      M_AXI_IP_RLAST => '0',
      M_AXI_IP_RREADY => NLW_U0_M_AXI_IP_RREADY_UNCONNECTED,
      M_AXI_IP_RRESP(1 downto 0) => B"00",
      M_AXI_IP_RVALID => '0',
      M_AXI_IP_WDATA(31 downto 0) => NLW_U0_M_AXI_IP_WDATA_UNCONNECTED(31 downto 0),
      M_AXI_IP_WLAST => NLW_U0_M_AXI_IP_WLAST_UNCONNECTED,
      M_AXI_IP_WREADY => '0',
      M_AXI_IP_WSTRB(3 downto 0) => NLW_U0_M_AXI_IP_WSTRB_UNCONNECTED(3 downto 0),
      M_AXI_IP_WVALID => NLW_U0_M_AXI_IP_WVALID_UNCONNECTED,
      Mb_Reset => '0',
      Non_Secure(0 to 3) => B"0000",
      Pause => '0',
      Pause_Ack => NLW_U0_Pause_Ack_UNCONNECTED,
      RAM_From(255 downto 0) => NLW_U0_RAM_From_UNCONNECTED(255 downto 0),
      RAM_To(255 downto 0) => B"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
      Read_Strobe => Read_Strobe,
      Reset => Reset,
      Reset_Mode(0 to 1) => B"00",
      S0_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S0_AXIS_TLAST => '0',
      S0_AXIS_TREADY => NLW_U0_S0_AXIS_TREADY_UNCONNECTED,
      S0_AXIS_TVALID => '0',
      S10_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S10_AXIS_TLAST => '0',
      S10_AXIS_TREADY => NLW_U0_S10_AXIS_TREADY_UNCONNECTED,
      S10_AXIS_TVALID => '0',
      S11_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S11_AXIS_TLAST => '0',
      S11_AXIS_TREADY => NLW_U0_S11_AXIS_TREADY_UNCONNECTED,
      S11_AXIS_TVALID => '0',
      S12_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S12_AXIS_TLAST => '0',
      S12_AXIS_TREADY => NLW_U0_S12_AXIS_TREADY_UNCONNECTED,
      S12_AXIS_TVALID => '0',
      S13_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S13_AXIS_TLAST => '0',
      S13_AXIS_TREADY => NLW_U0_S13_AXIS_TREADY_UNCONNECTED,
      S13_AXIS_TVALID => '0',
      S14_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S14_AXIS_TLAST => '0',
      S14_AXIS_TREADY => NLW_U0_S14_AXIS_TREADY_UNCONNECTED,
      S14_AXIS_TVALID => '0',
      S15_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S15_AXIS_TLAST => '0',
      S15_AXIS_TREADY => NLW_U0_S15_AXIS_TREADY_UNCONNECTED,
      S15_AXIS_TVALID => '0',
      S1_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S1_AXIS_TLAST => '0',
      S1_AXIS_TREADY => NLW_U0_S1_AXIS_TREADY_UNCONNECTED,
      S1_AXIS_TVALID => '0',
      S2_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S2_AXIS_TLAST => '0',
      S2_AXIS_TREADY => NLW_U0_S2_AXIS_TREADY_UNCONNECTED,
      S2_AXIS_TVALID => '0',
      S3_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S3_AXIS_TLAST => '0',
      S3_AXIS_TREADY => NLW_U0_S3_AXIS_TREADY_UNCONNECTED,
      S3_AXIS_TVALID => '0',
      S4_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S4_AXIS_TLAST => '0',
      S4_AXIS_TREADY => NLW_U0_S4_AXIS_TREADY_UNCONNECTED,
      S4_AXIS_TVALID => '0',
      S5_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S5_AXIS_TLAST => '0',
      S5_AXIS_TREADY => NLW_U0_S5_AXIS_TREADY_UNCONNECTED,
      S5_AXIS_TVALID => '0',
      S6_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S6_AXIS_TLAST => '0',
      S6_AXIS_TREADY => NLW_U0_S6_AXIS_TREADY_UNCONNECTED,
      S6_AXIS_TVALID => '0',
      S7_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S7_AXIS_TLAST => '0',
      S7_AXIS_TREADY => NLW_U0_S7_AXIS_TREADY_UNCONNECTED,
      S7_AXIS_TVALID => '0',
      S8_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S8_AXIS_TLAST => '0',
      S8_AXIS_TREADY => NLW_U0_S8_AXIS_TREADY_UNCONNECTED,
      S8_AXIS_TVALID => '0',
      S9_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S9_AXIS_TLAST => '0',
      S9_AXIS_TREADY => NLW_U0_S9_AXIS_TREADY_UNCONNECTED,
      S9_AXIS_TVALID => '0',
      Scan_En => '0',
      Scan_Reset => '0',
      Scan_Reset_Sel => '0',
      Sleep => NLW_U0_Sleep_UNCONNECTED,
      Suspend => NLW_U0_Suspend_UNCONNECTED,
      Trace_DCache_Hit => NLW_U0_Trace_DCache_Hit_UNCONNECTED,
      Trace_DCache_Rdy => NLW_U0_Trace_DCache_Rdy_UNCONNECTED,
      Trace_DCache_Read => NLW_U0_Trace_DCache_Read_UNCONNECTED,
      Trace_DCache_Req => NLW_U0_Trace_DCache_Req_UNCONNECTED,
      Trace_Data_Access => NLW_U0_Trace_Data_Access_UNCONNECTED,
      Trace_Data_Address(0 to 31) => NLW_U0_Trace_Data_Address_UNCONNECTED(0 to 31),
      Trace_Data_Byte_Enable(0 to 3) => NLW_U0_Trace_Data_Byte_Enable_UNCONNECTED(0 to 3),
      Trace_Data_Read => NLW_U0_Trace_Data_Read_UNCONNECTED,
      Trace_Data_Write => NLW_U0_Trace_Data_Write_UNCONNECTED,
      Trace_Data_Write_Value(0 to 31) => NLW_U0_Trace_Data_Write_Value_UNCONNECTED(0 to 31),
      Trace_Delay_Slot => NLW_U0_Trace_Delay_Slot_UNCONNECTED,
      Trace_EX_PipeRun => NLW_U0_Trace_EX_PipeRun_UNCONNECTED,
      Trace_Exception_Kind(0 to 4) => NLW_U0_Trace_Exception_Kind_UNCONNECTED(0 to 4),
      Trace_Exception_Taken => NLW_U0_Trace_Exception_Taken_UNCONNECTED,
      Trace_ICache_Hit => NLW_U0_Trace_ICache_Hit_UNCONNECTED,
      Trace_ICache_Rdy => NLW_U0_Trace_ICache_Rdy_UNCONNECTED,
      Trace_ICache_Req => NLW_U0_Trace_ICache_Req_UNCONNECTED,
      Trace_Instruction(0 to 31) => NLW_U0_Trace_Instruction_UNCONNECTED(0 to 31),
      Trace_Jump_Hit => NLW_U0_Trace_Jump_Hit_UNCONNECTED,
      Trace_Jump_Taken => NLW_U0_Trace_Jump_Taken_UNCONNECTED,
      Trace_MB_Halted => NLW_U0_Trace_MB_Halted_UNCONNECTED,
      Trace_MEM_PipeRun => NLW_U0_Trace_MEM_PipeRun_UNCONNECTED,
      Trace_MSR_Reg(0 to 14) => NLW_U0_Trace_MSR_Reg_UNCONNECTED(0 to 14),
      Trace_New_Reg_Value(0 to 31) => NLW_U0_Trace_New_Reg_Value_UNCONNECTED(0 to 31),
      Trace_OF_PipeRun => NLW_U0_Trace_OF_PipeRun_UNCONNECTED,
      Trace_PC(0 to 31) => NLW_U0_Trace_PC_UNCONNECTED(0 to 31),
      Trace_PID_Reg(0 to 7) => NLW_U0_Trace_PID_Reg_UNCONNECTED(0 to 7),
      Trace_Reg_Addr(0 to 4) => NLW_U0_Trace_Reg_Addr_UNCONNECTED(0 to 4),
      Trace_Reg_Write => NLW_U0_Trace_Reg_Write_UNCONNECTED,
      Trace_Valid_Instr => NLW_U0_Trace_Valid_Instr_UNCONNECTED,
      Wakeup(0 to 1) => B"00",
      Write_Strobe => Write_Strobe
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1_bd_3c9d_0 is
  port (
    Clk : in STD_LOGIC;
    GPI1_Interrupt : out STD_LOGIC;
    GPIO1_tri_i : in STD_LOGIC_VECTOR ( 7 downto 0 );
    GPIO1_tri_o : out STD_LOGIC_VECTOR ( 7 downto 0 );
    INTC_IRQ : out STD_LOGIC;
    IO_addr_strobe : out STD_LOGIC;
    IO_address : out STD_LOGIC_VECTOR ( 31 downto 0 );
    IO_byte_enable : out STD_LOGIC_VECTOR ( 3 downto 0 );
    IO_read_data : in STD_LOGIC_VECTOR ( 31 downto 0 );
    IO_read_strobe : out STD_LOGIC;
    IO_ready : in STD_LOGIC;
    IO_write_data : out STD_LOGIC_VECTOR ( 31 downto 0 );
    IO_write_strobe : out STD_LOGIC;
    Reset : in STD_LOGIC;
    UART_Interrupt : out STD_LOGIC;
    UART_rxd : in STD_LOGIC;
    UART_txd : out STD_LOGIC
  );
  attribute HW_HANDOFF : string;
  attribute HW_HANDOFF of microblaze_mcs_1_bd_3c9d_0 : entity is "microblaze_mcs_1.hwdef";
end microblaze_mcs_1_bd_3c9d_0;

architecture STRUCTURE of microblaze_mcs_1_bd_3c9d_0 is
  signal IO_Rst : STD_LOGIC;
  signal LMB_Rst1 : STD_LOGIC;
  signal MB_Reset : STD_LOGIC;
  signal dlmb_ABUS : STD_LOGIC_VECTOR ( 0 to 31 );
  signal dlmb_ADDRSTROBE : STD_LOGIC;
  signal dlmb_BE : STD_LOGIC_VECTOR ( 0 to 3 );
  signal dlmb_CE : STD_LOGIC;
  signal dlmb_READDBUS : STD_LOGIC_VECTOR ( 0 to 31 );
  signal dlmb_READSTROBE : STD_LOGIC;
  signal dlmb_READY : STD_LOGIC;
  signal dlmb_UE : STD_LOGIC;
  signal dlmb_WAIT : STD_LOGIC;
  signal dlmb_WRITEDBUS : STD_LOGIC_VECTOR ( 0 to 31 );
  signal dlmb_WRITESTROBE : STD_LOGIC;
  signal dlmb_port_ADDR : STD_LOGIC_VECTOR ( 0 to 31 );
  signal dlmb_port_CLK : STD_LOGIC;
  signal dlmb_port_DIN : STD_LOGIC_VECTOR ( 0 to 31 );
  signal dlmb_port_DOUT : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal dlmb_port_EN : STD_LOGIC;
  signal dlmb_port_RST : STD_LOGIC;
  signal dlmb_port_WE : STD_LOGIC_VECTOR ( 0 to 3 );
  signal dlmb_sl_0_ABUS : STD_LOGIC_VECTOR ( 0 to 31 );
  signal dlmb_sl_0_ADDRSTROBE : STD_LOGIC;
  signal dlmb_sl_0_BE : STD_LOGIC_VECTOR ( 0 to 3 );
  signal dlmb_sl_0_CE : STD_LOGIC;
  signal dlmb_sl_0_READDBUS : STD_LOGIC_VECTOR ( 0 to 31 );
  signal dlmb_sl_0_READSTROBE : STD_LOGIC;
  signal dlmb_sl_0_READY : STD_LOGIC;
  signal dlmb_sl_0_UE : STD_LOGIC;
  signal dlmb_sl_0_WAIT : STD_LOGIC;
  signal dlmb_sl_0_WRITEDBUS : STD_LOGIC_VECTOR ( 0 to 31 );
  signal dlmb_sl_0_WRITESTROBE : STD_LOGIC;
  signal dlmb_sl_1_CE : STD_LOGIC;
  signal dlmb_sl_1_READDBUS : STD_LOGIC_VECTOR ( 0 to 31 );
  signal dlmb_sl_1_READY : STD_LOGIC;
  signal dlmb_sl_1_UE : STD_LOGIC;
  signal dlmb_sl_1_WAIT : STD_LOGIC;
  signal ilmb_ABUS : STD_LOGIC_VECTOR ( 0 to 31 );
  signal ilmb_ADDRSTROBE : STD_LOGIC;
  signal ilmb_CE : STD_LOGIC;
  signal ilmb_READDBUS : STD_LOGIC_VECTOR ( 0 to 31 );
  signal ilmb_READSTROBE : STD_LOGIC;
  signal ilmb_READY : STD_LOGIC;
  signal ilmb_UE : STD_LOGIC;
  signal ilmb_WAIT : STD_LOGIC;
  signal ilmb_port_ADDR : STD_LOGIC_VECTOR ( 0 to 31 );
  signal ilmb_port_CLK : STD_LOGIC;
  signal ilmb_port_DIN : STD_LOGIC_VECTOR ( 0 to 31 );
  signal ilmb_port_DOUT : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal ilmb_port_EN : STD_LOGIC;
  signal ilmb_port_RST : STD_LOGIC;
  signal ilmb_port_WE : STD_LOGIC_VECTOR ( 0 to 3 );
  signal ilmb_sl_0_ABUS : STD_LOGIC_VECTOR ( 0 to 31 );
  signal ilmb_sl_0_ADDRSTROBE : STD_LOGIC;
  signal ilmb_sl_0_BE : STD_LOGIC_VECTOR ( 0 to 3 );
  signal ilmb_sl_0_CE : STD_LOGIC;
  signal ilmb_sl_0_READDBUS : STD_LOGIC_VECTOR ( 0 to 31 );
  signal ilmb_sl_0_READSTROBE : STD_LOGIC;
  signal ilmb_sl_0_READY : STD_LOGIC;
  signal ilmb_sl_0_UE : STD_LOGIC;
  signal ilmb_sl_0_WAIT : STD_LOGIC;
  signal ilmb_sl_0_WRITEDBUS : STD_LOGIC_VECTOR ( 0 to 31 );
  signal ilmb_sl_0_WRITESTROBE : STD_LOGIC;
  signal iomodule_0_INTC_Irq_ACK : STD_LOGIC_VECTOR ( 0 to 1 );
  signal iomodule_0_INTC_Irq_ADDRESS : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal iomodule_0_INTC_Irq_INTERRUPT : STD_LOGIC;
  signal NLW_dlmb_LMB_Rst_UNCONNECTED : STD_LOGIC;
  signal NLW_ilmb_LMB_Rst_UNCONNECTED : STD_LOGIC;
  signal NLW_lmb_bram_I_rsta_busy_UNCONNECTED : STD_LOGIC;
  signal NLW_lmb_bram_I_rstb_busy_UNCONNECTED : STD_LOGIC;
  signal NLW_rst_0_interconnect_aresetn_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_rst_0_peripheral_aresetn_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute CHECK_LICENSE_TYPE : string;
  attribute CHECK_LICENSE_TYPE of dlmb : label is "bd_3c9d_0_dlmb_0,lmb_v10,{}";
  attribute downgradeipidentifiedwarnings : string;
  attribute downgradeipidentifiedwarnings of dlmb : label is "yes";
  attribute x_core_info : string;
  attribute x_core_info of dlmb : label is "lmb_v10,Vivado 2018.2";
  attribute BMM_INFO_ADDRESS_SPACE : string;
  attribute BMM_INFO_ADDRESS_SPACE of dlmb_cntlr : label is "byte  0x00000000 32 > bd_3c9d_0 lmb_bram_I";
  attribute CHECK_LICENSE_TYPE of dlmb_cntlr : label is "bd_3c9d_0_dlmb_cntlr_0,lmb_bram_if_cntlr,{}";
  attribute downgradeipidentifiedwarnings of dlmb_cntlr : label is "yes";
  attribute x_core_info of dlmb_cntlr : label is "lmb_bram_if_cntlr,Vivado 2018.2";
  attribute CHECK_LICENSE_TYPE of ilmb : label is "bd_3c9d_0_ilmb_0,lmb_v10,{}";
  attribute downgradeipidentifiedwarnings of ilmb : label is "yes";
  attribute x_core_info of ilmb : label is "lmb_v10,Vivado 2018.2";
  attribute CHECK_LICENSE_TYPE of ilmb_cntlr : label is "bd_3c9d_0_ilmb_cntlr_0,lmb_bram_if_cntlr,{}";
  attribute downgradeipidentifiedwarnings of ilmb_cntlr : label is "yes";
  attribute x_core_info of ilmb_cntlr : label is "lmb_bram_if_cntlr,Vivado 2018.2";
  attribute CHECK_LICENSE_TYPE of iomodule_0 : label is "bd_3c9d_0_iomodule_0_0,iomodule,{}";
  attribute downgradeipidentifiedwarnings of iomodule_0 : label is "yes";
  attribute x_core_info of iomodule_0 : label is "iomodule,Vivado 2018.2";
  attribute CHECK_LICENSE_TYPE of lmb_bram_I : label is "bd_3c9d_0_lmb_bram_I_0,blk_mem_gen_v8_4_1,{}";
  attribute downgradeipidentifiedwarnings of lmb_bram_I : label is "yes";
  attribute x_core_info of lmb_bram_I : label is "blk_mem_gen_v8_4_1,Vivado 2018.2";
  attribute BMM_INFO_PROCESSOR : string;
  attribute BMM_INFO_PROCESSOR of microblaze_I : label is "microblaze-le > bd_3c9d_0 dlmb_cntlr";
  attribute CHECK_LICENSE_TYPE of microblaze_I : label is "bd_3c9d_0_microblaze_I_0,MicroBlaze,{}";
  attribute downgradeipidentifiedwarnings of microblaze_I : label is "yes";
  attribute x_core_info of microblaze_I : label is "MicroBlaze,Vivado 2018.2";
  attribute CHECK_LICENSE_TYPE of rst_0 : label is "bd_3c9d_0_rst_0_0,proc_sys_reset,{}";
  attribute downgradeipidentifiedwarnings of rst_0 : label is "yes";
  attribute x_core_info of rst_0 : label is "proc_sys_reset,Vivado 2018.2";
  attribute X_INTERFACE_INFO : string;
  attribute X_INTERFACE_INFO of Clk : signal is "xilinx.com:signal:clock:1.0 CLK.CLK CLK";
  attribute X_INTERFACE_PARAMETER : string;
  attribute X_INTERFACE_PARAMETER of Clk : signal is "XIL_INTERFACENAME CLK.CLK, ASSOCIATED_ASYNC_RESET Reset, FREQ_HZ 100000000, PHASE 0.000";
  attribute X_INTERFACE_INFO of GPI1_Interrupt : signal is "xilinx.com:signal:interrupt:1.0 INTR.GPI1_INTERRUPT INTERRUPT";
  attribute X_INTERFACE_PARAMETER of GPI1_Interrupt : signal is "XIL_INTERFACENAME INTR.GPI1_INTERRUPT, PortWidth 1, SENSITIVITY EDGE_RISING";
  attribute X_INTERFACE_INFO of INTC_IRQ : signal is "xilinx.com:signal:interrupt:1.0 INTR.INTC_IRQ INTERRUPT";
  attribute X_INTERFACE_PARAMETER of INTC_IRQ : signal is "XIL_INTERFACENAME INTR.INTC_IRQ, PortWidth 1, SENSITIVITY LEVEL_HIGH";
  attribute X_INTERFACE_INFO of IO_addr_strobe : signal is "xilinx.com:interface:mcsio_bus:1.0 IO ADDR_STROBE";
  attribute X_INTERFACE_INFO of IO_read_strobe : signal is "xilinx.com:interface:mcsio_bus:1.0 IO READ_STROBE";
  attribute X_INTERFACE_INFO of IO_ready : signal is "xilinx.com:interface:mcsio_bus:1.0 IO READY";
  attribute X_INTERFACE_INFO of IO_write_strobe : signal is "xilinx.com:interface:mcsio_bus:1.0 IO WRITE_STROBE";
  attribute X_INTERFACE_INFO of Reset : signal is "xilinx.com:signal:reset:1.0 RST.RESET RST";
  attribute X_INTERFACE_PARAMETER of Reset : signal is "XIL_INTERFACENAME RST.RESET, POLARITY ACTIVE_HIGH";
  attribute X_INTERFACE_INFO of UART_Interrupt : signal is "xilinx.com:signal:interrupt:1.0 INTR.UART_INTERRUPT INTERRUPT";
  attribute X_INTERFACE_PARAMETER of UART_Interrupt : signal is "XIL_INTERFACENAME INTR.UART_INTERRUPT, PortWidth 1, SENSITIVITY EDGE_RISING";
  attribute X_INTERFACE_INFO of UART_rxd : signal is "xilinx.com:interface:uart:1.0 UART RxD";
  attribute X_INTERFACE_INFO of UART_txd : signal is "xilinx.com:interface:uart:1.0 UART TxD";
  attribute X_INTERFACE_INFO of GPIO1_tri_i : signal is "xilinx.com:interface:gpio:1.0 GPIO1 TRI_I";
  attribute X_INTERFACE_PARAMETER of GPIO1_tri_i : signal is "XIL_INTERFACENAME GPIO1, C_GPI1_INTERRUPT 2, C_GPI1_SIZE 8, C_GPO1_INIT 0x00000000, C_GPO1_SIZE 8, C_USE_GPI1 1, C_USE_GPO1 1";
  attribute X_INTERFACE_INFO of GPIO1_tri_o : signal is "xilinx.com:interface:gpio:1.0 GPIO1 TRI_O";
  attribute X_INTERFACE_INFO of IO_address : signal is "xilinx.com:interface:mcsio_bus:1.0 IO ADDRESS";
  attribute X_INTERFACE_INFO of IO_byte_enable : signal is "xilinx.com:interface:mcsio_bus:1.0 IO BYTE_ENABLE";
  attribute X_INTERFACE_INFO of IO_read_data : signal is "xilinx.com:interface:mcsio_bus:1.0 IO READ_DATA";
  attribute X_INTERFACE_INFO of IO_write_data : signal is "xilinx.com:interface:mcsio_bus:1.0 IO WRITE_DATA";
begin
dlmb: entity work.microblaze_mcs_1_bd_3c9d_0_dlmb_0
     port map (
      LMB_ABus(0 to 31) => dlmb_sl_0_ABUS(0 to 31),
      LMB_AddrStrobe => dlmb_sl_0_ADDRSTROBE,
      LMB_BE(0 to 3) => dlmb_sl_0_BE(0 to 3),
      LMB_CE => dlmb_CE,
      LMB_Clk => Clk,
      LMB_ReadDBus(0 to 31) => dlmb_READDBUS(0 to 31),
      LMB_ReadStrobe => dlmb_sl_0_READSTROBE,
      LMB_Ready => dlmb_READY,
      LMB_Rst => NLW_dlmb_LMB_Rst_UNCONNECTED,
      LMB_UE => dlmb_UE,
      LMB_Wait => dlmb_WAIT,
      LMB_WriteDBus(0 to 31) => dlmb_sl_0_WRITEDBUS(0 to 31),
      LMB_WriteStrobe => dlmb_sl_0_WRITESTROBE,
      M_ABus(0 to 31) => dlmb_ABUS(0 to 31),
      M_AddrStrobe => dlmb_ADDRSTROBE,
      M_BE(0 to 3) => dlmb_BE(0 to 3),
      M_DBus(0 to 31) => dlmb_WRITEDBUS(0 to 31),
      M_ReadStrobe => dlmb_READSTROBE,
      M_WriteStrobe => dlmb_WRITESTROBE,
      SYS_Rst => LMB_Rst1,
      Sl_CE(0) => dlmb_sl_0_CE,
      Sl_CE(1) => dlmb_sl_1_CE,
      Sl_DBus(0 to 31) => dlmb_sl_0_READDBUS(0 to 31),
      Sl_DBus(32 to 63) => dlmb_sl_1_READDBUS(0 to 31),
      Sl_Ready(0) => dlmb_sl_0_READY,
      Sl_Ready(1) => dlmb_sl_1_READY,
      Sl_UE(0) => dlmb_sl_0_UE,
      Sl_UE(1) => dlmb_sl_1_UE,
      Sl_Wait(0) => dlmb_sl_0_WAIT,
      Sl_Wait(1) => dlmb_sl_1_WAIT
    );
dlmb_cntlr: entity work.microblaze_mcs_1_bd_3c9d_0_dlmb_cntlr_0
     port map (
      BRAM_Addr_A(0 to 31) => dlmb_port_ADDR(0 to 31),
      BRAM_Clk_A => dlmb_port_CLK,
      BRAM_Din_A(0) => dlmb_port_DOUT(31),
      BRAM_Din_A(1) => dlmb_port_DOUT(30),
      BRAM_Din_A(2) => dlmb_port_DOUT(29),
      BRAM_Din_A(3) => dlmb_port_DOUT(28),
      BRAM_Din_A(4) => dlmb_port_DOUT(27),
      BRAM_Din_A(5) => dlmb_port_DOUT(26),
      BRAM_Din_A(6) => dlmb_port_DOUT(25),
      BRAM_Din_A(7) => dlmb_port_DOUT(24),
      BRAM_Din_A(8) => dlmb_port_DOUT(23),
      BRAM_Din_A(9) => dlmb_port_DOUT(22),
      BRAM_Din_A(10) => dlmb_port_DOUT(21),
      BRAM_Din_A(11) => dlmb_port_DOUT(20),
      BRAM_Din_A(12) => dlmb_port_DOUT(19),
      BRAM_Din_A(13) => dlmb_port_DOUT(18),
      BRAM_Din_A(14) => dlmb_port_DOUT(17),
      BRAM_Din_A(15) => dlmb_port_DOUT(16),
      BRAM_Din_A(16) => dlmb_port_DOUT(15),
      BRAM_Din_A(17) => dlmb_port_DOUT(14),
      BRAM_Din_A(18) => dlmb_port_DOUT(13),
      BRAM_Din_A(19) => dlmb_port_DOUT(12),
      BRAM_Din_A(20) => dlmb_port_DOUT(11),
      BRAM_Din_A(21) => dlmb_port_DOUT(10),
      BRAM_Din_A(22) => dlmb_port_DOUT(9),
      BRAM_Din_A(23) => dlmb_port_DOUT(8),
      BRAM_Din_A(24) => dlmb_port_DOUT(7),
      BRAM_Din_A(25) => dlmb_port_DOUT(6),
      BRAM_Din_A(26) => dlmb_port_DOUT(5),
      BRAM_Din_A(27) => dlmb_port_DOUT(4),
      BRAM_Din_A(28) => dlmb_port_DOUT(3),
      BRAM_Din_A(29) => dlmb_port_DOUT(2),
      BRAM_Din_A(30) => dlmb_port_DOUT(1),
      BRAM_Din_A(31) => dlmb_port_DOUT(0),
      BRAM_Dout_A(0 to 31) => dlmb_port_DIN(0 to 31),
      BRAM_EN_A => dlmb_port_EN,
      BRAM_Rst_A => dlmb_port_RST,
      BRAM_WEN_A(0 to 3) => dlmb_port_WE(0 to 3),
      LMB_ABus(0 to 31) => dlmb_sl_0_ABUS(0 to 31),
      LMB_AddrStrobe => dlmb_sl_0_ADDRSTROBE,
      LMB_BE(0 to 3) => dlmb_sl_0_BE(0 to 3),
      LMB_Clk => Clk,
      LMB_ReadStrobe => dlmb_sl_0_READSTROBE,
      LMB_Rst => LMB_Rst1,
      LMB_WriteDBus(0 to 31) => dlmb_sl_0_WRITEDBUS(0 to 31),
      LMB_WriteStrobe => dlmb_sl_0_WRITESTROBE,
      Sl_CE => dlmb_sl_0_CE,
      Sl_DBus(0 to 31) => dlmb_sl_0_READDBUS(0 to 31),
      Sl_Ready => dlmb_sl_0_READY,
      Sl_UE => dlmb_sl_0_UE,
      Sl_Wait => dlmb_sl_0_WAIT
    );
ilmb: entity work.microblaze_mcs_1_bd_3c9d_0_ilmb_0
     port map (
      LMB_ABus(0 to 31) => ilmb_sl_0_ABUS(0 to 31),
      LMB_AddrStrobe => ilmb_sl_0_ADDRSTROBE,
      LMB_BE(0 to 3) => ilmb_sl_0_BE(0 to 3),
      LMB_CE => ilmb_CE,
      LMB_Clk => Clk,
      LMB_ReadDBus(0 to 31) => ilmb_READDBUS(0 to 31),
      LMB_ReadStrobe => ilmb_sl_0_READSTROBE,
      LMB_Ready => ilmb_READY,
      LMB_Rst => NLW_ilmb_LMB_Rst_UNCONNECTED,
      LMB_UE => ilmb_UE,
      LMB_Wait => ilmb_WAIT,
      LMB_WriteDBus(0 to 31) => ilmb_sl_0_WRITEDBUS(0 to 31),
      LMB_WriteStrobe => ilmb_sl_0_WRITESTROBE,
      M_ABus(0 to 31) => ilmb_ABUS(0 to 31),
      M_AddrStrobe => ilmb_ADDRSTROBE,
      M_BE(0 to 3) => B"0000",
      M_DBus(0 to 31) => B"00000000000000000000000000000000",
      M_ReadStrobe => ilmb_READSTROBE,
      M_WriteStrobe => '0',
      SYS_Rst => LMB_Rst1,
      Sl_CE(0) => ilmb_sl_0_CE,
      Sl_DBus(0 to 31) => ilmb_sl_0_READDBUS(0 to 31),
      Sl_Ready(0) => ilmb_sl_0_READY,
      Sl_UE(0) => ilmb_sl_0_UE,
      Sl_Wait(0) => ilmb_sl_0_WAIT
    );
ilmb_cntlr: entity work.microblaze_mcs_1_bd_3c9d_0_ilmb_cntlr_0
     port map (
      BRAM_Addr_A(0 to 31) => ilmb_port_ADDR(0 to 31),
      BRAM_Clk_A => ilmb_port_CLK,
      BRAM_Din_A(0) => ilmb_port_DOUT(31),
      BRAM_Din_A(1) => ilmb_port_DOUT(30),
      BRAM_Din_A(2) => ilmb_port_DOUT(29),
      BRAM_Din_A(3) => ilmb_port_DOUT(28),
      BRAM_Din_A(4) => ilmb_port_DOUT(27),
      BRAM_Din_A(5) => ilmb_port_DOUT(26),
      BRAM_Din_A(6) => ilmb_port_DOUT(25),
      BRAM_Din_A(7) => ilmb_port_DOUT(24),
      BRAM_Din_A(8) => ilmb_port_DOUT(23),
      BRAM_Din_A(9) => ilmb_port_DOUT(22),
      BRAM_Din_A(10) => ilmb_port_DOUT(21),
      BRAM_Din_A(11) => ilmb_port_DOUT(20),
      BRAM_Din_A(12) => ilmb_port_DOUT(19),
      BRAM_Din_A(13) => ilmb_port_DOUT(18),
      BRAM_Din_A(14) => ilmb_port_DOUT(17),
      BRAM_Din_A(15) => ilmb_port_DOUT(16),
      BRAM_Din_A(16) => ilmb_port_DOUT(15),
      BRAM_Din_A(17) => ilmb_port_DOUT(14),
      BRAM_Din_A(18) => ilmb_port_DOUT(13),
      BRAM_Din_A(19) => ilmb_port_DOUT(12),
      BRAM_Din_A(20) => ilmb_port_DOUT(11),
      BRAM_Din_A(21) => ilmb_port_DOUT(10),
      BRAM_Din_A(22) => ilmb_port_DOUT(9),
      BRAM_Din_A(23) => ilmb_port_DOUT(8),
      BRAM_Din_A(24) => ilmb_port_DOUT(7),
      BRAM_Din_A(25) => ilmb_port_DOUT(6),
      BRAM_Din_A(26) => ilmb_port_DOUT(5),
      BRAM_Din_A(27) => ilmb_port_DOUT(4),
      BRAM_Din_A(28) => ilmb_port_DOUT(3),
      BRAM_Din_A(29) => ilmb_port_DOUT(2),
      BRAM_Din_A(30) => ilmb_port_DOUT(1),
      BRAM_Din_A(31) => ilmb_port_DOUT(0),
      BRAM_Dout_A(0 to 31) => ilmb_port_DIN(0 to 31),
      BRAM_EN_A => ilmb_port_EN,
      BRAM_Rst_A => ilmb_port_RST,
      BRAM_WEN_A(0 to 3) => ilmb_port_WE(0 to 3),
      LMB_ABus(0 to 31) => ilmb_sl_0_ABUS(0 to 31),
      LMB_AddrStrobe => ilmb_sl_0_ADDRSTROBE,
      LMB_BE(0 to 3) => ilmb_sl_0_BE(0 to 3),
      LMB_Clk => Clk,
      LMB_ReadStrobe => ilmb_sl_0_READSTROBE,
      LMB_Rst => LMB_Rst1,
      LMB_WriteDBus(0 to 31) => ilmb_sl_0_WRITEDBUS(0 to 31),
      LMB_WriteStrobe => ilmb_sl_0_WRITESTROBE,
      Sl_CE => ilmb_sl_0_CE,
      Sl_DBus(0 to 31) => ilmb_sl_0_READDBUS(0 to 31),
      Sl_Ready => ilmb_sl_0_READY,
      Sl_UE => ilmb_sl_0_UE,
      Sl_Wait => ilmb_sl_0_WAIT
    );
iomodule_0: entity work.microblaze_mcs_1_bd_3c9d_0_iomodule_0_0
     port map (
      Clk => Clk,
      GPI1(7 downto 0) => GPIO1_tri_i(7 downto 0),
      GPI1_Interrupt => GPI1_Interrupt,
      GPO1(7 downto 0) => GPIO1_tri_o(7 downto 0),
      INTC_IRQ => iomodule_0_INTC_Irq_INTERRUPT,
      INTC_IRQ_OUT => INTC_IRQ,
      INTC_Interrupt_Address(31 downto 0) => iomodule_0_INTC_Irq_ADDRESS(31 downto 0),
      INTC_Processor_Ack(1) => iomodule_0_INTC_Irq_ACK(0),
      INTC_Processor_Ack(0) => iomodule_0_INTC_Irq_ACK(1),
      IO_Addr_Strobe => IO_addr_strobe,
      IO_Address(31 downto 0) => IO_address(31 downto 0),
      IO_Byte_Enable(3 downto 0) => IO_byte_enable(3 downto 0),
      IO_Read_Data(31 downto 0) => IO_read_data(31 downto 0),
      IO_Read_Strobe => IO_read_strobe,
      IO_Ready => IO_ready,
      IO_Write_Data(31 downto 0) => IO_write_data(31 downto 0),
      IO_Write_Strobe => IO_write_strobe,
      LMB_ABus(0 to 31) => dlmb_sl_0_ABUS(0 to 31),
      LMB_AddrStrobe => dlmb_sl_0_ADDRSTROBE,
      LMB_BE(0 to 3) => dlmb_sl_0_BE(0 to 3),
      LMB_ReadStrobe => dlmb_sl_0_READSTROBE,
      LMB_WriteDBus(0 to 31) => dlmb_sl_0_WRITEDBUS(0 to 31),
      LMB_WriteStrobe => dlmb_sl_0_WRITESTROBE,
      Rst => IO_Rst,
      Sl_CE => dlmb_sl_1_CE,
      Sl_DBus(0 to 31) => dlmb_sl_1_READDBUS(0 to 31),
      Sl_Ready => dlmb_sl_1_READY,
      Sl_UE => dlmb_sl_1_UE,
      Sl_Wait => dlmb_sl_1_WAIT,
      UART_Interrupt => UART_Interrupt,
      UART_Rx => UART_rxd,
      UART_Tx => UART_txd
    );
lmb_bram_I: entity work.microblaze_mcs_1_bd_3c9d_0_lmb_bram_I_0
     port map (
      addra(31) => dlmb_port_ADDR(0),
      addra(30) => dlmb_port_ADDR(1),
      addra(29) => dlmb_port_ADDR(2),
      addra(28) => dlmb_port_ADDR(3),
      addra(27) => dlmb_port_ADDR(4),
      addra(26) => dlmb_port_ADDR(5),
      addra(25) => dlmb_port_ADDR(6),
      addra(24) => dlmb_port_ADDR(7),
      addra(23) => dlmb_port_ADDR(8),
      addra(22) => dlmb_port_ADDR(9),
      addra(21) => dlmb_port_ADDR(10),
      addra(20) => dlmb_port_ADDR(11),
      addra(19) => dlmb_port_ADDR(12),
      addra(18) => dlmb_port_ADDR(13),
      addra(17) => dlmb_port_ADDR(14),
      addra(16) => dlmb_port_ADDR(15),
      addra(15) => dlmb_port_ADDR(16),
      addra(14) => dlmb_port_ADDR(17),
      addra(13) => dlmb_port_ADDR(18),
      addra(12) => dlmb_port_ADDR(19),
      addra(11) => dlmb_port_ADDR(20),
      addra(10) => dlmb_port_ADDR(21),
      addra(9) => dlmb_port_ADDR(22),
      addra(8) => dlmb_port_ADDR(23),
      addra(7) => dlmb_port_ADDR(24),
      addra(6) => dlmb_port_ADDR(25),
      addra(5) => dlmb_port_ADDR(26),
      addra(4) => dlmb_port_ADDR(27),
      addra(3) => dlmb_port_ADDR(28),
      addra(2) => dlmb_port_ADDR(29),
      addra(1) => dlmb_port_ADDR(30),
      addra(0) => dlmb_port_ADDR(31),
      addrb(31) => ilmb_port_ADDR(0),
      addrb(30) => ilmb_port_ADDR(1),
      addrb(29) => ilmb_port_ADDR(2),
      addrb(28) => ilmb_port_ADDR(3),
      addrb(27) => ilmb_port_ADDR(4),
      addrb(26) => ilmb_port_ADDR(5),
      addrb(25) => ilmb_port_ADDR(6),
      addrb(24) => ilmb_port_ADDR(7),
      addrb(23) => ilmb_port_ADDR(8),
      addrb(22) => ilmb_port_ADDR(9),
      addrb(21) => ilmb_port_ADDR(10),
      addrb(20) => ilmb_port_ADDR(11),
      addrb(19) => ilmb_port_ADDR(12),
      addrb(18) => ilmb_port_ADDR(13),
      addrb(17) => ilmb_port_ADDR(14),
      addrb(16) => ilmb_port_ADDR(15),
      addrb(15) => ilmb_port_ADDR(16),
      addrb(14) => ilmb_port_ADDR(17),
      addrb(13) => ilmb_port_ADDR(18),
      addrb(12) => ilmb_port_ADDR(19),
      addrb(11) => ilmb_port_ADDR(20),
      addrb(10) => ilmb_port_ADDR(21),
      addrb(9) => ilmb_port_ADDR(22),
      addrb(8) => ilmb_port_ADDR(23),
      addrb(7) => ilmb_port_ADDR(24),
      addrb(6) => ilmb_port_ADDR(25),
      addrb(5) => ilmb_port_ADDR(26),
      addrb(4) => ilmb_port_ADDR(27),
      addrb(3) => ilmb_port_ADDR(28),
      addrb(2) => ilmb_port_ADDR(29),
      addrb(1) => ilmb_port_ADDR(30),
      addrb(0) => ilmb_port_ADDR(31),
      clka => dlmb_port_CLK,
      clkb => ilmb_port_CLK,
      dina(31) => dlmb_port_DIN(0),
      dina(30) => dlmb_port_DIN(1),
      dina(29) => dlmb_port_DIN(2),
      dina(28) => dlmb_port_DIN(3),
      dina(27) => dlmb_port_DIN(4),
      dina(26) => dlmb_port_DIN(5),
      dina(25) => dlmb_port_DIN(6),
      dina(24) => dlmb_port_DIN(7),
      dina(23) => dlmb_port_DIN(8),
      dina(22) => dlmb_port_DIN(9),
      dina(21) => dlmb_port_DIN(10),
      dina(20) => dlmb_port_DIN(11),
      dina(19) => dlmb_port_DIN(12),
      dina(18) => dlmb_port_DIN(13),
      dina(17) => dlmb_port_DIN(14),
      dina(16) => dlmb_port_DIN(15),
      dina(15) => dlmb_port_DIN(16),
      dina(14) => dlmb_port_DIN(17),
      dina(13) => dlmb_port_DIN(18),
      dina(12) => dlmb_port_DIN(19),
      dina(11) => dlmb_port_DIN(20),
      dina(10) => dlmb_port_DIN(21),
      dina(9) => dlmb_port_DIN(22),
      dina(8) => dlmb_port_DIN(23),
      dina(7) => dlmb_port_DIN(24),
      dina(6) => dlmb_port_DIN(25),
      dina(5) => dlmb_port_DIN(26),
      dina(4) => dlmb_port_DIN(27),
      dina(3) => dlmb_port_DIN(28),
      dina(2) => dlmb_port_DIN(29),
      dina(1) => dlmb_port_DIN(30),
      dina(0) => dlmb_port_DIN(31),
      dinb(31) => ilmb_port_DIN(0),
      dinb(30) => ilmb_port_DIN(1),
      dinb(29) => ilmb_port_DIN(2),
      dinb(28) => ilmb_port_DIN(3),
      dinb(27) => ilmb_port_DIN(4),
      dinb(26) => ilmb_port_DIN(5),
      dinb(25) => ilmb_port_DIN(6),
      dinb(24) => ilmb_port_DIN(7),
      dinb(23) => ilmb_port_DIN(8),
      dinb(22) => ilmb_port_DIN(9),
      dinb(21) => ilmb_port_DIN(10),
      dinb(20) => ilmb_port_DIN(11),
      dinb(19) => ilmb_port_DIN(12),
      dinb(18) => ilmb_port_DIN(13),
      dinb(17) => ilmb_port_DIN(14),
      dinb(16) => ilmb_port_DIN(15),
      dinb(15) => ilmb_port_DIN(16),
      dinb(14) => ilmb_port_DIN(17),
      dinb(13) => ilmb_port_DIN(18),
      dinb(12) => ilmb_port_DIN(19),
      dinb(11) => ilmb_port_DIN(20),
      dinb(10) => ilmb_port_DIN(21),
      dinb(9) => ilmb_port_DIN(22),
      dinb(8) => ilmb_port_DIN(23),
      dinb(7) => ilmb_port_DIN(24),
      dinb(6) => ilmb_port_DIN(25),
      dinb(5) => ilmb_port_DIN(26),
      dinb(4) => ilmb_port_DIN(27),
      dinb(3) => ilmb_port_DIN(28),
      dinb(2) => ilmb_port_DIN(29),
      dinb(1) => ilmb_port_DIN(30),
      dinb(0) => ilmb_port_DIN(31),
      douta(31 downto 0) => dlmb_port_DOUT(31 downto 0),
      doutb(31 downto 0) => ilmb_port_DOUT(31 downto 0),
      ena => dlmb_port_EN,
      enb => ilmb_port_EN,
      rsta => dlmb_port_RST,
      rsta_busy => NLW_lmb_bram_I_rsta_busy_UNCONNECTED,
      rstb => ilmb_port_RST,
      rstb_busy => NLW_lmb_bram_I_rstb_busy_UNCONNECTED,
      wea(3) => dlmb_port_WE(0),
      wea(2) => dlmb_port_WE(1),
      wea(1) => dlmb_port_WE(2),
      wea(0) => dlmb_port_WE(3),
      web(3) => ilmb_port_WE(0),
      web(2) => ilmb_port_WE(1),
      web(1) => ilmb_port_WE(2),
      web(0) => ilmb_port_WE(3)
    );
microblaze_I: entity work.microblaze_mcs_1_bd_3c9d_0_microblaze_I_0
     port map (
      Byte_Enable(0 to 3) => dlmb_BE(0 to 3),
      Clk => Clk,
      DCE => dlmb_CE,
      DReady => dlmb_READY,
      DUE => dlmb_UE,
      DWait => dlmb_WAIT,
      D_AS => dlmb_ADDRSTROBE,
      Data_Addr(0 to 31) => dlmb_ABUS(0 to 31),
      Data_Read(0 to 31) => dlmb_READDBUS(0 to 31),
      Data_Write(0 to 31) => dlmb_WRITEDBUS(0 to 31),
      ICE => ilmb_CE,
      IFetch => ilmb_READSTROBE,
      IReady => ilmb_READY,
      IUE => ilmb_UE,
      IWAIT => ilmb_WAIT,
      I_AS => ilmb_ADDRSTROBE,
      Instr(0 to 31) => ilmb_READDBUS(0 to 31),
      Instr_Addr(0 to 31) => ilmb_ABUS(0 to 31),
      Interrupt => iomodule_0_INTC_Irq_INTERRUPT,
      Interrupt_Ack(0 to 1) => iomodule_0_INTC_Irq_ACK(0 to 1),
      Interrupt_Address(0) => iomodule_0_INTC_Irq_ADDRESS(31),
      Interrupt_Address(1) => iomodule_0_INTC_Irq_ADDRESS(30),
      Interrupt_Address(2) => iomodule_0_INTC_Irq_ADDRESS(29),
      Interrupt_Address(3) => iomodule_0_INTC_Irq_ADDRESS(28),
      Interrupt_Address(4) => iomodule_0_INTC_Irq_ADDRESS(27),
      Interrupt_Address(5) => iomodule_0_INTC_Irq_ADDRESS(26),
      Interrupt_Address(6) => iomodule_0_INTC_Irq_ADDRESS(25),
      Interrupt_Address(7) => iomodule_0_INTC_Irq_ADDRESS(24),
      Interrupt_Address(8) => iomodule_0_INTC_Irq_ADDRESS(23),
      Interrupt_Address(9) => iomodule_0_INTC_Irq_ADDRESS(22),
      Interrupt_Address(10) => iomodule_0_INTC_Irq_ADDRESS(21),
      Interrupt_Address(11) => iomodule_0_INTC_Irq_ADDRESS(20),
      Interrupt_Address(12) => iomodule_0_INTC_Irq_ADDRESS(19),
      Interrupt_Address(13) => iomodule_0_INTC_Irq_ADDRESS(18),
      Interrupt_Address(14) => iomodule_0_INTC_Irq_ADDRESS(17),
      Interrupt_Address(15) => iomodule_0_INTC_Irq_ADDRESS(16),
      Interrupt_Address(16) => iomodule_0_INTC_Irq_ADDRESS(15),
      Interrupt_Address(17) => iomodule_0_INTC_Irq_ADDRESS(14),
      Interrupt_Address(18) => iomodule_0_INTC_Irq_ADDRESS(13),
      Interrupt_Address(19) => iomodule_0_INTC_Irq_ADDRESS(12),
      Interrupt_Address(20) => iomodule_0_INTC_Irq_ADDRESS(11),
      Interrupt_Address(21) => iomodule_0_INTC_Irq_ADDRESS(10),
      Interrupt_Address(22) => iomodule_0_INTC_Irq_ADDRESS(9),
      Interrupt_Address(23) => iomodule_0_INTC_Irq_ADDRESS(8),
      Interrupt_Address(24) => iomodule_0_INTC_Irq_ADDRESS(7),
      Interrupt_Address(25) => iomodule_0_INTC_Irq_ADDRESS(6),
      Interrupt_Address(26) => iomodule_0_INTC_Irq_ADDRESS(5),
      Interrupt_Address(27) => iomodule_0_INTC_Irq_ADDRESS(4),
      Interrupt_Address(28) => iomodule_0_INTC_Irq_ADDRESS(3),
      Interrupt_Address(29) => iomodule_0_INTC_Irq_ADDRESS(2),
      Interrupt_Address(30) => iomodule_0_INTC_Irq_ADDRESS(1),
      Interrupt_Address(31) => iomodule_0_INTC_Irq_ADDRESS(0),
      Read_Strobe => dlmb_READSTROBE,
      Reset => MB_Reset,
      Write_Strobe => dlmb_WRITESTROBE
    );
rst_0: entity work.microblaze_mcs_1_bd_3c9d_0_rst_0_0
     port map (
      aux_reset_in => '1',
      bus_struct_reset(0) => LMB_Rst1,
      dcm_locked => '1',
      ext_reset_in => Reset,
      interconnect_aresetn(0) => NLW_rst_0_interconnect_aresetn_UNCONNECTED(0),
      mb_debug_sys_rst => '0',
      mb_reset => MB_Reset,
      peripheral_aresetn(0) => NLW_rst_0_peripheral_aresetn_UNCONNECTED(0),
      peripheral_reset(0) => IO_Rst,
      slowest_sync_clk => Clk
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_mcs_1 is
  port (
    Clk : in STD_LOGIC;
    Reset : in STD_LOGIC;
    UART_Interrupt : out STD_LOGIC;
    GPI1_Interrupt : out STD_LOGIC;
    INTC_IRQ : out STD_LOGIC;
    IO_addr_strobe : out STD_LOGIC;
    IO_address : out STD_LOGIC_VECTOR ( 31 downto 0 );
    IO_byte_enable : out STD_LOGIC_VECTOR ( 3 downto 0 );
    IO_read_data : in STD_LOGIC_VECTOR ( 31 downto 0 );
    IO_read_strobe : out STD_LOGIC;
    IO_ready : in STD_LOGIC;
    IO_write_data : out STD_LOGIC_VECTOR ( 31 downto 0 );
    IO_write_strobe : out STD_LOGIC;
    UART_rxd : in STD_LOGIC;
    UART_txd : out STD_LOGIC;
    GPIO1_tri_i : in STD_LOGIC_VECTOR ( 7 downto 0 );
    GPIO1_tri_o : out STD_LOGIC_VECTOR ( 7 downto 0 )
  );
  attribute NotValidForBitStream : boolean;
  attribute NotValidForBitStream of microblaze_mcs_1 : entity is true;
  attribute CHECK_LICENSE_TYPE : string;
  attribute CHECK_LICENSE_TYPE of microblaze_mcs_1 : entity is "microblaze_mcs_1,bd_3c9d_0,{}";
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of microblaze_mcs_1 : entity is "yes";
  attribute X_CORE_INFO : string;
  attribute X_CORE_INFO of microblaze_mcs_1 : entity is "bd_3c9d_0,Vivado 2018.2";
end microblaze_mcs_1;

architecture STRUCTURE of microblaze_mcs_1 is
  attribute HW_HANDOFF : string;
  attribute HW_HANDOFF of inst : label is "microblaze_mcs_1.hwdef";
  attribute X_INTERFACE_INFO : string;
  attribute X_INTERFACE_INFO of Clk : signal is "xilinx.com:signal:clock:1.0 CLK.Clk CLK";
  attribute X_INTERFACE_PARAMETER : string;
  attribute X_INTERFACE_PARAMETER of Clk : signal is "XIL_INTERFACENAME CLK.Clk, FREQ_HZ 100000000, PHASE 0.000, ASSOCIATED_ASYNC_RESET Reset, BOARD.ASSOCIATED_PARAM CLK_BOARD_INTERFACE";
  attribute X_INTERFACE_INFO of GPI1_Interrupt : signal is "xilinx.com:signal:interrupt:1.0 INTR.GPI1_Interrupt INTERRUPT";
  attribute X_INTERFACE_PARAMETER of GPI1_Interrupt : signal is "XIL_INTERFACENAME INTR.GPI1_Interrupt, SENSITIVITY EDGE_RISING, PortWidth 1";
  attribute X_INTERFACE_INFO of INTC_IRQ : signal is "xilinx.com:signal:interrupt:1.0 INTR.INTC_IRQ INTERRUPT";
  attribute X_INTERFACE_PARAMETER of INTC_IRQ : signal is "XIL_INTERFACENAME INTR.INTC_IRQ, SENSITIVITY LEVEL_HIGH, PortWidth 1";
  attribute X_INTERFACE_INFO of IO_addr_strobe : signal is "xilinx.com:interface:mcsio_bus:1.0 IO ADDR_STROBE";
  attribute X_INTERFACE_INFO of IO_read_strobe : signal is "xilinx.com:interface:mcsio_bus:1.0 IO READ_STROBE";
  attribute X_INTERFACE_INFO of IO_ready : signal is "xilinx.com:interface:mcsio_bus:1.0 IO READY";
  attribute X_INTERFACE_INFO of IO_write_strobe : signal is "xilinx.com:interface:mcsio_bus:1.0 IO WRITE_STROBE";
  attribute X_INTERFACE_INFO of Reset : signal is "xilinx.com:signal:reset:1.0 RST.Reset RST";
  attribute X_INTERFACE_PARAMETER of Reset : signal is "XIL_INTERFACENAME RST.Reset, POLARITY ACTIVE_HIGH, BOARD.ASSOCIATED_PARAM RESET_BOARD_INTERFACE";
  attribute X_INTERFACE_INFO of UART_Interrupt : signal is "xilinx.com:signal:interrupt:1.0 INTR.UART_Interrupt INTERRUPT";
  attribute X_INTERFACE_PARAMETER of UART_Interrupt : signal is "XIL_INTERFACENAME INTR.UART_Interrupt, SENSITIVITY EDGE_RISING, PortWidth 1";
  attribute X_INTERFACE_INFO of UART_rxd : signal is "xilinx.com:interface:uart:1.0 UART RxD";
  attribute X_INTERFACE_INFO of UART_txd : signal is "xilinx.com:interface:uart:1.0 UART TxD";
  attribute X_INTERFACE_PARAMETER of UART_txd : signal is "XIL_INTERFACENAME UART, BOARD.ASSOCIATED_PARAM UART_BOARD_INTERFACE";
  attribute X_INTERFACE_INFO of GPIO1_tri_i : signal is "xilinx.com:interface:gpio:1.0 GPIO1 TRI_I";
  attribute X_INTERFACE_INFO of GPIO1_tri_o : signal is "xilinx.com:interface:gpio:1.0 GPIO1 TRI_O";
  attribute X_INTERFACE_PARAMETER of GPIO1_tri_o : signal is "XIL_INTERFACENAME GPIO1, C_USE_GPO1 1, C_GPO1_SIZE 8, C_GPO1_INIT 0x00000000, C_USE_GPI1 1, C_GPI1_SIZE 8, C_GPI1_INTERRUPT 2, BOARD.ASSOCIATED_PARAM GPIO1_BOARD_INTERFACE";
  attribute X_INTERFACE_INFO of IO_address : signal is "xilinx.com:interface:mcsio_bus:1.0 IO ADDRESS";
  attribute X_INTERFACE_INFO of IO_byte_enable : signal is "xilinx.com:interface:mcsio_bus:1.0 IO BYTE_ENABLE";
  attribute X_INTERFACE_INFO of IO_read_data : signal is "xilinx.com:interface:mcsio_bus:1.0 IO READ_DATA";
  attribute X_INTERFACE_INFO of IO_write_data : signal is "xilinx.com:interface:mcsio_bus:1.0 IO WRITE_DATA";
begin
inst: entity work.microblaze_mcs_1_bd_3c9d_0
     port map (
      Clk => Clk,
      GPI1_Interrupt => GPI1_Interrupt,
      GPIO1_tri_i(7 downto 0) => GPIO1_tri_i(7 downto 0),
      GPIO1_tri_o(7 downto 0) => GPIO1_tri_o(7 downto 0),
      INTC_IRQ => INTC_IRQ,
      IO_addr_strobe => IO_addr_strobe,
      IO_address(31 downto 0) => IO_address(31 downto 0),
      IO_byte_enable(3 downto 0) => IO_byte_enable(3 downto 0),
      IO_read_data(31 downto 0) => IO_read_data(31 downto 0),
      IO_read_strobe => IO_read_strobe,
      IO_ready => IO_ready,
      IO_write_data(31 downto 0) => IO_write_data(31 downto 0),
      IO_write_strobe => IO_write_strobe,
      Reset => Reset,
      UART_Interrupt => UART_Interrupt,
      UART_rxd => UART_rxd,
      UART_txd => UART_txd
    );
end STRUCTURE;
